(window["webpackJsonp"] = window["webpackJsonp"] || []).push([[0],{

/***/ "./node_modules/text-loader/index.js!./src/templates/alerts.detail.html":
/*!*********************************************************************!*\
  !*** ./node_modules/text-loader!./src/templates/alerts.detail.html ***!
  \*********************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("module.exports = \"<!--\\n    Licensed under the Apache License, Version 2.0 (the \\\"License\\\");\\n    you may not use this file except in compliance with the License.\\n    You may obtain a copy of the License at\\n\\n    http://www.apache.org/licenses/LICENSE-2.0\\n\\n    Unless required by applicable law or agreed to in writing, software\\n    distributed under the License is distributed on an \\\"AS IS\\\" BASIS,\\n    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\\n    See the License for the specific language governing permissions and\\n    limitations under the License.\\n-->\\n<div id=\\\"topStatusBar\\\" class=\\\"top-bar\\\">\\n    <ul class=\\\"breadcrumb pull-left\\\" style=\\\"display: inline; background-color: transparent;margin:0px;padding-top:0px;padding-bottom:0px;padding-left:4px;\\\">\\n        <li>\\n            <a href=\\\"#alerts\\\">\\n                All Alerts\\n            </a>\\n        </li>\\n        <li class=\\\"active\\\">\\n            <%-alert.alertId ? alert.alertId : \\\"New Alert\\\"%>\\n        </li>\\n    </ul>\\n    <div class=\\\"job-detail-actions pull-right\\\">\\n        <button id=\\\"deleteAlertButton\\\" class=\\\"btn btn-default btn-small btn-red\\\">\\n            Delete\\n        </button>\\n        <button id=\\\"saveAlertButton\\\" class=\\\"btn btn-default btn-small\\\" style=\\\"margin-left:8px;\\\">\\n            Save\\n        </button>\\n    </div>\\n</div>\\n<div id=\\\"detailContainer\\\" class=\\\"main-container\\\">\\n    <div class=\\\"form\\\" role=\\\"form\\\">\\n        <div class=\\\"form-group\\\">\\n            <label class=\\\"sr-only\\\" for=\\\"alertType\\\" style=\\\"margin-bottom:0px;\\\">Type</label>\\n            <select id=\\\"alertType\\\" class=\\\"form-control\\\">\\n                <%_.each(alertTypes,function(val, key){%>\\n                    <option value=\\\"<%-key%>\\\"><%-val%></option>\\n                <%})%>\\n            </select>\\n        </div>\\n    </div>\\n    <div id=\\\"alertTimeout\\\" class=\\\"form\\\" role=\\\"form\\\">\\n        <div class=\\\"form-group\\\">\\n            <label class=\\\"sr-only\\\" for=\\\"timeout\\\" style=\\\"margin-bottom:0px;\\\">Timeout (minutes)</label>\\n            <input value=\\\"<%-alert.timeout%>\\\" type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"timeout\\\" name=\\\"timeout\\\" placeholder=\\\"\\\">\\n        </div>\\n    </div>\\n    <div class=\\\"form\\\" role=\\\"form\\\">\\n        <div class=\\\"form-group\\\">\\n            <label class=\\\"sr-only\\\" for=\\\"email\\\" style=\\\"margin-bottom:0px;\\\">Emails (comma-separated)</label>\\n            <input value=\\\"<%-alert.email%>\\\" type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"email\\\" name=\\\"email\\\" placeholder=\\\"\\\">\\n        </div>\\n    </div>\\n    <div class=\\\"form\\\" role=\\\"form\\\">\\n        <div class=\\\"form-group\\\">\\n            <label class=\\\"sr-only\\\" for=\\\"webhookURL\\\" style=\\\"margin-bottom:0px;\\\">Webhook URL</label>\\n            <input value=\\\"<%-alert.webhookURL%>\\\" type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"email\\\" name=\\\"webhookURL\\\"\\n                   placeholder=\\\"\\\">\\n        </div>\\n    </div>\\n    <div class=\\\"form\\\" role=\\\"form\\\">\\n        <div class=\\\"form-group\\\">\\n            <label class=\\\"sr-only\\\" for=\\\"jobIds\\\" style=\\\"margin-bottom:0px;\\\">Job Ids or Aliases (comma-separated)</label>\\n            <input value=\\\"<%-alert.jobIds%>\\\" type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"jobIds\\\" name=\\\"jobIds\\\" placeholder=\\\"\\\">\\n        </div>\\n    </div>\\n    <div class=\\\"form\\\" role=\\\"form\\\">\\n        <div class=\\\"form-group\\\">\\n            <label class=\\\"sr-only\\\" for=\\\"delay\\\" style=\\\"margin-bottom:0px;\\\">Delay (minutes)</label>\\n            <input value=\\\"<%-alert.delay%>\\\" type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"delay\\\" name=\\\"delay\\\" placeholder=\\\"\\\">\\n        </div>\\n    </div>\\n    <div id=\\\"alertCanaryPathConfig\\\" class=\\\"form\\\" roles=\\\"form\\\">\\n        <div class=\\\"form-group\\\">\\n            <label class=\\\"sr-only\\\" for=\\\"canaryPath\\\" style=\\\"margin-bottom:0px;\\\">Path</label><div id=\\\"canaryPathHint\\\"></div>\\n            <input value=\\\"<%-alert.canaryPath%>\\\" type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"canaryPath\\\" name=\\\"canaryPath\\\" placeholder=\\\"\\\">\\n        </div>\\n    </div>\\n    <div id=\\\"alertCanaryConfig\\\" class=\\\"form\\\" roles=\\\"form\\\">\\n        <div class=\\\"form-group\\\">\\n            <label class=\\\"sr-only\\\" for=\\\"canaryConfigThreshold\\\" style=\\\"margin-bottom:0px;\\\">Threshold (alert if below this value)</label>\\n            <input value=\\\"<%-alert.canaryConfigThreshold%>\\\" type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"canaryConfigThreshold\\\" name=\\\"canaryConfigThreshold\\\" placeholder=\\\"\\\">\\n        </div>\\n    </div>\\n    <div id=\\\"alertCanaryFilterConfig\\\" class=\\\"form\\\" roles=\\\"form\\\">\\n        <div class=\\\"form-group\\\">\\n            <label class=\\\"sr-only\\\" for=\\\"canaryOps\\\" style=\\\"margin-bottom:0px;\\\">Ops</label>\\n            <input value=\\\"<%-alert.canaryOps%>\\\" type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"canaryOps\\\" name=\\\"canaryOps\\\" placeholder=\\\"\\\">\\n        </div>\\n        <div class=\\\"form-group\\\">\\n            <label class=\\\"sr-only\\\" for=\\\"canaryRops\\\" style=\\\"margin-bottom:0px;\\\">Rops</label>\\n            <input value=\\\"<%-alert.canaryRops%>\\\" type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"canaryRops\\\" name=\\\"canaryRops\\\" placeholder=\\\"\\\">\\n        </div>\\n        <div class=\\\"form-group\\\">\\n            <label class=\\\"sr-only\\\" for=\\\"canaryFilter\\\" style=\\\"margin-bottom:0px;\\\">Filter</label>\\n            <input value=\\\"<%-alert.canaryFilter%>\\\" type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"canaryFilter\\\" name=\\\"canaryFilter\\\" placeholder=\\\"\\\">\\n        </div>\\n    </div>\\n    <div id=\\\"alertSigmaConfig\\\" class=\\\"form\\\" roles=\\\"form\\\">\\n        <div class=\\\"form-group\\\">\\n            <label class=\\\"sr-only\\\" for=\\\"sigma\\\" style=\\\"margin-bottom:0px;\\\">Sigma</label>\\n            <input value=\\\"<%-alert.sigma%>\\\" type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"sigma\\\" name=\\\"sigma\\\" placeholder=\\\"\\\">\\n        </div>\\n        <div class=\\\"form-group\\\">\\n            <label class=\\\"sr-only\\\" for=\\\"tolerance\\\" style=\\\"margin-bottom:0px;\\\">Tolerance</label>\\n            <input value=\\\"<%-alert.tolerance%>\\\" type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"tolerance\\\" name=\\\"tolerance\\\" placeholder=\\\"\\\">\\n        </div>\\n    </div>\\n    <div class=\\\"form\\\" role=\\\"form\\\">\\n        <label class=\\\"sr-only\\\" for=\\\"suppressChanges\\\" style=\\\"margin-bottom:0px;\\\">Suppress Changes</label>\\n        <input value=\\\"<%-alert.suppressChanges%>\\\" type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"suppressChanges\\\" name=\\\"suppressChanges\\\" placeholder=\\\"\\\">\\n    </div>\\n    <div id=\\\"alertDescription\\\" class=\\\"form\\\" role=\\\"form\\\">\\n        <div class=\\\"form-group\\\">\\n            <label class=\\\"sr-only\\\" for=\\\"timeout\\\" style=\\\"margin-bottom:0px;\\\">Alert description</label>\\n            <textarea rows=\\\"4\\\" cols=\\\"50\\\" class=\\\"form-control\\\" id=\\\"description\\\" name=\\\"description\\\" placeholder=\\\"\\\"><%-alert.description%></textarea>\\n        </div>\\n    </div>\\n    <div id=\\\"activeAlerts\\\" class=\\\"form\\\" role=\\\"form\\\">\\n        <div class=\\\"form-group\\\">\\n            <label class=\\\"sr-only\\\" for=\\\"timeout\\\" style=\\\"margin-bottom:0px;\\\">Active alerts</label>\\n            <textarea readonly rows=\\\"4\\\" cols=\\\"50\\\" class=\\\"form-control\\\" id=\\\"active\\\" name=\\\"active\\\" placeholder=\\\"\\\"><%-JSON.stringify(alert.activeJobs, null, '\\\\t')%></textarea>\\n        </div>\\n    </div>\\n</div>\\n<div id=\\\"alertDetailContainer\\\" class=\\\"main-container\\\">\\n</div>\\n\"//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/text-loader/index.js!./src/templates/alerts.detail.html\n");

/***/ }),

/***/ "./node_modules/text-loader/index.js!./src/templates/alerts.filter.html":
/*!*********************************************************************!*\
  !*** ./node_modules/text-loader!./src/templates/alerts.filter.html ***!
  \*********************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("module.exports = \"\"//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvdGV4dC1sb2FkZXIvaW5kZXguanMhLi9zcmMvdGVtcGxhdGVzL2FsZXJ0cy5maWx0ZXIuaHRtbC5qcyIsInNvdXJjZXMiOlsid2VicGFjazovLy8uL3NyYy90ZW1wbGF0ZXMvYWxlcnRzLmZpbHRlci5odG1sP2M0NGEiXSwic291cmNlc0NvbnRlbnQiOlsibW9kdWxlLmV4cG9ydHMgPSBcIlwiIl0sIm1hcHBpbmdzIjoiQUFBQSIsInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/text-loader/index.js!./src/templates/alerts.filter.html\n");

/***/ }),

/***/ "./node_modules/text-loader/index.js!./src/templates/alerts.selectable.html":
/*!*************************************************************************!*\
  !*** ./node_modules/text-loader!./src/templates/alerts.selectable.html ***!
  \*************************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("module.exports = \"<!--\\n    Licensed under the Apache License, Version 2.0 (the \\\"License\\\");\\n    you may not use this file except in compliance with the License.\\n    You may obtain a copy of the License at\\n\\n    http://www.apache.org/licenses/LICENSE-2.0\\n\\n    Unless required by applicable law or agreed to in writing, software\\n    distributed under the License is distributed on an \\\"AS IS\\\" BASIS,\\n    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\\n    See the License for the specific language governing permissions and\\n    limitations under the License.\\n-->\\n<a href=\\\"#alerts/create\\\" class='btn btn-default btn-small' style=\\\"margin:0px 4px;\\\">\\n    Create\\n</a>\\n<button class='btn btn-default checkbox-button' style=\\\"margin:0px 4px;\\\">\\n    <span class=\\\"checkbox\\\"></span>\\n    <span id=\\\"selectedCount\\\"></span>\\n</button>\\n<div class='btn-group'>\\n    <button id=\\\"deleteAlertButton\\\" class='btn btn-default btn-red btn-hide-zero'>\\n        Delete\\n    </button>\\n</div>\\n\"//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvdGV4dC1sb2FkZXIvaW5kZXguanMhLi9zcmMvdGVtcGxhdGVzL2FsZXJ0cy5zZWxlY3RhYmxlLmh0bWwuanMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9zcmMvdGVtcGxhdGVzL2FsZXJ0cy5zZWxlY3RhYmxlLmh0bWw/NzA5ZSJdLCJzb3VyY2VzQ29udGVudCI6WyJtb2R1bGUuZXhwb3J0cyA9IFwiPCEtLVxcbiAgICBMaWNlbnNlZCB1bmRlciB0aGUgQXBhY2hlIExpY2Vuc2UsIFZlcnNpb24gMi4wICh0aGUgXFxcIkxpY2Vuc2VcXFwiKTtcXG4gICAgeW91IG1heSBub3QgdXNlIHRoaXMgZmlsZSBleGNlcHQgaW4gY29tcGxpYW5jZSB3aXRoIHRoZSBMaWNlbnNlLlxcbiAgICBZb3UgbWF5IG9idGFpbiBhIGNvcHkgb2YgdGhlIExpY2Vuc2UgYXRcXG5cXG4gICAgaHR0cDovL3d3dy5hcGFjaGUub3JnL2xpY2Vuc2VzL0xJQ0VOU0UtMi4wXFxuXFxuICAgIFVubGVzcyByZXF1aXJlZCBieSBhcHBsaWNhYmxlIGxhdyBvciBhZ3JlZWQgdG8gaW4gd3JpdGluZywgc29mdHdhcmVcXG4gICAgZGlzdHJpYnV0ZWQgdW5kZXIgdGhlIExpY2Vuc2UgaXMgZGlzdHJpYnV0ZWQgb24gYW4gXFxcIkFTIElTXFxcIiBCQVNJUyxcXG4gICAgV0lUSE9VVCBXQVJSQU5USUVTIE9SIENPTkRJVElPTlMgT0YgQU5ZIEtJTkQsIGVpdGhlciBleHByZXNzIG9yIGltcGxpZWQuXFxuICAgIFNlZSB0aGUgTGljZW5zZSBmb3IgdGhlIHNwZWNpZmljIGxhbmd1YWdlIGdvdmVybmluZyBwZXJtaXNzaW9ucyBhbmRcXG4gICAgbGltaXRhdGlvbnMgdW5kZXIgdGhlIExpY2Vuc2UuXFxuLS0+XFxuPGEgaHJlZj1cXFwiI2FsZXJ0cy9jcmVhdGVcXFwiIGNsYXNzPSdidG4gYnRuLWRlZmF1bHQgYnRuLXNtYWxsJyBzdHlsZT1cXFwibWFyZ2luOjBweCA0cHg7XFxcIj5cXG4gICAgQ3JlYXRlXFxuPC9hPlxcbjxidXR0b24gY2xhc3M9J2J0biBidG4tZGVmYXVsdCBjaGVja2JveC1idXR0b24nIHN0eWxlPVxcXCJtYXJnaW46MHB4IDRweDtcXFwiPlxcbiAgICA8c3BhbiBjbGFzcz1cXFwiY2hlY2tib3hcXFwiPjwvc3Bhbj5cXG4gICAgPHNwYW4gaWQ9XFxcInNlbGVjdGVkQ291bnRcXFwiPjwvc3Bhbj5cXG48L2J1dHRvbj5cXG48ZGl2IGNsYXNzPSdidG4tZ3JvdXAnPlxcbiAgICA8YnV0dG9uIGlkPVxcXCJkZWxldGVBbGVydEJ1dHRvblxcXCIgY2xhc3M9J2J0biBidG4tZGVmYXVsdCBidG4tcmVkIGJ0bi1oaWRlLXplcm8nPlxcbiAgICAgICAgRGVsZXRlXFxuICAgIDwvYnV0dG9uPlxcbjwvZGl2PlxcblwiIl0sIm1hcHBpbmdzIjoiQUFBQSIsInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/text-loader/index.js!./src/templates/alerts.selectable.html\n");

/***/ }),

/***/ "./node_modules/text-loader/index.js!./src/templates/alias.detail.html":
/*!********************************************************************!*\
  !*** ./node_modules/text-loader!./src/templates/alias.detail.html ***!
  \********************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("module.exports = \"<!--\\n    Licensed under the Apache License, Version 2.0 (the \\\"License\\\");\\n    you may not use this file except in compliance with the License.\\n    You may obtain a copy of the License at\\n\\n    http://www.apache.org/licenses/LICENSE-2.0\\n\\n    Unless required by applicable law or agreed to in writing, software\\n    distributed under the License is distributed on an \\\"AS IS\\\" BASIS,\\n    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\\n    See the License for the specific language governing permissions and\\n    limitations under the License.\\n-->\\n<div id=\\\"topStatusBar\\\" class=\\\"top-bar\\\">\\n    <ul class=\\\"breadcrumb pull-left\\\" style=\\\"display: inline; background-color: transparent;margin:0px;padding-top:0px;padding-bottom:0px;padding-left:4px;\\\">\\n        <li>\\n            <a href=\\\"#alias\\\">\\n                All Alias\\n            </a>\\n        </li>\\n        <li class=\\\"active\\\">\\n            <%-alias.name%>\\n        </li>\\n    </ul>\\n    <div class=\\\"job-detail-actions pull-right\\\">\\n        <button id=\\\"deleteAliasButton\\\" class=\\\"btn btn-default btn-small btn-red\\\">\\n            Delete\\n        </button>\\n        <button id=\\\"saveAliasButton\\\" class=\\\"btn btn-default btn-small\\\" style=\\\"margin-left:8px;\\\">\\n            Save\\n        </button>\\n    </div>\\n</div>\\n<div id=\\\"detailContainer\\\" class=\\\"main-container\\\">\\n    <div class=\\\"form\\\" role=\\\"form\\\">\\n        <div class=\\\"form-group\\\">\\n            <label class=\\\"sr-only\\\" for=\\\"name\\\" style=\\\"margin-bottom:0px;\\\">Name</label>\\n            <input value=\\\"<%-alias.name%>\\\" type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"name\\\" name=\\\"name\\\" placeholder=\\\"Enter name\\\">\\n        </div>\\n    </div>\\n    <div class=\\\"form\\\" role=\\\"form\\\">\\n        <div class=\\\"form-group\\\">\\n            <label class=\\\"sr-only\\\" for=\\\"name\\\" style=\\\"margin-bottom:0px;\\\">Job IDs</label>\\n            <textarea class='form-control' id=\\\"jobInput\\\" name=\\\"jobs\\\" rows=\\\"12\\\"><%-alias.jobs.join(',')%></textarea>\\n        </div>\\n    </div>\\n</div>\\n\"//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvdGV4dC1sb2FkZXIvaW5kZXguanMhLi9zcmMvdGVtcGxhdGVzL2FsaWFzLmRldGFpbC5odG1sLmpzIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vLy4vc3JjL3RlbXBsYXRlcy9hbGlhcy5kZXRhaWwuaHRtbD83NDM5Il0sInNvdXJjZXNDb250ZW50IjpbIm1vZHVsZS5leHBvcnRzID0gXCI8IS0tXFxuICAgIExpY2Vuc2VkIHVuZGVyIHRoZSBBcGFjaGUgTGljZW5zZSwgVmVyc2lvbiAyLjAgKHRoZSBcXFwiTGljZW5zZVxcXCIpO1xcbiAgICB5b3UgbWF5IG5vdCB1c2UgdGhpcyBmaWxlIGV4Y2VwdCBpbiBjb21wbGlhbmNlIHdpdGggdGhlIExpY2Vuc2UuXFxuICAgIFlvdSBtYXkgb2J0YWluIGEgY29weSBvZiB0aGUgTGljZW5zZSBhdFxcblxcbiAgICBodHRwOi8vd3d3LmFwYWNoZS5vcmcvbGljZW5zZXMvTElDRU5TRS0yLjBcXG5cXG4gICAgVW5sZXNzIHJlcXVpcmVkIGJ5IGFwcGxpY2FibGUgbGF3IG9yIGFncmVlZCB0byBpbiB3cml0aW5nLCBzb2Z0d2FyZVxcbiAgICBkaXN0cmlidXRlZCB1bmRlciB0aGUgTGljZW5zZSBpcyBkaXN0cmlidXRlZCBvbiBhbiBcXFwiQVMgSVNcXFwiIEJBU0lTLFxcbiAgICBXSVRIT1VUIFdBUlJBTlRJRVMgT1IgQ09ORElUSU9OUyBPRiBBTlkgS0lORCwgZWl0aGVyIGV4cHJlc3Mgb3IgaW1wbGllZC5cXG4gICAgU2VlIHRoZSBMaWNlbnNlIGZvciB0aGUgc3BlY2lmaWMgbGFuZ3VhZ2UgZ292ZXJuaW5nIHBlcm1pc3Npb25zIGFuZFxcbiAgICBsaW1pdGF0aW9ucyB1bmRlciB0aGUgTGljZW5zZS5cXG4tLT5cXG48ZGl2IGlkPVxcXCJ0b3BTdGF0dXNCYXJcXFwiIGNsYXNzPVxcXCJ0b3AtYmFyXFxcIj5cXG4gICAgPHVsIGNsYXNzPVxcXCJicmVhZGNydW1iIHB1bGwtbGVmdFxcXCIgc3R5bGU9XFxcImRpc3BsYXk6IGlubGluZTsgYmFja2dyb3VuZC1jb2xvcjogdHJhbnNwYXJlbnQ7bWFyZ2luOjBweDtwYWRkaW5nLXRvcDowcHg7cGFkZGluZy1ib3R0b206MHB4O3BhZGRpbmctbGVmdDo0cHg7XFxcIj5cXG4gICAgICAgIDxsaT5cXG4gICAgICAgICAgICA8YSBocmVmPVxcXCIjYWxpYXNcXFwiPlxcbiAgICAgICAgICAgICAgICBBbGwgQWxpYXNcXG4gICAgICAgICAgICA8L2E+XFxuICAgICAgICA8L2xpPlxcbiAgICAgICAgPGxpIGNsYXNzPVxcXCJhY3RpdmVcXFwiPlxcbiAgICAgICAgICAgIDwlLWFsaWFzLm5hbWUlPlxcbiAgICAgICAgPC9saT5cXG4gICAgPC91bD5cXG4gICAgPGRpdiBjbGFzcz1cXFwiam9iLWRldGFpbC1hY3Rpb25zIHB1bGwtcmlnaHRcXFwiPlxcbiAgICAgICAgPGJ1dHRvbiBpZD1cXFwiZGVsZXRlQWxpYXNCdXR0b25cXFwiIGNsYXNzPVxcXCJidG4gYnRuLWRlZmF1bHQgYnRuLXNtYWxsIGJ0bi1yZWRcXFwiPlxcbiAgICAgICAgICAgIERlbGV0ZVxcbiAgICAgICAgPC9idXR0b24+XFxuICAgICAgICA8YnV0dG9uIGlkPVxcXCJzYXZlQWxpYXNCdXR0b25cXFwiIGNsYXNzPVxcXCJidG4gYnRuLWRlZmF1bHQgYnRuLXNtYWxsXFxcIiBzdHlsZT1cXFwibWFyZ2luLWxlZnQ6OHB4O1xcXCI+XFxuICAgICAgICAgICAgU2F2ZVxcbiAgICAgICAgPC9idXR0b24+XFxuICAgIDwvZGl2PlxcbjwvZGl2PlxcbjxkaXYgaWQ9XFxcImRldGFpbENvbnRhaW5lclxcXCIgY2xhc3M9XFxcIm1haW4tY29udGFpbmVyXFxcIj5cXG4gICAgPGRpdiBjbGFzcz1cXFwiZm9ybVxcXCIgcm9sZT1cXFwiZm9ybVxcXCI+XFxuICAgICAgICA8ZGl2IGNsYXNzPVxcXCJmb3JtLWdyb3VwXFxcIj5cXG4gICAgICAgICAgICA8bGFiZWwgY2xhc3M9XFxcInNyLW9ubHlcXFwiIGZvcj1cXFwibmFtZVxcXCIgc3R5bGU9XFxcIm1hcmdpbi1ib3R0b206MHB4O1xcXCI+TmFtZTwvbGFiZWw+XFxuICAgICAgICAgICAgPGlucHV0IHZhbHVlPVxcXCI8JS1hbGlhcy5uYW1lJT5cXFwiIHR5cGU9XFxcInRleHRcXFwiIGNsYXNzPVxcXCJmb3JtLWNvbnRyb2xcXFwiIGlkPVxcXCJuYW1lXFxcIiBuYW1lPVxcXCJuYW1lXFxcIiBwbGFjZWhvbGRlcj1cXFwiRW50ZXIgbmFtZVxcXCI+XFxuICAgICAgICA8L2Rpdj5cXG4gICAgPC9kaXY+XFxuICAgIDxkaXYgY2xhc3M9XFxcImZvcm1cXFwiIHJvbGU9XFxcImZvcm1cXFwiPlxcbiAgICAgICAgPGRpdiBjbGFzcz1cXFwiZm9ybS1ncm91cFxcXCI+XFxuICAgICAgICAgICAgPGxhYmVsIGNsYXNzPVxcXCJzci1vbmx5XFxcIiBmb3I9XFxcIm5hbWVcXFwiIHN0eWxlPVxcXCJtYXJnaW4tYm90dG9tOjBweDtcXFwiPkpvYiBJRHM8L2xhYmVsPlxcbiAgICAgICAgICAgIDx0ZXh0YXJlYSBjbGFzcz0nZm9ybS1jb250cm9sJyBpZD1cXFwiam9iSW5wdXRcXFwiIG5hbWU9XFxcImpvYnNcXFwiIHJvd3M9XFxcIjEyXFxcIj48JS1hbGlhcy5qb2JzLmpvaW4oJywnKSU+PC90ZXh0YXJlYT5cXG4gICAgICAgIDwvZGl2PlxcbiAgICA8L2Rpdj5cXG48L2Rpdj5cXG5cIiJdLCJtYXBwaW5ncyI6IkFBQUEiLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/text-loader/index.js!./src/templates/alias.detail.html\n");

/***/ }),

/***/ "./node_modules/text-loader/index.js!./src/templates/alias.filter.html":
/*!********************************************************************!*\
  !*** ./node_modules/text-loader!./src/templates/alias.filter.html ***!
  \********************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("module.exports = \"\"//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvdGV4dC1sb2FkZXIvaW5kZXguanMhLi9zcmMvdGVtcGxhdGVzL2FsaWFzLmZpbHRlci5odG1sLmpzIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vLy4vc3JjL3RlbXBsYXRlcy9hbGlhcy5maWx0ZXIuaHRtbD85NjkyIl0sInNvdXJjZXNDb250ZW50IjpbIm1vZHVsZS5leHBvcnRzID0gXCJcIiJdLCJtYXBwaW5ncyI6IkFBQUEiLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/text-loader/index.js!./src/templates/alias.filter.html\n");

/***/ }),

/***/ "./node_modules/text-loader/index.js!./src/templates/alias.selectable.html":
/*!************************************************************************!*\
  !*** ./node_modules/text-loader!./src/templates/alias.selectable.html ***!
  \************************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("module.exports = \"<!--\\n    Licensed under the Apache License, Version 2.0 (the \\\"License\\\");\\n    you may not use this file except in compliance with the License.\\n    You may obtain a copy of the License at\\n\\n    http://www.apache.org/licenses/LICENSE-2.0\\n\\n    Unless required by applicable law or agreed to in writing, software\\n    distributed under the License is distributed on an \\\"AS IS\\\" BASIS,\\n    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\\n    See the License for the specific language governing permissions and\\n    limitations under the License.\\n-->\\n<a href=\\\"#alias/create\\\" class='btn btn-default btn-small' style=\\\"margin:0px 4px;\\\">\\n    Create\\n</a>\\n<button class='btn btn-default checkbox-button' style=\\\"margin:0px 4px;\\\">\\n    <span class=\\\"checkbox\\\"></span>\\n    <span id=\\\"selectedCount\\\"></span>\\n</button>\\n<div class='btn-group'>\\n    <button id=\\\"deleteAliasButton\\\" class='btn btn-default btn-red btn-hide-zero'>\\n        Delete\\n    </button>\\n</div>\\n\"//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvdGV4dC1sb2FkZXIvaW5kZXguanMhLi9zcmMvdGVtcGxhdGVzL2FsaWFzLnNlbGVjdGFibGUuaHRtbC5qcyIsInNvdXJjZXMiOlsid2VicGFjazovLy8uL3NyYy90ZW1wbGF0ZXMvYWxpYXMuc2VsZWN0YWJsZS5odG1sPzBiMGMiXSwic291cmNlc0NvbnRlbnQiOlsibW9kdWxlLmV4cG9ydHMgPSBcIjwhLS1cXG4gICAgTGljZW5zZWQgdW5kZXIgdGhlIEFwYWNoZSBMaWNlbnNlLCBWZXJzaW9uIDIuMCAodGhlIFxcXCJMaWNlbnNlXFxcIik7XFxuICAgIHlvdSBtYXkgbm90IHVzZSB0aGlzIGZpbGUgZXhjZXB0IGluIGNvbXBsaWFuY2Ugd2l0aCB0aGUgTGljZW5zZS5cXG4gICAgWW91IG1heSBvYnRhaW4gYSBjb3B5IG9mIHRoZSBMaWNlbnNlIGF0XFxuXFxuICAgIGh0dHA6Ly93d3cuYXBhY2hlLm9yZy9saWNlbnNlcy9MSUNFTlNFLTIuMFxcblxcbiAgICBVbmxlc3MgcmVxdWlyZWQgYnkgYXBwbGljYWJsZSBsYXcgb3IgYWdyZWVkIHRvIGluIHdyaXRpbmcsIHNvZnR3YXJlXFxuICAgIGRpc3RyaWJ1dGVkIHVuZGVyIHRoZSBMaWNlbnNlIGlzIGRpc3RyaWJ1dGVkIG9uIGFuIFxcXCJBUyBJU1xcXCIgQkFTSVMsXFxuICAgIFdJVEhPVVQgV0FSUkFOVElFUyBPUiBDT05ESVRJT05TIE9GIEFOWSBLSU5ELCBlaXRoZXIgZXhwcmVzcyBvciBpbXBsaWVkLlxcbiAgICBTZWUgdGhlIExpY2Vuc2UgZm9yIHRoZSBzcGVjaWZpYyBsYW5ndWFnZSBnb3Zlcm5pbmcgcGVybWlzc2lvbnMgYW5kXFxuICAgIGxpbWl0YXRpb25zIHVuZGVyIHRoZSBMaWNlbnNlLlxcbi0tPlxcbjxhIGhyZWY9XFxcIiNhbGlhcy9jcmVhdGVcXFwiIGNsYXNzPSdidG4gYnRuLWRlZmF1bHQgYnRuLXNtYWxsJyBzdHlsZT1cXFwibWFyZ2luOjBweCA0cHg7XFxcIj5cXG4gICAgQ3JlYXRlXFxuPC9hPlxcbjxidXR0b24gY2xhc3M9J2J0biBidG4tZGVmYXVsdCBjaGVja2JveC1idXR0b24nIHN0eWxlPVxcXCJtYXJnaW46MHB4IDRweDtcXFwiPlxcbiAgICA8c3BhbiBjbGFzcz1cXFwiY2hlY2tib3hcXFwiPjwvc3Bhbj5cXG4gICAgPHNwYW4gaWQ9XFxcInNlbGVjdGVkQ291bnRcXFwiPjwvc3Bhbj5cXG48L2J1dHRvbj5cXG48ZGl2IGNsYXNzPSdidG4tZ3JvdXAnPlxcbiAgICA8YnV0dG9uIGlkPVxcXCJkZWxldGVBbGlhc0J1dHRvblxcXCIgY2xhc3M9J2J0biBidG4tZGVmYXVsdCBidG4tcmVkIGJ0bi1oaWRlLXplcm8nPlxcbiAgICAgICAgRGVsZXRlXFxuICAgIDwvYnV0dG9uPlxcbjwvZGl2PlxcblwiIl0sIm1hcHBpbmdzIjoiQUFBQSIsInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/text-loader/index.js!./src/templates/alias.selectable.html\n");

/***/ }),

/***/ "./node_modules/text-loader/index.js!./src/templates/command.detail.html":
/*!**********************************************************************!*\
  !*** ./node_modules/text-loader!./src/templates/command.detail.html ***!
  \**********************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("module.exports = \"<!--\\n    Licensed under the Apache License, Version 2.0 (the \\\"License\\\");\\n    you may not use this file except in compliance with the License.\\n    You may obtain a copy of the License at\\n\\n    http://www.apache.org/licenses/LICENSE-2.0\\n\\n    Unless required by applicable law or agreed to in writing, software\\n    distributed under the License is distributed on an \\\"AS IS\\\" BASIS,\\n    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\\n    See the License for the specific language governing permissions and\\n    limitations under the License.\\n-->\\n<div id=\\\"topStatusBar\\\" class=\\\"top-bar\\\">\\n    <ul class=\\\"breadcrumb pull-left\\\" style=\\\"display: inline; background-color: transparent;margin:0px;padding-top:0px;padding-bottom:0px;padding-left:4px;\\\">\\n        <li>\\n            <a href=\\\"#commands\\\">\\n                All Commands\\n            </a>\\n        </li>\\n        <li class=\\\"active\\\">\\n            <%-command.name%>\\n        </li>\\n    </ul>\\n    <div class=\\\"job-detail-actions pull-right\\\">\\n        <button id=\\\"deleteCommandButton\\\" class=\\\"btn btn-default btn-small btn-red\\\">\\n            Delete\\n        </button>\\n        <button id=\\\"saveCommandButton\\\" class=\\\"btn btn-default btn-small\\\" style=\\\"margin-left:8px;\\\">\\n            Save\\n        </button>\\n    </div>\\n</div>\\n<div id=\\\"detailContainer\\\" class=\\\"main-container\\\">\\n    <div class=\\\"form\\\" role=\\\"form\\\">\\n        <div class=\\\"form-group\\\">\\n            <label class=\\\"sr-only\\\" for=\\\"name\\\" style=\\\"margin-bottom:0px;\\\">Name</label>\\n            <input value=\\\"<%-command.name%>\\\" type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"name\\\" name=\\\"name\\\" placeholder=\\\"Enter name\\\">\\n        </div>\\n    </div>\\n    <div class=\\\"form\\\" role=\\\"form\\\">\\n        <div class=\\\"form-group\\\">\\n            <label class=\\\"sr-only\\\" for=\\\"name\\\" style=\\\"margin-bottom:0px;\\\">Commands</label>\\n            <textarea class='form-control' id=\\\"commandInput\\\" rows=\\\"12\\\"><%-command.command.join('\\\\n')%></textarea>\\n        </div>\\n    </div>\\n</div>\\n\"//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvdGV4dC1sb2FkZXIvaW5kZXguanMhLi9zcmMvdGVtcGxhdGVzL2NvbW1hbmQuZGV0YWlsLmh0bWwuanMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9zcmMvdGVtcGxhdGVzL2NvbW1hbmQuZGV0YWlsLmh0bWw/YmEyNCJdLCJzb3VyY2VzQ29udGVudCI6WyJtb2R1bGUuZXhwb3J0cyA9IFwiPCEtLVxcbiAgICBMaWNlbnNlZCB1bmRlciB0aGUgQXBhY2hlIExpY2Vuc2UsIFZlcnNpb24gMi4wICh0aGUgXFxcIkxpY2Vuc2VcXFwiKTtcXG4gICAgeW91IG1heSBub3QgdXNlIHRoaXMgZmlsZSBleGNlcHQgaW4gY29tcGxpYW5jZSB3aXRoIHRoZSBMaWNlbnNlLlxcbiAgICBZb3UgbWF5IG9idGFpbiBhIGNvcHkgb2YgdGhlIExpY2Vuc2UgYXRcXG5cXG4gICAgaHR0cDovL3d3dy5hcGFjaGUub3JnL2xpY2Vuc2VzL0xJQ0VOU0UtMi4wXFxuXFxuICAgIFVubGVzcyByZXF1aXJlZCBieSBhcHBsaWNhYmxlIGxhdyBvciBhZ3JlZWQgdG8gaW4gd3JpdGluZywgc29mdHdhcmVcXG4gICAgZGlzdHJpYnV0ZWQgdW5kZXIgdGhlIExpY2Vuc2UgaXMgZGlzdHJpYnV0ZWQgb24gYW4gXFxcIkFTIElTXFxcIiBCQVNJUyxcXG4gICAgV0lUSE9VVCBXQVJSQU5USUVTIE9SIENPTkRJVElPTlMgT0YgQU5ZIEtJTkQsIGVpdGhlciBleHByZXNzIG9yIGltcGxpZWQuXFxuICAgIFNlZSB0aGUgTGljZW5zZSBmb3IgdGhlIHNwZWNpZmljIGxhbmd1YWdlIGdvdmVybmluZyBwZXJtaXNzaW9ucyBhbmRcXG4gICAgbGltaXRhdGlvbnMgdW5kZXIgdGhlIExpY2Vuc2UuXFxuLS0+XFxuPGRpdiBpZD1cXFwidG9wU3RhdHVzQmFyXFxcIiBjbGFzcz1cXFwidG9wLWJhclxcXCI+XFxuICAgIDx1bCBjbGFzcz1cXFwiYnJlYWRjcnVtYiBwdWxsLWxlZnRcXFwiIHN0eWxlPVxcXCJkaXNwbGF5OiBpbmxpbmU7IGJhY2tncm91bmQtY29sb3I6IHRyYW5zcGFyZW50O21hcmdpbjowcHg7cGFkZGluZy10b3A6MHB4O3BhZGRpbmctYm90dG9tOjBweDtwYWRkaW5nLWxlZnQ6NHB4O1xcXCI+XFxuICAgICAgICA8bGk+XFxuICAgICAgICAgICAgPGEgaHJlZj1cXFwiI2NvbW1hbmRzXFxcIj5cXG4gICAgICAgICAgICAgICAgQWxsIENvbW1hbmRzXFxuICAgICAgICAgICAgPC9hPlxcbiAgICAgICAgPC9saT5cXG4gICAgICAgIDxsaSBjbGFzcz1cXFwiYWN0aXZlXFxcIj5cXG4gICAgICAgICAgICA8JS1jb21tYW5kLm5hbWUlPlxcbiAgICAgICAgPC9saT5cXG4gICAgPC91bD5cXG4gICAgPGRpdiBjbGFzcz1cXFwiam9iLWRldGFpbC1hY3Rpb25zIHB1bGwtcmlnaHRcXFwiPlxcbiAgICAgICAgPGJ1dHRvbiBpZD1cXFwiZGVsZXRlQ29tbWFuZEJ1dHRvblxcXCIgY2xhc3M9XFxcImJ0biBidG4tZGVmYXVsdCBidG4tc21hbGwgYnRuLXJlZFxcXCI+XFxuICAgICAgICAgICAgRGVsZXRlXFxuICAgICAgICA8L2J1dHRvbj5cXG4gICAgICAgIDxidXR0b24gaWQ9XFxcInNhdmVDb21tYW5kQnV0dG9uXFxcIiBjbGFzcz1cXFwiYnRuIGJ0bi1kZWZhdWx0IGJ0bi1zbWFsbFxcXCIgc3R5bGU9XFxcIm1hcmdpbi1sZWZ0OjhweDtcXFwiPlxcbiAgICAgICAgICAgIFNhdmVcXG4gICAgICAgIDwvYnV0dG9uPlxcbiAgICA8L2Rpdj5cXG48L2Rpdj5cXG48ZGl2IGlkPVxcXCJkZXRhaWxDb250YWluZXJcXFwiIGNsYXNzPVxcXCJtYWluLWNvbnRhaW5lclxcXCI+XFxuICAgIDxkaXYgY2xhc3M9XFxcImZvcm1cXFwiIHJvbGU9XFxcImZvcm1cXFwiPlxcbiAgICAgICAgPGRpdiBjbGFzcz1cXFwiZm9ybS1ncm91cFxcXCI+XFxuICAgICAgICAgICAgPGxhYmVsIGNsYXNzPVxcXCJzci1vbmx5XFxcIiBmb3I9XFxcIm5hbWVcXFwiIHN0eWxlPVxcXCJtYXJnaW4tYm90dG9tOjBweDtcXFwiPk5hbWU8L2xhYmVsPlxcbiAgICAgICAgICAgIDxpbnB1dCB2YWx1ZT1cXFwiPCUtY29tbWFuZC5uYW1lJT5cXFwiIHR5cGU9XFxcInRleHRcXFwiIGNsYXNzPVxcXCJmb3JtLWNvbnRyb2xcXFwiIGlkPVxcXCJuYW1lXFxcIiBuYW1lPVxcXCJuYW1lXFxcIiBwbGFjZWhvbGRlcj1cXFwiRW50ZXIgbmFtZVxcXCI+XFxuICAgICAgICA8L2Rpdj5cXG4gICAgPC9kaXY+XFxuICAgIDxkaXYgY2xhc3M9XFxcImZvcm1cXFwiIHJvbGU9XFxcImZvcm1cXFwiPlxcbiAgICAgICAgPGRpdiBjbGFzcz1cXFwiZm9ybS1ncm91cFxcXCI+XFxuICAgICAgICAgICAgPGxhYmVsIGNsYXNzPVxcXCJzci1vbmx5XFxcIiBmb3I9XFxcIm5hbWVcXFwiIHN0eWxlPVxcXCJtYXJnaW4tYm90dG9tOjBweDtcXFwiPkNvbW1hbmRzPC9sYWJlbD5cXG4gICAgICAgICAgICA8dGV4dGFyZWEgY2xhc3M9J2Zvcm0tY29udHJvbCcgaWQ9XFxcImNvbW1hbmRJbnB1dFxcXCIgcm93cz1cXFwiMTJcXFwiPjwlLWNvbW1hbmQuY29tbWFuZC5qb2luKCdcXFxcbicpJT48L3RleHRhcmVhPlxcbiAgICAgICAgPC9kaXY+XFxuICAgIDwvZGl2PlxcbjwvZGl2PlxcblwiIl0sIm1hcHBpbmdzIjoiQUFBQSIsInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/text-loader/index.js!./src/templates/command.detail.html\n");

/***/ }),

/***/ "./node_modules/text-loader/index.js!./src/templates/command.filter.html":
/*!**********************************************************************!*\
  !*** ./node_modules/text-loader!./src/templates/command.filter.html ***!
  \**********************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("module.exports = \"\"//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvdGV4dC1sb2FkZXIvaW5kZXguanMhLi9zcmMvdGVtcGxhdGVzL2NvbW1hbmQuZmlsdGVyLmh0bWwuanMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9zcmMvdGVtcGxhdGVzL2NvbW1hbmQuZmlsdGVyLmh0bWw/NzVlYyJdLCJzb3VyY2VzQ29udGVudCI6WyJtb2R1bGUuZXhwb3J0cyA9IFwiXCIiXSwibWFwcGluZ3MiOiJBQUFBIiwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/text-loader/index.js!./src/templates/command.filter.html\n");

/***/ }),

/***/ "./node_modules/text-loader/index.js!./src/templates/command.selectable.html":
/*!**************************************************************************!*\
  !*** ./node_modules/text-loader!./src/templates/command.selectable.html ***!
  \**************************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("module.exports = \"<!--\\n    Licensed under the Apache License, Version 2.0 (the \\\"License\\\");\\n    you may not use this file except in compliance with the License.\\n    You may obtain a copy of the License at\\n\\n    http://www.apache.org/licenses/LICENSE-2.0\\n\\n    Unless required by applicable law or agreed to in writing, software\\n    distributed under the License is distributed on an \\\"AS IS\\\" BASIS,\\n    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\\n    See the License for the specific language governing permissions and\\n    limitations under the License.\\n-->\\n<a href=\\\"#commands/create\\\" class='btn btn-default btn-small' style=\\\"margin:0px 4px;\\\">\\n    Create\\n</a>\\n<button class='btn btn-default checkbox-button' style=\\\"margin:0px 4px;\\\">\\n    <span class=\\\"checkbox\\\"></span>\\n    <span id=\\\"selectedCount\\\"></span>\\n</button>\\n<div class='btn-group'>\\n    <button id=\\\"deleteCommandButton\\\" class='btn btn-default btn-red btn-hide-zero'>\\n        Delete\\n    </button>\\n</div>\\n\"//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvdGV4dC1sb2FkZXIvaW5kZXguanMhLi9zcmMvdGVtcGxhdGVzL2NvbW1hbmQuc2VsZWN0YWJsZS5odG1sLmpzIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vLy4vc3JjL3RlbXBsYXRlcy9jb21tYW5kLnNlbGVjdGFibGUuaHRtbD9jNjFhIl0sInNvdXJjZXNDb250ZW50IjpbIm1vZHVsZS5leHBvcnRzID0gXCI8IS0tXFxuICAgIExpY2Vuc2VkIHVuZGVyIHRoZSBBcGFjaGUgTGljZW5zZSwgVmVyc2lvbiAyLjAgKHRoZSBcXFwiTGljZW5zZVxcXCIpO1xcbiAgICB5b3UgbWF5IG5vdCB1c2UgdGhpcyBmaWxlIGV4Y2VwdCBpbiBjb21wbGlhbmNlIHdpdGggdGhlIExpY2Vuc2UuXFxuICAgIFlvdSBtYXkgb2J0YWluIGEgY29weSBvZiB0aGUgTGljZW5zZSBhdFxcblxcbiAgICBodHRwOi8vd3d3LmFwYWNoZS5vcmcvbGljZW5zZXMvTElDRU5TRS0yLjBcXG5cXG4gICAgVW5sZXNzIHJlcXVpcmVkIGJ5IGFwcGxpY2FibGUgbGF3IG9yIGFncmVlZCB0byBpbiB3cml0aW5nLCBzb2Z0d2FyZVxcbiAgICBkaXN0cmlidXRlZCB1bmRlciB0aGUgTGljZW5zZSBpcyBkaXN0cmlidXRlZCBvbiBhbiBcXFwiQVMgSVNcXFwiIEJBU0lTLFxcbiAgICBXSVRIT1VUIFdBUlJBTlRJRVMgT1IgQ09ORElUSU9OUyBPRiBBTlkgS0lORCwgZWl0aGVyIGV4cHJlc3Mgb3IgaW1wbGllZC5cXG4gICAgU2VlIHRoZSBMaWNlbnNlIGZvciB0aGUgc3BlY2lmaWMgbGFuZ3VhZ2UgZ292ZXJuaW5nIHBlcm1pc3Npb25zIGFuZFxcbiAgICBsaW1pdGF0aW9ucyB1bmRlciB0aGUgTGljZW5zZS5cXG4tLT5cXG48YSBocmVmPVxcXCIjY29tbWFuZHMvY3JlYXRlXFxcIiBjbGFzcz0nYnRuIGJ0bi1kZWZhdWx0IGJ0bi1zbWFsbCcgc3R5bGU9XFxcIm1hcmdpbjowcHggNHB4O1xcXCI+XFxuICAgIENyZWF0ZVxcbjwvYT5cXG48YnV0dG9uIGNsYXNzPSdidG4gYnRuLWRlZmF1bHQgY2hlY2tib3gtYnV0dG9uJyBzdHlsZT1cXFwibWFyZ2luOjBweCA0cHg7XFxcIj5cXG4gICAgPHNwYW4gY2xhc3M9XFxcImNoZWNrYm94XFxcIj48L3NwYW4+XFxuICAgIDxzcGFuIGlkPVxcXCJzZWxlY3RlZENvdW50XFxcIj48L3NwYW4+XFxuPC9idXR0b24+XFxuPGRpdiBjbGFzcz0nYnRuLWdyb3VwJz5cXG4gICAgPGJ1dHRvbiBpZD1cXFwiZGVsZXRlQ29tbWFuZEJ1dHRvblxcXCIgY2xhc3M9J2J0biBidG4tZGVmYXVsdCBidG4tcmVkIGJ0bi1oaWRlLXplcm8nPlxcbiAgICAgICAgRGVsZXRlXFxuICAgIDwvYnV0dG9uPlxcbjwvZGl2PlxcblwiIl0sIm1hcHBpbmdzIjoiQUFBQSIsInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/text-loader/index.js!./src/templates/command.selectable.html\n");

/***/ }),

/***/ "./node_modules/text-loader/index.js!./src/templates/git.properties.html":
/*!**********************************************************************!*\
  !*** ./node_modules/text-loader!./src/templates/git.properties.html ***!
  \**********************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("module.exports = \"<!--\\n    Licensed under the Apache License, Version 2.0 (the \\\"License\\\");\\n    you may not use this file except in compliance with the License.\\n    You may obtain a copy of the License at\\n\\n    http://www.apache.org/licenses/LICENSE-2.0\\n\\n    Unless required by applicable law or agreed to in writing, software\\n    distributed under the License is distributed on an \\\"AS IS\\\" BASIS,\\n    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\\n    See the License for the specific language governing permissions and\\n    limitations under the License.\\n-->\\n<table class=\\\"table table-bordered auto-layout\\\">\\n    <thead>\\n        <tr class=\\\" \\\">\\n            <th colspan=\\\"2\\\">Git Properties</th>\\n        </tr>\\n    </thead>\\n    <tbody>\\n        <tr class=\\\" \\\">\\n            <td width=\\\"20%\\\">Git Branch</td>\\n            <td width=\\\"70%\\\">\\n                <input class=\\\"form-control\\\" disabled style=\\\"margin:0px;font-weight:bold;\\\" type=\\\"text\\\" value=\\\"<%-branch%>\\\">\\n            </td>\\n        </tr>\\n        <tr class=\\\" \\\">\\n            <td width=\\\"20%\\\">Hydra JAR Build Time</td>\\n            <td width=\\\"70%\\\">\\n                <input class=\\\"form-control\\\" disabled style=\\\"margin:0px;font-weight:bold;\\\" type=\\\"text\\\" value=\\\"<%-buildTime%>\\\">\\n            </td>\\n        </tr>\\n        <tr class=\\\" \\\">\\n            <td width=\\\"20%\\\">User that built Hydra JAR</td>\\n            <td width=\\\"70%\\\">\\n                <input class=\\\"form-control\\\" disabled style=\\\"margin:0px;font-weight:bold;\\\" type=\\\"text\\\" value=\\\"<%-buildUserName%>\\\">\\n            </td>\\n        </tr>\\n        <tr class=\\\" \\\">\\n            <td width=\\\"20%\\\">User that made last commit</td>\\n            <td width=\\\"70%\\\">\\n                <input class=\\\"form-control\\\" disabled style=\\\"margin:0px;font-weight:bold;\\\" type=\\\"text\\\" value=\\\"<%-commitUserName%>\\\">\\n            </td>\\n        </tr>\\n        <tr class=\\\" \\\">\\n            <td width=\\\"20%\\\">Time of last commit</td>\\n            <td width=\\\"70%\\\">\\n                <input class=\\\"form-control\\\" disabled style=\\\"margin:0px;font-weight:bold;\\\" type=\\\"text\\\" value=\\\"<%-commitTime%>\\\">\\n            </td>\\n        </tr>\\n        <tr class=\\\" \\\">\\n            <td width=\\\"20%\\\">Commit ID</td>\\n            <td width=\\\"70%\\\">\\n                <input class=\\\"form-control\\\" disabled style=\\\"margin:0px;font-weight:bold;\\\" type=\\\"text\\\" value=\\\"<%-commitId%>\\\">\\n            </td>\\n        </tr>\\n        <tr class=\\\" \\\">\\n            <td width=\\\"20%\\\">Message for last commit</td>\\n            <td width=\\\"70%\\\">\\n                <textarea  class=\\\"form-control\\\" rows=\\\"10\\\" disabled=\\\"disabled\\\" class=\\\"input-xxlarge\\\" style=\\\"\\\"><%-commitMessageFull%></textarea>\\n            </td>\\n        </tr>\\n    </tbody>\\n</table>\\n\"//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvdGV4dC1sb2FkZXIvaW5kZXguanMhLi9zcmMvdGVtcGxhdGVzL2dpdC5wcm9wZXJ0aWVzLmh0bWwuanMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9zcmMvdGVtcGxhdGVzL2dpdC5wcm9wZXJ0aWVzLmh0bWw/YmRlNiJdLCJzb3VyY2VzQ29udGVudCI6WyJtb2R1bGUuZXhwb3J0cyA9IFwiPCEtLVxcbiAgICBMaWNlbnNlZCB1bmRlciB0aGUgQXBhY2hlIExpY2Vuc2UsIFZlcnNpb24gMi4wICh0aGUgXFxcIkxpY2Vuc2VcXFwiKTtcXG4gICAgeW91IG1heSBub3QgdXNlIHRoaXMgZmlsZSBleGNlcHQgaW4gY29tcGxpYW5jZSB3aXRoIHRoZSBMaWNlbnNlLlxcbiAgICBZb3UgbWF5IG9idGFpbiBhIGNvcHkgb2YgdGhlIExpY2Vuc2UgYXRcXG5cXG4gICAgaHR0cDovL3d3dy5hcGFjaGUub3JnL2xpY2Vuc2VzL0xJQ0VOU0UtMi4wXFxuXFxuICAgIFVubGVzcyByZXF1aXJlZCBieSBhcHBsaWNhYmxlIGxhdyBvciBhZ3JlZWQgdG8gaW4gd3JpdGluZywgc29mdHdhcmVcXG4gICAgZGlzdHJpYnV0ZWQgdW5kZXIgdGhlIExpY2Vuc2UgaXMgZGlzdHJpYnV0ZWQgb24gYW4gXFxcIkFTIElTXFxcIiBCQVNJUyxcXG4gICAgV0lUSE9VVCBXQVJSQU5USUVTIE9SIENPTkRJVElPTlMgT0YgQU5ZIEtJTkQsIGVpdGhlciBleHByZXNzIG9yIGltcGxpZWQuXFxuICAgIFNlZSB0aGUgTGljZW5zZSBmb3IgdGhlIHNwZWNpZmljIGxhbmd1YWdlIGdvdmVybmluZyBwZXJtaXNzaW9ucyBhbmRcXG4gICAgbGltaXRhdGlvbnMgdW5kZXIgdGhlIExpY2Vuc2UuXFxuLS0+XFxuPHRhYmxlIGNsYXNzPVxcXCJ0YWJsZSB0YWJsZS1ib3JkZXJlZCBhdXRvLWxheW91dFxcXCI+XFxuICAgIDx0aGVhZD5cXG4gICAgICAgIDx0ciBjbGFzcz1cXFwiIFxcXCI+XFxuICAgICAgICAgICAgPHRoIGNvbHNwYW49XFxcIjJcXFwiPkdpdCBQcm9wZXJ0aWVzPC90aD5cXG4gICAgICAgIDwvdHI+XFxuICAgIDwvdGhlYWQ+XFxuICAgIDx0Ym9keT5cXG4gICAgICAgIDx0ciBjbGFzcz1cXFwiIFxcXCI+XFxuICAgICAgICAgICAgPHRkIHdpZHRoPVxcXCIyMCVcXFwiPkdpdCBCcmFuY2g8L3RkPlxcbiAgICAgICAgICAgIDx0ZCB3aWR0aD1cXFwiNzAlXFxcIj5cXG4gICAgICAgICAgICAgICAgPGlucHV0IGNsYXNzPVxcXCJmb3JtLWNvbnRyb2xcXFwiIGRpc2FibGVkIHN0eWxlPVxcXCJtYXJnaW46MHB4O2ZvbnQtd2VpZ2h0OmJvbGQ7XFxcIiB0eXBlPVxcXCJ0ZXh0XFxcIiB2YWx1ZT1cXFwiPCUtYnJhbmNoJT5cXFwiPlxcbiAgICAgICAgICAgIDwvdGQ+XFxuICAgICAgICA8L3RyPlxcbiAgICAgICAgPHRyIGNsYXNzPVxcXCIgXFxcIj5cXG4gICAgICAgICAgICA8dGQgd2lkdGg9XFxcIjIwJVxcXCI+SHlkcmEgSkFSIEJ1aWxkIFRpbWU8L3RkPlxcbiAgICAgICAgICAgIDx0ZCB3aWR0aD1cXFwiNzAlXFxcIj5cXG4gICAgICAgICAgICAgICAgPGlucHV0IGNsYXNzPVxcXCJmb3JtLWNvbnRyb2xcXFwiIGRpc2FibGVkIHN0eWxlPVxcXCJtYXJnaW46MHB4O2ZvbnQtd2VpZ2h0OmJvbGQ7XFxcIiB0eXBlPVxcXCJ0ZXh0XFxcIiB2YWx1ZT1cXFwiPCUtYnVpbGRUaW1lJT5cXFwiPlxcbiAgICAgICAgICAgIDwvdGQ+XFxuICAgICAgICA8L3RyPlxcbiAgICAgICAgPHRyIGNsYXNzPVxcXCIgXFxcIj5cXG4gICAgICAgICAgICA8dGQgd2lkdGg9XFxcIjIwJVxcXCI+VXNlciB0aGF0IGJ1aWx0IEh5ZHJhIEpBUjwvdGQ+XFxuICAgICAgICAgICAgPHRkIHdpZHRoPVxcXCI3MCVcXFwiPlxcbiAgICAgICAgICAgICAgICA8aW5wdXQgY2xhc3M9XFxcImZvcm0tY29udHJvbFxcXCIgZGlzYWJsZWQgc3R5bGU9XFxcIm1hcmdpbjowcHg7Zm9udC13ZWlnaHQ6Ym9sZDtcXFwiIHR5cGU9XFxcInRleHRcXFwiIHZhbHVlPVxcXCI8JS1idWlsZFVzZXJOYW1lJT5cXFwiPlxcbiAgICAgICAgICAgIDwvdGQ+XFxuICAgICAgICA8L3RyPlxcbiAgICAgICAgPHRyIGNsYXNzPVxcXCIgXFxcIj5cXG4gICAgICAgICAgICA8dGQgd2lkdGg9XFxcIjIwJVxcXCI+VXNlciB0aGF0IG1hZGUgbGFzdCBjb21taXQ8L3RkPlxcbiAgICAgICAgICAgIDx0ZCB3aWR0aD1cXFwiNzAlXFxcIj5cXG4gICAgICAgICAgICAgICAgPGlucHV0IGNsYXNzPVxcXCJmb3JtLWNvbnRyb2xcXFwiIGRpc2FibGVkIHN0eWxlPVxcXCJtYXJnaW46MHB4O2ZvbnQtd2VpZ2h0OmJvbGQ7XFxcIiB0eXBlPVxcXCJ0ZXh0XFxcIiB2YWx1ZT1cXFwiPCUtY29tbWl0VXNlck5hbWUlPlxcXCI+XFxuICAgICAgICAgICAgPC90ZD5cXG4gICAgICAgIDwvdHI+XFxuICAgICAgICA8dHIgY2xhc3M9XFxcIiBcXFwiPlxcbiAgICAgICAgICAgIDx0ZCB3aWR0aD1cXFwiMjAlXFxcIj5UaW1lIG9mIGxhc3QgY29tbWl0PC90ZD5cXG4gICAgICAgICAgICA8dGQgd2lkdGg9XFxcIjcwJVxcXCI+XFxuICAgICAgICAgICAgICAgIDxpbnB1dCBjbGFzcz1cXFwiZm9ybS1jb250cm9sXFxcIiBkaXNhYmxlZCBzdHlsZT1cXFwibWFyZ2luOjBweDtmb250LXdlaWdodDpib2xkO1xcXCIgdHlwZT1cXFwidGV4dFxcXCIgdmFsdWU9XFxcIjwlLWNvbW1pdFRpbWUlPlxcXCI+XFxuICAgICAgICAgICAgPC90ZD5cXG4gICAgICAgIDwvdHI+XFxuICAgICAgICA8dHIgY2xhc3M9XFxcIiBcXFwiPlxcbiAgICAgICAgICAgIDx0ZCB3aWR0aD1cXFwiMjAlXFxcIj5Db21taXQgSUQ8L3RkPlxcbiAgICAgICAgICAgIDx0ZCB3aWR0aD1cXFwiNzAlXFxcIj5cXG4gICAgICAgICAgICAgICAgPGlucHV0IGNsYXNzPVxcXCJmb3JtLWNvbnRyb2xcXFwiIGRpc2FibGVkIHN0eWxlPVxcXCJtYXJnaW46MHB4O2ZvbnQtd2VpZ2h0OmJvbGQ7XFxcIiB0eXBlPVxcXCJ0ZXh0XFxcIiB2YWx1ZT1cXFwiPCUtY29tbWl0SWQlPlxcXCI+XFxuICAgICAgICAgICAgPC90ZD5cXG4gICAgICAgIDwvdHI+XFxuICAgICAgICA8dHIgY2xhc3M9XFxcIiBcXFwiPlxcbiAgICAgICAgICAgIDx0ZCB3aWR0aD1cXFwiMjAlXFxcIj5NZXNzYWdlIGZvciBsYXN0IGNvbW1pdDwvdGQ+XFxuICAgICAgICAgICAgPHRkIHdpZHRoPVxcXCI3MCVcXFwiPlxcbiAgICAgICAgICAgICAgICA8dGV4dGFyZWEgIGNsYXNzPVxcXCJmb3JtLWNvbnRyb2xcXFwiIHJvd3M9XFxcIjEwXFxcIiBkaXNhYmxlZD1cXFwiZGlzYWJsZWRcXFwiIGNsYXNzPVxcXCJpbnB1dC14eGxhcmdlXFxcIiBzdHlsZT1cXFwiXFxcIj48JS1jb21taXRNZXNzYWdlRnVsbCU+PC90ZXh0YXJlYT5cXG4gICAgICAgICAgICA8L3RkPlxcbiAgICAgICAgPC90cj5cXG4gICAgPC90Ym9keT5cXG48L3RhYmxlPlxcblwiIl0sIm1hcHBpbmdzIjoiQUFBQSIsInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/text-loader/index.js!./src/templates/git.properties.html\n");

/***/ }),

/***/ "./node_modules/text-loader/index.js!./src/templates/host.detail.html":
/*!*******************************************************************!*\
  !*** ./node_modules/text-loader!./src/templates/host.detail.html ***!
  \*******************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("module.exports = \"<!--\\n    Licensed under the Apache License, Version 2.0 (the \\\"License\\\");\\n    you may not use this file except in compliance with the License.\\n    You may obtain a copy of the License at\\n\\n    http://www.apache.org/licenses/LICENSE-2.0\\n\\n    Unless required by applicable law or agreed to in writing, software\\n    distributed under the License is distributed on an \\\"AS IS\\\" BASIS,\\n    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\\n    See the License for the specific language governing permissions and\\n    limitations under the License.\\n-->\\n<div id=\\\"topStatusBar\\\" class=\\\"top-bar\\\">\\n    <ul class=\\\"breadcrumb pull-left\\\" style=\\\"display: inline; background-color: transparent;margin:0px;padding-top:0px;padding-bottom:0px;padding-left:4px;\\\">\\n        <li>\\n            <a href=\\\"#hosts\\\">\\n                All Hosts\\n            </a>\\n        </li>\\n        <li class=\\\"active\\\">\\n            <%-host.uuid%>\\n        </li>\\n    </ul>\\n</div>\\n<ul class=\\\"nav nav-tabs nav-justified\\\" style=\\\"margin-left: 0px; margin-bottom: 0px;\\\">\\n    <li id=\\\"tasksTab\\\">\\n        <a href=\\\"#hosts/<%-host.uuid%>/tasks\\\">\\n            Tasks\\n        </a>\\n    </li>\\n    <li id=\\\"confTab\\\">\\n        <a href=\\\"#hosts/<%-host.uuid%>/ganglia\\\">\\n            Ganglia\\n        </a>\\n    </li>\\n</ul>\\n<div id=\\\"detailContainer\\\" class=\\\"main-container\\\">\\n</div>\\n\"//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvdGV4dC1sb2FkZXIvaW5kZXguanMhLi9zcmMvdGVtcGxhdGVzL2hvc3QuZGV0YWlsLmh0bWwuanMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9zcmMvdGVtcGxhdGVzL2hvc3QuZGV0YWlsLmh0bWw/NWE4YiJdLCJzb3VyY2VzQ29udGVudCI6WyJtb2R1bGUuZXhwb3J0cyA9IFwiPCEtLVxcbiAgICBMaWNlbnNlZCB1bmRlciB0aGUgQXBhY2hlIExpY2Vuc2UsIFZlcnNpb24gMi4wICh0aGUgXFxcIkxpY2Vuc2VcXFwiKTtcXG4gICAgeW91IG1heSBub3QgdXNlIHRoaXMgZmlsZSBleGNlcHQgaW4gY29tcGxpYW5jZSB3aXRoIHRoZSBMaWNlbnNlLlxcbiAgICBZb3UgbWF5IG9idGFpbiBhIGNvcHkgb2YgdGhlIExpY2Vuc2UgYXRcXG5cXG4gICAgaHR0cDovL3d3dy5hcGFjaGUub3JnL2xpY2Vuc2VzL0xJQ0VOU0UtMi4wXFxuXFxuICAgIFVubGVzcyByZXF1aXJlZCBieSBhcHBsaWNhYmxlIGxhdyBvciBhZ3JlZWQgdG8gaW4gd3JpdGluZywgc29mdHdhcmVcXG4gICAgZGlzdHJpYnV0ZWQgdW5kZXIgdGhlIExpY2Vuc2UgaXMgZGlzdHJpYnV0ZWQgb24gYW4gXFxcIkFTIElTXFxcIiBCQVNJUyxcXG4gICAgV0lUSE9VVCBXQVJSQU5USUVTIE9SIENPTkRJVElPTlMgT0YgQU5ZIEtJTkQsIGVpdGhlciBleHByZXNzIG9yIGltcGxpZWQuXFxuICAgIFNlZSB0aGUgTGljZW5zZSBmb3IgdGhlIHNwZWNpZmljIGxhbmd1YWdlIGdvdmVybmluZyBwZXJtaXNzaW9ucyBhbmRcXG4gICAgbGltaXRhdGlvbnMgdW5kZXIgdGhlIExpY2Vuc2UuXFxuLS0+XFxuPGRpdiBpZD1cXFwidG9wU3RhdHVzQmFyXFxcIiBjbGFzcz1cXFwidG9wLWJhclxcXCI+XFxuICAgIDx1bCBjbGFzcz1cXFwiYnJlYWRjcnVtYiBwdWxsLWxlZnRcXFwiIHN0eWxlPVxcXCJkaXNwbGF5OiBpbmxpbmU7IGJhY2tncm91bmQtY29sb3I6IHRyYW5zcGFyZW50O21hcmdpbjowcHg7cGFkZGluZy10b3A6MHB4O3BhZGRpbmctYm90dG9tOjBweDtwYWRkaW5nLWxlZnQ6NHB4O1xcXCI+XFxuICAgICAgICA8bGk+XFxuICAgICAgICAgICAgPGEgaHJlZj1cXFwiI2hvc3RzXFxcIj5cXG4gICAgICAgICAgICAgICAgQWxsIEhvc3RzXFxuICAgICAgICAgICAgPC9hPlxcbiAgICAgICAgPC9saT5cXG4gICAgICAgIDxsaSBjbGFzcz1cXFwiYWN0aXZlXFxcIj5cXG4gICAgICAgICAgICA8JS1ob3N0LnV1aWQlPlxcbiAgICAgICAgPC9saT5cXG4gICAgPC91bD5cXG48L2Rpdj5cXG48dWwgY2xhc3M9XFxcIm5hdiBuYXYtdGFicyBuYXYtanVzdGlmaWVkXFxcIiBzdHlsZT1cXFwibWFyZ2luLWxlZnQ6IDBweDsgbWFyZ2luLWJvdHRvbTogMHB4O1xcXCI+XFxuICAgIDxsaSBpZD1cXFwidGFza3NUYWJcXFwiPlxcbiAgICAgICAgPGEgaHJlZj1cXFwiI2hvc3RzLzwlLWhvc3QudXVpZCU+L3Rhc2tzXFxcIj5cXG4gICAgICAgICAgICBUYXNrc1xcbiAgICAgICAgPC9hPlxcbiAgICA8L2xpPlxcbiAgICA8bGkgaWQ9XFxcImNvbmZUYWJcXFwiPlxcbiAgICAgICAgPGEgaHJlZj1cXFwiI2hvc3RzLzwlLWhvc3QudXVpZCU+L2dhbmdsaWFcXFwiPlxcbiAgICAgICAgICAgIEdhbmdsaWFcXG4gICAgICAgIDwvYT5cXG4gICAgPC9saT5cXG48L3VsPlxcbjxkaXYgaWQ9XFxcImRldGFpbENvbnRhaW5lclxcXCIgY2xhc3M9XFxcIm1haW4tY29udGFpbmVyXFxcIj5cXG48L2Rpdj5cXG5cIiJdLCJtYXBwaW5ncyI6IkFBQUEiLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/text-loader/index.js!./src/templates/host.detail.html\n");

/***/ }),

/***/ "./node_modules/text-loader/index.js!./src/templates/host.filter.html":
/*!*******************************************************************!*\
  !*** ./node_modules/text-loader!./src/templates/host.filter.html ***!
  \*******************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("module.exports = \"<!--\\n    Licensed under the Apache License, Version 2.0 (the \\\"License\\\");\\n    you may not use this file except in compliance with the License.\\n    You may obtain a copy of the License at\\n\\n    http://www.apache.org/licenses/LICENSE-2.0\\n\\n    Unless required by applicable law or agreed to in writing, software\\n    distributed under the License is distributed on an \\\"AS IS\\\" BASIS,\\n    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\\n    See the License for the specific language governing permissions and\\n    limitations under the License.\\n-->\\n<ul class=\\\"nav nav-pills filter\\\">\\n    <li>\\n        <a data-index='6' data-value=\\\"up\\\" href=\\\"#\\\">Up</a>\\n    </li>\\n    <li>\\n        <a data-index='6' data-value=\\\"down\\\" href=\\\"#\\\">Down</a>\\n    </li>\\n    <li>\\n        <a data-index='6' data-value=\\\"disabled\\\" href=\\\"#\\\">Disabled</a>\\n    </li>\\n</ul>\\n\"//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvdGV4dC1sb2FkZXIvaW5kZXguanMhLi9zcmMvdGVtcGxhdGVzL2hvc3QuZmlsdGVyLmh0bWwuanMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9zcmMvdGVtcGxhdGVzL2hvc3QuZmlsdGVyLmh0bWw/MTliOCJdLCJzb3VyY2VzQ29udGVudCI6WyJtb2R1bGUuZXhwb3J0cyA9IFwiPCEtLVxcbiAgICBMaWNlbnNlZCB1bmRlciB0aGUgQXBhY2hlIExpY2Vuc2UsIFZlcnNpb24gMi4wICh0aGUgXFxcIkxpY2Vuc2VcXFwiKTtcXG4gICAgeW91IG1heSBub3QgdXNlIHRoaXMgZmlsZSBleGNlcHQgaW4gY29tcGxpYW5jZSB3aXRoIHRoZSBMaWNlbnNlLlxcbiAgICBZb3UgbWF5IG9idGFpbiBhIGNvcHkgb2YgdGhlIExpY2Vuc2UgYXRcXG5cXG4gICAgaHR0cDovL3d3dy5hcGFjaGUub3JnL2xpY2Vuc2VzL0xJQ0VOU0UtMi4wXFxuXFxuICAgIFVubGVzcyByZXF1aXJlZCBieSBhcHBsaWNhYmxlIGxhdyBvciBhZ3JlZWQgdG8gaW4gd3JpdGluZywgc29mdHdhcmVcXG4gICAgZGlzdHJpYnV0ZWQgdW5kZXIgdGhlIExpY2Vuc2UgaXMgZGlzdHJpYnV0ZWQgb24gYW4gXFxcIkFTIElTXFxcIiBCQVNJUyxcXG4gICAgV0lUSE9VVCBXQVJSQU5USUVTIE9SIENPTkRJVElPTlMgT0YgQU5ZIEtJTkQsIGVpdGhlciBleHByZXNzIG9yIGltcGxpZWQuXFxuICAgIFNlZSB0aGUgTGljZW5zZSBmb3IgdGhlIHNwZWNpZmljIGxhbmd1YWdlIGdvdmVybmluZyBwZXJtaXNzaW9ucyBhbmRcXG4gICAgbGltaXRhdGlvbnMgdW5kZXIgdGhlIExpY2Vuc2UuXFxuLS0+XFxuPHVsIGNsYXNzPVxcXCJuYXYgbmF2LXBpbGxzIGZpbHRlclxcXCI+XFxuICAgIDxsaT5cXG4gICAgICAgIDxhIGRhdGEtaW5kZXg9JzYnIGRhdGEtdmFsdWU9XFxcInVwXFxcIiBocmVmPVxcXCIjXFxcIj5VcDwvYT5cXG4gICAgPC9saT5cXG4gICAgPGxpPlxcbiAgICAgICAgPGEgZGF0YS1pbmRleD0nNicgZGF0YS12YWx1ZT1cXFwiZG93blxcXCIgaHJlZj1cXFwiI1xcXCI+RG93bjwvYT5cXG4gICAgPC9saT5cXG4gICAgPGxpPlxcbiAgICAgICAgPGEgZGF0YS1pbmRleD0nNicgZGF0YS12YWx1ZT1cXFwiZGlzYWJsZWRcXFwiIGhyZWY9XFxcIiNcXFwiPkRpc2FibGVkPC9hPlxcbiAgICA8L2xpPlxcbjwvdWw+XFxuXCIiXSwibWFwcGluZ3MiOiJBQUFBIiwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/text-loader/index.js!./src/templates/host.filter.html\n");

/***/ }),

/***/ "./node_modules/text-loader/index.js!./src/templates/host.selectable.html":
/*!***********************************************************************!*\
  !*** ./node_modules/text-loader!./src/templates/host.selectable.html ***!
  \***********************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("module.exports = \"<!--\\n    Licensed under the Apache License, Version 2.0 (the \\\"License\\\");\\n    you may not use this file except in compliance with the License.\\n    You may obtain a copy of the License at\\n\\n    http://www.apache.org/licenses/LICENSE-2.0\\n\\n    Unless required by applicable law or agreed to in writing, software\\n    distributed under the License is distributed on an \\\"AS IS\\\" BASIS,\\n    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\\n    See the License for the specific language governing permissions and\\n    limitations under the License.\\n-->\\n<button class='btn btn-default checkbox-button' style=\\\"margin:0px 4px;\\\">\\n    <span class=\\\"checkbox\\\"></span>\\n    <span id=\\\"selectedCount\\\"></span>\\n</button>\\n<div class='btn-group host-actions'>\\n    <button id=\\\"hostRebalanceButton\\\" class='btn btn-default btn-blue btn-hide-zero'>\\n        Rebalance\\n    </button>\\n    <button id=\\\"hostFailFsOkayButton\\\" class='btn btn-default btn-blue btn-hide-zero'>\\n        Queue to Fail\\n    </button>\\n    <button id=\\\"hostFailCancelButton\\\" class='btn btn-default btn-blue btn-hide-zero'>\\n        Cancel failure\\n    </button>\\n    <button id=\\\"hostFailFsDeadButton\\\" class='btn btn-default btn-red btn-show-one'>\\n        Fail Now!\\n    </button>\\n    <button id=\\\"hostDropButton\\\" class='btn btn-default btn-red btn-hide-zero'>\\n        Drop\\n    </button>\\n    <button id=\\\"hostEnableButton\\\" class='btn btn-default btn-hide-zero'>\\n        Enable\\n    </button>\\n    <button id=\\\"hostDisableButton\\\" class='btn btn-default btn-hide-zero'>\\n        Disable\\n    </button>  \\n</div>\\n\"//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvdGV4dC1sb2FkZXIvaW5kZXguanMhLi9zcmMvdGVtcGxhdGVzL2hvc3Quc2VsZWN0YWJsZS5odG1sLmpzIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vLy4vc3JjL3RlbXBsYXRlcy9ob3N0LnNlbGVjdGFibGUuaHRtbD8yZjIxIl0sInNvdXJjZXNDb250ZW50IjpbIm1vZHVsZS5leHBvcnRzID0gXCI8IS0tXFxuICAgIExpY2Vuc2VkIHVuZGVyIHRoZSBBcGFjaGUgTGljZW5zZSwgVmVyc2lvbiAyLjAgKHRoZSBcXFwiTGljZW5zZVxcXCIpO1xcbiAgICB5b3UgbWF5IG5vdCB1c2UgdGhpcyBmaWxlIGV4Y2VwdCBpbiBjb21wbGlhbmNlIHdpdGggdGhlIExpY2Vuc2UuXFxuICAgIFlvdSBtYXkgb2J0YWluIGEgY29weSBvZiB0aGUgTGljZW5zZSBhdFxcblxcbiAgICBodHRwOi8vd3d3LmFwYWNoZS5vcmcvbGljZW5zZXMvTElDRU5TRS0yLjBcXG5cXG4gICAgVW5sZXNzIHJlcXVpcmVkIGJ5IGFwcGxpY2FibGUgbGF3IG9yIGFncmVlZCB0byBpbiB3cml0aW5nLCBzb2Z0d2FyZVxcbiAgICBkaXN0cmlidXRlZCB1bmRlciB0aGUgTGljZW5zZSBpcyBkaXN0cmlidXRlZCBvbiBhbiBcXFwiQVMgSVNcXFwiIEJBU0lTLFxcbiAgICBXSVRIT1VUIFdBUlJBTlRJRVMgT1IgQ09ORElUSU9OUyBPRiBBTlkgS0lORCwgZWl0aGVyIGV4cHJlc3Mgb3IgaW1wbGllZC5cXG4gICAgU2VlIHRoZSBMaWNlbnNlIGZvciB0aGUgc3BlY2lmaWMgbGFuZ3VhZ2UgZ292ZXJuaW5nIHBlcm1pc3Npb25zIGFuZFxcbiAgICBsaW1pdGF0aW9ucyB1bmRlciB0aGUgTGljZW5zZS5cXG4tLT5cXG48YnV0dG9uIGNsYXNzPSdidG4gYnRuLWRlZmF1bHQgY2hlY2tib3gtYnV0dG9uJyBzdHlsZT1cXFwibWFyZ2luOjBweCA0cHg7XFxcIj5cXG4gICAgPHNwYW4gY2xhc3M9XFxcImNoZWNrYm94XFxcIj48L3NwYW4+XFxuICAgIDxzcGFuIGlkPVxcXCJzZWxlY3RlZENvdW50XFxcIj48L3NwYW4+XFxuPC9idXR0b24+XFxuPGRpdiBjbGFzcz0nYnRuLWdyb3VwIGhvc3QtYWN0aW9ucyc+XFxuICAgIDxidXR0b24gaWQ9XFxcImhvc3RSZWJhbGFuY2VCdXR0b25cXFwiIGNsYXNzPSdidG4gYnRuLWRlZmF1bHQgYnRuLWJsdWUgYnRuLWhpZGUtemVybyc+XFxuICAgICAgICBSZWJhbGFuY2VcXG4gICAgPC9idXR0b24+XFxuICAgIDxidXR0b24gaWQ9XFxcImhvc3RGYWlsRnNPa2F5QnV0dG9uXFxcIiBjbGFzcz0nYnRuIGJ0bi1kZWZhdWx0IGJ0bi1ibHVlIGJ0bi1oaWRlLXplcm8nPlxcbiAgICAgICAgUXVldWUgdG8gRmFpbFxcbiAgICA8L2J1dHRvbj5cXG4gICAgPGJ1dHRvbiBpZD1cXFwiaG9zdEZhaWxDYW5jZWxCdXR0b25cXFwiIGNsYXNzPSdidG4gYnRuLWRlZmF1bHQgYnRuLWJsdWUgYnRuLWhpZGUtemVybyc+XFxuICAgICAgICBDYW5jZWwgZmFpbHVyZVxcbiAgICA8L2J1dHRvbj5cXG4gICAgPGJ1dHRvbiBpZD1cXFwiaG9zdEZhaWxGc0RlYWRCdXR0b25cXFwiIGNsYXNzPSdidG4gYnRuLWRlZmF1bHQgYnRuLXJlZCBidG4tc2hvdy1vbmUnPlxcbiAgICAgICAgRmFpbCBOb3chXFxuICAgIDwvYnV0dG9uPlxcbiAgICA8YnV0dG9uIGlkPVxcXCJob3N0RHJvcEJ1dHRvblxcXCIgY2xhc3M9J2J0biBidG4tZGVmYXVsdCBidG4tcmVkIGJ0bi1oaWRlLXplcm8nPlxcbiAgICAgICAgRHJvcFxcbiAgICA8L2J1dHRvbj5cXG4gICAgPGJ1dHRvbiBpZD1cXFwiaG9zdEVuYWJsZUJ1dHRvblxcXCIgY2xhc3M9J2J0biBidG4tZGVmYXVsdCBidG4taGlkZS16ZXJvJz5cXG4gICAgICAgIEVuYWJsZVxcbiAgICA8L2J1dHRvbj5cXG4gICAgPGJ1dHRvbiBpZD1cXFwiaG9zdERpc2FibGVCdXR0b25cXFwiIGNsYXNzPSdidG4gYnRuLWRlZmF1bHQgYnRuLWhpZGUtemVybyc+XFxuICAgICAgICBEaXNhYmxlXFxuICAgIDwvYnV0dG9uPiAgXFxuPC9kaXY+XFxuXCIiXSwibWFwcGluZ3MiOiJBQUFBIiwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/text-loader/index.js!./src/templates/host.selectable.html\n");

/***/ }),

/***/ "./node_modules/text-loader/index.js!./src/templates/job.alerts.html":
/*!******************************************************************!*\
  !*** ./node_modules/text-loader!./src/templates/job.alerts.html ***!
  \******************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("module.exports = \"<!--\\n    Licensed under the Apache License, Version 2.0 (the \\\"License\\\");\\n    you may not use this file except in compliance with the License.\\n    You may obtain a copy of the License at\\n\\n    http://www.apache.org/licenses/LICENSE-2.0\\n\\n    Unless required by applicable law or agreed to in writing, software\\n    distributed under the License is distributed on an \\\"AS IS\\\" BASIS,\\n    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\\n    See the License for the specific language governing permissions and\\n    limitations under the License.\\n-->\\n<div class=\\\"span12\\\" style=\\\"padding:0px;margin:0px;\\\">\\n    <button id=\\\"addAlertButton\\\" class=\\\"btn btn-default btn-small\\\">Add Alert</button> <br>\\n    <button id=\\\"viewAlertsButton\\\" class=\\\"btn btn-default btn-small\\\">View Alerts Using This Job...</button>\\n    \\n</div>\\n\"//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvdGV4dC1sb2FkZXIvaW5kZXguanMhLi9zcmMvdGVtcGxhdGVzL2pvYi5hbGVydHMuaHRtbC5qcyIsInNvdXJjZXMiOlsid2VicGFjazovLy8uL3NyYy90ZW1wbGF0ZXMvam9iLmFsZXJ0cy5odG1sP2Y4ZGIiXSwic291cmNlc0NvbnRlbnQiOlsibW9kdWxlLmV4cG9ydHMgPSBcIjwhLS1cXG4gICAgTGljZW5zZWQgdW5kZXIgdGhlIEFwYWNoZSBMaWNlbnNlLCBWZXJzaW9uIDIuMCAodGhlIFxcXCJMaWNlbnNlXFxcIik7XFxuICAgIHlvdSBtYXkgbm90IHVzZSB0aGlzIGZpbGUgZXhjZXB0IGluIGNvbXBsaWFuY2Ugd2l0aCB0aGUgTGljZW5zZS5cXG4gICAgWW91IG1heSBvYnRhaW4gYSBjb3B5IG9mIHRoZSBMaWNlbnNlIGF0XFxuXFxuICAgIGh0dHA6Ly93d3cuYXBhY2hlLm9yZy9saWNlbnNlcy9MSUNFTlNFLTIuMFxcblxcbiAgICBVbmxlc3MgcmVxdWlyZWQgYnkgYXBwbGljYWJsZSBsYXcgb3IgYWdyZWVkIHRvIGluIHdyaXRpbmcsIHNvZnR3YXJlXFxuICAgIGRpc3RyaWJ1dGVkIHVuZGVyIHRoZSBMaWNlbnNlIGlzIGRpc3RyaWJ1dGVkIG9uIGFuIFxcXCJBUyBJU1xcXCIgQkFTSVMsXFxuICAgIFdJVEhPVVQgV0FSUkFOVElFUyBPUiBDT05ESVRJT05TIE9GIEFOWSBLSU5ELCBlaXRoZXIgZXhwcmVzcyBvciBpbXBsaWVkLlxcbiAgICBTZWUgdGhlIExpY2Vuc2UgZm9yIHRoZSBzcGVjaWZpYyBsYW5ndWFnZSBnb3Zlcm5pbmcgcGVybWlzc2lvbnMgYW5kXFxuICAgIGxpbWl0YXRpb25zIHVuZGVyIHRoZSBMaWNlbnNlLlxcbi0tPlxcbjxkaXYgY2xhc3M9XFxcInNwYW4xMlxcXCIgc3R5bGU9XFxcInBhZGRpbmc6MHB4O21hcmdpbjowcHg7XFxcIj5cXG4gICAgPGJ1dHRvbiBpZD1cXFwiYWRkQWxlcnRCdXR0b25cXFwiIGNsYXNzPVxcXCJidG4gYnRuLWRlZmF1bHQgYnRuLXNtYWxsXFxcIj5BZGQgQWxlcnQ8L2J1dHRvbj4gPGJyPlxcbiAgICA8YnV0dG9uIGlkPVxcXCJ2aWV3QWxlcnRzQnV0dG9uXFxcIiBjbGFzcz1cXFwiYnRuIGJ0bi1kZWZhdWx0IGJ0bi1zbWFsbFxcXCI+VmlldyBBbGVydHMgVXNpbmcgVGhpcyBKb2IuLi48L2J1dHRvbj5cXG4gICAgXFxuPC9kaXY+XFxuXCIiXSwibWFwcGluZ3MiOiJBQUFBIiwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/text-loader/index.js!./src/templates/job.alerts.html\n");

/***/ }),

/***/ "./node_modules/text-loader/index.js!./src/templates/job.checkdirs.html":
/*!*********************************************************************!*\
  !*** ./node_modules/text-loader!./src/templates/job.checkdirs.html ***!
  \*********************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("module.exports = \"<!--\\n    Licensed under the Apache License, Version 2.0 (the \\\"License\\\");\\n    you may not use this file except in compliance with the License.\\n    You may obtain a copy of the License at\\n\\n    http://www.apache.org/licenses/LICENSE-2.0\\n\\n    Unless required by applicable law or agreed to in writing, software\\n    distributed under the License is distributed on an \\\"AS IS\\\" BASIS,\\n    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\\n    See the License for the specific language governing permissions and\\n    limitations under the License.\\n-->\\n<div class=\\\"modal-dialog\\\" style=\\\"position: absolute;top: 20px;bottom: 20px;left: 100px;right: 100px;width:800px;\\\">\\n    <div class=\\\"modal-content\\\" style=\\\"position: absolute;top: 20px;bottom: 20px;left: 0;right: 0;\\\">\\n        <div class=\\\"modal-header\\\">\\n            <button type=\\\"button\\\" class=\\\"close\\\" data-dismiss=\\\"modal\\\" aria-hidden=\\\"true\\\">&times;</button>\\n            <h4 class=\\\"modal-title\\\">Check Dirs: <%-job.id%></h4>\\n        </div>\\n        <div class=\\\"modal-body\\\" style=\\\"overflow-y: auto;position: absolute;top: 56px;bottom: 69px;right: 0;left: 0;\\\">\\n            <table class=\\\"table table-condensed table-body\\\">\\n                <thead>\\n                <tr class=\\\"row\\\">\\n                    <th style=\\\"width:10%;\\\">\\n                        <a href=\\\"#\\\" data-sortby=\\\"0\\\">Node</a>\\n                    </th>\\n                    <th style=\\\"width:20%;\\\">\\n                        <a href=\\\"#\\\" data-sortby=\\\"1\\\">Type</a>\\n                    </th>\\n                    <th style=\\\"width:20%;\\\">\\n                        <a href=\\\"#\\\" data-sortby=\\\"2\\\">Result</a>\\n                    </th>\\n                    <th style=\\\"width:45%;\\\">\\n                        <a href=\\\"#\\\" data-sortby=\\\"3\\\">Host</a>\\n                    </th>\\n                    <th style=\\\"width:10%;\\\"></th>\\n                </tr>\\n                </thead>\\n                <tbody></tbody>\\n            </table>\\n        </div>\\n        <div class=\\\"modal-footer\\\" style=\\\"position:absolute;bottom:-4px;left:0;right:0;\\\">\\n            <button class=\\\"fix-all btn btn-default btn-blue pull-left\\\" type=\\\"button\\\">Fix All Dirs</button>\\n            <button type=\\\"button\\\" class=\\\"btn btn-default pull-right\\\" data-dismiss=\\\"modal\\\">Close</button>\\n            <!--<button type=\\\"button\\\" class=\\\"btn btn-primary\\\">Save changes</button>-->\\n        </div>\\n    </div>\\n</div><!-- /.modal-dialog -->\\n\"//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvdGV4dC1sb2FkZXIvaW5kZXguanMhLi9zcmMvdGVtcGxhdGVzL2pvYi5jaGVja2RpcnMuaHRtbC5qcyIsInNvdXJjZXMiOlsid2VicGFjazovLy8uL3NyYy90ZW1wbGF0ZXMvam9iLmNoZWNrZGlycy5odG1sPzcyYzIiXSwic291cmNlc0NvbnRlbnQiOlsibW9kdWxlLmV4cG9ydHMgPSBcIjwhLS1cXG4gICAgTGljZW5zZWQgdW5kZXIgdGhlIEFwYWNoZSBMaWNlbnNlLCBWZXJzaW9uIDIuMCAodGhlIFxcXCJMaWNlbnNlXFxcIik7XFxuICAgIHlvdSBtYXkgbm90IHVzZSB0aGlzIGZpbGUgZXhjZXB0IGluIGNvbXBsaWFuY2Ugd2l0aCB0aGUgTGljZW5zZS5cXG4gICAgWW91IG1heSBvYnRhaW4gYSBjb3B5IG9mIHRoZSBMaWNlbnNlIGF0XFxuXFxuICAgIGh0dHA6Ly93d3cuYXBhY2hlLm9yZy9saWNlbnNlcy9MSUNFTlNFLTIuMFxcblxcbiAgICBVbmxlc3MgcmVxdWlyZWQgYnkgYXBwbGljYWJsZSBsYXcgb3IgYWdyZWVkIHRvIGluIHdyaXRpbmcsIHNvZnR3YXJlXFxuICAgIGRpc3RyaWJ1dGVkIHVuZGVyIHRoZSBMaWNlbnNlIGlzIGRpc3RyaWJ1dGVkIG9uIGFuIFxcXCJBUyBJU1xcXCIgQkFTSVMsXFxuICAgIFdJVEhPVVQgV0FSUkFOVElFUyBPUiBDT05ESVRJT05TIE9GIEFOWSBLSU5ELCBlaXRoZXIgZXhwcmVzcyBvciBpbXBsaWVkLlxcbiAgICBTZWUgdGhlIExpY2Vuc2UgZm9yIHRoZSBzcGVjaWZpYyBsYW5ndWFnZSBnb3Zlcm5pbmcgcGVybWlzc2lvbnMgYW5kXFxuICAgIGxpbWl0YXRpb25zIHVuZGVyIHRoZSBMaWNlbnNlLlxcbi0tPlxcbjxkaXYgY2xhc3M9XFxcIm1vZGFsLWRpYWxvZ1xcXCIgc3R5bGU9XFxcInBvc2l0aW9uOiBhYnNvbHV0ZTt0b3A6IDIwcHg7Ym90dG9tOiAyMHB4O2xlZnQ6IDEwMHB4O3JpZ2h0OiAxMDBweDt3aWR0aDo4MDBweDtcXFwiPlxcbiAgICA8ZGl2IGNsYXNzPVxcXCJtb2RhbC1jb250ZW50XFxcIiBzdHlsZT1cXFwicG9zaXRpb246IGFic29sdXRlO3RvcDogMjBweDtib3R0b206IDIwcHg7bGVmdDogMDtyaWdodDogMDtcXFwiPlxcbiAgICAgICAgPGRpdiBjbGFzcz1cXFwibW9kYWwtaGVhZGVyXFxcIj5cXG4gICAgICAgICAgICA8YnV0dG9uIHR5cGU9XFxcImJ1dHRvblxcXCIgY2xhc3M9XFxcImNsb3NlXFxcIiBkYXRhLWRpc21pc3M9XFxcIm1vZGFsXFxcIiBhcmlhLWhpZGRlbj1cXFwidHJ1ZVxcXCI+JnRpbWVzOzwvYnV0dG9uPlxcbiAgICAgICAgICAgIDxoNCBjbGFzcz1cXFwibW9kYWwtdGl0bGVcXFwiPkNoZWNrIERpcnM6IDwlLWpvYi5pZCU+PC9oND5cXG4gICAgICAgIDwvZGl2PlxcbiAgICAgICAgPGRpdiBjbGFzcz1cXFwibW9kYWwtYm9keVxcXCIgc3R5bGU9XFxcIm92ZXJmbG93LXk6IGF1dG87cG9zaXRpb246IGFic29sdXRlO3RvcDogNTZweDtib3R0b206IDY5cHg7cmlnaHQ6IDA7bGVmdDogMDtcXFwiPlxcbiAgICAgICAgICAgIDx0YWJsZSBjbGFzcz1cXFwidGFibGUgdGFibGUtY29uZGVuc2VkIHRhYmxlLWJvZHlcXFwiPlxcbiAgICAgICAgICAgICAgICA8dGhlYWQ+XFxuICAgICAgICAgICAgICAgIDx0ciBjbGFzcz1cXFwicm93XFxcIj5cXG4gICAgICAgICAgICAgICAgICAgIDx0aCBzdHlsZT1cXFwid2lkdGg6MTAlO1xcXCI+XFxuICAgICAgICAgICAgICAgICAgICAgICAgPGEgaHJlZj1cXFwiI1xcXCIgZGF0YS1zb3J0Ynk9XFxcIjBcXFwiPk5vZGU8L2E+XFxuICAgICAgICAgICAgICAgICAgICA8L3RoPlxcbiAgICAgICAgICAgICAgICAgICAgPHRoIHN0eWxlPVxcXCJ3aWR0aDoyMCU7XFxcIj5cXG4gICAgICAgICAgICAgICAgICAgICAgICA8YSBocmVmPVxcXCIjXFxcIiBkYXRhLXNvcnRieT1cXFwiMVxcXCI+VHlwZTwvYT5cXG4gICAgICAgICAgICAgICAgICAgIDwvdGg+XFxuICAgICAgICAgICAgICAgICAgICA8dGggc3R5bGU9XFxcIndpZHRoOjIwJTtcXFwiPlxcbiAgICAgICAgICAgICAgICAgICAgICAgIDxhIGhyZWY9XFxcIiNcXFwiIGRhdGEtc29ydGJ5PVxcXCIyXFxcIj5SZXN1bHQ8L2E+XFxuICAgICAgICAgICAgICAgICAgICA8L3RoPlxcbiAgICAgICAgICAgICAgICAgICAgPHRoIHN0eWxlPVxcXCJ3aWR0aDo0NSU7XFxcIj5cXG4gICAgICAgICAgICAgICAgICAgICAgICA8YSBocmVmPVxcXCIjXFxcIiBkYXRhLXNvcnRieT1cXFwiM1xcXCI+SG9zdDwvYT5cXG4gICAgICAgICAgICAgICAgICAgIDwvdGg+XFxuICAgICAgICAgICAgICAgICAgICA8dGggc3R5bGU9XFxcIndpZHRoOjEwJTtcXFwiPjwvdGg+XFxuICAgICAgICAgICAgICAgIDwvdHI+XFxuICAgICAgICAgICAgICAgIDwvdGhlYWQ+XFxuICAgICAgICAgICAgICAgIDx0Ym9keT48L3Rib2R5PlxcbiAgICAgICAgICAgIDwvdGFibGU+XFxuICAgICAgICA8L2Rpdj5cXG4gICAgICAgIDxkaXYgY2xhc3M9XFxcIm1vZGFsLWZvb3RlclxcXCIgc3R5bGU9XFxcInBvc2l0aW9uOmFic29sdXRlO2JvdHRvbTotNHB4O2xlZnQ6MDtyaWdodDowO1xcXCI+XFxuICAgICAgICAgICAgPGJ1dHRvbiBjbGFzcz1cXFwiZml4LWFsbCBidG4gYnRuLWRlZmF1bHQgYnRuLWJsdWUgcHVsbC1sZWZ0XFxcIiB0eXBlPVxcXCJidXR0b25cXFwiPkZpeCBBbGwgRGlyczwvYnV0dG9uPlxcbiAgICAgICAgICAgIDxidXR0b24gdHlwZT1cXFwiYnV0dG9uXFxcIiBjbGFzcz1cXFwiYnRuIGJ0bi1kZWZhdWx0IHB1bGwtcmlnaHRcXFwiIGRhdGEtZGlzbWlzcz1cXFwibW9kYWxcXFwiPkNsb3NlPC9idXR0b24+XFxuICAgICAgICAgICAgPCEtLTxidXR0b24gdHlwZT1cXFwiYnV0dG9uXFxcIiBjbGFzcz1cXFwiYnRuIGJ0bi1wcmltYXJ5XFxcIj5TYXZlIGNoYW5nZXM8L2J1dHRvbj4tLT5cXG4gICAgICAgIDwvZGl2PlxcbiAgICA8L2Rpdj5cXG48L2Rpdj48IS0tIC8ubW9kYWwtZGlhbG9nIC0tPlxcblwiIl0sIm1hcHBpbmdzIjoiQUFBQSIsInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/text-loader/index.js!./src/templates/job.checkdirs.html\n");

/***/ }),

/***/ "./node_modules/text-loader/index.js!./src/templates/job.configuration.html":
/*!*************************************************************************!*\
  !*** ./node_modules/text-loader!./src/templates/job.configuration.html ***!
  \*************************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("module.exports = \"<!--\\n    Licensed under the Apache License, Version 2.0 (the \\\"License\\\");\\n    you may not use this file except in compliance with the License.\\n    You may obtain a copy of the License at\\n\\n    http://www.apache.org/licenses/LICENSE-2.0\\n\\n    Unless required by applicable law or agreed to in writing, software\\n    distributed under the License is distributed on an \\\"AS IS\\\" BASIS,\\n    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\\n    See the License for the specific language governing permissions and\\n    limitations under the License.\\n-->\\n<div class=\\\"form form-inline\\\" role=\\\"form\\\">\\n    <%if(!_.isUndefined(job.id)){%>\\n        <div class=\\\"form-group\\\" style=\\\"width:79%;display:inline-block;\\\">\\n            <label class=\\\"sr-only\\\" for=\\\"description\\\" style=\\\"margin-bottom:0px;\\\">Description</label>\\n            <input value=\\\"<%-job.description%>\\\" type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"description\\\" name='description' placeholder=\\\"Enter description\\\">\\n        </div>\\n        <div class=\\\"form-group\\\" style=\\\"width:20%;display:inline-block;\\\">\\n            <label class=\\\"sr-only\\\" for=\\\"command\\\" style=\\\"margin-bottom:0px;\\\">Command</label>\\n            <select id=\\\"command\\\" class=\\\"form-control\\\">\\n                <%_.each(commands,function(command){%>\\n                    <option value=\\\"<%-command.name%>\\\"><%-command.name%></option>\\n                <%})%>\\n            </select>\\n        </div>\\n    <%}else{%>\\n        <div class=\\\"form-group\\\" style=\\\"width:64%;display:inline-block;\\\">\\n            <label class=\\\"sr-only\\\" for=\\\"description\\\" style=\\\"margin-bottom:0px;\\\">Description</label>\\n            <input value=\\\"<%-job.description%>\\\" type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"description\\\"  name='description'  placeholder=\\\"Enter description\\\">\\n        </div>\\n        <div class=\\\"form-group\\\" style=\\\"width:15%;display:inline-block;\\\">\\n            <label class=\\\"sr-only\\\" for=\\\"nodes\\\" style=\\\"margin-bottom:0px;\\\">Nodes</label>\\n            <input value=\\\"<%-job.nodes%>\\\" type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"nodes\\\" name=\\\"nodes\\\" placeholder=\\\"Enter node count..\\\">\\n        </div>\\n        <div class=\\\"form-group\\\" style=\\\"width:20%;display:inline-block;\\\">\\n            <label class=\\\"sr-only\\\" for=\\\"command\\\" style=\\\"margin-bottom:0px;\\\">Command</label>\\n            <select id=\\\"command\\\" class=\\\"form-control\\\">\\n                <%_.each(commands,function(command){%>\\n                <option value=\\\"<%-command.name%>\\\"><%-command.name%></option>\\n                <%})%>\\n            </select>\\n        </div>\\n    <%}%>\\n</div>\\n\"//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvdGV4dC1sb2FkZXIvaW5kZXguanMhLi9zcmMvdGVtcGxhdGVzL2pvYi5jb25maWd1cmF0aW9uLmh0bWwuanMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9zcmMvdGVtcGxhdGVzL2pvYi5jb25maWd1cmF0aW9uLmh0bWw/ZjgwNiJdLCJzb3VyY2VzQ29udGVudCI6WyJtb2R1bGUuZXhwb3J0cyA9IFwiPCEtLVxcbiAgICBMaWNlbnNlZCB1bmRlciB0aGUgQXBhY2hlIExpY2Vuc2UsIFZlcnNpb24gMi4wICh0aGUgXFxcIkxpY2Vuc2VcXFwiKTtcXG4gICAgeW91IG1heSBub3QgdXNlIHRoaXMgZmlsZSBleGNlcHQgaW4gY29tcGxpYW5jZSB3aXRoIHRoZSBMaWNlbnNlLlxcbiAgICBZb3UgbWF5IG9idGFpbiBhIGNvcHkgb2YgdGhlIExpY2Vuc2UgYXRcXG5cXG4gICAgaHR0cDovL3d3dy5hcGFjaGUub3JnL2xpY2Vuc2VzL0xJQ0VOU0UtMi4wXFxuXFxuICAgIFVubGVzcyByZXF1aXJlZCBieSBhcHBsaWNhYmxlIGxhdyBvciBhZ3JlZWQgdG8gaW4gd3JpdGluZywgc29mdHdhcmVcXG4gICAgZGlzdHJpYnV0ZWQgdW5kZXIgdGhlIExpY2Vuc2UgaXMgZGlzdHJpYnV0ZWQgb24gYW4gXFxcIkFTIElTXFxcIiBCQVNJUyxcXG4gICAgV0lUSE9VVCBXQVJSQU5USUVTIE9SIENPTkRJVElPTlMgT0YgQU5ZIEtJTkQsIGVpdGhlciBleHByZXNzIG9yIGltcGxpZWQuXFxuICAgIFNlZSB0aGUgTGljZW5zZSBmb3IgdGhlIHNwZWNpZmljIGxhbmd1YWdlIGdvdmVybmluZyBwZXJtaXNzaW9ucyBhbmRcXG4gICAgbGltaXRhdGlvbnMgdW5kZXIgdGhlIExpY2Vuc2UuXFxuLS0+XFxuPGRpdiBjbGFzcz1cXFwiZm9ybSBmb3JtLWlubGluZVxcXCIgcm9sZT1cXFwiZm9ybVxcXCI+XFxuICAgIDwlaWYoIV8uaXNVbmRlZmluZWQoam9iLmlkKSl7JT5cXG4gICAgICAgIDxkaXYgY2xhc3M9XFxcImZvcm0tZ3JvdXBcXFwiIHN0eWxlPVxcXCJ3aWR0aDo3OSU7ZGlzcGxheTppbmxpbmUtYmxvY2s7XFxcIj5cXG4gICAgICAgICAgICA8bGFiZWwgY2xhc3M9XFxcInNyLW9ubHlcXFwiIGZvcj1cXFwiZGVzY3JpcHRpb25cXFwiIHN0eWxlPVxcXCJtYXJnaW4tYm90dG9tOjBweDtcXFwiPkRlc2NyaXB0aW9uPC9sYWJlbD5cXG4gICAgICAgICAgICA8aW5wdXQgdmFsdWU9XFxcIjwlLWpvYi5kZXNjcmlwdGlvbiU+XFxcIiB0eXBlPVxcXCJ0ZXh0XFxcIiBjbGFzcz1cXFwiZm9ybS1jb250cm9sXFxcIiBpZD1cXFwiZGVzY3JpcHRpb25cXFwiIG5hbWU9J2Rlc2NyaXB0aW9uJyBwbGFjZWhvbGRlcj1cXFwiRW50ZXIgZGVzY3JpcHRpb25cXFwiPlxcbiAgICAgICAgPC9kaXY+XFxuICAgICAgICA8ZGl2IGNsYXNzPVxcXCJmb3JtLWdyb3VwXFxcIiBzdHlsZT1cXFwid2lkdGg6MjAlO2Rpc3BsYXk6aW5saW5lLWJsb2NrO1xcXCI+XFxuICAgICAgICAgICAgPGxhYmVsIGNsYXNzPVxcXCJzci1vbmx5XFxcIiBmb3I9XFxcImNvbW1hbmRcXFwiIHN0eWxlPVxcXCJtYXJnaW4tYm90dG9tOjBweDtcXFwiPkNvbW1hbmQ8L2xhYmVsPlxcbiAgICAgICAgICAgIDxzZWxlY3QgaWQ9XFxcImNvbW1hbmRcXFwiIGNsYXNzPVxcXCJmb3JtLWNvbnRyb2xcXFwiPlxcbiAgICAgICAgICAgICAgICA8JV8uZWFjaChjb21tYW5kcyxmdW5jdGlvbihjb21tYW5kKXslPlxcbiAgICAgICAgICAgICAgICAgICAgPG9wdGlvbiB2YWx1ZT1cXFwiPCUtY29tbWFuZC5uYW1lJT5cXFwiPjwlLWNvbW1hbmQubmFtZSU+PC9vcHRpb24+XFxuICAgICAgICAgICAgICAgIDwlfSklPlxcbiAgICAgICAgICAgIDwvc2VsZWN0PlxcbiAgICAgICAgPC9kaXY+XFxuICAgIDwlfWVsc2V7JT5cXG4gICAgICAgIDxkaXYgY2xhc3M9XFxcImZvcm0tZ3JvdXBcXFwiIHN0eWxlPVxcXCJ3aWR0aDo2NCU7ZGlzcGxheTppbmxpbmUtYmxvY2s7XFxcIj5cXG4gICAgICAgICAgICA8bGFiZWwgY2xhc3M9XFxcInNyLW9ubHlcXFwiIGZvcj1cXFwiZGVzY3JpcHRpb25cXFwiIHN0eWxlPVxcXCJtYXJnaW4tYm90dG9tOjBweDtcXFwiPkRlc2NyaXB0aW9uPC9sYWJlbD5cXG4gICAgICAgICAgICA8aW5wdXQgdmFsdWU9XFxcIjwlLWpvYi5kZXNjcmlwdGlvbiU+XFxcIiB0eXBlPVxcXCJ0ZXh0XFxcIiBjbGFzcz1cXFwiZm9ybS1jb250cm9sXFxcIiBpZD1cXFwiZGVzY3JpcHRpb25cXFwiICBuYW1lPSdkZXNjcmlwdGlvbicgIHBsYWNlaG9sZGVyPVxcXCJFbnRlciBkZXNjcmlwdGlvblxcXCI+XFxuICAgICAgICA8L2Rpdj5cXG4gICAgICAgIDxkaXYgY2xhc3M9XFxcImZvcm0tZ3JvdXBcXFwiIHN0eWxlPVxcXCJ3aWR0aDoxNSU7ZGlzcGxheTppbmxpbmUtYmxvY2s7XFxcIj5cXG4gICAgICAgICAgICA8bGFiZWwgY2xhc3M9XFxcInNyLW9ubHlcXFwiIGZvcj1cXFwibm9kZXNcXFwiIHN0eWxlPVxcXCJtYXJnaW4tYm90dG9tOjBweDtcXFwiPk5vZGVzPC9sYWJlbD5cXG4gICAgICAgICAgICA8aW5wdXQgdmFsdWU9XFxcIjwlLWpvYi5ub2RlcyU+XFxcIiB0eXBlPVxcXCJ0ZXh0XFxcIiBjbGFzcz1cXFwiZm9ybS1jb250cm9sXFxcIiBpZD1cXFwibm9kZXNcXFwiIG5hbWU9XFxcIm5vZGVzXFxcIiBwbGFjZWhvbGRlcj1cXFwiRW50ZXIgbm9kZSBjb3VudC4uXFxcIj5cXG4gICAgICAgIDwvZGl2PlxcbiAgICAgICAgPGRpdiBjbGFzcz1cXFwiZm9ybS1ncm91cFxcXCIgc3R5bGU9XFxcIndpZHRoOjIwJTtkaXNwbGF5OmlubGluZS1ibG9jaztcXFwiPlxcbiAgICAgICAgICAgIDxsYWJlbCBjbGFzcz1cXFwic3Itb25seVxcXCIgZm9yPVxcXCJjb21tYW5kXFxcIiBzdHlsZT1cXFwibWFyZ2luLWJvdHRvbTowcHg7XFxcIj5Db21tYW5kPC9sYWJlbD5cXG4gICAgICAgICAgICA8c2VsZWN0IGlkPVxcXCJjb21tYW5kXFxcIiBjbGFzcz1cXFwiZm9ybS1jb250cm9sXFxcIj5cXG4gICAgICAgICAgICAgICAgPCVfLmVhY2goY29tbWFuZHMsZnVuY3Rpb24oY29tbWFuZCl7JT5cXG4gICAgICAgICAgICAgICAgPG9wdGlvbiB2YWx1ZT1cXFwiPCUtY29tbWFuZC5uYW1lJT5cXFwiPjwlLWNvbW1hbmQubmFtZSU+PC9vcHRpb24+XFxuICAgICAgICAgICAgICAgIDwlfSklPlxcbiAgICAgICAgICAgIDwvc2VsZWN0PlxcbiAgICAgICAgPC9kaXY+XFxuICAgIDwlfSU+XFxuPC9kaXY+XFxuXCIiXSwibWFwcGluZ3MiOiJBQUFBIiwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/text-loader/index.js!./src/templates/job.configuration.html\n");

/***/ }),

/***/ "./node_modules/text-loader/index.js!./src/templates/job.dependencies.html":
/*!************************************************************************!*\
  !*** ./node_modules/text-loader!./src/templates/job.dependencies.html ***!
  \************************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("module.exports = \"job dependencies for <%-job.id%>\"//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvdGV4dC1sb2FkZXIvaW5kZXguanMhLi9zcmMvdGVtcGxhdGVzL2pvYi5kZXBlbmRlbmNpZXMuaHRtbC5qcyIsInNvdXJjZXMiOlsid2VicGFjazovLy8uL3NyYy90ZW1wbGF0ZXMvam9iLmRlcGVuZGVuY2llcy5odG1sP2EzZmIiXSwic291cmNlc0NvbnRlbnQiOlsibW9kdWxlLmV4cG9ydHMgPSBcImpvYiBkZXBlbmRlbmNpZXMgZm9yIDwlLWpvYi5pZCU+XCIiXSwibWFwcGluZ3MiOiJBQUFBIiwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/text-loader/index.js!./src/templates/job.dependencies.html\n");

/***/ }),

/***/ "./node_modules/text-loader/index.js!./src/templates/job.detail.html":
/*!******************************************************************!*\
  !*** ./node_modules/text-loader!./src/templates/job.detail.html ***!
  \******************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("module.exports = \"<!--\\n    Licensed under the Apache License, Version 2.0 (the \\\"License\\\");\\n    you may not use this file except in compliance with the License.\\n    You may obtain a copy of the License at\\n\\n    http://www.apache.org/licenses/LICENSE-2.0\\n\\n    Unless required by applicable law or agreed to in writing, software\\n    distributed under the License is distributed on an \\\"AS IS\\\" BASIS,\\n    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\\n    See the License for the specific language governing permissions and\\n    limitations under the License.\\n-->\\n<div id=\\\"topStatusBar\\\" class=\\\"top-bar\\\">\\n    <ul class=\\\"breadcrumb pull-left\\\" style=\\\"display: inline; background-color: transparent;margin:0px;padding-top:0px;padding-bottom:0px;padding-left:4px;\\\">\\n        <li>\\n            <a href=\\\"#jobs\\\">\\n                All Jobs\\n            </a>\\n        </li>\\n        <li class=\\\"active\\\">\\n            <%-(_.isUndefined(job.id)?'new':job.id)%>\\n        </li>\\n    </ul>\\n    <%if(!_.isUndefined(job.id)){%>\\n        <div id=\\\"stateTextBox\\\" class=\\\"label <%-job.stateLabel%>\\\" style=\\\"margin-right:10px;\\\">\\n            <%-job.stateText%>\\n        </div>\\n        <span style=\\\"margin-right:10px;\\\">\\n            <strong>nodes</strong>\\n            <%-job.nodes%>\\n        </span>\\n        <span id=\\\"statusBox\\\" style=\\\"margin-right:10px;\\\">\\n            <%-job.status%>\\n        </span>\\n    <%}%>\\n    <div class=\\\"job-detail-actions pull-right\\\">\\n        <%if(!_.isUndefined(job.id)){%>\\n            <button id=\\\"queryJobButton\\\" class=\\\"btn btn-default btn-small btn-blue\\\" style=\\\"display:<%-(job.qc_canQuery?'inline':'none')%>;\\\">\\n                Query\\n            </button>\\n            <button id=\\\"kickJobButton\\\" class=\\\"btn btn-default btn-small btn-green\\\">\\n                Kick\\n            </button>\\n            <button id=\\\"stopJobButton\\\" class=\\\"btn btn-default btn-small btn-red\\\">\\n                Stop\\n            </button>\\n            <button id=\\\"killJobButton\\\" class=\\\"btn btn-default btn-small btn-red\\\">\\n                Kill\\n            </button>\\n            <button id=\\\"deleteJobButton\\\" class=\\\"btn btn-default btn-small btn-red\\\">\\n                Delete\\n            </button>\\n            <div class=\\\"btn-group\\\">\\n                <button type=\\\"button\\\" class=\\\"btn btn-default btn-small dropdown-toggle\\\" data-toggle=\\\"dropdown\\\">\\n                   More\\n                    <span class=\\\"caret\\\"></span>\\n                </button>\\n                <ul class=\\\"dropdown-menu\\\" role=\\\"menu\\\">\\n                    <li><a id=\\\"cloneJobButton\\\" href=\\\"#\\\">Clone</a></li>\\n                    <li><a id=\\\"browseDataButton\\\" href=\\\"#\\\">Browse Data</a></li>\\n                    <li><a id=\\\"rebalanceJobButton\\\" href=\\\"#\\\">Rebalance</a></li>\\n                    <li><a id=\\\"enableJobButton\\\" href=\\\"#\\\">Enable</a></li>\\n                    <li><a id=\\\"disableJobButton\\\" href=\\\"#\\\">Disable</a></li>\\n                    <li><a id=\\\"checkDirsJobButton\\\" href=\\\"#\\\">Check Dirs</a></li>\\n                    <li><a id=\\\"fixDirsJobButton\\\" href=\\\"#\\\">Fix Dirs</a></li>\\n                    <li><a id=\\\"revertJobButton\\\" href=\\\"#\\\">Revert</a></li>\\n                </ul>\\n            </div>\\n        <%}%>\\n        <button id=\\\"commitJobButton\\\" class=\\\"btn btn-default btn-small\\\" style=\\\"margin-right:8px;\\\">\\n            Save\\n        </button>\\n    </div>\\n</div>\\n<ul class=\\\"nav nav-tabs nav-justified\\\" style=\\\"margin-left: 0px; margin-bottom: 0px;\\\">\\n    <li id=\\\"confTab\\\">\\n        <a href=\\\"#jobs/<%-(_.isUndefined(job.id)?(isClone?cloneId+'/conf/clone':'create/conf'):job.id+'/conf')%>\\\">\\n            Configuration\\n        </a>\\n    </li>\\n    <li class=\\\"<%-(_.isUndefined(job.id)?'disabled':'')%>\\\" id=\\\"tasksTab\\\">\\n        <a href=\\\"#jobs/<%-(_.isUndefined(job.id)?'create/tasks':job.id+'/tasks')%>\\\">\\n            Tasks\\n        </a>\\n    </li>\\n    <li id=\\\"settingsTab\\\">\\n        <a href=\\\"#jobs/<%-(_.isUndefined(job.id)?(isClone?cloneId+'/settings/clone':'create/settings'):job.id+'/settings')%>\\\">\\n            Settings\\n        </a>\\n    </li>\\n    <li id=\\\"alertsTab\\\" class=\\\"<%-(_.isUndefined(job.id)?'disabled':'')%>\\\">\\n        <a href=\\\"#jobs/<%-(_.isUndefined(job.id)?(isClone?cloneId+'/alerts/clone':'create/alerts'):job.id+'/alerts')%>\\\">\\n            Alerts\\n        </a>\\n    </li>\\n    <li class=\\\"<%-(_.isUndefined(job.id)?'disabled':'')%>\\\" id=\\\"depTab\\\">\\n        <a href=\\\"#jobs/<%-(_.isUndefined(job.id)?'create':job.id)%>/deps\\\">\\n            Dependencies\\n        </a>\\n    </li>\\n    <li  id=\\\"expTab\\\">\\n        <a href=\\\"#jobs/<%-(_.isUndefined(job.id)?'create':job.id)%>/expanded\\\">\\n            Expanded Configuration\\n        </a>\\n    </li>\\n    <li class=\\\"<%-(_.isUndefined(job.id)?'disabled':'')%>\\\" id=\\\"historyTab\\\">\\n        <a href=\\\"#jobs/<%-(_.isUndefined(job.id)?'create':job.id)%>/history\\\">\\n            History\\n        </a>\\n    </li>\\n</ul>\\n<div id=\\\"detailContainer\\\" class=\\\"main-container\\\">\\n</div>\\n\"//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvdGV4dC1sb2FkZXIvaW5kZXguanMhLi9zcmMvdGVtcGxhdGVzL2pvYi5kZXRhaWwuaHRtbC5qcyIsInNvdXJjZXMiOlsid2VicGFjazovLy8uL3NyYy90ZW1wbGF0ZXMvam9iLmRldGFpbC5odG1sPzc5ODgiXSwic291cmNlc0NvbnRlbnQiOlsibW9kdWxlLmV4cG9ydHMgPSBcIjwhLS1cXG4gICAgTGljZW5zZWQgdW5kZXIgdGhlIEFwYWNoZSBMaWNlbnNlLCBWZXJzaW9uIDIuMCAodGhlIFxcXCJMaWNlbnNlXFxcIik7XFxuICAgIHlvdSBtYXkgbm90IHVzZSB0aGlzIGZpbGUgZXhjZXB0IGluIGNvbXBsaWFuY2Ugd2l0aCB0aGUgTGljZW5zZS5cXG4gICAgWW91IG1heSBvYnRhaW4gYSBjb3B5IG9mIHRoZSBMaWNlbnNlIGF0XFxuXFxuICAgIGh0dHA6Ly93d3cuYXBhY2hlLm9yZy9saWNlbnNlcy9MSUNFTlNFLTIuMFxcblxcbiAgICBVbmxlc3MgcmVxdWlyZWQgYnkgYXBwbGljYWJsZSBsYXcgb3IgYWdyZWVkIHRvIGluIHdyaXRpbmcsIHNvZnR3YXJlXFxuICAgIGRpc3RyaWJ1dGVkIHVuZGVyIHRoZSBMaWNlbnNlIGlzIGRpc3RyaWJ1dGVkIG9uIGFuIFxcXCJBUyBJU1xcXCIgQkFTSVMsXFxuICAgIFdJVEhPVVQgV0FSUkFOVElFUyBPUiBDT05ESVRJT05TIE9GIEFOWSBLSU5ELCBlaXRoZXIgZXhwcmVzcyBvciBpbXBsaWVkLlxcbiAgICBTZWUgdGhlIExpY2Vuc2UgZm9yIHRoZSBzcGVjaWZpYyBsYW5ndWFnZSBnb3Zlcm5pbmcgcGVybWlzc2lvbnMgYW5kXFxuICAgIGxpbWl0YXRpb25zIHVuZGVyIHRoZSBMaWNlbnNlLlxcbi0tPlxcbjxkaXYgaWQ9XFxcInRvcFN0YXR1c0JhclxcXCIgY2xhc3M9XFxcInRvcC1iYXJcXFwiPlxcbiAgICA8dWwgY2xhc3M9XFxcImJyZWFkY3J1bWIgcHVsbC1sZWZ0XFxcIiBzdHlsZT1cXFwiZGlzcGxheTogaW5saW5lOyBiYWNrZ3JvdW5kLWNvbG9yOiB0cmFuc3BhcmVudDttYXJnaW46MHB4O3BhZGRpbmctdG9wOjBweDtwYWRkaW5nLWJvdHRvbTowcHg7cGFkZGluZy1sZWZ0OjRweDtcXFwiPlxcbiAgICAgICAgPGxpPlxcbiAgICAgICAgICAgIDxhIGhyZWY9XFxcIiNqb2JzXFxcIj5cXG4gICAgICAgICAgICAgICAgQWxsIEpvYnNcXG4gICAgICAgICAgICA8L2E+XFxuICAgICAgICA8L2xpPlxcbiAgICAgICAgPGxpIGNsYXNzPVxcXCJhY3RpdmVcXFwiPlxcbiAgICAgICAgICAgIDwlLShfLmlzVW5kZWZpbmVkKGpvYi5pZCk/J25ldyc6am9iLmlkKSU+XFxuICAgICAgICA8L2xpPlxcbiAgICA8L3VsPlxcbiAgICA8JWlmKCFfLmlzVW5kZWZpbmVkKGpvYi5pZCkpeyU+XFxuICAgICAgICA8ZGl2IGlkPVxcXCJzdGF0ZVRleHRCb3hcXFwiIGNsYXNzPVxcXCJsYWJlbCA8JS1qb2Iuc3RhdGVMYWJlbCU+XFxcIiBzdHlsZT1cXFwibWFyZ2luLXJpZ2h0OjEwcHg7XFxcIj5cXG4gICAgICAgICAgICA8JS1qb2Iuc3RhdGVUZXh0JT5cXG4gICAgICAgIDwvZGl2PlxcbiAgICAgICAgPHNwYW4gc3R5bGU9XFxcIm1hcmdpbi1yaWdodDoxMHB4O1xcXCI+XFxuICAgICAgICAgICAgPHN0cm9uZz5ub2Rlczwvc3Ryb25nPlxcbiAgICAgICAgICAgIDwlLWpvYi5ub2RlcyU+XFxuICAgICAgICA8L3NwYW4+XFxuICAgICAgICA8c3BhbiBpZD1cXFwic3RhdHVzQm94XFxcIiBzdHlsZT1cXFwibWFyZ2luLXJpZ2h0OjEwcHg7XFxcIj5cXG4gICAgICAgICAgICA8JS1qb2Iuc3RhdHVzJT5cXG4gICAgICAgIDwvc3Bhbj5cXG4gICAgPCV9JT5cXG4gICAgPGRpdiBjbGFzcz1cXFwiam9iLWRldGFpbC1hY3Rpb25zIHB1bGwtcmlnaHRcXFwiPlxcbiAgICAgICAgPCVpZighXy5pc1VuZGVmaW5lZChqb2IuaWQpKXslPlxcbiAgICAgICAgICAgIDxidXR0b24gaWQ9XFxcInF1ZXJ5Sm9iQnV0dG9uXFxcIiBjbGFzcz1cXFwiYnRuIGJ0bi1kZWZhdWx0IGJ0bi1zbWFsbCBidG4tYmx1ZVxcXCIgc3R5bGU9XFxcImRpc3BsYXk6PCUtKGpvYi5xY19jYW5RdWVyeT8naW5saW5lJzonbm9uZScpJT47XFxcIj5cXG4gICAgICAgICAgICAgICAgUXVlcnlcXG4gICAgICAgICAgICA8L2J1dHRvbj5cXG4gICAgICAgICAgICA8YnV0dG9uIGlkPVxcXCJraWNrSm9iQnV0dG9uXFxcIiBjbGFzcz1cXFwiYnRuIGJ0bi1kZWZhdWx0IGJ0bi1zbWFsbCBidG4tZ3JlZW5cXFwiPlxcbiAgICAgICAgICAgICAgICBLaWNrXFxuICAgICAgICAgICAgPC9idXR0b24+XFxuICAgICAgICAgICAgPGJ1dHRvbiBpZD1cXFwic3RvcEpvYkJ1dHRvblxcXCIgY2xhc3M9XFxcImJ0biBidG4tZGVmYXVsdCBidG4tc21hbGwgYnRuLXJlZFxcXCI+XFxuICAgICAgICAgICAgICAgIFN0b3BcXG4gICAgICAgICAgICA8L2J1dHRvbj5cXG4gICAgICAgICAgICA8YnV0dG9uIGlkPVxcXCJraWxsSm9iQnV0dG9uXFxcIiBjbGFzcz1cXFwiYnRuIGJ0bi1kZWZhdWx0IGJ0bi1zbWFsbCBidG4tcmVkXFxcIj5cXG4gICAgICAgICAgICAgICAgS2lsbFxcbiAgICAgICAgICAgIDwvYnV0dG9uPlxcbiAgICAgICAgICAgIDxidXR0b24gaWQ9XFxcImRlbGV0ZUpvYkJ1dHRvblxcXCIgY2xhc3M9XFxcImJ0biBidG4tZGVmYXVsdCBidG4tc21hbGwgYnRuLXJlZFxcXCI+XFxuICAgICAgICAgICAgICAgIERlbGV0ZVxcbiAgICAgICAgICAgIDwvYnV0dG9uPlxcbiAgICAgICAgICAgIDxkaXYgY2xhc3M9XFxcImJ0bi1ncm91cFxcXCI+XFxuICAgICAgICAgICAgICAgIDxidXR0b24gdHlwZT1cXFwiYnV0dG9uXFxcIiBjbGFzcz1cXFwiYnRuIGJ0bi1kZWZhdWx0IGJ0bi1zbWFsbCBkcm9wZG93bi10b2dnbGVcXFwiIGRhdGEtdG9nZ2xlPVxcXCJkcm9wZG93blxcXCI+XFxuICAgICAgICAgICAgICAgICAgIE1vcmVcXG4gICAgICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzPVxcXCJjYXJldFxcXCI+PC9zcGFuPlxcbiAgICAgICAgICAgICAgICA8L2J1dHRvbj5cXG4gICAgICAgICAgICAgICAgPHVsIGNsYXNzPVxcXCJkcm9wZG93bi1tZW51XFxcIiByb2xlPVxcXCJtZW51XFxcIj5cXG4gICAgICAgICAgICAgICAgICAgIDxsaT48YSBpZD1cXFwiY2xvbmVKb2JCdXR0b25cXFwiIGhyZWY9XFxcIiNcXFwiPkNsb25lPC9hPjwvbGk+XFxuICAgICAgICAgICAgICAgICAgICA8bGk+PGEgaWQ9XFxcImJyb3dzZURhdGFCdXR0b25cXFwiIGhyZWY9XFxcIiNcXFwiPkJyb3dzZSBEYXRhPC9hPjwvbGk+XFxuICAgICAgICAgICAgICAgICAgICA8bGk+PGEgaWQ9XFxcInJlYmFsYW5jZUpvYkJ1dHRvblxcXCIgaHJlZj1cXFwiI1xcXCI+UmViYWxhbmNlPC9hPjwvbGk+XFxuICAgICAgICAgICAgICAgICAgICA8bGk+PGEgaWQ9XFxcImVuYWJsZUpvYkJ1dHRvblxcXCIgaHJlZj1cXFwiI1xcXCI+RW5hYmxlPC9hPjwvbGk+XFxuICAgICAgICAgICAgICAgICAgICA8bGk+PGEgaWQ9XFxcImRpc2FibGVKb2JCdXR0b25cXFwiIGhyZWY9XFxcIiNcXFwiPkRpc2FibGU8L2E+PC9saT5cXG4gICAgICAgICAgICAgICAgICAgIDxsaT48YSBpZD1cXFwiY2hlY2tEaXJzSm9iQnV0dG9uXFxcIiBocmVmPVxcXCIjXFxcIj5DaGVjayBEaXJzPC9hPjwvbGk+XFxuICAgICAgICAgICAgICAgICAgICA8bGk+PGEgaWQ9XFxcImZpeERpcnNKb2JCdXR0b25cXFwiIGhyZWY9XFxcIiNcXFwiPkZpeCBEaXJzPC9hPjwvbGk+XFxuICAgICAgICAgICAgICAgICAgICA8bGk+PGEgaWQ9XFxcInJldmVydEpvYkJ1dHRvblxcXCIgaHJlZj1cXFwiI1xcXCI+UmV2ZXJ0PC9hPjwvbGk+XFxuICAgICAgICAgICAgICAgIDwvdWw+XFxuICAgICAgICAgICAgPC9kaXY+XFxuICAgICAgICA8JX0lPlxcbiAgICAgICAgPGJ1dHRvbiBpZD1cXFwiY29tbWl0Sm9iQnV0dG9uXFxcIiBjbGFzcz1cXFwiYnRuIGJ0bi1kZWZhdWx0IGJ0bi1zbWFsbFxcXCIgc3R5bGU9XFxcIm1hcmdpbi1yaWdodDo4cHg7XFxcIj5cXG4gICAgICAgICAgICBTYXZlXFxuICAgICAgICA8L2J1dHRvbj5cXG4gICAgPC9kaXY+XFxuPC9kaXY+XFxuPHVsIGNsYXNzPVxcXCJuYXYgbmF2LXRhYnMgbmF2LWp1c3RpZmllZFxcXCIgc3R5bGU9XFxcIm1hcmdpbi1sZWZ0OiAwcHg7IG1hcmdpbi1ib3R0b206IDBweDtcXFwiPlxcbiAgICA8bGkgaWQ9XFxcImNvbmZUYWJcXFwiPlxcbiAgICAgICAgPGEgaHJlZj1cXFwiI2pvYnMvPCUtKF8uaXNVbmRlZmluZWQoam9iLmlkKT8oaXNDbG9uZT9jbG9uZUlkKycvY29uZi9jbG9uZSc6J2NyZWF0ZS9jb25mJyk6am9iLmlkKycvY29uZicpJT5cXFwiPlxcbiAgICAgICAgICAgIENvbmZpZ3VyYXRpb25cXG4gICAgICAgIDwvYT5cXG4gICAgPC9saT5cXG4gICAgPGxpIGNsYXNzPVxcXCI8JS0oXy5pc1VuZGVmaW5lZChqb2IuaWQpPydkaXNhYmxlZCc6JycpJT5cXFwiIGlkPVxcXCJ0YXNrc1RhYlxcXCI+XFxuICAgICAgICA8YSBocmVmPVxcXCIjam9icy88JS0oXy5pc1VuZGVmaW5lZChqb2IuaWQpPydjcmVhdGUvdGFza3MnOmpvYi5pZCsnL3Rhc2tzJyklPlxcXCI+XFxuICAgICAgICAgICAgVGFza3NcXG4gICAgICAgIDwvYT5cXG4gICAgPC9saT5cXG4gICAgPGxpIGlkPVxcXCJzZXR0aW5nc1RhYlxcXCI+XFxuICAgICAgICA8YSBocmVmPVxcXCIjam9icy88JS0oXy5pc1VuZGVmaW5lZChqb2IuaWQpPyhpc0Nsb25lP2Nsb25lSWQrJy9zZXR0aW5ncy9jbG9uZSc6J2NyZWF0ZS9zZXR0aW5ncycpOmpvYi5pZCsnL3NldHRpbmdzJyklPlxcXCI+XFxuICAgICAgICAgICAgU2V0dGluZ3NcXG4gICAgICAgIDwvYT5cXG4gICAgPC9saT5cXG4gICAgPGxpIGlkPVxcXCJhbGVydHNUYWJcXFwiIGNsYXNzPVxcXCI8JS0oXy5pc1VuZGVmaW5lZChqb2IuaWQpPydkaXNhYmxlZCc6JycpJT5cXFwiPlxcbiAgICAgICAgPGEgaHJlZj1cXFwiI2pvYnMvPCUtKF8uaXNVbmRlZmluZWQoam9iLmlkKT8oaXNDbG9uZT9jbG9uZUlkKycvYWxlcnRzL2Nsb25lJzonY3JlYXRlL2FsZXJ0cycpOmpvYi5pZCsnL2FsZXJ0cycpJT5cXFwiPlxcbiAgICAgICAgICAgIEFsZXJ0c1xcbiAgICAgICAgPC9hPlxcbiAgICA8L2xpPlxcbiAgICA8bGkgY2xhc3M9XFxcIjwlLShfLmlzVW5kZWZpbmVkKGpvYi5pZCk/J2Rpc2FibGVkJzonJyklPlxcXCIgaWQ9XFxcImRlcFRhYlxcXCI+XFxuICAgICAgICA8YSBocmVmPVxcXCIjam9icy88JS0oXy5pc1VuZGVmaW5lZChqb2IuaWQpPydjcmVhdGUnOmpvYi5pZCklPi9kZXBzXFxcIj5cXG4gICAgICAgICAgICBEZXBlbmRlbmNpZXNcXG4gICAgICAgIDwvYT5cXG4gICAgPC9saT5cXG4gICAgPGxpICBpZD1cXFwiZXhwVGFiXFxcIj5cXG4gICAgICAgIDxhIGhyZWY9XFxcIiNqb2JzLzwlLShfLmlzVW5kZWZpbmVkKGpvYi5pZCk/J2NyZWF0ZSc6am9iLmlkKSU+L2V4cGFuZGVkXFxcIj5cXG4gICAgICAgICAgICBFeHBhbmRlZCBDb25maWd1cmF0aW9uXFxuICAgICAgICA8L2E+XFxuICAgIDwvbGk+XFxuICAgIDxsaSBjbGFzcz1cXFwiPCUtKF8uaXNVbmRlZmluZWQoam9iLmlkKT8nZGlzYWJsZWQnOicnKSU+XFxcIiBpZD1cXFwiaGlzdG9yeVRhYlxcXCI+XFxuICAgICAgICA8YSBocmVmPVxcXCIjam9icy88JS0oXy5pc1VuZGVmaW5lZChqb2IuaWQpPydjcmVhdGUnOmpvYi5pZCklPi9oaXN0b3J5XFxcIj5cXG4gICAgICAgICAgICBIaXN0b3J5XFxuICAgICAgICA8L2E+XFxuICAgIDwvbGk+XFxuPC91bD5cXG48ZGl2IGlkPVxcXCJkZXRhaWxDb250YWluZXJcXFwiIGNsYXNzPVxcXCJtYWluLWNvbnRhaW5lclxcXCI+XFxuPC9kaXY+XFxuXCIiXSwibWFwcGluZ3MiOiJBQUFBIiwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/text-loader/index.js!./src/templates/job.detail.html\n");

/***/ }),

/***/ "./node_modules/text-loader/index.js!./src/templates/job.expandedconf.html":
/*!************************************************************************!*\
  !*** ./node_modules/text-loader!./src/templates/job.expandedconf.html ***!
  \************************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("module.exports = \"\"//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvdGV4dC1sb2FkZXIvaW5kZXguanMhLi9zcmMvdGVtcGxhdGVzL2pvYi5leHBhbmRlZGNvbmYuaHRtbC5qcyIsInNvdXJjZXMiOlsid2VicGFjazovLy8uL3NyYy90ZW1wbGF0ZXMvam9iLmV4cGFuZGVkY29uZi5odG1sPzc2ODgiXSwic291cmNlc0NvbnRlbnQiOlsibW9kdWxlLmV4cG9ydHMgPSBcIlwiIl0sIm1hcHBpbmdzIjoiQUFBQSIsInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/text-loader/index.js!./src/templates/job.expandedconf.html\n");

/***/ }),

/***/ "./node_modules/text-loader/index.js!./src/templates/job.filter.html":
/*!******************************************************************!*\
  !*** ./node_modules/text-loader!./src/templates/job.filter.html ***!
  \******************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("module.exports = \"<!--\\n    Licensed under the Apache License, Version 2.0 (the \\\"License\\\");\\n    you may not use this file except in compliance with the License.\\n    You may obtain a copy of the License at\\n\\n    http://www.apache.org/licenses/LICENSE-2.0\\n\\n    Unless required by applicable law or agreed to in writing, software\\n    distributed under the License is distributed on an \\\"AS IS\\\" BASIS,\\n    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\\n    See the License for the specific language governing permissions and\\n    limitations under the License.\\n-->\\n<ul class=\\\"nav nav-pills filter\\\">\\n    <li>\\n        <a data-index='5' data-value=\\\"IDLE\\\" href=\\\"#\\\">Idle</a>\\n    </li>\\n    <li>\\n        <a data-index='5' data-value=\\\"RUNNING\\\" href=\\\"#\\\">Running</a>\\n    </li>\\n    <li>\\n        <a data-index='5' data-value=\\\"ERROR\\\" href=\\\"#\\\">Error</a>\\n    </li>\\n    <li>\\n        <a id=\\\"myJobs\\\" data-index='4' data-value=\\\"<%-username%>\\\" href=\\\"#\\\">My Jobs</a>\\n    </li>\\n    <li>\\n        <a id=\\\"statusFilter\\\" data-index='7' data-value=\\\"enabled\\\" href=\\\"#\\\">Enabled</a>\\n    </li>\\n</ul>\\n\"//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvdGV4dC1sb2FkZXIvaW5kZXguanMhLi9zcmMvdGVtcGxhdGVzL2pvYi5maWx0ZXIuaHRtbC5qcyIsInNvdXJjZXMiOlsid2VicGFjazovLy8uL3NyYy90ZW1wbGF0ZXMvam9iLmZpbHRlci5odG1sP2FlNmQiXSwic291cmNlc0NvbnRlbnQiOlsibW9kdWxlLmV4cG9ydHMgPSBcIjwhLS1cXG4gICAgTGljZW5zZWQgdW5kZXIgdGhlIEFwYWNoZSBMaWNlbnNlLCBWZXJzaW9uIDIuMCAodGhlIFxcXCJMaWNlbnNlXFxcIik7XFxuICAgIHlvdSBtYXkgbm90IHVzZSB0aGlzIGZpbGUgZXhjZXB0IGluIGNvbXBsaWFuY2Ugd2l0aCB0aGUgTGljZW5zZS5cXG4gICAgWW91IG1heSBvYnRhaW4gYSBjb3B5IG9mIHRoZSBMaWNlbnNlIGF0XFxuXFxuICAgIGh0dHA6Ly93d3cuYXBhY2hlLm9yZy9saWNlbnNlcy9MSUNFTlNFLTIuMFxcblxcbiAgICBVbmxlc3MgcmVxdWlyZWQgYnkgYXBwbGljYWJsZSBsYXcgb3IgYWdyZWVkIHRvIGluIHdyaXRpbmcsIHNvZnR3YXJlXFxuICAgIGRpc3RyaWJ1dGVkIHVuZGVyIHRoZSBMaWNlbnNlIGlzIGRpc3RyaWJ1dGVkIG9uIGFuIFxcXCJBUyBJU1xcXCIgQkFTSVMsXFxuICAgIFdJVEhPVVQgV0FSUkFOVElFUyBPUiBDT05ESVRJT05TIE9GIEFOWSBLSU5ELCBlaXRoZXIgZXhwcmVzcyBvciBpbXBsaWVkLlxcbiAgICBTZWUgdGhlIExpY2Vuc2UgZm9yIHRoZSBzcGVjaWZpYyBsYW5ndWFnZSBnb3Zlcm5pbmcgcGVybWlzc2lvbnMgYW5kXFxuICAgIGxpbWl0YXRpb25zIHVuZGVyIHRoZSBMaWNlbnNlLlxcbi0tPlxcbjx1bCBjbGFzcz1cXFwibmF2IG5hdi1waWxscyBmaWx0ZXJcXFwiPlxcbiAgICA8bGk+XFxuICAgICAgICA8YSBkYXRhLWluZGV4PSc1JyBkYXRhLXZhbHVlPVxcXCJJRExFXFxcIiBocmVmPVxcXCIjXFxcIj5JZGxlPC9hPlxcbiAgICA8L2xpPlxcbiAgICA8bGk+XFxuICAgICAgICA8YSBkYXRhLWluZGV4PSc1JyBkYXRhLXZhbHVlPVxcXCJSVU5OSU5HXFxcIiBocmVmPVxcXCIjXFxcIj5SdW5uaW5nPC9hPlxcbiAgICA8L2xpPlxcbiAgICA8bGk+XFxuICAgICAgICA8YSBkYXRhLWluZGV4PSc1JyBkYXRhLXZhbHVlPVxcXCJFUlJPUlxcXCIgaHJlZj1cXFwiI1xcXCI+RXJyb3I8L2E+XFxuICAgIDwvbGk+XFxuICAgIDxsaT5cXG4gICAgICAgIDxhIGlkPVxcXCJteUpvYnNcXFwiIGRhdGEtaW5kZXg9JzQnIGRhdGEtdmFsdWU9XFxcIjwlLXVzZXJuYW1lJT5cXFwiIGhyZWY9XFxcIiNcXFwiPk15IEpvYnM8L2E+XFxuICAgIDwvbGk+XFxuICAgIDxsaT5cXG4gICAgICAgIDxhIGlkPVxcXCJzdGF0dXNGaWx0ZXJcXFwiIGRhdGEtaW5kZXg9JzcnIGRhdGEtdmFsdWU9XFxcImVuYWJsZWRcXFwiIGhyZWY9XFxcIiNcXFwiPkVuYWJsZWQ8L2E+XFxuICAgIDwvbGk+XFxuPC91bD5cXG5cIiJdLCJtYXBwaW5ncyI6IkFBQUEiLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/text-loader/index.js!./src/templates/job.filter.html\n");

/***/ }),

/***/ "./node_modules/text-loader/index.js!./src/templates/job.history.html":
/*!*******************************************************************!*\
  !*** ./node_modules/text-loader!./src/templates/job.history.html ***!
  \*******************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("module.exports = \"<!--\\n    Licensed under the Apache License, Version 2.0 (the \\\"License\\\");\\n    you may not use this file except in compliance with the License.\\n    You may obtain a copy of the License at\\n\\n    http://www.apache.org/licenses/LICENSE-2.0\\n\\n    Unless required by applicable law or agreed to in writing, software\\n    distributed under the License is distributed on an \\\"AS IS\\\" BASIS,\\n    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\\n    See the License for the specific language governing permissions and\\n    limitations under the License.\\n-->\\n<div id=\\\"tableDiv\\\" style=\\\"width:100%;min-height:max-height:400px;\\\">\\n\\n</div>\\n<div id=\\\"editorDiv\\\">\\n\\n</div>\\n\"//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvdGV4dC1sb2FkZXIvaW5kZXguanMhLi9zcmMvdGVtcGxhdGVzL2pvYi5oaXN0b3J5Lmh0bWwuanMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9zcmMvdGVtcGxhdGVzL2pvYi5oaXN0b3J5Lmh0bWw/MTIxMyJdLCJzb3VyY2VzQ29udGVudCI6WyJtb2R1bGUuZXhwb3J0cyA9IFwiPCEtLVxcbiAgICBMaWNlbnNlZCB1bmRlciB0aGUgQXBhY2hlIExpY2Vuc2UsIFZlcnNpb24gMi4wICh0aGUgXFxcIkxpY2Vuc2VcXFwiKTtcXG4gICAgeW91IG1heSBub3QgdXNlIHRoaXMgZmlsZSBleGNlcHQgaW4gY29tcGxpYW5jZSB3aXRoIHRoZSBMaWNlbnNlLlxcbiAgICBZb3UgbWF5IG9idGFpbiBhIGNvcHkgb2YgdGhlIExpY2Vuc2UgYXRcXG5cXG4gICAgaHR0cDovL3d3dy5hcGFjaGUub3JnL2xpY2Vuc2VzL0xJQ0VOU0UtMi4wXFxuXFxuICAgIFVubGVzcyByZXF1aXJlZCBieSBhcHBsaWNhYmxlIGxhdyBvciBhZ3JlZWQgdG8gaW4gd3JpdGluZywgc29mdHdhcmVcXG4gICAgZGlzdHJpYnV0ZWQgdW5kZXIgdGhlIExpY2Vuc2UgaXMgZGlzdHJpYnV0ZWQgb24gYW4gXFxcIkFTIElTXFxcIiBCQVNJUyxcXG4gICAgV0lUSE9VVCBXQVJSQU5USUVTIE9SIENPTkRJVElPTlMgT0YgQU5ZIEtJTkQsIGVpdGhlciBleHByZXNzIG9yIGltcGxpZWQuXFxuICAgIFNlZSB0aGUgTGljZW5zZSBmb3IgdGhlIHNwZWNpZmljIGxhbmd1YWdlIGdvdmVybmluZyBwZXJtaXNzaW9ucyBhbmRcXG4gICAgbGltaXRhdGlvbnMgdW5kZXIgdGhlIExpY2Vuc2UuXFxuLS0+XFxuPGRpdiBpZD1cXFwidGFibGVEaXZcXFwiIHN0eWxlPVxcXCJ3aWR0aDoxMDAlO21pbi1oZWlnaHQ6bWF4LWhlaWdodDo0MDBweDtcXFwiPlxcblxcbjwvZGl2PlxcbjxkaXYgaWQ9XFxcImVkaXRvckRpdlxcXCI+XFxuXFxuPC9kaXY+XFxuXCIiXSwibWFwcGluZ3MiOiJBQUFBIiwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/text-loader/index.js!./src/templates/job.history.html\n");

/***/ }),

/***/ "./node_modules/text-loader/index.js!./src/templates/job.parameter.html":
/*!*********************************************************************!*\
  !*** ./node_modules/text-loader!./src/templates/job.parameter.html ***!
  \*********************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("module.exports = \"<!--\\n    Licensed under the Apache License, Version 2.0 (the \\\"License\\\");\\n    you may not use this file except in compliance with the License.\\n    You may obtain a copy of the License at\\n\\n    http://www.apache.org/licenses/LICENSE-2.0\\n\\n    Unless required by applicable law or agreed to in writing, software\\n    distributed under the License is distributed on an \\\"AS IS\\\" BASIS,\\n    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\\n    See the License for the specific language governing permissions and\\n    limitations under the License.\\n-->\\n<div class=\\\"\\\" style=\\\"min-height:0px;\\\">\\n    <a id=\\\"hideParamLink\\\" data-hide=\\\"<%-(hidden?'1':'0')%>\\\" class=\\\"pull-left\\\" style=\\\"cursor:pointer;\\\">\\n        <%-(hidden?\\\"Show\\\":\\\"Hide\\\")%> Parameters (<%-parameters.length%>)\\n    </a>\\n    <a id=\\\"validateLink\\\" class=\\\"pull-right\\\" style=\\\"margin-right:12px;cursor:pointer;\\\">\\n        Validate Source\\n    </a>\\n</div>\\n<br/>\\n<div id=\\\"paramBox\\\" class=\\\"span12 form\\\" style=\\\"min-height:0px;display:<%-(hidden?'none':'inline')%>;\\\">\\n    <%_.each(parameters,function(param,index){%>\\n        <div class=\\\"span3 form-group\\\" style=\\\"margin-left:0px;display:inline-block;margin-bottom:0px;\\\">\\n            <label style=\\\"margin-bottom:0px;\\\"><%-param.name%></label>\\n            <input type=\\\"text\\\" data-index=\\\"<%-index%>\\\" class=\\\"span10 form-control\\\" name=\\\"<%-param.name%>\\\" value=\\\"<%-param.value%>\\\" placeholder=\\\"<%-param.defaultValue%>\\\">\\n        </div>\\n    <%})%>\\n</div>\\n\"//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvdGV4dC1sb2FkZXIvaW5kZXguanMhLi9zcmMvdGVtcGxhdGVzL2pvYi5wYXJhbWV0ZXIuaHRtbC5qcyIsInNvdXJjZXMiOlsid2VicGFjazovLy8uL3NyYy90ZW1wbGF0ZXMvam9iLnBhcmFtZXRlci5odG1sP2JkZjIiXSwic291cmNlc0NvbnRlbnQiOlsibW9kdWxlLmV4cG9ydHMgPSBcIjwhLS1cXG4gICAgTGljZW5zZWQgdW5kZXIgdGhlIEFwYWNoZSBMaWNlbnNlLCBWZXJzaW9uIDIuMCAodGhlIFxcXCJMaWNlbnNlXFxcIik7XFxuICAgIHlvdSBtYXkgbm90IHVzZSB0aGlzIGZpbGUgZXhjZXB0IGluIGNvbXBsaWFuY2Ugd2l0aCB0aGUgTGljZW5zZS5cXG4gICAgWW91IG1heSBvYnRhaW4gYSBjb3B5IG9mIHRoZSBMaWNlbnNlIGF0XFxuXFxuICAgIGh0dHA6Ly93d3cuYXBhY2hlLm9yZy9saWNlbnNlcy9MSUNFTlNFLTIuMFxcblxcbiAgICBVbmxlc3MgcmVxdWlyZWQgYnkgYXBwbGljYWJsZSBsYXcgb3IgYWdyZWVkIHRvIGluIHdyaXRpbmcsIHNvZnR3YXJlXFxuICAgIGRpc3RyaWJ1dGVkIHVuZGVyIHRoZSBMaWNlbnNlIGlzIGRpc3RyaWJ1dGVkIG9uIGFuIFxcXCJBUyBJU1xcXCIgQkFTSVMsXFxuICAgIFdJVEhPVVQgV0FSUkFOVElFUyBPUiBDT05ESVRJT05TIE9GIEFOWSBLSU5ELCBlaXRoZXIgZXhwcmVzcyBvciBpbXBsaWVkLlxcbiAgICBTZWUgdGhlIExpY2Vuc2UgZm9yIHRoZSBzcGVjaWZpYyBsYW5ndWFnZSBnb3Zlcm5pbmcgcGVybWlzc2lvbnMgYW5kXFxuICAgIGxpbWl0YXRpb25zIHVuZGVyIHRoZSBMaWNlbnNlLlxcbi0tPlxcbjxkaXYgY2xhc3M9XFxcIlxcXCIgc3R5bGU9XFxcIm1pbi1oZWlnaHQ6MHB4O1xcXCI+XFxuICAgIDxhIGlkPVxcXCJoaWRlUGFyYW1MaW5rXFxcIiBkYXRhLWhpZGU9XFxcIjwlLShoaWRkZW4/JzEnOicwJyklPlxcXCIgY2xhc3M9XFxcInB1bGwtbGVmdFxcXCIgc3R5bGU9XFxcImN1cnNvcjpwb2ludGVyO1xcXCI+XFxuICAgICAgICA8JS0oaGlkZGVuP1xcXCJTaG93XFxcIjpcXFwiSGlkZVxcXCIpJT4gUGFyYW1ldGVycyAoPCUtcGFyYW1ldGVycy5sZW5ndGglPilcXG4gICAgPC9hPlxcbiAgICA8YSBpZD1cXFwidmFsaWRhdGVMaW5rXFxcIiBjbGFzcz1cXFwicHVsbC1yaWdodFxcXCIgc3R5bGU9XFxcIm1hcmdpbi1yaWdodDoxMnB4O2N1cnNvcjpwb2ludGVyO1xcXCI+XFxuICAgICAgICBWYWxpZGF0ZSBTb3VyY2VcXG4gICAgPC9hPlxcbjwvZGl2Plxcbjxici8+XFxuPGRpdiBpZD1cXFwicGFyYW1Cb3hcXFwiIGNsYXNzPVxcXCJzcGFuMTIgZm9ybVxcXCIgc3R5bGU9XFxcIm1pbi1oZWlnaHQ6MHB4O2Rpc3BsYXk6PCUtKGhpZGRlbj8nbm9uZSc6J2lubGluZScpJT47XFxcIj5cXG4gICAgPCVfLmVhY2gocGFyYW1ldGVycyxmdW5jdGlvbihwYXJhbSxpbmRleCl7JT5cXG4gICAgICAgIDxkaXYgY2xhc3M9XFxcInNwYW4zIGZvcm0tZ3JvdXBcXFwiIHN0eWxlPVxcXCJtYXJnaW4tbGVmdDowcHg7ZGlzcGxheTppbmxpbmUtYmxvY2s7bWFyZ2luLWJvdHRvbTowcHg7XFxcIj5cXG4gICAgICAgICAgICA8bGFiZWwgc3R5bGU9XFxcIm1hcmdpbi1ib3R0b206MHB4O1xcXCI+PCUtcGFyYW0ubmFtZSU+PC9sYWJlbD5cXG4gICAgICAgICAgICA8aW5wdXQgdHlwZT1cXFwidGV4dFxcXCIgZGF0YS1pbmRleD1cXFwiPCUtaW5kZXglPlxcXCIgY2xhc3M9XFxcInNwYW4xMCBmb3JtLWNvbnRyb2xcXFwiIG5hbWU9XFxcIjwlLXBhcmFtLm5hbWUlPlxcXCIgdmFsdWU9XFxcIjwlLXBhcmFtLnZhbHVlJT5cXFwiIHBsYWNlaG9sZGVyPVxcXCI8JS1wYXJhbS5kZWZhdWx0VmFsdWUlPlxcXCI+XFxuICAgICAgICA8L2Rpdj5cXG4gICAgPCV9KSU+XFxuPC9kaXY+XFxuXCIiXSwibWFwcGluZ3MiOiJBQUFBIiwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/text-loader/index.js!./src/templates/job.parameter.html\n");

/***/ }),

/***/ "./node_modules/text-loader/index.js!./src/templates/job.permissions.modal.html":
/*!*****************************************************************************!*\
  !*** ./node_modules/text-loader!./src/templates/job.permissions.modal.html ***!
  \*****************************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("module.exports = \"<!--\\n    Licensed under the Apache License, Version 2.0 (the \\\"License\\\");\\n    you may not use this file except in compliance with the License.\\n    You may obtain a copy of the License at\\n\\n    http://www.apache.org/licenses/LICENSE-2.0\\n\\n    Unless required by applicable law or agreed to in writing, software\\n    distributed under the License is distributed on an \\\"AS IS\\\" BASIS,\\n    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\\n    See the License for the specific language governing permissions and\\n    limitations under the License.\\n-->\\n<div class=\\\"modal-dialog\\\">\\n    <div class=\\\"modal-content\\\">\\n        <div class=\\\"modal-header\\\">\\n            <button type=\\\"button\\\" class=\\\"close\\\" data-dismiss=\\\"modal\\\" aria-hidden=\\\"true\\\">&times;</button>\\n            <h4 class=\\\"modal-title\\\">Change Permissions</h4>\\n        </div>\\n        <div class=\\\"modal-body\\\">\\n            <table class=\\\"table table-condensed\\\" style=\\\"margin-bottom: 0px; margin-top:10px;\\\">\\n                <tbody>\\n                    <tr>\\n                        <td style=\\\"padding-top:10px;\\\">\\n                            Creator (requires sudo):\\n                        </td>\\n                        <td style=\\\"\\\">\\n                            <input type=\\\"text\\\" name=\\\"creatorModal\\\" value=\\\"\\\"/>\\n                        </td>\\n                    </tr>\\n                    <tr>\\n                        <td style=\\\"padding-top:10px;\\\">\\n                            Owner:\\n                        </td>\\n                        <td style=\\\"\\\">\\n                            <input type=\\\"text\\\" name=\\\"chownModal\\\" value=\\\"\\\"/>\\n                        </td>\\n                    </tr>\\n                    <tr>\\n                        <td style=\\\"padding-top:10px;\\\">\\n                            Group:\\n                        </td>\\n                        <td style=\\\"\\\">\\n                            <input type=\\\"text\\\" name=\\\"chgrpModal\\\" value=\\\"\\\"/>\\n                        </td>\\n                    </tr>\\n                    <tr>\\n                        <td style=\\\"padding-top:10px;\\\">\\n                            Owner writable:\\n                        </td>\\n                        <td style=\\\"\\\">\\n                            <input type=\\\"radio\\\" name=\\\"ownerWritable\\\" value=\\\"true\\\" id=\\\"owtrue\\\">\\n                            <label for=\\\"owtrue\\\">true</label>\\n                            <input type=\\\"radio\\\" name=\\\"ownerWritable\\\" value=\\\"false\\\" id=\\\"owfalse\\\">\\n                            <label for=\\\"owfalse\\\">false</label>\\n                            <input type=\\\"radio\\\" name=\\\"ownerWritable\\\" value=\\\"no change\\\" id=\\\"ownc\\\" checked>\\n                            <label for=\\\"ownc\\\">no change</label>\\n                        </td>\\n                    </tr>\\n                    <tr>\\n                        <td style=\\\"padding-top:10px;\\\">\\n                            Group writable:\\n                        </td>\\n                        <td style=\\\"\\\">\\n                            <input type=\\\"radio\\\" name=\\\"groupWritable\\\" value=\\\"true\\\" id=\\\"gwtrue\\\">\\n                            <label for=\\\"gwtrue\\\">true</label>\\n                            <input type=\\\"radio\\\" name=\\\"groupWritable\\\" value=\\\"false\\\" id=\\\"gwfalse\\\">\\n                            <label for=\\\"gwfalse\\\">false</label>\\n                            <input type=\\\"radio\\\" name=\\\"groupWritable\\\" value=\\\"no change\\\" id=\\\"gwnc\\\" checked>\\n                            <label for=\\\"gwnc\\\">no change</label>\\n                        </td>\\n                    </tr>\\n                    <tr>\\n                        <td style=\\\"padding-top:10px;\\\">\\n                            World writable:\\n                        </td>\\n                        <td style=\\\"\\\">\\n                            <input type=\\\"radio\\\" name=\\\"worldWritable\\\" value=\\\"true\\\" id=\\\"wdtrue\\\">\\n                            <label for=\\\"wdtrue\\\">true</label>\\n                            <input type=\\\"radio\\\" name=\\\"worldWritable\\\" value=\\\"false\\\" id=\\\"wdfalse\\\">\\n                            <label for=\\\"wdfalse\\\">false</label>\\n                            <input type=\\\"radio\\\" name=\\\"worldWritable\\\" value=\\\"no change\\\" id=\\\"wdnc\\\" checked>\\n                            <label for=\\\"wdnc\\\">no change</label>\\n                        </td>\\n                    </tr>\\n                    <tr>\\n                        <td style=\\\"padding-top:10px;\\\">\\n                            Owner executable:\\n                        </td>\\n                        <td style=\\\"\\\">\\n                            <input type=\\\"radio\\\" name=\\\"ownerExecutable\\\" value=\\\"true\\\" id=\\\"oetrue\\\">\\n                            <label for=\\\"oetrue\\\">true</label>\\n                            <input type=\\\"radio\\\" name=\\\"ownerExecutable\\\" value=\\\"false\\\" id=\\\"oefalse\\\">\\n                            <label for=\\\"oefalse\\\">false</label>\\n                            <input type=\\\"radio\\\" name=\\\"ownerExecutable\\\" value=\\\"no change\\\" id=\\\"oenc\\\" checked>\\n                            <label for=\\\"oenc\\\">no change</label>\\n                        </td>\\n                    </tr>\\n                    <tr>\\n                        <td style=\\\"padding-top:10px;\\\">\\n                            Group executable:\\n                        </td>\\n                        <td style=\\\"\\\">\\n                            <input type=\\\"radio\\\" name=\\\"groupExecutable\\\" value=\\\"true\\\" id=\\\"getrue\\\">\\n                            <label for=\\\"getrue\\\">true</label>\\n                            <input type=\\\"radio\\\" name=\\\"groupExecutable\\\" value=\\\"false\\\" id=\\\"gefalse\\\">\\n                            <label for=\\\"gefalse\\\">false</label>\\n                            <input type=\\\"radio\\\" name=\\\"groupExecutable\\\" value=\\\"no change\\\" id=\\\"genc\\\" checked>\\n                            <label for=\\\"genc\\\">no change</label>\\n                        </td>\\n                    </tr>\\n                    <tr>\\n                        <td style=\\\"padding-top:10px;\\\">\\n                            World executable:\\n                        </td>\\n                        <td style=\\\"\\\">\\n                            <input type=\\\"radio\\\" name=\\\"worldExecutable\\\" value=\\\"true\\\" id=\\\"wetrue\\\">\\n                            <label for=\\\"wetrue\\\">true</label>\\n                            <input type=\\\"radio\\\" name=\\\"worldExecutable\\\" value=\\\"false\\\" id=\\\"wefalse\\\">\\n                            <label for=\\\"wefalse\\\">false</label>\\n                            <input type=\\\"radio\\\" name=\\\"worldExecutable\\\" value=\\\"no change\\\" id=\\\"wenc\\\" checked>\\n                            <label for=\\\"wenc\\\">no change</label>\\n                        </td>\\n                    </tr>\\n                </tbody>\\n            </table>\\n        </div>\\n        <div class=\\\"modal-footer\\\" style=\\\"border-top:none\\\">\\n            <button type=\\\"button\\\" class=\\\"btn btn-primary\\\" data-dismiss=\\\"modal\\\" id=\\\"jobPermissionsModalSubmit\\\">Submit</button>\\n            <button type=\\\"button\\\" class=\\\"btn btn-default\\\" data-dismiss=\\\"modal\\\">Close</button>\\n        </div>\\n    </div><!-- /.modal-content -->\\n</div><!-- /.modal-dialog -->\\n\"//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/text-loader/index.js!./src/templates/job.permissions.modal.html\n");

/***/ }),

/***/ "./node_modules/text-loader/index.js!./src/templates/job.revert.modal.html":
/*!************************************************************************!*\
  !*** ./node_modules/text-loader!./src/templates/job.revert.modal.html ***!
  \************************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("module.exports = \"<!--\\n    Licensed under the Apache License, Version 2.0 (the \\\"License\\\");\\n    you may not use this file except in compliance with the License.\\n    You may obtain a copy of the License at\\n\\n    http://www.apache.org/licenses/LICENSE-2.0\\n\\n    Unless required by applicable law or agreed to in writing, software\\n    distributed under the License is distributed on an \\\"AS IS\\\" BASIS,\\n    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\\n    See the License for the specific language governing permissions and\\n    limitations under the License.\\n-->\\n<div class=\\\"modal-dialog\\\">\\n    <div class=\\\"modal-content\\\">\\n        <div class=\\\"modal-header\\\">\\n            <button type=\\\"button\\\" class=\\\"close\\\" data-dismiss=\\\"modal\\\" aria-hidden=\\\"true\\\">&times;</button>\\n            <h4 class=\\\"modal-title\\\"><%-title%></h4>\\n        </div>\\n        <div class=\\\"modal-body\\\">\\n            <div>\\n                <span id=\\\"backupMessage\\\" style=\\\"padding:6px;float:left;\\\"></span>\\n            </div>\\n            <table class=\\\"table table-condensed\\\" style=\\\"margin-bottom: 0px; margin-top:10px;\\\">\\n                <tbody>\\n                    <!-- revert to gold buackup by revision -->\\n                    <tr id=\\\"goldRevertByRevision\\\">\\n                        <td style=\\\"width:25%;padding-top:10px;\\\">\\n                            Recent run:\\n                        </td>\\n                        <td style=\\\"width:50%;\\\">\\n                            <select id=\\\"runSelect\\\" class=\\\"form-control\\\">\\n                                <option value=\\\"0\\\">Last run</option>\\n                                <option value=\\\"1\\\">2 runs ago</option>\\n                                <option value=\\\"2\\\">3 runs ago</option>\\n                            </select>\\n                        </td>\\n                        <td style=\\\"width:25%;\\\">\\n                            <button id=\\\"runButton\\\" class=\\\"btn btn-default btn-medium\\\">now</button>\\n                        </td>\\n                    </tr>\\n                    <!-- revert to gold backup by timestamp -->\\n                    <tr id=\\\"goldRevertByTimestamp\\\" style=\\\"display:none;\\\">\\n                        <td style=\\\"width:25%;padding-top:10px;\\\">\\n                            Recent run:\\n                        </td>\\n                        <td style=\\\"width:50%;\\\">\\n                            <select id=\\\"goldSelect\\\" class=\\\"form-control\\\">\\n                            </select>\\n                        </td>\\n                        <td style=\\\"width:25%;\\\">\\n                            <button id=\\\"goldButton\\\" class=\\\"btn btn-default btn-medium\\\">now</button>\\n                        </td>\\n                    </tr>\\n                    <!-- hourly backups -->\\n                    <tr style=\\\"display:none;\\\">\\n                        <td style=\\\"width:25%;padding-top:10px;\\\">\\n                            Hourly backup:\\n                        </td>\\n                        <td style=\\\"width:50%;\\\">\\n                            <select id=\\\"hourlySelect\\\" class=\\\"form-control\\\">\\n                            </select>\\n                        </td>\\n                        <td style=\\\"width:25%;\\\">\\n                            <button id=\\\"hourlyButton\\\" class=\\\"btn btn-default btn-medium\\\">now</button>\\n                        </td>\\n                    </tr>\\n                    <!-- daily backups -->\\n                    <tr style=\\\"display:none;\\\">\\n                        <td style=\\\"width:25%;padding-top:10px;\\\">\\n                            Daily backup:\\n                        </td>\\n                        <td style=\\\"width:50%;\\\">\\n                            <select id=\\\"dailySelect\\\" class=\\\"form-control\\\">\\n                                <option value=\\\"2\\\"></option>\\n                            </select>\\n                        </td>\\n                        <td style=\\\"width:25%;\\\">\\n                            <button id=\\\"dailyButton\\\" class=\\\"btn btn-default btn-medium\\\">now</button>\\n                        </td>\\n                    </tr>\\n                    <!-- weekly backups -->\\n                    <tr style=\\\"display:none;\\\">\\n                        <td style=\\\"width:25%;padding-top:10px;\\\">\\n                            Weekly backup:\\n                        </td>\\n                        <td style=\\\"width:50%;\\\">\\n                            <select id=\\\"weeklySelect\\\" class=\\\"form-control\\\">\\n                            </select>\\n                        </td>\\n                        <td style=\\\"width:25%;\\\">\\n                            <button id=\\\"weeklyButton\\\" class=\\\"btn btn-default btn-medium\\\">now</button>\\n                        </td>\\n                    </tr>\\n                    <!-- monthly backups -->\\n                    <tr style=\\\"display:none;\\\">\\n                        <td style=\\\"width:25%;padding-top:10px;\\\">\\n                            Monthly backup:\\n                        </td>\\n                        <td style=\\\"width:50%;\\\">\\n                            <select id=\\\"monthlySelect\\\" class=\\\"form-control\\\">\\n                            </select>\\n                        </td>\\n                        <td style=\\\"width:25%;\\\">\\n                            <button id=\\\"monthlyButton\\\" class=\\\"btn btn-default btn-medium\\\">now</button>\\n                        </td>\\n                    </tr>\\n                </tbody>\\n            </table>\\n        </div>\\n        <div class=\\\"modal-footer\\\">\\n            <button type=\\\"button\\\" class=\\\"btn btn-default\\\" data-dismiss=\\\"modal\\\">Close</button>\\n            <!--<button type=\\\"button\\\" class=\\\"btn btn-primary\\\">Save changes</button>-->\\n        </div>\\n    </div><!-- /.modal-content -->\\n</div><!-- /.modal-dialog -->\\n\"//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/text-loader/index.js!./src/templates/job.revert.modal.html\n");

/***/ }),

/***/ "./node_modules/text-loader/index.js!./src/templates/job.selectable.html":
/*!**********************************************************************!*\
  !*** ./node_modules/text-loader!./src/templates/job.selectable.html ***!
  \**********************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("module.exports = \"<!--\\n    Licensed under the Apache License, Version 2.0 (the \\\"License\\\");\\n    you may not use this file except in compliance with the License.\\n    You may obtain a copy of the License at\\n\\n    http://www.apache.org/licenses/LICENSE-2.0\\n\\n    Unless required by applicable law or agreed to in writing, software\\n    distributed under the License is distributed on an \\\"AS IS\\\" BASIS,\\n    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\\n    See the License for the specific language governing permissions and\\n    limitations under the License.\\n-->\\n<a href=\\\"#jobs/create/conf\\\" class='btn btn-default btn-small btn-blue' style=\\\"margin:0px 4px;\\\">\\n    Create\\n</a>\\n<button class='btn btn-default checkbox-button' style=\\\"margin:0px 4px;\\\">\\n    <span class=\\\"checkbox\\\"></span>\\n    <span id=\\\"selectedCount\\\"></span>\\n</button>\\n<div class='btn-group'>\\n    <button id=\\\"kickButton\\\" class='btn btn-default btn-green btn-hide-zero'>\\n        Kick\\n    </button>\\n    <button id=\\\"stopButton\\\" class='btn btn-default btn-red btn-hide-zero'>\\n        Stop\\n    </button>\\n    <button id=\\\"killButton\\\" class='btn btn-default btn-red btn-hide-zero'>\\n        Kill\\n    </button>\\n    <button id=\\\"enableButton\\\" class='btn btn-default btn-hide-zero'>\\n        Enable\\n    </button>\\n    <button id=\\\"disableButton\\\" class='btn btn-default btn-hide-zero'>\\n        Disable\\n    </button>\\n    <button id=\\\"deleteButton\\\" class='btn btn-default btn-red btn-hide-zero'>\\n        Delete\\n    </button>\\n    <button id=\\\"createAlertButton\\\" class='btn btn-default btn-hide-zero'>\\n        Create alert\\n    </button>\\n    <button id=\\\"changePermissionsButton\\\" class='btn btn-default btn-hide-zero'>\\n        Permissions\\n    </button>\\n</div>\\n<button id=\\\"findDeletedJobButton\\\" class=\\\"btn btn-default btn-small btn-blue\\\" style=\\\"margin:0px 4px;\\\">\\n    Find Deleted\\n</button>\\n\"//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvdGV4dC1sb2FkZXIvaW5kZXguanMhLi9zcmMvdGVtcGxhdGVzL2pvYi5zZWxlY3RhYmxlLmh0bWwuanMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9zcmMvdGVtcGxhdGVzL2pvYi5zZWxlY3RhYmxlLmh0bWw/ZWFjYyJdLCJzb3VyY2VzQ29udGVudCI6WyJtb2R1bGUuZXhwb3J0cyA9IFwiPCEtLVxcbiAgICBMaWNlbnNlZCB1bmRlciB0aGUgQXBhY2hlIExpY2Vuc2UsIFZlcnNpb24gMi4wICh0aGUgXFxcIkxpY2Vuc2VcXFwiKTtcXG4gICAgeW91IG1heSBub3QgdXNlIHRoaXMgZmlsZSBleGNlcHQgaW4gY29tcGxpYW5jZSB3aXRoIHRoZSBMaWNlbnNlLlxcbiAgICBZb3UgbWF5IG9idGFpbiBhIGNvcHkgb2YgdGhlIExpY2Vuc2UgYXRcXG5cXG4gICAgaHR0cDovL3d3dy5hcGFjaGUub3JnL2xpY2Vuc2VzL0xJQ0VOU0UtMi4wXFxuXFxuICAgIFVubGVzcyByZXF1aXJlZCBieSBhcHBsaWNhYmxlIGxhdyBvciBhZ3JlZWQgdG8gaW4gd3JpdGluZywgc29mdHdhcmVcXG4gICAgZGlzdHJpYnV0ZWQgdW5kZXIgdGhlIExpY2Vuc2UgaXMgZGlzdHJpYnV0ZWQgb24gYW4gXFxcIkFTIElTXFxcIiBCQVNJUyxcXG4gICAgV0lUSE9VVCBXQVJSQU5USUVTIE9SIENPTkRJVElPTlMgT0YgQU5ZIEtJTkQsIGVpdGhlciBleHByZXNzIG9yIGltcGxpZWQuXFxuICAgIFNlZSB0aGUgTGljZW5zZSBmb3IgdGhlIHNwZWNpZmljIGxhbmd1YWdlIGdvdmVybmluZyBwZXJtaXNzaW9ucyBhbmRcXG4gICAgbGltaXRhdGlvbnMgdW5kZXIgdGhlIExpY2Vuc2UuXFxuLS0+XFxuPGEgaHJlZj1cXFwiI2pvYnMvY3JlYXRlL2NvbmZcXFwiIGNsYXNzPSdidG4gYnRuLWRlZmF1bHQgYnRuLXNtYWxsIGJ0bi1ibHVlJyBzdHlsZT1cXFwibWFyZ2luOjBweCA0cHg7XFxcIj5cXG4gICAgQ3JlYXRlXFxuPC9hPlxcbjxidXR0b24gY2xhc3M9J2J0biBidG4tZGVmYXVsdCBjaGVja2JveC1idXR0b24nIHN0eWxlPVxcXCJtYXJnaW46MHB4IDRweDtcXFwiPlxcbiAgICA8c3BhbiBjbGFzcz1cXFwiY2hlY2tib3hcXFwiPjwvc3Bhbj5cXG4gICAgPHNwYW4gaWQ9XFxcInNlbGVjdGVkQ291bnRcXFwiPjwvc3Bhbj5cXG48L2J1dHRvbj5cXG48ZGl2IGNsYXNzPSdidG4tZ3JvdXAnPlxcbiAgICA8YnV0dG9uIGlkPVxcXCJraWNrQnV0dG9uXFxcIiBjbGFzcz0nYnRuIGJ0bi1kZWZhdWx0IGJ0bi1ncmVlbiBidG4taGlkZS16ZXJvJz5cXG4gICAgICAgIEtpY2tcXG4gICAgPC9idXR0b24+XFxuICAgIDxidXR0b24gaWQ9XFxcInN0b3BCdXR0b25cXFwiIGNsYXNzPSdidG4gYnRuLWRlZmF1bHQgYnRuLXJlZCBidG4taGlkZS16ZXJvJz5cXG4gICAgICAgIFN0b3BcXG4gICAgPC9idXR0b24+XFxuICAgIDxidXR0b24gaWQ9XFxcImtpbGxCdXR0b25cXFwiIGNsYXNzPSdidG4gYnRuLWRlZmF1bHQgYnRuLXJlZCBidG4taGlkZS16ZXJvJz5cXG4gICAgICAgIEtpbGxcXG4gICAgPC9idXR0b24+XFxuICAgIDxidXR0b24gaWQ9XFxcImVuYWJsZUJ1dHRvblxcXCIgY2xhc3M9J2J0biBidG4tZGVmYXVsdCBidG4taGlkZS16ZXJvJz5cXG4gICAgICAgIEVuYWJsZVxcbiAgICA8L2J1dHRvbj5cXG4gICAgPGJ1dHRvbiBpZD1cXFwiZGlzYWJsZUJ1dHRvblxcXCIgY2xhc3M9J2J0biBidG4tZGVmYXVsdCBidG4taGlkZS16ZXJvJz5cXG4gICAgICAgIERpc2FibGVcXG4gICAgPC9idXR0b24+XFxuICAgIDxidXR0b24gaWQ9XFxcImRlbGV0ZUJ1dHRvblxcXCIgY2xhc3M9J2J0biBidG4tZGVmYXVsdCBidG4tcmVkIGJ0bi1oaWRlLXplcm8nPlxcbiAgICAgICAgRGVsZXRlXFxuICAgIDwvYnV0dG9uPlxcbiAgICA8YnV0dG9uIGlkPVxcXCJjcmVhdGVBbGVydEJ1dHRvblxcXCIgY2xhc3M9J2J0biBidG4tZGVmYXVsdCBidG4taGlkZS16ZXJvJz5cXG4gICAgICAgIENyZWF0ZSBhbGVydFxcbiAgICA8L2J1dHRvbj5cXG4gICAgPGJ1dHRvbiBpZD1cXFwiY2hhbmdlUGVybWlzc2lvbnNCdXR0b25cXFwiIGNsYXNzPSdidG4gYnRuLWRlZmF1bHQgYnRuLWhpZGUtemVybyc+XFxuICAgICAgICBQZXJtaXNzaW9uc1xcbiAgICA8L2J1dHRvbj5cXG48L2Rpdj5cXG48YnV0dG9uIGlkPVxcXCJmaW5kRGVsZXRlZEpvYkJ1dHRvblxcXCIgY2xhc3M9XFxcImJ0biBidG4tZGVmYXVsdCBidG4tc21hbGwgYnRuLWJsdWVcXFwiIHN0eWxlPVxcXCJtYXJnaW46MHB4IDRweDtcXFwiPlxcbiAgICBGaW5kIERlbGV0ZWRcXG48L2J1dHRvbj5cXG5cIiJdLCJtYXBwaW5ncyI6IkFBQUEiLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/text-loader/index.js!./src/templates/job.selectable.html\n");

/***/ }),

/***/ "./node_modules/text-loader/index.js!./src/templates/job.setting.html":
/*!*******************************************************************!*\
  !*** ./node_modules/text-loader!./src/templates/job.setting.html ***!
  \*******************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("module.exports = \"<!--\\n    Licensed under the Apache License, Version 2.0 (the \\\"License\\\");\\n    you may not use this file except in compliance with the License.\\n    You may obtain a copy of the License at\\n\\n    http://www.apache.org/licenses/LICENSE-2.0\\n\\n    Unless required by applicable law or agreed to in writing, software\\n    distributed under the License is distributed on an \\\"AS IS\\\" BASIS,\\n    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\\n    See the License for the specific language governing permissions and\\n    limitations under the License.\\n-->\\n<table id=\\\"jobSettingTable\\\" class=\\\"table table-bordered\\\">\\n    <tr class=\\\"row\\\">\\n        <th colspan=\\\"2\\\">Task Settings</th>\\n    </tr>\\n    <tr class=\\\"row\\\">\\n        <td width=\\\"30%\\\">Maximum Run Time</td>\\n        <td width=\\\"70%\\\">\\n            <input name=\\\"maxRunTime\\\" class=\\\"form-control trackable\\\" style=\\\"margin:0px;\\\" type=\\\"number\\\" value=\\\"<%-job.maxRunTime%>\\\"></input>\\n        </td>\\n    </tr>\\n    <tr class=\\\"row\\\">\\n        <td width=\\\"30%\\\">Run Interval</td>\\n        <td width=\\\"70%\\\">\\n            <input name=\\\"rekickTimeout\\\" class=\\\"form-control trackable\\\" style=\\\"margin:0px;\\\" type=\\\"number\\\" value=\\\"<%-job.rekickTimeout%>\\\"></input>\\n        </td>\\n    </tr>\\n    <tr class=\\\"row\\\">\\n        <td width=\\\"30%\\\">Job Priority</td>\\n        <td width=\\\"70%\\\">\\n            <input name=\\\"priority\\\" class=\\\"form-control trackable\\\" style=\\\"margin:0px;\\\" type=\\\"number\\\" value=\\\"<%-job.priority%>\\\"></input>\\n        </td>\\n    </tr>\\n    <tr class=\\\"row\\\">\\n        <td width=\\\"30%\\\">Minion Type</td>\\n        <td width=\\\"70%\\\">\\n            <input name=\\\"minionType\\\" type='text' class=\\\"form-control trackable\\\" style=\\\"margin:0px;\\\" type=\\\"text\\\" value=\\\"<%-job.minionType%>\\\" <%-(_.isUndefined(job.id)? '' : 'disabled')%> ></input>\\n        </td>\\n    </tr>\\n    <tr class=\\\"row\\\">\\n        <td width=\\\"30%\\\">Max Simultaneous Running Tasks</td>\\n        <td width=\\\"70%\\\">\\n            <input name=\\\"maxSimulRunning\\\" class=\\\"form-control trackable\\\" style=\\\"margin:0px;\\\" type=\\\"number\\\" value=\\\"<%-job.maxSimulRunning%>\\\"></input>\\n        </td>\\n    </tr>\\n    <tr class=\\\"row\\\">\\n        <td width=\\\"30%\\\">Enable Automatic Retries</td>\\n        <td width=\\\"70%\\\">\\n            <input name=\\\"autoRetry\\\" type=\\\"checkbox\\\" class=\\\"trackable\\\" <%-(job.autoRetry?\\\"checked='true'\\\":\\\"\\\")%>>\\n            &nbsp;&nbsp;Retries tasks if jvm crashes (exit status = 128 + 6 (SIGABRT))\\n        </td>\\n    </tr>\\n    <tr class=\\\"row\\\">\\n        <td width=\\\"30%\\\">Basic Hydra Alerts</td>\\n        <td width=\\\"70%\\\">\\n            <input name=\\\"basicAlerts\\\" type=\\\"checkbox\\\" class=\\\"trackable\\\" <%-(job.basicAlerts?\\\"checked='true'\\\":\\\"\\\")%>>\\n            &nbsp;&nbsp;Creates 3 email/webhook alerts (error, rekick, runtime) that go to the team who owns the job.\\n        </td>\\n    </tr>\\n    <tr class=\\\"row\\\">\\n        <td width=\\\"30%\\\">Basic Hydra Pagerduty</td>\\n        <td width=\\\"70%\\\">\\n            <input name=\\\"basicPages\\\" type=\\\"checkbox\\\" class=\\\"trackable\\\" <%-(job.basicPages?\\\"checked='true'\\\":\\\"\\\")%>>\\n            &nbsp;&nbsp;Creates 3 pagerduty alerts (error, rekick, runtime) that go to the team who owns the job.\\n        </td>\\n    </tr>\\n    <tr class=\\\"row\\\">\\n        <th colspan=\\\"2\\\">Backup Settings</th>\\n    </tr>\\n    <tr class=\\\"row\\\">\\n        <td width=\\\"30%\\\">Hourly Backups</td>\\n        <td width=\\\"70%\\\">\\n            <input name=\\\"hourlyBackups\\\" class=\\\"form-control trackable\\\" style=\\\"margin:0px;\\\" type=\\\"number\\\" value=\\\"<%-job.hourlyBackups%>\\\"></input>\\n        </td>\\n    </tr>\\n    <tr class=\\\"row\\\">\\n        <td width=\\\"30%\\\">Daily Backups</td>\\n        <td width=\\\"70%\\\">\\n            <input name=\\\"dailyBackups\\\" class=\\\"form-control trackable\\\" style=\\\"margin:0px;\\\" type=\\\"number\\\" value=\\\"<%-job.dailyBackups%>\\\"></input>\\n        </td>\\n    </tr>\\n    <tr class=\\\"row\\\">\\n        <td width=\\\"30%\\\">Weekly Backups</td>\\n        <td width=\\\"70%\\\">\\n            <input name=\\\"weeklyBackups\\\" class=\\\"form-control trackable\\\" style=\\\"margin:0px;\\\" type=\\\"number\\\" value=\\\"<%-job.weeklyBackups%>\\\"></input>\\n        </td>\\n    </tr>\\n    <tr class=\\\"row\\\">\\n        <td width=\\\"30%\\\">Monthly Backups</td>\\n        <td width=\\\"70%\\\">\\n            <input name=\\\"monthlyBackups\\\" class=\\\"form-control trackable\\\" style=\\\"margin:0px;\\\" type=\\\"number\\\" value=\\\"<%-job.monthlyBackups%>\\\"></input>\\n        </td>\\n    </tr>\\n    <tr class=\\\"row\\\">\\n        <th colspan=\\\"2\\\">Replica Settings</th>\\n    </tr>\\n    <tr class=\\\"row\\\">\\n        <td width=\\\"30%\\\">Number of Replicas</td>\\n        <td width=\\\"70%\\\">\\n            <input name=\\\"replicas\\\" class=\\\"form-control trackable\\\" style=\\\"margin:0px;\\\" type=\\\"number\\\" value=\\\"<%-job.replicas%>\\\"></input>\\n        </td>\\n    </tr>\\n    <tr class=\\\"row\\\">\\n        <td width=\\\"30%\\\">Do not delete</td>\\n        <td width=\\\"70%\\\"><input name=\\\"dontDeleteMe\\\" class=\\\"trackable\\\" type=\\\"checkbox\\\" <%-(job.dontDeleteMe?\\\"checked='true'\\\":\\\"\\\")%>></td>\\n    </tr>\\n    <tr class=\\\"row\\\">\\n        <td width=\\\"30%\\\">Do not clone</td>\\n        <td width=\\\"70%\\\"><input name=\\\"dontCloneMe\\\" class=\\\"trackable\\\" type=\\\"checkbox\\\" <%-(job.dontCloneMe?\\\"checked='true'\\\":\\\"\\\")%>></td>\\n    </tr>\\n    <tr class=\\\"row\\\">\\n        <td width=\\\"30%\\\">Do not automatically balance data</td>\\n        <td width=\\\"70%\\\"><input name=\\\"dontAutoBalanceMe\\\" class=\\\"trackable\\\" type=\\\"checkbox\\\" <%-(job.dontAutoBalanceMe?\\\"checked='true'\\\":\\\"\\\")%>></td>\\n    </tr>\\n    <tr class=\\\"row\\\">\\n        <th colspan=\\\"2\\\">Permissions Settings</th>\\n    </tr>\\n    <tr class=\\\"row\\\">\\n        <td width=\\\"30%\\\">Creator</td>\\n        <td width=\\\"70%\\\">\\n            <input name=\\\"creator\\\" class=\\\"form-control trackable\\\" readonly style=\\\"margin:0px;\\\" type=\\\"text\\\" value=\\\"<%-job.creator%>\\\"></input>\\n        </td>\\n    </tr>\\n    <tr class=\\\"row\\\">\\n        <td width=\\\"30%\\\">Owner</td>\\n        <td width=\\\"70%\\\">\\n            <input id=\\\"jobOwner\\\" name=\\\"owner\\\" class=\\\"form-control trackable\\\" style=\\\"margin:0px;\\\" type=\\\"text\\\" value=\\\"<%-job.owner%>\\\"></input>\\n        </td>\\n    </tr>\\n    <tr class=\\\"row\\\">\\n        <td width=\\\"30%\\\">Group</td>\\n        <td width=\\\"70%\\\">\\n            <input id=\\\"jobGroup\\\" name=\\\"group\\\" class=\\\"form-control trackable\\\" style=\\\"margin:0px;\\\" type=\\\"text\\\" value=\\\"<%-job.group%>\\\"></input>\\n        </td>\\n    </tr>\\n    <tr class=\\\"row\\\">\\n        <td width=\\\"30%\\\">Writable</td>\\n        <td>\\n            <input id=\\\"ownerWritable\\\" name=\\\"ownerWritable\\\" class=\\\"trackable\\\" style=\\\"margin:0px;\\\" type=\\\"checkbox\\\" <%-(job.ownerWritable?\\\"checked='true'\\\":\\\"\\\")%>></input>\\n            <label for=\\\"ownerWritable\\\">owner</label>\\n            <input id=\\\"groupWritable\\\" name=\\\"groupWritable\\\" class=\\\"trackable\\\" style=\\\"margin-left:10px;\\\" type=\\\"checkbox\\\" <%-(job.groupWritable?\\\"checked='true'\\\":\\\"\\\")%>></input>\\n            <label for=\\\"groupWritable\\\">group</label>\\n            <input id=\\\"worldWritable\\\" name=\\\"worldWritable\\\" class=\\\"trackable\\\" style=\\\"margin-left:10px;\\\" type=\\\"checkbox\\\" <%-(job.worldWritable?\\\"checked='true'\\\":\\\"\\\")%>></input>\\n            <label for=\\\"worldWritable\\\">world</label>\\n        </td>\\n    </tr>\\n    <tr class=\\\"row\\\">\\n        <td width=\\\"30%\\\">Executable</td>\\n        <td>\\n            <input id=\\\"ownerExecutable\\\" name=\\\"ownerExecutable\\\" class=\\\"trackable\\\" style=\\\"margin:0px;\\\" type=\\\"checkbox\\\" <%-(job.ownerExecutable?\\\"checked='true'\\\":\\\"\\\")%>></input>\\n            <label for=\\\"ownerExecutable\\\">owner</label>\\n            <input id=\\\"groupExecutable\\\" name=\\\"groupExecutable\\\" class=\\\"trackable\\\" style=\\\"margin-left:10px;\\\" type=\\\"checkbox\\\" <%-(job.groupExecutable?\\\"checked='true'\\\":\\\"\\\")%>></input>\\n            <label for=\\\"groupExecutable\\\">group</label>\\n            <input id=\\\"worldExecutable\\\" name=\\\"worldExecutable\\\" class=\\\"trackable\\\" style=\\\"margin-left:10px;\\\" type=\\\"checkbox\\\" <%-(job.worldExecutable?\\\"checked='true'\\\":\\\"\\\")%>></input>\\n            <label for=\\\"worldExecutable\\\">world</label>\\n        </td>\\n    </tr>\\n    <tr class=\\\"row\\\">\\n        <td width=\\\"30%\\\">Last Modified By</td>\\n        <td width=\\\"70%\\\">\\n            <input name=\\\"lastModifiedBy\\\" class=\\\"form-control trackable\\\" readonly style=\\\"margin:0px;\\\" type=\\\"text\\\" value=\\\"<%-job.lastModifiedBy%>\\\"></input>\\n        </td>\\n    </tr>\\n    <tr class=\\\"row\\\">\\n        <td width=\\\"30%\\\">Last Modified At</td>\\n        <td width=\\\"70%\\\">\\n            <input name=\\\"lastModifiedAt\\\" class=\\\"form-control trackable\\\" readonly style=\\\"margin:0px;\\\" type=\\\"text\\\" value=\\\"<%-new Date(job.lastModifiedAt).toString('MM/dd/yy HH:mm')%>\\\"></input>\\n        </td>\\n    </tr>\\n    <tr class=\\\"row\\\">\\n        <td width=\\\"30%\\\">&nbsp;</td>\\n        <td wdith=\\\"70%\\\"><button type=\\\"button\\\" id=\\\"settingsChangePermission\\\" class=\\\"btn btn-default\\\" >Change Permissions</button>\\n            <span style=\\\"vertical-align:middle\\\" >Owner and group can change permissions when writable status is disabled.</span></td>\\n    </tr>\\n    <tr class=\\\"row\\\">\\n        <th colspan=\\\"2\\\">Query Settings</th>\\n    </tr>\\n    <tr class=\\\"row\\\">\\n        <td width=\\\"30%\\\">Enable querying on this job</td>\\n        <td width=\\\"70%\\\">\\n            <input name=\\\"qc_canQuery\\\" type=\\\"checkbox\\\" class=\\\"trackable\\\" <%-(job.qc_canQuery?\\\"checked='true'\\\":\\\"\\\")%>>\\n        </td>\\n    </tr>\\n    <tr class=\\\"row\\\">\\n        <th colspan=\\\"2\\\">Post Hooks</th>\\n    </tr>\\n    <tr class=\\\"row\\\">\\n        <td width=\\\"30%\\\">On Success..</td>\\n        <td width=\\\"70%\\\">\\n            <input name=\\\"onComplete\\\" class=\\\"form-control trackable\\\" style=\\\"margin:0px;\\\" type=\\\"text\\\" value=\\\"<%-job.onComplete%>\\\"></input>\\n        </td>\\n    </tr>\\n    <tr class=\\\"row\\\">\\n        <td width=\\\"30%\\\">On Success Timeout (seconds)</td>\\n        <td width=\\\"70%\\\">\\n            <input name=\\\"onCompleteTimeout\\\" class=\\\"form-control trackable\\\" style=\\\"margin:0px;\\\" type=\\\"text\\\" value=\\\"<%-job.onCompleteTimeout%>\\\"></input>\\n        </td>\\n    </tr>\\n    <tr class=\\\"row\\\">\\n        <td width=\\\"30%\\\">On Error..</td>\\n        <td width=\\\"70%\\\">\\n            <input name=\\\"onError\\\" class=\\\"form-control trackable\\\" style=\\\"margin:0px;\\\" type=\\\"text\\\" value=\\\"<%-job.onError%>\\\"></input>\\n        </td>\\n    </tr>\\n    <tr class=\\\"row\\\">\\n        <td width=\\\"30%\\\">On Error Timeout (seconds)</td>\\n        <td width=\\\"70%\\\">\\n            <input name=\\\"onErrorTimeout\\\" class=\\\"form-control trackable\\\" style=\\\"margin:0px;\\\" type=\\\"text\\\" value=\\\"<%-job.onErrorTimeout%>\\\"></input>\\n        </td>\\n    </tr>\\n</table>\\n\"//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/text-loader/index.js!./src/templates/job.setting.html\n");

/***/ }),

/***/ "./node_modules/text-loader/index.js!./src/templates/job.table.info.html":
/*!**********************************************************************!*\
  !*** ./node_modules/text-loader!./src/templates/job.table.info.html ***!
  \**********************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("module.exports = \"<!--\\n    Licensed under the Apache License, Version 2.0 (the \\\"License\\\");\\n    you may not use this file except in compliance with the License.\\n    You may obtain a copy of the License at\\n\\n    http://www.apache.org/licenses/LICENSE-2.0\\n\\n    Unless required by applicable law or agreed to in writing, software\\n    distributed under the License is distributed on an \\\"AS IS\\\" BASIS,\\n    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\\n    See the License for the specific language governing permissions and\\n    limitations under the License.\\n-->\\n<div id=\\\"jobCount\\\">\\n    <span class=\\\"key\\\">jobs:</span>\\n    <span class=\\\"value\\\"><%-(jobCount===0?\\\"-\\\":jobCount)%></span>\\n</div>\\n<div id=\\\"hostCount\\\">\\n    <span class=\\\"key\\\">hosts:</span>\\n    <span class=\\\"value\\\"><%-(hostCount===0?\\\"-\\\":hostCount)%></span>\\n</div>\\n<div id=\\\"tasksCount\\\">\\n    <span class=\\\"key\\\">tasks:</span>\\n    <span class=\\\"value\\\"><%-(tasksCount===0?\\\"-\\\":tasksCount)%></span>\\n</div>\\n<div id=\\\"queuedCount\\\">\\n    <span class=\\\"key\\\">queued:</span>\\n    <span class=\\\"value\\\"><%-(queuedCount===0?\\\"-\\\":queuedCount)%></span>\\n</div>\\n<div id=\\\"queuedCountNoSlot\\\">\\n    <span class=\\\"key\\\">queued-no-slots:</span>\\n    <span class=\\\"value\\\"><%-(queuedCountNoSlot===0?\\\"-\\\":queuedCountNoSlot)%></span>\\n</div>\\n<div id=\\\"runningCount\\\">\\n    <span class=\\\"key\\\">running:</span>\\n    <span class=\\\"value\\\"><%-(runningCount===0?\\\"-\\\":runningCount)%></span>\\n</div>\\n<div id=\\\"erroredCount\\\">\\n    <span class=\\\"key\\\">errored:</span>\\n    <span class=\\\"value\\\"><%-(erroredCount===0?\\\"-\\\":erroredCount)%></span>\\n</div>\\n<div id=\\\"slots\\\">\\n    <span class=\\\"key\\\">slots:</span>\\n    <span class=\\\"value\\\"><%-(availTaskSlots===0?\\\"-\\\":availTaskSlots)%></span>\\n</div>\\n<div id=\\\"disk\\\">\\n    <span class=\\\"key\\\">disk:</span>\\n    <span class=\\\"value\\\"><%-(disk===0?\\\"-\\\":disk)%></span>\\n</div>\\n\"//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvdGV4dC1sb2FkZXIvaW5kZXguanMhLi9zcmMvdGVtcGxhdGVzL2pvYi50YWJsZS5pbmZvLmh0bWwuanMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9zcmMvdGVtcGxhdGVzL2pvYi50YWJsZS5pbmZvLmh0bWw/YjEzZiJdLCJzb3VyY2VzQ29udGVudCI6WyJtb2R1bGUuZXhwb3J0cyA9IFwiPCEtLVxcbiAgICBMaWNlbnNlZCB1bmRlciB0aGUgQXBhY2hlIExpY2Vuc2UsIFZlcnNpb24gMi4wICh0aGUgXFxcIkxpY2Vuc2VcXFwiKTtcXG4gICAgeW91IG1heSBub3QgdXNlIHRoaXMgZmlsZSBleGNlcHQgaW4gY29tcGxpYW5jZSB3aXRoIHRoZSBMaWNlbnNlLlxcbiAgICBZb3UgbWF5IG9idGFpbiBhIGNvcHkgb2YgdGhlIExpY2Vuc2UgYXRcXG5cXG4gICAgaHR0cDovL3d3dy5hcGFjaGUub3JnL2xpY2Vuc2VzL0xJQ0VOU0UtMi4wXFxuXFxuICAgIFVubGVzcyByZXF1aXJlZCBieSBhcHBsaWNhYmxlIGxhdyBvciBhZ3JlZWQgdG8gaW4gd3JpdGluZywgc29mdHdhcmVcXG4gICAgZGlzdHJpYnV0ZWQgdW5kZXIgdGhlIExpY2Vuc2UgaXMgZGlzdHJpYnV0ZWQgb24gYW4gXFxcIkFTIElTXFxcIiBCQVNJUyxcXG4gICAgV0lUSE9VVCBXQVJSQU5USUVTIE9SIENPTkRJVElPTlMgT0YgQU5ZIEtJTkQsIGVpdGhlciBleHByZXNzIG9yIGltcGxpZWQuXFxuICAgIFNlZSB0aGUgTGljZW5zZSBmb3IgdGhlIHNwZWNpZmljIGxhbmd1YWdlIGdvdmVybmluZyBwZXJtaXNzaW9ucyBhbmRcXG4gICAgbGltaXRhdGlvbnMgdW5kZXIgdGhlIExpY2Vuc2UuXFxuLS0+XFxuPGRpdiBpZD1cXFwiam9iQ291bnRcXFwiPlxcbiAgICA8c3BhbiBjbGFzcz1cXFwia2V5XFxcIj5qb2JzOjwvc3Bhbj5cXG4gICAgPHNwYW4gY2xhc3M9XFxcInZhbHVlXFxcIj48JS0oam9iQ291bnQ9PT0wP1xcXCItXFxcIjpqb2JDb3VudCklPjwvc3Bhbj5cXG48L2Rpdj5cXG48ZGl2IGlkPVxcXCJob3N0Q291bnRcXFwiPlxcbiAgICA8c3BhbiBjbGFzcz1cXFwia2V5XFxcIj5ob3N0czo8L3NwYW4+XFxuICAgIDxzcGFuIGNsYXNzPVxcXCJ2YWx1ZVxcXCI+PCUtKGhvc3RDb3VudD09PTA/XFxcIi1cXFwiOmhvc3RDb3VudCklPjwvc3Bhbj5cXG48L2Rpdj5cXG48ZGl2IGlkPVxcXCJ0YXNrc0NvdW50XFxcIj5cXG4gICAgPHNwYW4gY2xhc3M9XFxcImtleVxcXCI+dGFza3M6PC9zcGFuPlxcbiAgICA8c3BhbiBjbGFzcz1cXFwidmFsdWVcXFwiPjwlLSh0YXNrc0NvdW50PT09MD9cXFwiLVxcXCI6dGFza3NDb3VudCklPjwvc3Bhbj5cXG48L2Rpdj5cXG48ZGl2IGlkPVxcXCJxdWV1ZWRDb3VudFxcXCI+XFxuICAgIDxzcGFuIGNsYXNzPVxcXCJrZXlcXFwiPnF1ZXVlZDo8L3NwYW4+XFxuICAgIDxzcGFuIGNsYXNzPVxcXCJ2YWx1ZVxcXCI+PCUtKHF1ZXVlZENvdW50PT09MD9cXFwiLVxcXCI6cXVldWVkQ291bnQpJT48L3NwYW4+XFxuPC9kaXY+XFxuPGRpdiBpZD1cXFwicXVldWVkQ291bnROb1Nsb3RcXFwiPlxcbiAgICA8c3BhbiBjbGFzcz1cXFwia2V5XFxcIj5xdWV1ZWQtbm8tc2xvdHM6PC9zcGFuPlxcbiAgICA8c3BhbiBjbGFzcz1cXFwidmFsdWVcXFwiPjwlLShxdWV1ZWRDb3VudE5vU2xvdD09PTA/XFxcIi1cXFwiOnF1ZXVlZENvdW50Tm9TbG90KSU+PC9zcGFuPlxcbjwvZGl2PlxcbjxkaXYgaWQ9XFxcInJ1bm5pbmdDb3VudFxcXCI+XFxuICAgIDxzcGFuIGNsYXNzPVxcXCJrZXlcXFwiPnJ1bm5pbmc6PC9zcGFuPlxcbiAgICA8c3BhbiBjbGFzcz1cXFwidmFsdWVcXFwiPjwlLShydW5uaW5nQ291bnQ9PT0wP1xcXCItXFxcIjpydW5uaW5nQ291bnQpJT48L3NwYW4+XFxuPC9kaXY+XFxuPGRpdiBpZD1cXFwiZXJyb3JlZENvdW50XFxcIj5cXG4gICAgPHNwYW4gY2xhc3M9XFxcImtleVxcXCI+ZXJyb3JlZDo8L3NwYW4+XFxuICAgIDxzcGFuIGNsYXNzPVxcXCJ2YWx1ZVxcXCI+PCUtKGVycm9yZWRDb3VudD09PTA/XFxcIi1cXFwiOmVycm9yZWRDb3VudCklPjwvc3Bhbj5cXG48L2Rpdj5cXG48ZGl2IGlkPVxcXCJzbG90c1xcXCI+XFxuICAgIDxzcGFuIGNsYXNzPVxcXCJrZXlcXFwiPnNsb3RzOjwvc3Bhbj5cXG4gICAgPHNwYW4gY2xhc3M9XFxcInZhbHVlXFxcIj48JS0oYXZhaWxUYXNrU2xvdHM9PT0wP1xcXCItXFxcIjphdmFpbFRhc2tTbG90cyklPjwvc3Bhbj5cXG48L2Rpdj5cXG48ZGl2IGlkPVxcXCJkaXNrXFxcIj5cXG4gICAgPHNwYW4gY2xhc3M9XFxcImtleVxcXCI+ZGlzazo8L3NwYW4+XFxuICAgIDxzcGFuIGNsYXNzPVxcXCJ2YWx1ZVxcXCI+PCUtKGRpc2s9PT0wP1xcXCItXFxcIjpkaXNrKSU+PC9zcGFuPlxcbjwvZGl2PlxcblwiIl0sIm1hcHBpbmdzIjoiQUFBQSIsInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/text-loader/index.js!./src/templates/job.table.info.html\n");

/***/ }),

/***/ "./node_modules/text-loader/index.js!./src/templates/job.task.breadcrumbs.html":
/*!****************************************************************************!*\
  !*** ./node_modules/text-loader!./src/templates/job.task.breadcrumbs.html ***!
  \****************************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("module.exports = \"<!--\\n    Licensed under the Apache License, Version 2.0 (the \\\"License\\\");\\n    you may not use this file except in compliance with the License.\\n    You may obtain a copy of the License at\\n\\n    http://www.apache.org/licenses/LICENSE-2.0\\n\\n    Unless required by applicable law or agreed to in writing, software\\n    distributed under the License is distributed on an \\\"AS IS\\\" BASIS,\\n    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\\n    See the License for the specific language governing permissions and\\n    limitations under the License.\\n-->\\n<div>\\n    <ul class=\\\"breadcrumb pull-left\\\" style=\\\"display: inline; background-color: transparent;margin:0px;padding-top:0px;padding-bottom:0px;padding-left:4px;\\\">\\n        <li>\\n            <a href=\\\"#jobs/<%-task.jobUuid%>/tasks\\\">All Tasks</a>\\n        </li>\\n        <li class=\\\"active\\\">\\n            <%-task.node%>\\n        </li>\\n    </ul>\\n</div>\\n\"//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvdGV4dC1sb2FkZXIvaW5kZXguanMhLi9zcmMvdGVtcGxhdGVzL2pvYi50YXNrLmJyZWFkY3J1bWJzLmh0bWwuanMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9zcmMvdGVtcGxhdGVzL2pvYi50YXNrLmJyZWFkY3J1bWJzLmh0bWw/ZDk3ZiJdLCJzb3VyY2VzQ29udGVudCI6WyJtb2R1bGUuZXhwb3J0cyA9IFwiPCEtLVxcbiAgICBMaWNlbnNlZCB1bmRlciB0aGUgQXBhY2hlIExpY2Vuc2UsIFZlcnNpb24gMi4wICh0aGUgXFxcIkxpY2Vuc2VcXFwiKTtcXG4gICAgeW91IG1heSBub3QgdXNlIHRoaXMgZmlsZSBleGNlcHQgaW4gY29tcGxpYW5jZSB3aXRoIHRoZSBMaWNlbnNlLlxcbiAgICBZb3UgbWF5IG9idGFpbiBhIGNvcHkgb2YgdGhlIExpY2Vuc2UgYXRcXG5cXG4gICAgaHR0cDovL3d3dy5hcGFjaGUub3JnL2xpY2Vuc2VzL0xJQ0VOU0UtMi4wXFxuXFxuICAgIFVubGVzcyByZXF1aXJlZCBieSBhcHBsaWNhYmxlIGxhdyBvciBhZ3JlZWQgdG8gaW4gd3JpdGluZywgc29mdHdhcmVcXG4gICAgZGlzdHJpYnV0ZWQgdW5kZXIgdGhlIExpY2Vuc2UgaXMgZGlzdHJpYnV0ZWQgb24gYW4gXFxcIkFTIElTXFxcIiBCQVNJUyxcXG4gICAgV0lUSE9VVCBXQVJSQU5USUVTIE9SIENPTkRJVElPTlMgT0YgQU5ZIEtJTkQsIGVpdGhlciBleHByZXNzIG9yIGltcGxpZWQuXFxuICAgIFNlZSB0aGUgTGljZW5zZSBmb3IgdGhlIHNwZWNpZmljIGxhbmd1YWdlIGdvdmVybmluZyBwZXJtaXNzaW9ucyBhbmRcXG4gICAgbGltaXRhdGlvbnMgdW5kZXIgdGhlIExpY2Vuc2UuXFxuLS0+XFxuPGRpdj5cXG4gICAgPHVsIGNsYXNzPVxcXCJicmVhZGNydW1iIHB1bGwtbGVmdFxcXCIgc3R5bGU9XFxcImRpc3BsYXk6IGlubGluZTsgYmFja2dyb3VuZC1jb2xvcjogdHJhbnNwYXJlbnQ7bWFyZ2luOjBweDtwYWRkaW5nLXRvcDowcHg7cGFkZGluZy1ib3R0b206MHB4O3BhZGRpbmctbGVmdDo0cHg7XFxcIj5cXG4gICAgICAgIDxsaT5cXG4gICAgICAgICAgICA8YSBocmVmPVxcXCIjam9icy88JS10YXNrLmpvYlV1aWQlPi90YXNrc1xcXCI+QWxsIFRhc2tzPC9hPlxcbiAgICAgICAgPC9saT5cXG4gICAgICAgIDxsaSBjbGFzcz1cXFwiYWN0aXZlXFxcIj5cXG4gICAgICAgICAgICA8JS10YXNrLm5vZGUlPlxcbiAgICAgICAgPC9saT5cXG4gICAgPC91bD5cXG48L2Rpdj5cXG5cIiJdLCJtYXBwaW5ncyI6IkFBQUEiLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/text-loader/index.js!./src/templates/job.task.breadcrumbs.html\n");

/***/ }),

/***/ "./node_modules/text-loader/index.js!./src/templates/job.task.html":
/*!****************************************************************!*\
  !*** ./node_modules/text-loader!./src/templates/job.task.html ***!
  \****************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("module.exports = \"job tasks for <%-job.id%>\"//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvdGV4dC1sb2FkZXIvaW5kZXguanMhLi9zcmMvdGVtcGxhdGVzL2pvYi50YXNrLmh0bWwuanMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9zcmMvdGVtcGxhdGVzL2pvYi50YXNrLmh0bWw/ZWYyMyJdLCJzb3VyY2VzQ29udGVudCI6WyJtb2R1bGUuZXhwb3J0cyA9IFwiam9iIHRhc2tzIGZvciA8JS1qb2IuaWQlPlwiIl0sIm1hcHBpbmdzIjoiQUFBQSIsInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/text-loader/index.js!./src/templates/job.task.html\n");

/***/ }),

/***/ "./node_modules/text-loader/index.js!./src/templates/job.taskdetail.html":
/*!**********************************************************************!*\
  !*** ./node_modules/text-loader!./src/templates/job.taskdetail.html ***!
  \**********************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("module.exports = \"\"//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvdGV4dC1sb2FkZXIvaW5kZXguanMhLi9zcmMvdGVtcGxhdGVzL2pvYi50YXNrZGV0YWlsLmh0bWwuanMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9zcmMvdGVtcGxhdGVzL2pvYi50YXNrZGV0YWlsLmh0bWw/OTE0ZSJdLCJzb3VyY2VzQ29udGVudCI6WyJtb2R1bGUuZXhwb3J0cyA9IFwiXCIiXSwibWFwcGluZ3MiOiJBQUFBIiwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/text-loader/index.js!./src/templates/job.taskdetail.html\n");

/***/ }),

/***/ "./node_modules/text-loader/index.js!./src/templates/macro.configuration.html":
/*!***************************************************************************!*\
  !*** ./node_modules/text-loader!./src/templates/macro.configuration.html ***!
  \***************************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("module.exports = \"<!--\\n    Licensed under the Apache License, Version 2.0 (the \\\"License\\\");\\n    you may not use this file except in compliance with the License.\\n    You may obtain a copy of the License at\\n\\n    http://www.apache.org/licenses/LICENSE-2.0\\n\\n    Unless required by applicable law or agreed to in writing, software\\n    distributed under the License is distributed on an \\\"AS IS\\\" BASIS,\\n    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\\n    See the License for the specific language governing permissions and\\n    limitations under the License.\\n-->\\n<div class=\\\"form form-inline\\\" role=\\\"form\\\">\\n    <div class=\\\"form-group\\\" style=\\\"width:79%;display:inline-block;\\\">\\n        <label class=\\\"sr-only\\\" for=\\\"name\\\" style=\\\"margin-bottom:0px;\\\">Name</label>\\n        <input value=\\\"<%-macro.name%>\\\" type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"name\\\" placeholder=\\\"Enter name\\\">\\n    </div>\\n    <div class=\\\"form-group\\\" style=\\\"width:20%;display:inline-block;\\\">\\n        <label class=\\\"sr-only\\\" for=\\\"description\\\" style=\\\"margin-bottom:0px;\\\">Description</label>\\n        <input value=\\\"<%-macro.description%>\\\" type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"description\\\" placeholder=\\\"Enter description\\\">\\n    </div>\\n</div>\\n\"//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvdGV4dC1sb2FkZXIvaW5kZXguanMhLi9zcmMvdGVtcGxhdGVzL21hY3JvLmNvbmZpZ3VyYXRpb24uaHRtbC5qcyIsInNvdXJjZXMiOlsid2VicGFjazovLy8uL3NyYy90ZW1wbGF0ZXMvbWFjcm8uY29uZmlndXJhdGlvbi5odG1sPzU1M2QiXSwic291cmNlc0NvbnRlbnQiOlsibW9kdWxlLmV4cG9ydHMgPSBcIjwhLS1cXG4gICAgTGljZW5zZWQgdW5kZXIgdGhlIEFwYWNoZSBMaWNlbnNlLCBWZXJzaW9uIDIuMCAodGhlIFxcXCJMaWNlbnNlXFxcIik7XFxuICAgIHlvdSBtYXkgbm90IHVzZSB0aGlzIGZpbGUgZXhjZXB0IGluIGNvbXBsaWFuY2Ugd2l0aCB0aGUgTGljZW5zZS5cXG4gICAgWW91IG1heSBvYnRhaW4gYSBjb3B5IG9mIHRoZSBMaWNlbnNlIGF0XFxuXFxuICAgIGh0dHA6Ly93d3cuYXBhY2hlLm9yZy9saWNlbnNlcy9MSUNFTlNFLTIuMFxcblxcbiAgICBVbmxlc3MgcmVxdWlyZWQgYnkgYXBwbGljYWJsZSBsYXcgb3IgYWdyZWVkIHRvIGluIHdyaXRpbmcsIHNvZnR3YXJlXFxuICAgIGRpc3RyaWJ1dGVkIHVuZGVyIHRoZSBMaWNlbnNlIGlzIGRpc3RyaWJ1dGVkIG9uIGFuIFxcXCJBUyBJU1xcXCIgQkFTSVMsXFxuICAgIFdJVEhPVVQgV0FSUkFOVElFUyBPUiBDT05ESVRJT05TIE9GIEFOWSBLSU5ELCBlaXRoZXIgZXhwcmVzcyBvciBpbXBsaWVkLlxcbiAgICBTZWUgdGhlIExpY2Vuc2UgZm9yIHRoZSBzcGVjaWZpYyBsYW5ndWFnZSBnb3Zlcm5pbmcgcGVybWlzc2lvbnMgYW5kXFxuICAgIGxpbWl0YXRpb25zIHVuZGVyIHRoZSBMaWNlbnNlLlxcbi0tPlxcbjxkaXYgY2xhc3M9XFxcImZvcm0gZm9ybS1pbmxpbmVcXFwiIHJvbGU9XFxcImZvcm1cXFwiPlxcbiAgICA8ZGl2IGNsYXNzPVxcXCJmb3JtLWdyb3VwXFxcIiBzdHlsZT1cXFwid2lkdGg6NzklO2Rpc3BsYXk6aW5saW5lLWJsb2NrO1xcXCI+XFxuICAgICAgICA8bGFiZWwgY2xhc3M9XFxcInNyLW9ubHlcXFwiIGZvcj1cXFwibmFtZVxcXCIgc3R5bGU9XFxcIm1hcmdpbi1ib3R0b206MHB4O1xcXCI+TmFtZTwvbGFiZWw+XFxuICAgICAgICA8aW5wdXQgdmFsdWU9XFxcIjwlLW1hY3JvLm5hbWUlPlxcXCIgdHlwZT1cXFwidGV4dFxcXCIgY2xhc3M9XFxcImZvcm0tY29udHJvbFxcXCIgaWQ9XFxcIm5hbWVcXFwiIHBsYWNlaG9sZGVyPVxcXCJFbnRlciBuYW1lXFxcIj5cXG4gICAgPC9kaXY+XFxuICAgIDxkaXYgY2xhc3M9XFxcImZvcm0tZ3JvdXBcXFwiIHN0eWxlPVxcXCJ3aWR0aDoyMCU7ZGlzcGxheTppbmxpbmUtYmxvY2s7XFxcIj5cXG4gICAgICAgIDxsYWJlbCBjbGFzcz1cXFwic3Itb25seVxcXCIgZm9yPVxcXCJkZXNjcmlwdGlvblxcXCIgc3R5bGU9XFxcIm1hcmdpbi1ib3R0b206MHB4O1xcXCI+RGVzY3JpcHRpb248L2xhYmVsPlxcbiAgICAgICAgPGlucHV0IHZhbHVlPVxcXCI8JS1tYWNyby5kZXNjcmlwdGlvbiU+XFxcIiB0eXBlPVxcXCJ0ZXh0XFxcIiBjbGFzcz1cXFwiZm9ybS1jb250cm9sXFxcIiBpZD1cXFwiZGVzY3JpcHRpb25cXFwiIHBsYWNlaG9sZGVyPVxcXCJFbnRlciBkZXNjcmlwdGlvblxcXCI+XFxuICAgIDwvZGl2PlxcbjwvZGl2PlxcblwiIl0sIm1hcHBpbmdzIjoiQUFBQSIsInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/text-loader/index.js!./src/templates/macro.configuration.html\n");

/***/ }),

/***/ "./node_modules/text-loader/index.js!./src/templates/macro.detail.html":
/*!********************************************************************!*\
  !*** ./node_modules/text-loader!./src/templates/macro.detail.html ***!
  \********************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("module.exports = \"<!--\\n    Licensed under the Apache License, Version 2.0 (the \\\"License\\\");\\n    you may not use this file except in compliance with the License.\\n    You may obtain a copy of the License at\\n\\n    http://www.apache.org/licenses/LICENSE-2.0\\n\\n    Unless required by applicable law or agreed to in writing, software\\n    distributed under the License is distributed on an \\\"AS IS\\\" BASIS,\\n    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\\n    See the License for the specific language governing permissions and\\n    limitations under the License.\\n-->\\n<div id=\\\"topStatusBar\\\" class=\\\"top-bar\\\">\\n    <ul class=\\\"breadcrumb pull-left\\\" style=\\\"display: inline; background-color: transparent;margin:0px;padding-top:0px;padding-bottom:0px;padding-left:4px;\\\">\\n        <li>\\n            <a href=\\\"#macros\\\">\\n                All Macros\\n            </a>\\n        </li>\\n        <li class=\\\"active\\\">\\n            <%-macro.name%>\\n        </li>\\n    </ul>\\n    <span style=\\\"margin-left:10px;\\\">\\n        <strong>Owner:</strong>\\n        <%-macro.owner%>\\n    </span>\\n    <span style=\\\"margin-left:10px;\\\">\\n        <strong>Last Modified:</strong>\\n        <%-util.convertToDateTimeText(macro.modified)%>\\n    </span>\\n    <div class=\\\"job-detail-actions pull-right\\\">\\n        <%if(!_.isEmpty(name)){%>\\n            <button id=\\\"deleteMacroButton\\\" class=\\\"btn btn-default btn-small btn-red\\\">\\n                Delete\\n            </button>\\n        <%}%>\\n        <button id=\\\"saveMacroButton\\\" class=\\\"btn btn-default btn-small\\\" style=\\\"margin-left:8px;\\\">\\n            Save\\n        </button>\\n    </div>\\n</div>\\n<div id=\\\"detailContainer\\\" class=\\\"macro main-container\\\">\\n    <div class=\\\"form form-inline\\\" role=\\\"form\\\">\\n        <div class=\\\"form-group\\\" style=\\\"width:20%;display:inline-block;\\\">\\n            <label class=\\\"sr-only\\\" for=\\\"name\\\" style=\\\"margin-bottom:0px;\\\">Name</label>\\n            <input value=\\\"<%-macro.name%>\\\" type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"name\\\" name=\\\"name\\\" placeholder=\\\"Enter name\\\">\\n        </div>\\n        <div class=\\\"form-group\\\" style=\\\"width:79%;display:inline-block;\\\">\\n            <label class=\\\"sr-only\\\" for=\\\"description\\\" style=\\\"margin-bottom:0px;\\\">Description</label>\\n            <input value=\\\"<%-macro.description%>\\\" type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"description\\\" name=\\\"description\\\" placeholder=\\\"Enter description\\\">\\n        </div>\\n    </div>\\n</div>\\n\"//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvdGV4dC1sb2FkZXIvaW5kZXguanMhLi9zcmMvdGVtcGxhdGVzL21hY3JvLmRldGFpbC5odG1sLmpzIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vLy4vc3JjL3RlbXBsYXRlcy9tYWNyby5kZXRhaWwuaHRtbD9kOGZmIl0sInNvdXJjZXNDb250ZW50IjpbIm1vZHVsZS5leHBvcnRzID0gXCI8IS0tXFxuICAgIExpY2Vuc2VkIHVuZGVyIHRoZSBBcGFjaGUgTGljZW5zZSwgVmVyc2lvbiAyLjAgKHRoZSBcXFwiTGljZW5zZVxcXCIpO1xcbiAgICB5b3UgbWF5IG5vdCB1c2UgdGhpcyBmaWxlIGV4Y2VwdCBpbiBjb21wbGlhbmNlIHdpdGggdGhlIExpY2Vuc2UuXFxuICAgIFlvdSBtYXkgb2J0YWluIGEgY29weSBvZiB0aGUgTGljZW5zZSBhdFxcblxcbiAgICBodHRwOi8vd3d3LmFwYWNoZS5vcmcvbGljZW5zZXMvTElDRU5TRS0yLjBcXG5cXG4gICAgVW5sZXNzIHJlcXVpcmVkIGJ5IGFwcGxpY2FibGUgbGF3IG9yIGFncmVlZCB0byBpbiB3cml0aW5nLCBzb2Z0d2FyZVxcbiAgICBkaXN0cmlidXRlZCB1bmRlciB0aGUgTGljZW5zZSBpcyBkaXN0cmlidXRlZCBvbiBhbiBcXFwiQVMgSVNcXFwiIEJBU0lTLFxcbiAgICBXSVRIT1VUIFdBUlJBTlRJRVMgT1IgQ09ORElUSU9OUyBPRiBBTlkgS0lORCwgZWl0aGVyIGV4cHJlc3Mgb3IgaW1wbGllZC5cXG4gICAgU2VlIHRoZSBMaWNlbnNlIGZvciB0aGUgc3BlY2lmaWMgbGFuZ3VhZ2UgZ292ZXJuaW5nIHBlcm1pc3Npb25zIGFuZFxcbiAgICBsaW1pdGF0aW9ucyB1bmRlciB0aGUgTGljZW5zZS5cXG4tLT5cXG48ZGl2IGlkPVxcXCJ0b3BTdGF0dXNCYXJcXFwiIGNsYXNzPVxcXCJ0b3AtYmFyXFxcIj5cXG4gICAgPHVsIGNsYXNzPVxcXCJicmVhZGNydW1iIHB1bGwtbGVmdFxcXCIgc3R5bGU9XFxcImRpc3BsYXk6IGlubGluZTsgYmFja2dyb3VuZC1jb2xvcjogdHJhbnNwYXJlbnQ7bWFyZ2luOjBweDtwYWRkaW5nLXRvcDowcHg7cGFkZGluZy1ib3R0b206MHB4O3BhZGRpbmctbGVmdDo0cHg7XFxcIj5cXG4gICAgICAgIDxsaT5cXG4gICAgICAgICAgICA8YSBocmVmPVxcXCIjbWFjcm9zXFxcIj5cXG4gICAgICAgICAgICAgICAgQWxsIE1hY3Jvc1xcbiAgICAgICAgICAgIDwvYT5cXG4gICAgICAgIDwvbGk+XFxuICAgICAgICA8bGkgY2xhc3M9XFxcImFjdGl2ZVxcXCI+XFxuICAgICAgICAgICAgPCUtbWFjcm8ubmFtZSU+XFxuICAgICAgICA8L2xpPlxcbiAgICA8L3VsPlxcbiAgICA8c3BhbiBzdHlsZT1cXFwibWFyZ2luLWxlZnQ6MTBweDtcXFwiPlxcbiAgICAgICAgPHN0cm9uZz5Pd25lcjo8L3N0cm9uZz5cXG4gICAgICAgIDwlLW1hY3JvLm93bmVyJT5cXG4gICAgPC9zcGFuPlxcbiAgICA8c3BhbiBzdHlsZT1cXFwibWFyZ2luLWxlZnQ6MTBweDtcXFwiPlxcbiAgICAgICAgPHN0cm9uZz5MYXN0IE1vZGlmaWVkOjwvc3Ryb25nPlxcbiAgICAgICAgPCUtdXRpbC5jb252ZXJ0VG9EYXRlVGltZVRleHQobWFjcm8ubW9kaWZpZWQpJT5cXG4gICAgPC9zcGFuPlxcbiAgICA8ZGl2IGNsYXNzPVxcXCJqb2ItZGV0YWlsLWFjdGlvbnMgcHVsbC1yaWdodFxcXCI+XFxuICAgICAgICA8JWlmKCFfLmlzRW1wdHkobmFtZSkpeyU+XFxuICAgICAgICAgICAgPGJ1dHRvbiBpZD1cXFwiZGVsZXRlTWFjcm9CdXR0b25cXFwiIGNsYXNzPVxcXCJidG4gYnRuLWRlZmF1bHQgYnRuLXNtYWxsIGJ0bi1yZWRcXFwiPlxcbiAgICAgICAgICAgICAgICBEZWxldGVcXG4gICAgICAgICAgICA8L2J1dHRvbj5cXG4gICAgICAgIDwlfSU+XFxuICAgICAgICA8YnV0dG9uIGlkPVxcXCJzYXZlTWFjcm9CdXR0b25cXFwiIGNsYXNzPVxcXCJidG4gYnRuLWRlZmF1bHQgYnRuLXNtYWxsXFxcIiBzdHlsZT1cXFwibWFyZ2luLWxlZnQ6OHB4O1xcXCI+XFxuICAgICAgICAgICAgU2F2ZVxcbiAgICAgICAgPC9idXR0b24+XFxuICAgIDwvZGl2PlxcbjwvZGl2PlxcbjxkaXYgaWQ9XFxcImRldGFpbENvbnRhaW5lclxcXCIgY2xhc3M9XFxcIm1hY3JvIG1haW4tY29udGFpbmVyXFxcIj5cXG4gICAgPGRpdiBjbGFzcz1cXFwiZm9ybSBmb3JtLWlubGluZVxcXCIgcm9sZT1cXFwiZm9ybVxcXCI+XFxuICAgICAgICA8ZGl2IGNsYXNzPVxcXCJmb3JtLWdyb3VwXFxcIiBzdHlsZT1cXFwid2lkdGg6MjAlO2Rpc3BsYXk6aW5saW5lLWJsb2NrO1xcXCI+XFxuICAgICAgICAgICAgPGxhYmVsIGNsYXNzPVxcXCJzci1vbmx5XFxcIiBmb3I9XFxcIm5hbWVcXFwiIHN0eWxlPVxcXCJtYXJnaW4tYm90dG9tOjBweDtcXFwiPk5hbWU8L2xhYmVsPlxcbiAgICAgICAgICAgIDxpbnB1dCB2YWx1ZT1cXFwiPCUtbWFjcm8ubmFtZSU+XFxcIiB0eXBlPVxcXCJ0ZXh0XFxcIiBjbGFzcz1cXFwiZm9ybS1jb250cm9sXFxcIiBpZD1cXFwibmFtZVxcXCIgbmFtZT1cXFwibmFtZVxcXCIgcGxhY2Vob2xkZXI9XFxcIkVudGVyIG5hbWVcXFwiPlxcbiAgICAgICAgPC9kaXY+XFxuICAgICAgICA8ZGl2IGNsYXNzPVxcXCJmb3JtLWdyb3VwXFxcIiBzdHlsZT1cXFwid2lkdGg6NzklO2Rpc3BsYXk6aW5saW5lLWJsb2NrO1xcXCI+XFxuICAgICAgICAgICAgPGxhYmVsIGNsYXNzPVxcXCJzci1vbmx5XFxcIiBmb3I9XFxcImRlc2NyaXB0aW9uXFxcIiBzdHlsZT1cXFwibWFyZ2luLWJvdHRvbTowcHg7XFxcIj5EZXNjcmlwdGlvbjwvbGFiZWw+XFxuICAgICAgICAgICAgPGlucHV0IHZhbHVlPVxcXCI8JS1tYWNyby5kZXNjcmlwdGlvbiU+XFxcIiB0eXBlPVxcXCJ0ZXh0XFxcIiBjbGFzcz1cXFwiZm9ybS1jb250cm9sXFxcIiBpZD1cXFwiZGVzY3JpcHRpb25cXFwiIG5hbWU9XFxcImRlc2NyaXB0aW9uXFxcIiBwbGFjZWhvbGRlcj1cXFwiRW50ZXIgZGVzY3JpcHRpb25cXFwiPlxcbiAgICAgICAgPC9kaXY+XFxuICAgIDwvZGl2PlxcbjwvZGl2PlxcblwiIl0sIm1hcHBpbmdzIjoiQUFBQSIsInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/text-loader/index.js!./src/templates/macro.detail.html\n");

/***/ }),

/***/ "./node_modules/text-loader/index.js!./src/templates/macro.filter.html":
/*!********************************************************************!*\
  !*** ./node_modules/text-loader!./src/templates/macro.filter.html ***!
  \********************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("module.exports = \"\"//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvdGV4dC1sb2FkZXIvaW5kZXguanMhLi9zcmMvdGVtcGxhdGVzL21hY3JvLmZpbHRlci5odG1sLmpzIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vLy4vc3JjL3RlbXBsYXRlcy9tYWNyby5maWx0ZXIuaHRtbD8wYWZkIl0sInNvdXJjZXNDb250ZW50IjpbIm1vZHVsZS5leHBvcnRzID0gXCJcIiJdLCJtYXBwaW5ncyI6IkFBQUEiLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/text-loader/index.js!./src/templates/macro.filter.html\n");

/***/ }),

/***/ "./node_modules/text-loader/index.js!./src/templates/macro.selectable.html":
/*!************************************************************************!*\
  !*** ./node_modules/text-loader!./src/templates/macro.selectable.html ***!
  \************************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("module.exports = \"<!--\\n    Licensed under the Apache License, Version 2.0 (the \\\"License\\\");\\n    you may not use this file except in compliance with the License.\\n    You may obtain a copy of the License at\\n\\n    http://www.apache.org/licenses/LICENSE-2.0\\n\\n    Unless required by applicable law or agreed to in writing, software\\n    distributed under the License is distributed on an \\\"AS IS\\\" BASIS,\\n    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\\n    See the License for the specific language governing permissions and\\n    limitations under the License.\\n-->\\n<a href=\\\"#macros/create\\\" class='btn btn-default btn-small' style=\\\"margin:0px 4px;\\\">\\n    Create\\n</a>\\n<button class='btn btn-default checkbox-button' style=\\\"margin:0px 4px;\\\">\\n    <span class=\\\"checkbox\\\"></span>\\n    <span id=\\\"selectedCount\\\"></span>\\n</button>\\n<div class='btn-group'>\\n    <button id=\\\"deleteMacroButton\\\" class='btn btn-default btn-red btn-hide-zero'>\\n        Delete\\n    </button>\\n</div>\\n\"//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvdGV4dC1sb2FkZXIvaW5kZXguanMhLi9zcmMvdGVtcGxhdGVzL21hY3JvLnNlbGVjdGFibGUuaHRtbC5qcyIsInNvdXJjZXMiOlsid2VicGFjazovLy8uL3NyYy90ZW1wbGF0ZXMvbWFjcm8uc2VsZWN0YWJsZS5odG1sPzcxZDgiXSwic291cmNlc0NvbnRlbnQiOlsibW9kdWxlLmV4cG9ydHMgPSBcIjwhLS1cXG4gICAgTGljZW5zZWQgdW5kZXIgdGhlIEFwYWNoZSBMaWNlbnNlLCBWZXJzaW9uIDIuMCAodGhlIFxcXCJMaWNlbnNlXFxcIik7XFxuICAgIHlvdSBtYXkgbm90IHVzZSB0aGlzIGZpbGUgZXhjZXB0IGluIGNvbXBsaWFuY2Ugd2l0aCB0aGUgTGljZW5zZS5cXG4gICAgWW91IG1heSBvYnRhaW4gYSBjb3B5IG9mIHRoZSBMaWNlbnNlIGF0XFxuXFxuICAgIGh0dHA6Ly93d3cuYXBhY2hlLm9yZy9saWNlbnNlcy9MSUNFTlNFLTIuMFxcblxcbiAgICBVbmxlc3MgcmVxdWlyZWQgYnkgYXBwbGljYWJsZSBsYXcgb3IgYWdyZWVkIHRvIGluIHdyaXRpbmcsIHNvZnR3YXJlXFxuICAgIGRpc3RyaWJ1dGVkIHVuZGVyIHRoZSBMaWNlbnNlIGlzIGRpc3RyaWJ1dGVkIG9uIGFuIFxcXCJBUyBJU1xcXCIgQkFTSVMsXFxuICAgIFdJVEhPVVQgV0FSUkFOVElFUyBPUiBDT05ESVRJT05TIE9GIEFOWSBLSU5ELCBlaXRoZXIgZXhwcmVzcyBvciBpbXBsaWVkLlxcbiAgICBTZWUgdGhlIExpY2Vuc2UgZm9yIHRoZSBzcGVjaWZpYyBsYW5ndWFnZSBnb3Zlcm5pbmcgcGVybWlzc2lvbnMgYW5kXFxuICAgIGxpbWl0YXRpb25zIHVuZGVyIHRoZSBMaWNlbnNlLlxcbi0tPlxcbjxhIGhyZWY9XFxcIiNtYWNyb3MvY3JlYXRlXFxcIiBjbGFzcz0nYnRuIGJ0bi1kZWZhdWx0IGJ0bi1zbWFsbCcgc3R5bGU9XFxcIm1hcmdpbjowcHggNHB4O1xcXCI+XFxuICAgIENyZWF0ZVxcbjwvYT5cXG48YnV0dG9uIGNsYXNzPSdidG4gYnRuLWRlZmF1bHQgY2hlY2tib3gtYnV0dG9uJyBzdHlsZT1cXFwibWFyZ2luOjBweCA0cHg7XFxcIj5cXG4gICAgPHNwYW4gY2xhc3M9XFxcImNoZWNrYm94XFxcIj48L3NwYW4+XFxuICAgIDxzcGFuIGlkPVxcXCJzZWxlY3RlZENvdW50XFxcIj48L3NwYW4+XFxuPC9idXR0b24+XFxuPGRpdiBjbGFzcz0nYnRuLWdyb3VwJz5cXG4gICAgPGJ1dHRvbiBpZD1cXFwiZGVsZXRlTWFjcm9CdXR0b25cXFwiIGNsYXNzPSdidG4gYnRuLWRlZmF1bHQgYnRuLXJlZCBidG4taGlkZS16ZXJvJz5cXG4gICAgICAgIERlbGV0ZVxcbiAgICA8L2J1dHRvbj5cXG48L2Rpdj5cXG5cIiJdLCJtYXBwaW5ncyI6IkFBQUEiLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/text-loader/index.js!./src/templates/macro.selectable.html\n");

/***/ }),

/***/ "./node_modules/text-loader/index.js!./src/templates/settings.rebalance.html":
/*!**************************************************************************!*\
  !*** ./node_modules/text-loader!./src/templates/settings.rebalance.html ***!
  \**************************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("module.exports = \"<!--\\n    Licensed under the Apache License, Version 2.0 (the \\\"License\\\");\\n    you may not use this file except in compliance with the License.\\n    You may obtain a copy of the License at\\n\\n    http://www.apache.org/licenses/LICENSE-2.0\\n\\n    Unless required by applicable law or agreed to in writing, software\\n    distributed under the License is distributed on an \\\"AS IS\\\" BASIS,\\n    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\\n    See the License for the specific language governing permissions and\\n    limitations under the License.\\n-->\\n<table id=\\\"rebalanceParamFormTable\\\" class=\\\"table table-bordered form-table\\\">\\n    <tr class=\\\"row\\\">\\n        <th colspan=\\\"2\\\">\\n            Cluster Balancing Configuration Parameters\\n            <button id=\\\"resetButton\\\" class=\\\"btn btn-default btn-small\\\" style=\\\"width:80px;float:right;margin-left:10px;\\\">Reset</button>\\n            <button id=\\\"saveButton\\\" class=\\\"btn btn-default btn-small btn-blue\\\" style=\\\"width:80px;float:right;\\\">Save</button>\\n        </th>\\n    </tr>\\n    <tr class=\\\"row\\\">\\n        <td width=\\\"30%\\\">Auto Balance Level</td>\\n        <td width=\\\"70%\\\">\\n            <input name=\\\"autoBalanceLevel\\\" class=\\\"form-control trackable\\\" style=\\\"margin:0px;\\\" type=\\\"number\\\" value=\\\"<%-autoBalanceLevel%>\\\"></input>\\n        </td>\\n    </tr>\\n    <tr class=\\\"row\\\">\\n        <td width=\\\"30%\\\">Bytes Moved Full Rebalance</td>\\n        <td width=\\\"70%\\\">\\n            <input name=\\\"bytesMovedFullRebalance\\\" class=\\\"form-control trackable\\\" style=\\\"margin:0px;\\\" type=\\\"number\\\" value=\\\"<%-bytesMovedFullRebalance%>\\\"></input>\\n        </td>\\n    </tr>\\n    <tr class=\\\"row\\\">\\n        <td width=\\\"30%\\\">Host Auto Balance Interval (millis)</td>\\n        <td width=\\\"70%\\\">\\n            <input name=\\\"hostAutobalanceIntervalMillis\\\" class=\\\"form-control trackable\\\" style=\\\"margin:0px;\\\" type=\\\"number\\\" value=\\\"<%-hostAutobalanceIntervalMillis%>\\\"></input>\\n        </td>\\n    </tr>\\n    <tr class=\\\"row\\\">\\n        <td width=\\\"30%\\\">Job Auto Balance Interval (millis)</td>\\n        <td width=\\\"70%\\\">\\n            <input name=\\\"jobAutobalanceIntervalMillis\\\" class=\\\"form-control trackable\\\" style=\\\"margin:0px;\\\" type=\\\"number\\\" value=\\\"<%-jobAutobalanceIntervalMillis%>\\\"></input>\\n        </td>\\n    </tr>\\n    <tr class=\\\"row\\\">\\n        <td width=\\\"30%\\\">Tasks Moved Full Rebalance</td>\\n        <td width=\\\"70%\\\">\\n            <input name=\\\"tasksMovedFullRebalance\\\" class=\\\"form-control trackable\\\" style=\\\"margin:0px;\\\" type=\\\"number\\\" value=\\\"<%-tasksMovedFullRebalance%>\\\"></input>\\n        </td>\\n    </tr>\\n</table>\\n\"//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvdGV4dC1sb2FkZXIvaW5kZXguanMhLi9zcmMvdGVtcGxhdGVzL3NldHRpbmdzLnJlYmFsYW5jZS5odG1sLmpzIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vLy4vc3JjL3RlbXBsYXRlcy9zZXR0aW5ncy5yZWJhbGFuY2UuaHRtbD9lOGRlIl0sInNvdXJjZXNDb250ZW50IjpbIm1vZHVsZS5leHBvcnRzID0gXCI8IS0tXFxuICAgIExpY2Vuc2VkIHVuZGVyIHRoZSBBcGFjaGUgTGljZW5zZSwgVmVyc2lvbiAyLjAgKHRoZSBcXFwiTGljZW5zZVxcXCIpO1xcbiAgICB5b3UgbWF5IG5vdCB1c2UgdGhpcyBmaWxlIGV4Y2VwdCBpbiBjb21wbGlhbmNlIHdpdGggdGhlIExpY2Vuc2UuXFxuICAgIFlvdSBtYXkgb2J0YWluIGEgY29weSBvZiB0aGUgTGljZW5zZSBhdFxcblxcbiAgICBodHRwOi8vd3d3LmFwYWNoZS5vcmcvbGljZW5zZXMvTElDRU5TRS0yLjBcXG5cXG4gICAgVW5sZXNzIHJlcXVpcmVkIGJ5IGFwcGxpY2FibGUgbGF3IG9yIGFncmVlZCB0byBpbiB3cml0aW5nLCBzb2Z0d2FyZVxcbiAgICBkaXN0cmlidXRlZCB1bmRlciB0aGUgTGljZW5zZSBpcyBkaXN0cmlidXRlZCBvbiBhbiBcXFwiQVMgSVNcXFwiIEJBU0lTLFxcbiAgICBXSVRIT1VUIFdBUlJBTlRJRVMgT1IgQ09ORElUSU9OUyBPRiBBTlkgS0lORCwgZWl0aGVyIGV4cHJlc3Mgb3IgaW1wbGllZC5cXG4gICAgU2VlIHRoZSBMaWNlbnNlIGZvciB0aGUgc3BlY2lmaWMgbGFuZ3VhZ2UgZ292ZXJuaW5nIHBlcm1pc3Npb25zIGFuZFxcbiAgICBsaW1pdGF0aW9ucyB1bmRlciB0aGUgTGljZW5zZS5cXG4tLT5cXG48dGFibGUgaWQ9XFxcInJlYmFsYW5jZVBhcmFtRm9ybVRhYmxlXFxcIiBjbGFzcz1cXFwidGFibGUgdGFibGUtYm9yZGVyZWQgZm9ybS10YWJsZVxcXCI+XFxuICAgIDx0ciBjbGFzcz1cXFwicm93XFxcIj5cXG4gICAgICAgIDx0aCBjb2xzcGFuPVxcXCIyXFxcIj5cXG4gICAgICAgICAgICBDbHVzdGVyIEJhbGFuY2luZyBDb25maWd1cmF0aW9uIFBhcmFtZXRlcnNcXG4gICAgICAgICAgICA8YnV0dG9uIGlkPVxcXCJyZXNldEJ1dHRvblxcXCIgY2xhc3M9XFxcImJ0biBidG4tZGVmYXVsdCBidG4tc21hbGxcXFwiIHN0eWxlPVxcXCJ3aWR0aDo4MHB4O2Zsb2F0OnJpZ2h0O21hcmdpbi1sZWZ0OjEwcHg7XFxcIj5SZXNldDwvYnV0dG9uPlxcbiAgICAgICAgICAgIDxidXR0b24gaWQ9XFxcInNhdmVCdXR0b25cXFwiIGNsYXNzPVxcXCJidG4gYnRuLWRlZmF1bHQgYnRuLXNtYWxsIGJ0bi1ibHVlXFxcIiBzdHlsZT1cXFwid2lkdGg6ODBweDtmbG9hdDpyaWdodDtcXFwiPlNhdmU8L2J1dHRvbj5cXG4gICAgICAgIDwvdGg+XFxuICAgIDwvdHI+XFxuICAgIDx0ciBjbGFzcz1cXFwicm93XFxcIj5cXG4gICAgICAgIDx0ZCB3aWR0aD1cXFwiMzAlXFxcIj5BdXRvIEJhbGFuY2UgTGV2ZWw8L3RkPlxcbiAgICAgICAgPHRkIHdpZHRoPVxcXCI3MCVcXFwiPlxcbiAgICAgICAgICAgIDxpbnB1dCBuYW1lPVxcXCJhdXRvQmFsYW5jZUxldmVsXFxcIiBjbGFzcz1cXFwiZm9ybS1jb250cm9sIHRyYWNrYWJsZVxcXCIgc3R5bGU9XFxcIm1hcmdpbjowcHg7XFxcIiB0eXBlPVxcXCJudW1iZXJcXFwiIHZhbHVlPVxcXCI8JS1hdXRvQmFsYW5jZUxldmVsJT5cXFwiPjwvaW5wdXQ+XFxuICAgICAgICA8L3RkPlxcbiAgICA8L3RyPlxcbiAgICA8dHIgY2xhc3M9XFxcInJvd1xcXCI+XFxuICAgICAgICA8dGQgd2lkdGg9XFxcIjMwJVxcXCI+Qnl0ZXMgTW92ZWQgRnVsbCBSZWJhbGFuY2U8L3RkPlxcbiAgICAgICAgPHRkIHdpZHRoPVxcXCI3MCVcXFwiPlxcbiAgICAgICAgICAgIDxpbnB1dCBuYW1lPVxcXCJieXRlc01vdmVkRnVsbFJlYmFsYW5jZVxcXCIgY2xhc3M9XFxcImZvcm0tY29udHJvbCB0cmFja2FibGVcXFwiIHN0eWxlPVxcXCJtYXJnaW46MHB4O1xcXCIgdHlwZT1cXFwibnVtYmVyXFxcIiB2YWx1ZT1cXFwiPCUtYnl0ZXNNb3ZlZEZ1bGxSZWJhbGFuY2UlPlxcXCI+PC9pbnB1dD5cXG4gICAgICAgIDwvdGQ+XFxuICAgIDwvdHI+XFxuICAgIDx0ciBjbGFzcz1cXFwicm93XFxcIj5cXG4gICAgICAgIDx0ZCB3aWR0aD1cXFwiMzAlXFxcIj5Ib3N0IEF1dG8gQmFsYW5jZSBJbnRlcnZhbCAobWlsbGlzKTwvdGQ+XFxuICAgICAgICA8dGQgd2lkdGg9XFxcIjcwJVxcXCI+XFxuICAgICAgICAgICAgPGlucHV0IG5hbWU9XFxcImhvc3RBdXRvYmFsYW5jZUludGVydmFsTWlsbGlzXFxcIiBjbGFzcz1cXFwiZm9ybS1jb250cm9sIHRyYWNrYWJsZVxcXCIgc3R5bGU9XFxcIm1hcmdpbjowcHg7XFxcIiB0eXBlPVxcXCJudW1iZXJcXFwiIHZhbHVlPVxcXCI8JS1ob3N0QXV0b2JhbGFuY2VJbnRlcnZhbE1pbGxpcyU+XFxcIj48L2lucHV0PlxcbiAgICAgICAgPC90ZD5cXG4gICAgPC90cj5cXG4gICAgPHRyIGNsYXNzPVxcXCJyb3dcXFwiPlxcbiAgICAgICAgPHRkIHdpZHRoPVxcXCIzMCVcXFwiPkpvYiBBdXRvIEJhbGFuY2UgSW50ZXJ2YWwgKG1pbGxpcyk8L3RkPlxcbiAgICAgICAgPHRkIHdpZHRoPVxcXCI3MCVcXFwiPlxcbiAgICAgICAgICAgIDxpbnB1dCBuYW1lPVxcXCJqb2JBdXRvYmFsYW5jZUludGVydmFsTWlsbGlzXFxcIiBjbGFzcz1cXFwiZm9ybS1jb250cm9sIHRyYWNrYWJsZVxcXCIgc3R5bGU9XFxcIm1hcmdpbjowcHg7XFxcIiB0eXBlPVxcXCJudW1iZXJcXFwiIHZhbHVlPVxcXCI8JS1qb2JBdXRvYmFsYW5jZUludGVydmFsTWlsbGlzJT5cXFwiPjwvaW5wdXQ+XFxuICAgICAgICA8L3RkPlxcbiAgICA8L3RyPlxcbiAgICA8dHIgY2xhc3M9XFxcInJvd1xcXCI+XFxuICAgICAgICA8dGQgd2lkdGg9XFxcIjMwJVxcXCI+VGFza3MgTW92ZWQgRnVsbCBSZWJhbGFuY2U8L3RkPlxcbiAgICAgICAgPHRkIHdpZHRoPVxcXCI3MCVcXFwiPlxcbiAgICAgICAgICAgIDxpbnB1dCBuYW1lPVxcXCJ0YXNrc01vdmVkRnVsbFJlYmFsYW5jZVxcXCIgY2xhc3M9XFxcImZvcm0tY29udHJvbCB0cmFja2FibGVcXFwiIHN0eWxlPVxcXCJtYXJnaW46MHB4O1xcXCIgdHlwZT1cXFwibnVtYmVyXFxcIiB2YWx1ZT1cXFwiPCUtdGFza3NNb3ZlZEZ1bGxSZWJhbGFuY2UlPlxcXCI+PC9pbnB1dD5cXG4gICAgICAgIDwvdGQ+XFxuICAgIDwvdHI+XFxuPC90YWJsZT5cXG5cIiJdLCJtYXBwaW5ncyI6IkFBQUEiLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/text-loader/index.js!./src/templates/settings.rebalance.html\n");

/***/ }),

/***/ "./node_modules/text-loader/index.js!./src/templates/task.breadcrumbs.html":
/*!************************************************************************!*\
  !*** ./node_modules/text-loader!./src/templates/task.breadcrumbs.html ***!
  \************************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("module.exports = \"<!--\\n    Licensed under the Apache License, Version 2.0 (the \\\"License\\\");\\n    you may not use this file except in compliance with the License.\\n    You may obtain a copy of the License at\\n\\n    http://www.apache.org/licenses/LICENSE-2.0\\n\\n    Unless required by applicable law or agreed to in writing, software\\n    distributed under the License is distributed on an \\\"AS IS\\\" BASIS,\\n    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\\n    See the License for the specific language governing permissions and\\n    limitations under the License.\\n-->\\n<div>\\n    <ul class=\\\"breadcrumb pull-left\\\" style=\\\"display: inline; background-color: transparent;margin:0px;padding-top:0px;padding-bottom:0px;padding-left:4px;\\\">\\n        <li>\\n            <a href=\\\"#jobs/<%-task.jobUuid%>/quick\\\">All Tasks</a>\\n        </li>\\n        <li class=\\\"active\\\">\\n            <%-task.node%>\\n        </li>\\n    </ul>\\n</div>\\n\"//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvdGV4dC1sb2FkZXIvaW5kZXguanMhLi9zcmMvdGVtcGxhdGVzL3Rhc2suYnJlYWRjcnVtYnMuaHRtbC5qcyIsInNvdXJjZXMiOlsid2VicGFjazovLy8uL3NyYy90ZW1wbGF0ZXMvdGFzay5icmVhZGNydW1icy5odG1sP2I4MzQiXSwic291cmNlc0NvbnRlbnQiOlsibW9kdWxlLmV4cG9ydHMgPSBcIjwhLS1cXG4gICAgTGljZW5zZWQgdW5kZXIgdGhlIEFwYWNoZSBMaWNlbnNlLCBWZXJzaW9uIDIuMCAodGhlIFxcXCJMaWNlbnNlXFxcIik7XFxuICAgIHlvdSBtYXkgbm90IHVzZSB0aGlzIGZpbGUgZXhjZXB0IGluIGNvbXBsaWFuY2Ugd2l0aCB0aGUgTGljZW5zZS5cXG4gICAgWW91IG1heSBvYnRhaW4gYSBjb3B5IG9mIHRoZSBMaWNlbnNlIGF0XFxuXFxuICAgIGh0dHA6Ly93d3cuYXBhY2hlLm9yZy9saWNlbnNlcy9MSUNFTlNFLTIuMFxcblxcbiAgICBVbmxlc3MgcmVxdWlyZWQgYnkgYXBwbGljYWJsZSBsYXcgb3IgYWdyZWVkIHRvIGluIHdyaXRpbmcsIHNvZnR3YXJlXFxuICAgIGRpc3RyaWJ1dGVkIHVuZGVyIHRoZSBMaWNlbnNlIGlzIGRpc3RyaWJ1dGVkIG9uIGFuIFxcXCJBUyBJU1xcXCIgQkFTSVMsXFxuICAgIFdJVEhPVVQgV0FSUkFOVElFUyBPUiBDT05ESVRJT05TIE9GIEFOWSBLSU5ELCBlaXRoZXIgZXhwcmVzcyBvciBpbXBsaWVkLlxcbiAgICBTZWUgdGhlIExpY2Vuc2UgZm9yIHRoZSBzcGVjaWZpYyBsYW5ndWFnZSBnb3Zlcm5pbmcgcGVybWlzc2lvbnMgYW5kXFxuICAgIGxpbWl0YXRpb25zIHVuZGVyIHRoZSBMaWNlbnNlLlxcbi0tPlxcbjxkaXY+XFxuICAgIDx1bCBjbGFzcz1cXFwiYnJlYWRjcnVtYiBwdWxsLWxlZnRcXFwiIHN0eWxlPVxcXCJkaXNwbGF5OiBpbmxpbmU7IGJhY2tncm91bmQtY29sb3I6IHRyYW5zcGFyZW50O21hcmdpbjowcHg7cGFkZGluZy10b3A6MHB4O3BhZGRpbmctYm90dG9tOjBweDtwYWRkaW5nLWxlZnQ6NHB4O1xcXCI+XFxuICAgICAgICA8bGk+XFxuICAgICAgICAgICAgPGEgaHJlZj1cXFwiI2pvYnMvPCUtdGFzay5qb2JVdWlkJT4vcXVpY2tcXFwiPkFsbCBUYXNrczwvYT5cXG4gICAgICAgIDwvbGk+XFxuICAgICAgICA8bGkgY2xhc3M9XFxcImFjdGl2ZVxcXCI+XFxuICAgICAgICAgICAgPCUtdGFzay5ub2RlJT5cXG4gICAgICAgIDwvbGk+XFxuICAgIDwvdWw+XFxuPC9kaXY+XFxuXCIiXSwibWFwcGluZ3MiOiJBQUFBIiwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/text-loader/index.js!./src/templates/task.breadcrumbs.html\n");

/***/ }),

/***/ "./node_modules/text-loader/index.js!./src/templates/task.detail.divider.html":
/*!***************************************************************************!*\
  !*** ./node_modules/text-loader!./src/templates/task.detail.divider.html ***!
  \***************************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("module.exports = \"<!--\\n    Licensed under the Apache License, Version 2.0 (the \\\"License\\\");\\n    you may not use this file except in compliance with the License.\\n    You may obtain a copy of the License at\\n\\n    http://www.apache.org/licenses/LICENSE-2.0\\n\\n    Unless required by applicable law or agreed to in writing, software\\n    distributed under the License is distributed on an \\\"AS IS\\\" BASIS,\\n    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\\n    See the License for the specific language governing permissions and\\n    limitations under the License.\\n-->\\n<div>\\n    <div class=\\\"pull-left\\\">\\n        <span style=\\\"font-weight:bold;\\\">ID:</span>\\n        <span><%-job.id%></span>\\n        <span style=\\\"font-weight:bold;\\\">Description:</span>\\n        <span><%-job.description%></span>\\n    </div>\\n    <a href=\\\"#jobs\\\" class=\\\"pull-right\\\" style=\\\"text-decoration: none; font-weight:bold;cursor:pointer;margin-right:5px;\\\">X</a>\\n</div>\\n\"//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvdGV4dC1sb2FkZXIvaW5kZXguanMhLi9zcmMvdGVtcGxhdGVzL3Rhc2suZGV0YWlsLmRpdmlkZXIuaHRtbC5qcyIsInNvdXJjZXMiOlsid2VicGFjazovLy8uL3NyYy90ZW1wbGF0ZXMvdGFzay5kZXRhaWwuZGl2aWRlci5odG1sP2M3MGEiXSwic291cmNlc0NvbnRlbnQiOlsibW9kdWxlLmV4cG9ydHMgPSBcIjwhLS1cXG4gICAgTGljZW5zZWQgdW5kZXIgdGhlIEFwYWNoZSBMaWNlbnNlLCBWZXJzaW9uIDIuMCAodGhlIFxcXCJMaWNlbnNlXFxcIik7XFxuICAgIHlvdSBtYXkgbm90IHVzZSB0aGlzIGZpbGUgZXhjZXB0IGluIGNvbXBsaWFuY2Ugd2l0aCB0aGUgTGljZW5zZS5cXG4gICAgWW91IG1heSBvYnRhaW4gYSBjb3B5IG9mIHRoZSBMaWNlbnNlIGF0XFxuXFxuICAgIGh0dHA6Ly93d3cuYXBhY2hlLm9yZy9saWNlbnNlcy9MSUNFTlNFLTIuMFxcblxcbiAgICBVbmxlc3MgcmVxdWlyZWQgYnkgYXBwbGljYWJsZSBsYXcgb3IgYWdyZWVkIHRvIGluIHdyaXRpbmcsIHNvZnR3YXJlXFxuICAgIGRpc3RyaWJ1dGVkIHVuZGVyIHRoZSBMaWNlbnNlIGlzIGRpc3RyaWJ1dGVkIG9uIGFuIFxcXCJBUyBJU1xcXCIgQkFTSVMsXFxuICAgIFdJVEhPVVQgV0FSUkFOVElFUyBPUiBDT05ESVRJT05TIE9GIEFOWSBLSU5ELCBlaXRoZXIgZXhwcmVzcyBvciBpbXBsaWVkLlxcbiAgICBTZWUgdGhlIExpY2Vuc2UgZm9yIHRoZSBzcGVjaWZpYyBsYW5ndWFnZSBnb3Zlcm5pbmcgcGVybWlzc2lvbnMgYW5kXFxuICAgIGxpbWl0YXRpb25zIHVuZGVyIHRoZSBMaWNlbnNlLlxcbi0tPlxcbjxkaXY+XFxuICAgIDxkaXYgY2xhc3M9XFxcInB1bGwtbGVmdFxcXCI+XFxuICAgICAgICA8c3BhbiBzdHlsZT1cXFwiZm9udC13ZWlnaHQ6Ym9sZDtcXFwiPklEOjwvc3Bhbj5cXG4gICAgICAgIDxzcGFuPjwlLWpvYi5pZCU+PC9zcGFuPlxcbiAgICAgICAgPHNwYW4gc3R5bGU9XFxcImZvbnQtd2VpZ2h0OmJvbGQ7XFxcIj5EZXNjcmlwdGlvbjo8L3NwYW4+XFxuICAgICAgICA8c3Bhbj48JS1qb2IuZGVzY3JpcHRpb24lPjwvc3Bhbj5cXG4gICAgPC9kaXY+XFxuICAgIDxhIGhyZWY9XFxcIiNqb2JzXFxcIiBjbGFzcz1cXFwicHVsbC1yaWdodFxcXCIgc3R5bGU9XFxcInRleHQtZGVjb3JhdGlvbjogbm9uZTsgZm9udC13ZWlnaHQ6Ym9sZDtjdXJzb3I6cG9pbnRlcjttYXJnaW4tcmlnaHQ6NXB4O1xcXCI+WDwvYT5cXG48L2Rpdj5cXG5cIiJdLCJtYXBwaW5ncyI6IkFBQUEiLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/text-loader/index.js!./src/templates/task.detail.divider.html\n");

/***/ }),

/***/ "./node_modules/text-loader/index.js!./src/templates/task.detail.html":
/*!*******************************************************************!*\
  !*** ./node_modules/text-loader!./src/templates/task.detail.html ***!
  \*******************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("module.exports = \"<!--\\n    Licensed under the Apache License, Version 2.0 (the \\\"License\\\");\\n    you may not use this file except in compliance with the License.\\n    You may obtain a copy of the License at\\n\\n    http://www.apache.org/licenses/LICENSE-2.0\\n\\n    Unless required by applicable law or agreed to in writing, software\\n    distributed under the License is distributed on an \\\"AS IS\\\" BASIS,\\n    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\\n    See the License for the specific language governing permissions and\\n    limitations under the License.\\n-->\\n<div style=\\\"flex: 1;width:100%;flex-basis: auto;flex-grow: 1;\\\" class=\\\"task-actions\\\">\\n    <div class=\\\"btn-group pull-left\\\" style=\\\"width:43%;\\\">\\n        <button id=\\\"kickTaskButton\\\" class=\\\"btn btn-default btn-small btn-green task-action\\\">\\n            Kick\\n        </button>\\n        <button id=\\\"stopTaskButton\\\" class=\\\"btn btn-default btn-small btn-red task-action\\\">\\n            Stop\\n        </button>\\n        <button id=\\\"killTaskButton\\\" class=\\\"btn btn-default btn-small btn-red task-action\\\">\\n            Kill\\n        </button>\\n        <button id=\\\"revertTaskButton\\\" class=\\\"btn btn-default btn-small task-action\\\">\\n            Revert\\n        </button>\\n        <span id=\\\"taskHost\\\" style=\\\"margin-left:10px;\\\"></span>\\n        <span id=\\\"taskLabel\\\" style=\\\"margin-left:10px;\\\"></span>\\n    </div>\\n    <div class=\\\"btn-group pull-right\\\" style=\\\"width:57%;\\\">\\n        <div class=\\\"btn-group log-types pull-right\\\" style=\\\"margin:0 0 0 20px;min-height:0px;\\\" data-toggle=\\\"buttons-radio\\\">\\n            <button id=\\\"stdoutButton\\\" class=\\\"btn btn-default btn-tiny <%-(stdout?'active':'')%>\\\" data-toggle=\\\"button\\\">stdout</button>\\n            <button id=\\\"stderrButton\\\" class=\\\"btn btn-default btn-tiny <%-(!stdout?'active':'')%>\\\" data-toggle=\\\"button\\\">stderr</button>\\n        </div>\\n        <div style=\\\"margin:0px;min-height:0px;display:inline;\\\" class=\\\"log-control-button pull-right\\\" data-toggle=\\\"buttons-radio\\\">\\n            <button id=\\\"rollButton\\\" data-value=\\\"0\\\" class=\\\"btn btn-default btn-tiny log-action <%-(_.isEqual(type,0)?'active':'')%>\\\" data-toggle=\\\"button\\\" style=\\\"width: 50px;\\\">roll</button>\\n            <button id=\\\"tailButton\\\" data-value=\\\"1\\\" class=\\\"btn btn-default btn-tiny log-action <%-(_.isEqual(type,1)?'active':'')%>\\\" data-toggle=\\\"button\\\" style=\\\"width: 50px;\\\">tail</button>\\n            <button id=\\\"headButton\\\" data-value=\\\"2\\\" class=\\\"btn btn-default btn-tiny log-action <%-(_.isEqual(type,2)?'active':'')%>\\\" data-toggle=\\\"button\\\" style=\\\"width: 50px;\\\">head</button>\\n            <input id=\\\"linesInput\\\" type=\\\"text\\\" style=\\\"padding: 0px; margin: 0px 0px 0px 10px; width: 40px;\\\" value=\\\"<%-lines%>\\\">\\n            <span>lines</span>\\n            <input id=\\\"runsAgoInput\\\" type=\\\"number\\\" style=\\\"padding: 0px; margin: 0px 0px 0px 10px; width: 40px;\\\" value=\\\"<%-runsAgo%>\\\">\\n            <span>runs ago</span>\\n        </div>\\n    </div>\\n</div>\\n<div style=\\\"width: 100%;position: relative;flex: 1;overflow: auto;flex-basis: auto;flex-grow: 100;\\\">\\n    <pre id=\\\"logContainer\\\" style=\\\"width:100%;\\\" class=\\\"log-container\\\">\\n    </pre>\\n</div>\\n\"//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvdGV4dC1sb2FkZXIvaW5kZXguanMhLi9zcmMvdGVtcGxhdGVzL3Rhc2suZGV0YWlsLmh0bWwuanMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9zcmMvdGVtcGxhdGVzL3Rhc2suZGV0YWlsLmh0bWw/ZGYyNSJdLCJzb3VyY2VzQ29udGVudCI6WyJtb2R1bGUuZXhwb3J0cyA9IFwiPCEtLVxcbiAgICBMaWNlbnNlZCB1bmRlciB0aGUgQXBhY2hlIExpY2Vuc2UsIFZlcnNpb24gMi4wICh0aGUgXFxcIkxpY2Vuc2VcXFwiKTtcXG4gICAgeW91IG1heSBub3QgdXNlIHRoaXMgZmlsZSBleGNlcHQgaW4gY29tcGxpYW5jZSB3aXRoIHRoZSBMaWNlbnNlLlxcbiAgICBZb3UgbWF5IG9idGFpbiBhIGNvcHkgb2YgdGhlIExpY2Vuc2UgYXRcXG5cXG4gICAgaHR0cDovL3d3dy5hcGFjaGUub3JnL2xpY2Vuc2VzL0xJQ0VOU0UtMi4wXFxuXFxuICAgIFVubGVzcyByZXF1aXJlZCBieSBhcHBsaWNhYmxlIGxhdyBvciBhZ3JlZWQgdG8gaW4gd3JpdGluZywgc29mdHdhcmVcXG4gICAgZGlzdHJpYnV0ZWQgdW5kZXIgdGhlIExpY2Vuc2UgaXMgZGlzdHJpYnV0ZWQgb24gYW4gXFxcIkFTIElTXFxcIiBCQVNJUyxcXG4gICAgV0lUSE9VVCBXQVJSQU5USUVTIE9SIENPTkRJVElPTlMgT0YgQU5ZIEtJTkQsIGVpdGhlciBleHByZXNzIG9yIGltcGxpZWQuXFxuICAgIFNlZSB0aGUgTGljZW5zZSBmb3IgdGhlIHNwZWNpZmljIGxhbmd1YWdlIGdvdmVybmluZyBwZXJtaXNzaW9ucyBhbmRcXG4gICAgbGltaXRhdGlvbnMgdW5kZXIgdGhlIExpY2Vuc2UuXFxuLS0+XFxuPGRpdiBzdHlsZT1cXFwiZmxleDogMTt3aWR0aDoxMDAlO2ZsZXgtYmFzaXM6IGF1dG87ZmxleC1ncm93OiAxO1xcXCIgY2xhc3M9XFxcInRhc2stYWN0aW9uc1xcXCI+XFxuICAgIDxkaXYgY2xhc3M9XFxcImJ0bi1ncm91cCBwdWxsLWxlZnRcXFwiIHN0eWxlPVxcXCJ3aWR0aDo0MyU7XFxcIj5cXG4gICAgICAgIDxidXR0b24gaWQ9XFxcImtpY2tUYXNrQnV0dG9uXFxcIiBjbGFzcz1cXFwiYnRuIGJ0bi1kZWZhdWx0IGJ0bi1zbWFsbCBidG4tZ3JlZW4gdGFzay1hY3Rpb25cXFwiPlxcbiAgICAgICAgICAgIEtpY2tcXG4gICAgICAgIDwvYnV0dG9uPlxcbiAgICAgICAgPGJ1dHRvbiBpZD1cXFwic3RvcFRhc2tCdXR0b25cXFwiIGNsYXNzPVxcXCJidG4gYnRuLWRlZmF1bHQgYnRuLXNtYWxsIGJ0bi1yZWQgdGFzay1hY3Rpb25cXFwiPlxcbiAgICAgICAgICAgIFN0b3BcXG4gICAgICAgIDwvYnV0dG9uPlxcbiAgICAgICAgPGJ1dHRvbiBpZD1cXFwia2lsbFRhc2tCdXR0b25cXFwiIGNsYXNzPVxcXCJidG4gYnRuLWRlZmF1bHQgYnRuLXNtYWxsIGJ0bi1yZWQgdGFzay1hY3Rpb25cXFwiPlxcbiAgICAgICAgICAgIEtpbGxcXG4gICAgICAgIDwvYnV0dG9uPlxcbiAgICAgICAgPGJ1dHRvbiBpZD1cXFwicmV2ZXJ0VGFza0J1dHRvblxcXCIgY2xhc3M9XFxcImJ0biBidG4tZGVmYXVsdCBidG4tc21hbGwgdGFzay1hY3Rpb25cXFwiPlxcbiAgICAgICAgICAgIFJldmVydFxcbiAgICAgICAgPC9idXR0b24+XFxuICAgICAgICA8c3BhbiBpZD1cXFwidGFza0hvc3RcXFwiIHN0eWxlPVxcXCJtYXJnaW4tbGVmdDoxMHB4O1xcXCI+PC9zcGFuPlxcbiAgICAgICAgPHNwYW4gaWQ9XFxcInRhc2tMYWJlbFxcXCIgc3R5bGU9XFxcIm1hcmdpbi1sZWZ0OjEwcHg7XFxcIj48L3NwYW4+XFxuICAgIDwvZGl2PlxcbiAgICA8ZGl2IGNsYXNzPVxcXCJidG4tZ3JvdXAgcHVsbC1yaWdodFxcXCIgc3R5bGU9XFxcIndpZHRoOjU3JTtcXFwiPlxcbiAgICAgICAgPGRpdiBjbGFzcz1cXFwiYnRuLWdyb3VwIGxvZy10eXBlcyBwdWxsLXJpZ2h0XFxcIiBzdHlsZT1cXFwibWFyZ2luOjAgMCAwIDIwcHg7bWluLWhlaWdodDowcHg7XFxcIiBkYXRhLXRvZ2dsZT1cXFwiYnV0dG9ucy1yYWRpb1xcXCI+XFxuICAgICAgICAgICAgPGJ1dHRvbiBpZD1cXFwic3Rkb3V0QnV0dG9uXFxcIiBjbGFzcz1cXFwiYnRuIGJ0bi1kZWZhdWx0IGJ0bi10aW55IDwlLShzdGRvdXQ/J2FjdGl2ZSc6JycpJT5cXFwiIGRhdGEtdG9nZ2xlPVxcXCJidXR0b25cXFwiPnN0ZG91dDwvYnV0dG9uPlxcbiAgICAgICAgICAgIDxidXR0b24gaWQ9XFxcInN0ZGVyckJ1dHRvblxcXCIgY2xhc3M9XFxcImJ0biBidG4tZGVmYXVsdCBidG4tdGlueSA8JS0oIXN0ZG91dD8nYWN0aXZlJzonJyklPlxcXCIgZGF0YS10b2dnbGU9XFxcImJ1dHRvblxcXCI+c3RkZXJyPC9idXR0b24+XFxuICAgICAgICA8L2Rpdj5cXG4gICAgICAgIDxkaXYgc3R5bGU9XFxcIm1hcmdpbjowcHg7bWluLWhlaWdodDowcHg7ZGlzcGxheTppbmxpbmU7XFxcIiBjbGFzcz1cXFwibG9nLWNvbnRyb2wtYnV0dG9uIHB1bGwtcmlnaHRcXFwiIGRhdGEtdG9nZ2xlPVxcXCJidXR0b25zLXJhZGlvXFxcIj5cXG4gICAgICAgICAgICA8YnV0dG9uIGlkPVxcXCJyb2xsQnV0dG9uXFxcIiBkYXRhLXZhbHVlPVxcXCIwXFxcIiBjbGFzcz1cXFwiYnRuIGJ0bi1kZWZhdWx0IGJ0bi10aW55IGxvZy1hY3Rpb24gPCUtKF8uaXNFcXVhbCh0eXBlLDApPydhY3RpdmUnOicnKSU+XFxcIiBkYXRhLXRvZ2dsZT1cXFwiYnV0dG9uXFxcIiBzdHlsZT1cXFwid2lkdGg6IDUwcHg7XFxcIj5yb2xsPC9idXR0b24+XFxuICAgICAgICAgICAgPGJ1dHRvbiBpZD1cXFwidGFpbEJ1dHRvblxcXCIgZGF0YS12YWx1ZT1cXFwiMVxcXCIgY2xhc3M9XFxcImJ0biBidG4tZGVmYXVsdCBidG4tdGlueSBsb2ctYWN0aW9uIDwlLShfLmlzRXF1YWwodHlwZSwxKT8nYWN0aXZlJzonJyklPlxcXCIgZGF0YS10b2dnbGU9XFxcImJ1dHRvblxcXCIgc3R5bGU9XFxcIndpZHRoOiA1MHB4O1xcXCI+dGFpbDwvYnV0dG9uPlxcbiAgICAgICAgICAgIDxidXR0b24gaWQ9XFxcImhlYWRCdXR0b25cXFwiIGRhdGEtdmFsdWU9XFxcIjJcXFwiIGNsYXNzPVxcXCJidG4gYnRuLWRlZmF1bHQgYnRuLXRpbnkgbG9nLWFjdGlvbiA8JS0oXy5pc0VxdWFsKHR5cGUsMik/J2FjdGl2ZSc6JycpJT5cXFwiIGRhdGEtdG9nZ2xlPVxcXCJidXR0b25cXFwiIHN0eWxlPVxcXCJ3aWR0aDogNTBweDtcXFwiPmhlYWQ8L2J1dHRvbj5cXG4gICAgICAgICAgICA8aW5wdXQgaWQ9XFxcImxpbmVzSW5wdXRcXFwiIHR5cGU9XFxcInRleHRcXFwiIHN0eWxlPVxcXCJwYWRkaW5nOiAwcHg7IG1hcmdpbjogMHB4IDBweCAwcHggMTBweDsgd2lkdGg6IDQwcHg7XFxcIiB2YWx1ZT1cXFwiPCUtbGluZXMlPlxcXCI+XFxuICAgICAgICAgICAgPHNwYW4+bGluZXM8L3NwYW4+XFxuICAgICAgICAgICAgPGlucHV0IGlkPVxcXCJydW5zQWdvSW5wdXRcXFwiIHR5cGU9XFxcIm51bWJlclxcXCIgc3R5bGU9XFxcInBhZGRpbmc6IDBweDsgbWFyZ2luOiAwcHggMHB4IDBweCAxMHB4OyB3aWR0aDogNDBweDtcXFwiIHZhbHVlPVxcXCI8JS1ydW5zQWdvJT5cXFwiPlxcbiAgICAgICAgICAgIDxzcGFuPnJ1bnMgYWdvPC9zcGFuPlxcbiAgICAgICAgPC9kaXY+XFxuICAgIDwvZGl2PlxcbjwvZGl2PlxcbjxkaXYgc3R5bGU9XFxcIndpZHRoOiAxMDAlO3Bvc2l0aW9uOiByZWxhdGl2ZTtmbGV4OiAxO292ZXJmbG93OiBhdXRvO2ZsZXgtYmFzaXM6IGF1dG87ZmxleC1ncm93OiAxMDA7XFxcIj5cXG4gICAgPHByZSBpZD1cXFwibG9nQ29udGFpbmVyXFxcIiBzdHlsZT1cXFwid2lkdGg6MTAwJTtcXFwiIGNsYXNzPVxcXCJsb2ctY29udGFpbmVyXFxcIj5cXG4gICAgPC9wcmU+XFxuPC9kaXY+XFxuXCIiXSwibWFwcGluZ3MiOiJBQUFBIiwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/text-loader/index.js!./src/templates/task.detail.html\n");

/***/ }),

/***/ "./node_modules/text-loader/index.js!./src/templates/task.divider.html":
/*!********************************************************************!*\
  !*** ./node_modules/text-loader!./src/templates/task.divider.html ***!
  \********************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("module.exports = \"<!--\\n    Licensed under the Apache License, Version 2.0 (the \\\"License\\\");\\n    you may not use this file except in compliance with the License.\\n    You may obtain a copy of the License at\\n\\n    http://www.apache.org/licenses/LICENSE-2.0\\n\\n    Unless required by applicable law or agreed to in writing, software\\n    distributed under the License is distributed on an \\\"AS IS\\\" BASIS,\\n    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\\n    See the License for the specific language governing permissions and\\n    limitations under the License.\\n-->\\n<div class=\\\"pull-left\\\">\\n    <span style=\\\"font-weight:bold;\\\">Job ID:</span>\\n    <span><%-id%></span>\\n    <span style=\\\"font-weight:bold;\\\">Description:</span>\\n    <span><%-description%></span>\\n</div>\\n<a href=\\\"#jobs\\\" class=\\\"pull-right\\\" style=\\\"text-decoration: none; font-weight:bold;cursor:pointer;\\\">X</a>\\n\"//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvdGV4dC1sb2FkZXIvaW5kZXguanMhLi9zcmMvdGVtcGxhdGVzL3Rhc2suZGl2aWRlci5odG1sLmpzIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vLy4vc3JjL3RlbXBsYXRlcy90YXNrLmRpdmlkZXIuaHRtbD9lM2MxIl0sInNvdXJjZXNDb250ZW50IjpbIm1vZHVsZS5leHBvcnRzID0gXCI8IS0tXFxuICAgIExpY2Vuc2VkIHVuZGVyIHRoZSBBcGFjaGUgTGljZW5zZSwgVmVyc2lvbiAyLjAgKHRoZSBcXFwiTGljZW5zZVxcXCIpO1xcbiAgICB5b3UgbWF5IG5vdCB1c2UgdGhpcyBmaWxlIGV4Y2VwdCBpbiBjb21wbGlhbmNlIHdpdGggdGhlIExpY2Vuc2UuXFxuICAgIFlvdSBtYXkgb2J0YWluIGEgY29weSBvZiB0aGUgTGljZW5zZSBhdFxcblxcbiAgICBodHRwOi8vd3d3LmFwYWNoZS5vcmcvbGljZW5zZXMvTElDRU5TRS0yLjBcXG5cXG4gICAgVW5sZXNzIHJlcXVpcmVkIGJ5IGFwcGxpY2FibGUgbGF3IG9yIGFncmVlZCB0byBpbiB3cml0aW5nLCBzb2Z0d2FyZVxcbiAgICBkaXN0cmlidXRlZCB1bmRlciB0aGUgTGljZW5zZSBpcyBkaXN0cmlidXRlZCBvbiBhbiBcXFwiQVMgSVNcXFwiIEJBU0lTLFxcbiAgICBXSVRIT1VUIFdBUlJBTlRJRVMgT1IgQ09ORElUSU9OUyBPRiBBTlkgS0lORCwgZWl0aGVyIGV4cHJlc3Mgb3IgaW1wbGllZC5cXG4gICAgU2VlIHRoZSBMaWNlbnNlIGZvciB0aGUgc3BlY2lmaWMgbGFuZ3VhZ2UgZ292ZXJuaW5nIHBlcm1pc3Npb25zIGFuZFxcbiAgICBsaW1pdGF0aW9ucyB1bmRlciB0aGUgTGljZW5zZS5cXG4tLT5cXG48ZGl2IGNsYXNzPVxcXCJwdWxsLWxlZnRcXFwiPlxcbiAgICA8c3BhbiBzdHlsZT1cXFwiZm9udC13ZWlnaHQ6Ym9sZDtcXFwiPkpvYiBJRDo8L3NwYW4+XFxuICAgIDxzcGFuPjwlLWlkJT48L3NwYW4+XFxuICAgIDxzcGFuIHN0eWxlPVxcXCJmb250LXdlaWdodDpib2xkO1xcXCI+RGVzY3JpcHRpb246PC9zcGFuPlxcbiAgICA8c3Bhbj48JS1kZXNjcmlwdGlvbiU+PC9zcGFuPlxcbjwvZGl2PlxcbjxhIGhyZWY9XFxcIiNqb2JzXFxcIiBjbGFzcz1cXFwicHVsbC1yaWdodFxcXCIgc3R5bGU9XFxcInRleHQtZGVjb3JhdGlvbjogbm9uZTsgZm9udC13ZWlnaHQ6Ym9sZDtjdXJzb3I6cG9pbnRlcjtcXFwiPlg8L2E+XFxuXCIiXSwibWFwcGluZ3MiOiJBQUFBIiwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/text-loader/index.js!./src/templates/task.divider.html\n");

/***/ }),

/***/ "./node_modules/text-loader/index.js!./src/templates/task.filter.html":
/*!*******************************************************************!*\
  !*** ./node_modules/text-loader!./src/templates/task.filter.html ***!
  \*******************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("module.exports = \"<!--\\n    Licensed under the Apache License, Version 2.0 (the \\\"License\\\");\\n    you may not use this file except in compliance with the License.\\n    You may obtain a copy of the License at\\n\\n    http://www.apache.org/licenses/LICENSE-2.0\\n\\n    Unless required by applicable law or agreed to in writing, software\\n    distributed under the License is distributed on an \\\"AS IS\\\" BASIS,\\n    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\\n    See the License for the specific language governing permissions and\\n    limitations under the License.\\n-->\\n<ul class=\\\"nav nav-pills filter\\\">\\n    <li>\\n        <a data-index='2' data-value=\\\"idle\\\" href=\\\"#\\\">Idle</a>\\n    </li>\\n    <li>\\n        <a data-index='2' data-value=\\\"busy\\\" href=\\\"#\\\">Busy</a>\\n    </li>\\n    <li>\\n        <a data-index='2' data-value=\\\"error\\\" href=\\\"#\\\">Error</a>\\n    </li>\\n</ul>\\n\"//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvdGV4dC1sb2FkZXIvaW5kZXguanMhLi9zcmMvdGVtcGxhdGVzL3Rhc2suZmlsdGVyLmh0bWwuanMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9zcmMvdGVtcGxhdGVzL3Rhc2suZmlsdGVyLmh0bWw/ZWZmOSJdLCJzb3VyY2VzQ29udGVudCI6WyJtb2R1bGUuZXhwb3J0cyA9IFwiPCEtLVxcbiAgICBMaWNlbnNlZCB1bmRlciB0aGUgQXBhY2hlIExpY2Vuc2UsIFZlcnNpb24gMi4wICh0aGUgXFxcIkxpY2Vuc2VcXFwiKTtcXG4gICAgeW91IG1heSBub3QgdXNlIHRoaXMgZmlsZSBleGNlcHQgaW4gY29tcGxpYW5jZSB3aXRoIHRoZSBMaWNlbnNlLlxcbiAgICBZb3UgbWF5IG9idGFpbiBhIGNvcHkgb2YgdGhlIExpY2Vuc2UgYXRcXG5cXG4gICAgaHR0cDovL3d3dy5hcGFjaGUub3JnL2xpY2Vuc2VzL0xJQ0VOU0UtMi4wXFxuXFxuICAgIFVubGVzcyByZXF1aXJlZCBieSBhcHBsaWNhYmxlIGxhdyBvciBhZ3JlZWQgdG8gaW4gd3JpdGluZywgc29mdHdhcmVcXG4gICAgZGlzdHJpYnV0ZWQgdW5kZXIgdGhlIExpY2Vuc2UgaXMgZGlzdHJpYnV0ZWQgb24gYW4gXFxcIkFTIElTXFxcIiBCQVNJUyxcXG4gICAgV0lUSE9VVCBXQVJSQU5USUVTIE9SIENPTkRJVElPTlMgT0YgQU5ZIEtJTkQsIGVpdGhlciBleHByZXNzIG9yIGltcGxpZWQuXFxuICAgIFNlZSB0aGUgTGljZW5zZSBmb3IgdGhlIHNwZWNpZmljIGxhbmd1YWdlIGdvdmVybmluZyBwZXJtaXNzaW9ucyBhbmRcXG4gICAgbGltaXRhdGlvbnMgdW5kZXIgdGhlIExpY2Vuc2UuXFxuLS0+XFxuPHVsIGNsYXNzPVxcXCJuYXYgbmF2LXBpbGxzIGZpbHRlclxcXCI+XFxuICAgIDxsaT5cXG4gICAgICAgIDxhIGRhdGEtaW5kZXg9JzInIGRhdGEtdmFsdWU9XFxcImlkbGVcXFwiIGhyZWY9XFxcIiNcXFwiPklkbGU8L2E+XFxuICAgIDwvbGk+XFxuICAgIDxsaT5cXG4gICAgICAgIDxhIGRhdGEtaW5kZXg9JzInIGRhdGEtdmFsdWU9XFxcImJ1c3lcXFwiIGhyZWY9XFxcIiNcXFwiPkJ1c3k8L2E+XFxuICAgIDwvbGk+XFxuICAgIDxsaT5cXG4gICAgICAgIDxhIGRhdGEtaW5kZXg9JzInIGRhdGEtdmFsdWU9XFxcImVycm9yXFxcIiBocmVmPVxcXCIjXFxcIj5FcnJvcjwvYT5cXG4gICAgPC9saT5cXG48L3VsPlxcblwiIl0sIm1hcHBpbmdzIjoiQUFBQSIsInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/text-loader/index.js!./src/templates/task.filter.html\n");

/***/ }),

/***/ "./node_modules/text-loader/index.js!./src/templates/task.selectable.html":
/*!***********************************************************************!*\
  !*** ./node_modules/text-loader!./src/templates/task.selectable.html ***!
  \***********************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("module.exports = \"<!--\\n    Licensed under the Apache License, Version 2.0 (the \\\"License\\\");\\n    you may not use this file except in compliance with the License.\\n    You may obtain a copy of the License at\\n\\n    http://www.apache.org/licenses/LICENSE-2.0\\n\\n    Unless required by applicable law or agreed to in writing, software\\n    distributed under the License is distributed on an \\\"AS IS\\\" BASIS,\\n    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\\n    See the License for the specific language governing permissions and\\n    limitations under the License.\\n-->\\n<button class='btn btn-default checkbox-button' style=\\\"margin:0px 4px;\\\">\\n    <span class=\\\"checkbox\\\"></span>\\n    <span id=\\\"selectedCount\\\"></span>\\n</button>\\n<div class='btn-group'>\\n    <button id=\\\"kickTaskButton\\\" class='btn btn-default btn-green'>\\n        Kick\\n    </button>\\n    <button id=\\\"stopTaskButton\\\" class='btn btn-default btn-red'>\\n        Stop\\n    </button>\\n    <button id=\\\"killTaskButton\\\" class='btn btn-default btn-red'>\\n        Kill\\n    </button>\\n</div>\\n\"//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvdGV4dC1sb2FkZXIvaW5kZXguanMhLi9zcmMvdGVtcGxhdGVzL3Rhc2suc2VsZWN0YWJsZS5odG1sLmpzIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vLy4vc3JjL3RlbXBsYXRlcy90YXNrLnNlbGVjdGFibGUuaHRtbD80NmFmIl0sInNvdXJjZXNDb250ZW50IjpbIm1vZHVsZS5leHBvcnRzID0gXCI8IS0tXFxuICAgIExpY2Vuc2VkIHVuZGVyIHRoZSBBcGFjaGUgTGljZW5zZSwgVmVyc2lvbiAyLjAgKHRoZSBcXFwiTGljZW5zZVxcXCIpO1xcbiAgICB5b3UgbWF5IG5vdCB1c2UgdGhpcyBmaWxlIGV4Y2VwdCBpbiBjb21wbGlhbmNlIHdpdGggdGhlIExpY2Vuc2UuXFxuICAgIFlvdSBtYXkgb2J0YWluIGEgY29weSBvZiB0aGUgTGljZW5zZSBhdFxcblxcbiAgICBodHRwOi8vd3d3LmFwYWNoZS5vcmcvbGljZW5zZXMvTElDRU5TRS0yLjBcXG5cXG4gICAgVW5sZXNzIHJlcXVpcmVkIGJ5IGFwcGxpY2FibGUgbGF3IG9yIGFncmVlZCB0byBpbiB3cml0aW5nLCBzb2Z0d2FyZVxcbiAgICBkaXN0cmlidXRlZCB1bmRlciB0aGUgTGljZW5zZSBpcyBkaXN0cmlidXRlZCBvbiBhbiBcXFwiQVMgSVNcXFwiIEJBU0lTLFxcbiAgICBXSVRIT1VUIFdBUlJBTlRJRVMgT1IgQ09ORElUSU9OUyBPRiBBTlkgS0lORCwgZWl0aGVyIGV4cHJlc3Mgb3IgaW1wbGllZC5cXG4gICAgU2VlIHRoZSBMaWNlbnNlIGZvciB0aGUgc3BlY2lmaWMgbGFuZ3VhZ2UgZ292ZXJuaW5nIHBlcm1pc3Npb25zIGFuZFxcbiAgICBsaW1pdGF0aW9ucyB1bmRlciB0aGUgTGljZW5zZS5cXG4tLT5cXG48YnV0dG9uIGNsYXNzPSdidG4gYnRuLWRlZmF1bHQgY2hlY2tib3gtYnV0dG9uJyBzdHlsZT1cXFwibWFyZ2luOjBweCA0cHg7XFxcIj5cXG4gICAgPHNwYW4gY2xhc3M9XFxcImNoZWNrYm94XFxcIj48L3NwYW4+XFxuICAgIDxzcGFuIGlkPVxcXCJzZWxlY3RlZENvdW50XFxcIj48L3NwYW4+XFxuPC9idXR0b24+XFxuPGRpdiBjbGFzcz0nYnRuLWdyb3VwJz5cXG4gICAgPGJ1dHRvbiBpZD1cXFwia2lja1Rhc2tCdXR0b25cXFwiIGNsYXNzPSdidG4gYnRuLWRlZmF1bHQgYnRuLWdyZWVuJz5cXG4gICAgICAgIEtpY2tcXG4gICAgPC9idXR0b24+XFxuICAgIDxidXR0b24gaWQ9XFxcInN0b3BUYXNrQnV0dG9uXFxcIiBjbGFzcz0nYnRuIGJ0bi1kZWZhdWx0IGJ0bi1yZWQnPlxcbiAgICAgICAgU3RvcFxcbiAgICA8L2J1dHRvbj5cXG4gICAgPGJ1dHRvbiBpZD1cXFwia2lsbFRhc2tCdXR0b25cXFwiIGNsYXNzPSdidG4gYnRuLWRlZmF1bHQgYnRuLXJlZCc+XFxuICAgICAgICBLaWxsXFxuICAgIDwvYnV0dG9uPlxcbjwvZGl2PlxcblwiIl0sIm1hcHBpbmdzIjoiQUFBQSIsInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/text-loader/index.js!./src/templates/task.selectable.html\n");

/***/ }),

/***/ "./src/js/app.js":
/*!***********************!*\
  !*** ./src/js/app.js ***!
  \***********************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;/*\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n//app.js is your application-level namespace where you instantiate all your top-level application level function, etc.. no router logic should go here\n!(__WEBPACK_AMD_DEFINE_ARRAY__ = [\n    __webpack_require__(/*! router */ \"./src/js/router.js\"),\n    __webpack_require__(/*! alertify */ \"./src/js/vendor/alertify.js\"),\n    __webpack_require__(/*! modules/server */ \"./src/js/modules/server.js\"),\n    __webpack_require__(/*! jscookie */ \"./node_modules/js-cookie/src/js.cookie.js\"),\n    __webpack_require__(/*! jquery */ \"./node_modules/jquery/dist/jquery.js\"),\n    __webpack_require__(/*! underscore */ \"./node_modules/underscore/underscore.js\"),\n    __webpack_require__(/*! backbone */ \"./node_modules/backbone/backbone.js\"),\n    __webpack_require__(/*! alertify */ \"./src/js/vendor/alertify.js\")\n], __WEBPACK_AMD_DEFINE_RESULT__ = (function(\n    Router,\n    alertify,\n    server,\n    Cookies,\n    $,\n    _\n){\n    var app = {\n        router: new Router(),\n        currentView:null,\n        mainSelector:\"#main\",\n        user: new Backbone.Model({username:\"\",token:\"\",sudo:\"\"}),\n        server:server,\n        loginSSLDefault:true,\n        loginDialog:null,\n        jobDefaults: {},\n        activeModels:[],\n        showView:function(view,link,activeModels){\n            var self=this;\n            if(!_.isNull(this.currentView)){\n                if(_.has(this.currentView,'close')){\n                    this.currentView.close();\n                }else{\n                    this.currentView.remove();\n                }\n            }\n            this.currentView=view;\n            $(this.mainSelector).append(this.currentView.$el);\n            this.currentView.render();\n            //update navbar link\n            $(\"div.navbar ul.nav.navbar-nav li a\").parent().removeClass(\"active\");\n            $(\"div.navbar ul.nav.navbar-nav li a[href*='\"+link+\"']\").parent().addClass(\"active\");\n            $(\"div.navbar ul.nav.navbar-nav li a[href*='\"+link+\"']\").closest(\"li.dropdown-toggle\").addClass(\"active\");\n            activeModels=activeModels || [];\n            _.each(activeModels,function(modelName){\n                self[modelName]=undefined;\n            });\n        },\n        authprefix:function() {\n            var useSSL = app.loginSSLDefault || (window.location.href.lastIndexOf(\"https\", 0) == 0);\n            return (useSSL ? \"https://\" : \"http://\") + window.location.hostname + (useSSL ? \"\" : \":5052\");\n        },\n        initialize:function() {\n            // delete legacy cookies\n            Cookies.set(\"username\", \"\", {expires:0, path:\"/spawn2\"});\n            Cookies.set(\"spawn\", \"\", {expires:0, path:\"/spawn2\"});\n            $.ajax({\n                url: '/job/defaults',\n                dataType: 'json',\n                success: function(response) {\n                    app.jobDefaults = response;\n                }\n            });\n            $.ajax({\n                url: '/update/settings',\n                dataType: 'json',\n                success: function(response) {\n                    var username = Cookies.get(\"username\");\n                    var token = Cookies.get(\"token\");\n                    $.ajax({\n                        type: 'POST',\n                        url: '/authentication/validate',\n                        data: {\n                            user: username,\n                            token: token\n                        },\n                        dataType: 'text',\n                        success: function(response) {\n                            if (response === \"true\") {\n                                app.user.set(\"username\", username);\n                                app.user.set(\"token\", token);\n                                app.user.set(\"sudo\", Cookies.get(\"sudo\"));\n                            } else {\n                                alertify.error(\"Invalid credentials. Please login. (Click to dismiss)\", 0);\n                            }\n                        },\n                        error: function(error) {\n                            alertify.error(\"Failure on /authentication/validate\", 0);\n                        }\n                    });\n                },\n                error: function(error) {\n                    alertify.error(\"Failure on /update/settings\", 0);\n                }\n            });\n        },\n        sudoCheckboxControl: function(hasAdminRight) {\n            if(hasAdminRight === \"true\") {\n                Cookies.set(\"cansudo\", \"true\");\n                app.sudoCheckbox(Cookies.get(\"sudo\") !== undefined, true);\n            } else if(hasAdminRight === \"false\") {\n                app.sudoCheckbox(false, false);\n            } else if(!hasAdminRight) {\n                if(Cookies.get(\"cansudo\")) {\n                    app.sudoCheckbox(Cookies.get(\"sudo\") !== undefined, true);\n                } else {\n                    app.sudoCheckbox(false, false);\n                }\n            }\n            app.user.set(\"sudo\", Cookies.get(\"sudo\"));\n        },\n        isadmin: function(username, token) {\n                $.ajax({\n                type: 'POST',\n                url:\"/authentication/isadmin\",\n                data: {\n                    user: username,\n                    token: token\n                },\n                dataType: 'Text',\n                success: function(response) {\n                    app.sudoCheckboxControl(response);\n                },\n                error: function(error) {\n                    alertify.error(\"Failure on /authentication/isadmin\", 0);\n                }\n            });\n        },\n        authenticate:function(evt) {\n            evt.preventDefault();\n            var usernameInput = $(\"#loginUsername\")[0];\n            var passwordInput =  $(\"#loginPassword\")[0];\n            var tokenName = $(\"#loginToken\")[0].value;\n            var urlPath;\n            if (tokenName == \"token\") {\n                urlPath = \"/authentication/login\";\n            } else {\n                alertify.error(\"Unknown token name \" + tokenName);\n                return;\n            }\n            var username = $.trim(usernameInput.value);\n            var password = passwordInput.value;\n            var loginUrl = app.authprefix() + urlPath;\n            usernameInput.value = \"\";\n            passwordInput.value = \"\";\n            $.ajax({\n                type: 'POST',\n                url: loginUrl,\n                data: {\n                    user: username,\n                    password: password\n                },\n                dataType: 'text',\n                success: function(response) {\n                    if (app.loginDialog) {\n                        app.loginDialog.close();\n                    }\n                    var token = response;\n                    if (!token) {\n                        alertify.error(\"Authentication error\");\n                    } else {\n                        if (tokenName == \"token\") {\n                            Cookies.set(\"username\", username, {expires: 730});\n                            Cookies.set(\"token\", token, {expires: 730});\n                            Cookies.set(\"sudo\", \"\", {expires:0});\n                            app.user.set(\"username\", username);\n                            app.user.set(\"token\", token);\n                            app.user.set(\"sudo\", Cookies.get(\"sudo\"));\n                            app.isadmin(username, token);\n                        }\n                    }\n                },\n                error: function(jqXHR, textStatus) {\n                    console.log(\"jqXHR = \" + jqXHR + \", textStatus = \" + textStatus);\n\n                    if (app.loginDialog) {\n                        app.loginDialog.close();\n                    }\n                    if (jqXHR.status === 401) {\n                        alertify.error(\"Invalid username/password provided\");\n                    } else {\n                        alertify.error(\"Accept our <a target=\\\"_blank\\\" href=\\\"\" + app.authprefix() + \"/spawn2/landing.html\"+ \"\\\">https certificate</a>\", 0);\n                    }\n                }\n            });\n        },\n        login:function() {\n            document.activeElement.blur();\n            $(\"#loginToken\")[0].value = \"token\";\n            app.loginDialog = alertify.minimalDialog($('#loginForm')[0]);\n        },\n        unsudo: function(username, token) {\n            var unsudoUrl = \"/authentication/unsudo\";\n            $.ajax({\n                type: 'POST',\n                url: unsudoUrl,\n                data: {\n                    username: username,\n                    token: token,\n                    sudo: Cookies.get(\"sudo\")\n                }\n            });\n            Cookies.set(\"sudo\", \"\", {expires:0});\n            app.sudoCheckbox(false, true);\n            app.user.set(\"sudo\", \"\");\n        },\n        cansudo: function(username, token) {\n            var checked =  $(\"#sudoCheckbox\").is(':checked');\n            if (checked) {\n                if (!username || !token) {\n                    alertify.error(\"Please login first\");\n                    return false;\n                }\n            } else {\n                app.unsudo(username, token);\n                return false;\n            }\n            return true;\n        },\n        setTimer: function (username, token, sudoToken, mins) {\n            var inTime = new Date(new Date().getTime() + mins * 60 * 1000);\n            Cookies.set(\"sudo\", sudoToken, {expires: inTime});\n            var timerId = setInterval(function() {\n                app.unsudo(username, token);\n                app.unsetTimer(timerId);\n            }, mins*60*1000);\n        },\n        unsetTimer: function(timerId) {\n            clearTimeout(timerId);\n        },\n        sudo:function() {\n            var sudoUrl = app.authprefix() + \"/authentication/sudo\";\n            var username = Cookies.get(\"username\");\n            var token = Cookies.get(\"token\");\n            if(!app.cansudo(username, token)) {\n                return;\n            }\n            $.ajax({\n                type: 'POST',\n                url: sudoUrl,\n                data: {\n                    user: username,\n                    token: token\n                },\n                dataType: 'text',\n                success: function (response) {\n                    var sudoToken = response;\n                    if (!sudoToken) {\n                        alertify.error(\"Authentication error\");\n                        sudoCheckbox(false, false);\n                    } else {\n                        var message = \"Please confirm that you want to enable sudo privilege\";\n                        alertify.confirm(message, function(e) {\n                            // BUG: when you refresh the page before expire, GUI does not uncheck automatically after expire\n                            app.setTimer(username, token, sudoToken, 15);\n                            app.user.set(\"sudo\", sudoToken);\n                            app.sudoCheckbox(true, true);\n                        }, function(e) {\n                            app.user.set(\"sudo\", Cookies.get(\"sudo\"));\n                        });\n                    }\n                },\n                error: function (jqXHR, textStatus) {\n                    if (jqXHR.status === 401) {\n                        alertify.error(\"Invalid username/token provided\");\n                    }\n                }\n            })\n        },\n        logout:function() {\n            document.activeElement.blur();\n            var username = Cookies.get(\"username\");\n            var token = Cookies.get(\"token\");\n            if (username) {\n                var logoutUrl = \"/authentication/logout\";\n                $.ajax({\n                    type: 'POST',\n                    url: logoutUrl,\n                    data: {\n                        user: username,\n                        token: token\n                    },\n                });\n            }\n            Cookies.set(\"username\", \"\", {expires:0});\n            Cookies.set(\"username\", \"\", {expires:0, path:\"/spawn2\"}); // delete legacy cookie\n            Cookies.set(\"spawn\", \"\", {expires:0, path:\"/spawn2\"}); // delete legacy cookie\n            Cookies.set(\"token\", \"\", {expires:0});\n            Cookies.set(\"tokenExpires\", \"\", {expires:0});\n            Cookies.set(\"sudo\", \"\", {expires:0});\n            Cookies.set(\"cansudo\", \"\", {expires:0});\n            app.user.set(\"username\", \"\");\n            app.user.set(\"token\", \"\");\n            app.user.set(\"sudo\", \"\");\n            app.sudoCheckbox(false, false);\n        },\n        authQueryParameters:function(parameters) {\n            var user = app.user.get(\"username\");\n            var token = app.user.get(\"token\");\n            var sudo = app.user.get(\"sudo\");\n            parameters[\"user\"] = user;\n            parameters[\"token\"] = token;\n            if (sudo) {\n                parameters[\"sudo\"] = sudo;\n            }\n            return parameters;\n        },\n        makeHtmlTitle:function(title){\n            var hostname = location.hostname;\n            var index = hostname.indexOf(\".\");\n            if(index >= 0){\n                hostname = hostname.substring(0, index);\n            }\n            var title = hostname + \" \" + title;\n            document.title=title;\n        },\n        healthCheck:function(){\n            $.ajax({\n                url: \"/system/healthcheck?details=true\",\n                type: \"GET\"\n            }).done(function(data){\n                if (data.everythingOK) {\n                    alertify.message(\"Health check passed\");\n                } else {\n                    alertify.alert(\"Health check failed: \" + JSON.stringify(data));\n                }\n            });\n        },\n        isQuiesced:false,\n        quiesce:function(){\n            alertify.confirm( ((app.isQuiesced?\"un\":\"\")+\"quiesce the cluster? (if you don't know what you're doing, hit cancel!)\"), function (e) {\n                var parameters = {}\n                parameters[\"quiesce\"] = app.isQuiesced ? \"0\" : \"1\";\n                app.authQueryParameters(parameters);\n                $.ajax({\n                    url: \"/system/quiesce\",\n                    type: \"GET\",\n                    data: parameters\n                }).done(function(data){\n                    alertify.message(\"Cluster \"+(data.quiesced==\"1\"?\"quiesced\":\"reactivated\")+\" successfully.\");\n                    app.isQuiesced= !app.isQuiesced;\n                    app.checkQuiesced();\n                }).fail(function(){\n                    alertify.alert(\"You do not have sufficient privileges to quiesce cluster\");\n                });\n            });\n        },\n        log:function(text){\n            var date = new Date(Date.now());\n            console.log(date.toString(\"hh:mm:ss\")+\" - \"+text);\n        },\n        checkQuiesced:function(){\n            if(app.isQuiesced){\n                $(\"#quiesceLink\").text(\"Reactivate\");\n                $(\"span#quiescedLabel\").show();\n                $(\"#topNavbar\").addClass(\"navbar-inverse\");\n            }\n            else{\n                $(\"#quiesceLink\").text(\"Quiesce\");\n                $(\"span#quiescedLabel\").hide();\n                $(\"#topNavbar\").removeClass(\"navbar-inverse\");\n            }\n        },\n        sudoCheckbox:function(checked, show){\n            $(\"#sudoCheckbox\").prop(\"checked\", checked);\n\n            if(show) {\n                 $(\"#sudoCheckboxLabel\").show();\n                $(\"#sudoCheckbox\").show();\n            } else {\n                $(\"#sudoCheckboxLabel\").hide();\n                $(\"#sudoCheckbox\").hide();\n            }\n        }\n    };\n    return _.extend(app, Backbone.Events);\n}).apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__),\n\t\t\t\t__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./src/js/app.js\n");

/***/ }),

/***/ "./src/js/modules/alerts.js":
/*!**********************************!*\
  !*** ./src/js/modules/alerts.js ***!
  \**********************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;/*\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n!(__WEBPACK_AMD_DEFINE_ARRAY__ = [\n    __webpack_require__(/*! jquery */ \"./node_modules/jquery/dist/jquery.js\"),\n    __webpack_require__(/*! underscore */ \"./node_modules/underscore/underscore.js\"),\n\t__webpack_require__(/*! app */ \"./src/js/app.js\"),\n\t__webpack_require__(/*! alertify */ \"./src/js/vendor/alertify.js\"),\n\t__webpack_require__(/*! modules/datatable */ \"./src/js/modules/datatable.js\"),\n    __webpack_require__(/*! modules/util */ \"./src/js/modules/util.js\"),\n   \t__webpack_require__(/*! text!../../templates/alerts.filter.html */ \"./node_modules/text-loader/index.js!./src/templates/alerts.filter.html\"),\n   \t__webpack_require__(/*! text!../../templates/alerts.selectable.html */ \"./node_modules/text-loader/index.js!./src/templates/alerts.selectable.html\"),\n   \t__webpack_require__(/*! text!../../templates/alerts.detail.html */ \"./node_modules/text-loader/index.js!./src/templates/alerts.detail.html\"),\n   \t__webpack_require__(/*! backbone */ \"./node_modules/backbone/backbone.js\")\n], __WEBPACK_AMD_DEFINE_RESULT__ = (function(\n    $,\n    _,\n    app,\n    alertify,\n    DataTable,\n    util,\n    alertFilterTemplate,\n    alertSelectableTemplate,\n    alertDetailTemplate,\n    Backbone\n){\n\n\n    function safelyGetJobIDs(jobIDs) {\n        if (typeof jobIDs === 'string') {\n            return jobIDs.split(',');\n        }\n        else if (jobIDs instanceof Array) {\n            return jobIDs;\n        }\n        else {\n            return [];\n        }\n    }\n\n\tvar Model = Backbone.Model.extend({\n\t\tidAttribute:\"alertId\",\n    \turl:function(){return \"/alert/get?alertId=\" + this.get(\"alertId\");},\n    \tdefaults:{\n    \t\tjobIds:\"\",\n    \t\ttype:-1,\n    \t\ttimeout:-1,\n    \t\tcanaryCheckDates: \"\",\n    \t\tcanaryConfigThreshold: \"\",\n    \t\temail:\"\",\n            webhookURL: \"\",\n    \t\tdescription:\"\"},\n    \tsave:function(){\n    \t\tvar postData = {\n    \t\t\tlastAlertTime:this.get(\"lastAlertTime\"),\n    \t\t\ttype:$(\"#alertType\").val(),\n    \t\t\ttimeout:this.get(\"timeout\"),\n    \t\t\tdelay:this.get(\"delay\"),\n    \t\t\temail:this.get(\"email\"),\n                webhookURL:this.get(\"webhookURL\"),\n    \t\t\tdescription:this.get(\"description\"),\n\n                /**\n                 * JobIDs looks to be an array already, but just in case there is a code path\n                 * where it is still a string, I'm going to do this super nasty defensive check,\n                 * and ensure the result is an array. New spawn code doesn't have this problem.\n                 */\n                jobIds: safelyGetJobIDs(this.get('jobIds')),\n\n    \t\t\tsuppressChanges:this.get(\"suppressChanges\"),\n    \t\t\tcanaryPath:this.get(\"canaryPath\"),\n    \t\t\tcanaryConfigThreshold:this.get(\"canaryConfigThreshold\"),\n                canaryOps:this.get(\"canaryOps\"),\n                canaryRops:this.get(\"canaryRops\"),\n                canaryFilter:this.get(\"canaryFilter\"),\n                sigma:this.get(\"sigma\"),\n                tolerance:this.get(\"tolerance\")\n    \t\t};\n    \t\tif (!this.isNew()) {\n    \t\t\tpostData.alertId= this.get(\"alertId\");\n    \t\t}\n    \t\treturn $.ajax({\n    \t\t\turl: \"/alert/save\",\n    \t\t\ttype: \"POST\",\n    \t\t\tdata: JSON.stringify(postData),\n    \t\t\tdataType: \"json\",\n    \t\t\tcontentType: \"application/json\"\n    \t\t});\n    \t},\n    \tdelete:function(){\n    \t\tvar alertId = this.get(\"alertId\");\n    \t\treturn $.ajax({\n    \t\t\turl: \"/alert/delete\",\n    \t\t\ttype: \"POST\",\n    \t\t\tdata: {alertId:alertId},\n    \t\t\tdataType: \"text\"\n    \t\t});\n    \t},\n    \tparse:function(data) {\n    \t    var jobIdsArray = data.jobIds;\n    \t    if (jobIdsArray) {\n                data.jobIds = jobIdsArray.join(\",\");\n    \t    }\n    \t\treturn data;\n    \t}\n\t});\n\tvar Collection = Backbone.Collection.extend({\n    \tparse:function(collection){\n        \tvar array = new Array(collection.length);\n        \t_.each(collection,function(model,idx){\n           \t\tarray[idx]= Model.prototype.parse(model);\n        \t});\n        \treturn array;\n    \t},\n    \tmodel:Model\n\t});\n\tvar TableView = DataTable.View.extend({\n\t\tinitialize:function(options){\n    \t\t_.bindAll(this,'handleDeleteButtonClick');\n    \t\toptions = options || {};\n    \t\tthis.id = options.id || \"alertTable\";\n    \t\tthis.$el.attr(\"id\",this.id);\n    \t\tvar self=this;\n    \t\tvar columns = [{\n        \t\t\"sTitle\":\"\",\n        \t\t\"sClass\":\"alert-cb\",\n        \t\t\"sWidth\":\"5%\",\n        \t\t\"mData\": \"alertId\",\n        \t\t\"bSearchable\":false,\n        \t\t\"bSortable\":false,\n        \t\t\"mRender\":function(val,type,data){\n            \t\tif(self.selectedIds[val]){\n                \t\treturn \"<input checked class='row_selectable' type='checkbox'></input>\";\n            \t\t}else{\n                \t\treturn \"<input class='row_selectable' type='checkbox'></input>\";\n            \t\t}\n        \t\t}\n    \t\t},\n    \t\t{\n    \t\t\t\"sTitle\":\"Alert ID\",\n        \t\t\"mData\": \"alertId\",\n        \t\t\"sWidth\": \"18%\",\n        \t\t\"bVisible\":true,\n        \t\t\"bSearchable\":true,\n        \t\t\"mRender\":function(val,type,data){\n        \t\t    if (!!data.description) {\n        \t\t        return \"<a href='#alerts/\"+encodeURIComponent(val)+\"' title='\"+data.description.trim()+\"'>\"+val+\"</a>\";\n        \t\t    } else {\n        \t\t        return \"<a href='#alerts/\"+encodeURIComponent(val)+\"'>\"+val+\"</a>\";\n        \t\t    }\n        \t\t}\n    \t\t},\n    \t\t{\n    \t\t\t\"sTitle\":\"Job IDs\",\n        \t\t\"mData\": \"jobIds\",\n        \t\t\"sWidth\": \"22%\",\n        \t\t\"bVisible\":true,\n        \t\t\"bSearchable\":true,\n    \t\t},\n    \t\t{\n    \t\t\t\"sTitle\":\"Type\",\n        \t\t\"mData\": \"type\",\n        \t\t\"sWidth\": \"12%\",\n        \t\t\"bVisible\":true,\n        \t\t\"bSearchable\":true,\n        \t\t\"mRender\": function(val,type,data) {\n        \t\t\treturn util.alertTypes[val] ? util.alertTypes[val] : \"Unknown Alert Type\";\n        \t\t}\n    \t\t},\n    \t\t{\n    \t\t\t\"sTitle\":\"Timeout\",\n        \t\t\"mData\": \"timeout\",\n        \t\t\"sWidth\": \"10%\",\n        \t\t\"bVisible\":true,\n        \t\t\"bSearchable\":true,\n        \t\t\"mRender\": function(val,type,data) {\n        \t\t\treturn isNaN(val) || val <= 0 ? \"\" : val;\n        \t\t}\n    \t\t},\n    \t\t{\n    \t\t\t\"sTitle\":\"Emails\",\n        \t\t\"mData\": \"email\",\n        \t\t\"sWidth\": \"20%\",\n        \t\t\"bVisible\":true,\n        \t\t\"bSearchable\":true,\n    \t\t},\n            {\n    \t\t\t\"sTitle\":\"Webhook URL\",\n        \t\t\"mData\": \"webhookURL\",\n        \t\t\"sWidth\": \"20%\",\n        \t\t\"bVisible\":true,\n        \t\t\"bSearchable\":true,\n    \t\t},\n    \t\t{\n    \t\t\t\"sTitle\":\"Status\",\n        \t\t\"mData\": \"lastAlertTime\",\n        \t\t\"sWidth\": \"23%\",\n        \t\t\"bVisible\":true,\n        \t\t\"bSearchable\":true,\n        \t\t\"mRender\": function(val, type, data) {\n        \t\t\treturn isNaN(val) || val <= 0 ? \"Clear\" : \"Triggered at \" + util.convertToDateTimeText(val);\n        \t\t}\n    \t\t},\n\t\t\t];\n\t\t\tDataTable.View.prototype.initialize.apply(this,[{\n\t\t\t\tcolumns:columns,\n    \t\t\tfilterTemplate:alertFilterTemplate,\n    \t\t\tselectableTemplate:alertSelectableTemplate,\n    \t\t\theightBuffer:80,\n    \t\t\tid:this.id,\n    \t\t\temptyMessage:\" \",\n    \t\t\tidAttribute:\"alertId\"\n\t\t\t}]);\n\t\t},\n\t\trender:function(){\n        \tDataTable.View.prototype.render.apply(this,[]);\n        \tthis.views.selectable.find(\"#deleteAlertButton\").on(\"click\",this.handleDeleteButtonClick);\n        \treturn this;\n    \t},\n    \thandleDeleteButtonClick:function(event){\n        \tvar ids=this.getSelectedIds();\n        \t_.each(ids,function(id){\n            \tvar model = app.alertCollection.get(id);\n            \tif(!_.isUndefined(model)){\n            \t\tmodel.delete().done(function(){\n                \t\tapp.alertCollection.remove(model.id);\n            \t\t}).fail(function(xhr){\n                \t\talertify.error(\"Error deleting alert: \"+model.id);\n                \t});\n            \t}\n        \t});\n        \talertify.success(ids.length+\" alerts deleted.\");\n        \tapp.router.navigate(\"#alerts\",{trigger:true});\n    \t},\n\t});\n\tvar DetailView = Backbone.View.extend({\n\t\tclassName:'detail-view',\n\t\ttemplate: _.template(alertDetailTemplate),\n    \tevents: {\n        \t\"click #deleteAlertButton\":\"handleDeleteButtonClick\",\n    \t\t\"click #saveAlertButton\":\"handleSaveButtonClick\",\n    \t\t\"keyup input\":\"handleInputKeyUp\",\n    \t\t\"keyup textarea\":\"handleInputKeyUp\"\n    \t},\n    \tinitialize:function(){},\n    \trender:function(){\n     \t\tvar html = this.template({\n        \t\talert:this.model.toJSON(),\n        \t\talertTypes:util.alertTypes,\n        \t\tutil:util,\n     \t\t});\n    \t\tthis.$el.html(html);\n    \t\t$(\"#alertType\").val(this.model.get(\"type\"));\n    \t\t$(\"#alertType\").on(\"change\",this.updateFormOptions);\n    \t\tthis.updateFormOptions();\n     \t\treturn this;\n    \t},\n    \thandleDeleteButtonClick:function(event){\n      \t\tvar self=this;\n      \t\tthis.model.delete().done(function(data){\n        \t\talertify.success(\"Alert deleted successfully.\");\n           \t\tapp.router.navigate(\"#alerts\",{trigger:true});\n    \t\t}).fail(function(xhr){\n        \t\talertify.error(\"Error deleting alert.\");\n    \t\t});\n    \t},\n    \thandleSaveButtonClick:function(event){\n        \tvar self=this,isNew=this.model.isNew();\n        \tif (!this.verifyConfig()) {\n        \t\talertify.error(\"Failed to save alert -- config failed verification.\")\n        \t\treturn;\n        \t}\n        \tthis.model.save().done(function(data){\n\t\t\t\tif (data.message) {\n\t\t\t\t\talertify.error(\"Error saving alert: \" + data.message);\n\t\t\t\t} else {\n\t\t\t\t\talertify.success(\"Alert saved successfully.\");\n\t\t\t\t\tif (!self.model.get(\"alertId\")) {\n\t\t\t\t\t\tself.model.set(\"alertId\", data.alertId);\n\t\t\t\t\t\tself.model.fetch({\n\t\t\t\t\t\t\tsuccess: function(model) {\n\t\t\t\t\t\t\t\tapp.alertCollection.add(model);\n\t\t\t\t\t\t\t\tapp.alert=undefined;\n\t\t\t\t\t\t\t\tvar location = window.location.hash;\n\t\t\t\t\t\t\t\tlocation=location.replace(\"create\",data.alertId);\n\t\t\t\t\t\t\t\tapp.router.navigate(location,{trigger:true});\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\terror:function(xhr) {\n\t\t\t\t\t\t\t\talertify.error(\"Error loading alert for: \" + data.alertId);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t});\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}).fail(function(xhr){\n                alertify.error(\"Error saving alert.\");\n        \t});\n    \t},\n    \thandleInputKeyUp:function(event){\n    \t\tvar input=$(event.currentTarget);\n    \t\tvar name = input.attr(\"name\");\n    \t\tvar value = input.val();\n    \t\tthis.model.set(name,value);\n    \t},\n    \tupdateFormOptions:function() {\n    \t\tvar type = parseInt($(\"#alertType\").val());\n    \t\t// Timeouts are only used for rekick/runtime alerts\n    \t\t$(\"#alertTimeout\").toggle(type == 2 || type == 3);\n    \t\t// Only show canary path config for certain alerts (4, 5, 6, and 8)\n    \t\t$(\"#alertCanaryPathConfig\").toggle(type == 4 || type == 5 || type == 8 || type == 6);\n    \t\t$(\"#alertCanaryConfig\").toggle(type == 4 || type == 5);\n    \t\t// Show query path, ops, rops, and bundle filter fields for canary map filter (6)\n    \t\t$(\"#alertCanaryFilterConfig\").toggle(type == 6);\n    \t\t$(\"#alertSigmaConfig\").toggle(type == 7 || type == 8);\n    \t\tif (type == 4 || type == 8) {\n    \t\t\t$(\"#canaryPathHint\").text(\"For example, 'split/importantfiles/{{now-1}}/*.gz'. Mesh lookups are performed relative to the gold directories, so do not include jobid/taskid/gold in your path.\")\n    \t\t} else if (type == 5) {\n    \t\t\t$(\"#canaryPathHint\").text(\"For example, 'root/ymd/{{now-1}}:+count'. The query should have exactly one '+' (generally, +count) and return a single numeric quantity per task.\");\n    \t\t}\n    \t},\n    \tverifyConfig: function() {\n            var type = parseInt($(\"#alertType\").val());\n            var email = this.model.get(\"email\");\n            var webhookURL = this.model.get(\"webhookURL\");\n            var jobIds = this.model.get(\"jobIds\");\n            if ((!email && !webhookURL) || !jobIds) {\n                alertify.error(\"Please enter an email or webhook url and at least one jobId for this alert.\");\n                return false;\n            }\n            if (email) {\n                if (email.indexOf(\"@\") == -1) {\n                    alertify.error(\"Alert email field appears invalid -- please include an '@' character.\");\n                    return false;\n                }\n            }\n\n            if (webhookURL) {\n                try {\n                    new URL(webhookURL);\n                } catch (e) {\n\t\t\t\t\talertify.error(e.message);\n\t\t\t\t\treturn false;\n                }\n            }\n\n    \t\tif (type == 4 || type == 5 || type == 8) {\n    \t\t\tvar canaryPath = this.model.get(\"canaryPath\");\n    \t\t\tif (!canaryPath) {\n    \t\t\t\talertify.error(\"Please fill out canary path field.\");\n    \t\t\t\treturn false;\n    \t\t\t}\n    \t\t\tif (type == 5 && (canaryPath.match(/\\+/g)||[]).length != 1) {\n\t\t\t\t\t\talertify.error(\"Please include exactly one '+' corresponding to a numeric field (generally, +count) in your canary path field.\");\n\t\t\t\t\t\treturn false;\n    \t\t\t}\n    \t\t}\n    \t\tif (type == 4 || type == 5) {\n    \t\t\tvar canaryConfigThreshold = this.model.get(\"canaryConfigThreshold\");\n    \t\t\tif (!canaryConfigThreshold) {\n    \t\t\t\talertify.error(\"Please fill out all canary configuration fields.\");\n    \t\t\t\treturn false;\n    \t\t\t}\n    \t\t}\n    \t\treturn true;\n    \t}\n\t});\n\treturn {\n\t\tModel:Model,\n\t\tCollection: Collection,\n\t\tTableView: TableView,\n\t\tDetailView: DetailView\n\t};\n}).apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__),\n\t\t\t\t__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./src/js/modules/alerts.js\n");

/***/ }),

/***/ "./src/js/modules/alias.js":
/*!*********************************!*\
  !*** ./src/js/modules/alias.js ***!
  \*********************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;/*\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n!(__WEBPACK_AMD_DEFINE_ARRAY__ = [\n    __webpack_require__(/*! jquery */ \"./node_modules/jquery/dist/jquery.js\"),\n    __webpack_require__(/*! underscore */ \"./node_modules/underscore/underscore.js\"),\n    __webpack_require__(/*! app */ \"./src/js/app.js\"),\n    __webpack_require__(/*! alertify */ \"./src/js/vendor/alertify.js\"),\n    __webpack_require__(/*! modules/datatable */ \"./src/js/modules/datatable.js\"),\n    __webpack_require__(/*! modules/util */ \"./src/js/modules/util.js\"),\n    __webpack_require__(/*! text!../../templates/alias.filter.html */ \"./node_modules/text-loader/index.js!./src/templates/alias.filter.html\"),\n    __webpack_require__(/*! text!../../templates/alias.selectable.html */ \"./node_modules/text-loader/index.js!./src/templates/alias.selectable.html\"),\n    __webpack_require__(/*! text!../../templates/alias.detail.html */ \"./node_modules/text-loader/index.js!./src/templates/alias.detail.html\"),\n    __webpack_require__(/*! backbone */ \"./node_modules/backbone/backbone.js\")\n], __WEBPACK_AMD_DEFINE_RESULT__ = (function(\n    $,\n    _,\n    app,\n    alertify,\n    DataTable,\n    util,\n    aliasFilterTemplate,\n    aliasSelectableTemplate,\n    aliasDetailTemplate,\n    Backbone\n    ){\n    var Model = Backbone.Model.extend({\n        idAttribute:\"name\"\n        ,url:function(){\n            return \"/alias/get?id=\"+this.id;\n        }\n        ,defaults: {\n            name:\"(no name)\",\n            jobs:[]\n        },\n        save:function(){\n            var postData = {\n                name:this.get(\"name\"),\n                jobs:this.get(\"jobs\").join(\",\")\n            };\n            return $.ajax({\n                url: \"/alias/save\",\n                type: \"POST\",\n                data: postData,\n                dataType: \"json\"\n            });\n        },\n        delete:function(){\n            var name = this.get(\"name\");\n            var self = this;\n            return $.ajax({\n                url: \"/alias/delete\",\n                type: \"POST\",\n                data: {name:name},\n                dataType: \"text\"\n            });\n        },\n        parse:function(data){\n            data.DT_RowId=data.name;\n            data.DT_RowClass='alias-row';\n            return data;\n        }\n    });\n    var Collection = Backbone.Collection.extend({\n        url:\"/alias/list\",\n        parse:function(collection){\n            var array = new Array(collection.length);\n            _.each(collection,function(model,idx){\n                array[idx]= Model.prototype.parse(model);\n            });\n            return array;\n        },\n        model:Model\n    });\n    var TableView = DataTable.View.extend({\n        initialize:function(options){\n            _.bindAll(this,'handleDeleteButtonClick');\n            options = options || {};\n            this.id = options.id || \"aliasTable\";\n            this.$el.attr(\"id\",this.id);\n            var self=this;\n            var columns = [\n                {\n                    \"sTitle\":\"\",\n                    \"sClass\":\"alias-cb\",\n                    \"sWidth\":\"3%\",\n                    \"mData\": \"name\",\n                    \"bSearchable\":false,\n                    \"bSortable\":false,\n                    \"mRender\":function(val,type,data){\n                        if(self.selectedIds[val]){\n                            return \"<input checked class='row_selectable' type='checkbox'></input>\";\n                        }\n                        else{\n                            return \"<input class='row_selectable' type='checkbox'></input>\";\n                        }\n                    }\n                },\n                {\n                    \"mData\": \"name\",\n                    \"bVisible\":false,\n                    \"bSearchable\":true\n                },\n                {\n                    \"sTitle\":\"Name\",\n                    \"sClass\":\"alias-name\",\n                    \"mData\": \"name\",\n                    \"sWidth\":\"30%\",\n                    \"bVisible\":true,\n                    \"bSearchable\":false,\n                    \"mRender\":function(val,type,data){\n                        return \"<a href='#alias/\"+encodeURIComponent(val)+\"'>\"+val+\"</a>\";\n                    }\n                },\n                {\n                    \"sTitle\":\"Jobs\",\n                    \"sClass\":\"alias-jobs\",\n                    \"mData\": \"jobs\",\n                    \"sWidth\":\"67%\",\n                    \"bVisible\":true,\n                    \"bSearchable\":true,\n                    \"mRender\":function(val,type,data){\n                        var list = \"\";\n                        for(i in val)\n                            list += \"<a href='#jobs/\"+encodeURIComponent(val[i])+\"/conf'>\"+val[i]+\"</a>&nbsp;&nbsp;\";\n                        return list;\n                    }\n                }\n            ];\n            DataTable.View.prototype.initialize.apply(this,[{\n                columns:columns,\n                filterTemplate:aliasFilterTemplate,\n                selectableTemplate:aliasSelectableTemplate,\n                heightBuffer:80,\n                id:this.id,\n                emptyMessage:\" \",\n                idAttribute:\"name\"\n            }]);\n        },\n        render:function(){\n            DataTable.View.prototype.render.apply(this,[]);\n            this.views.selectable.find(\"#deleteAliasButton\").on(\"click\",this.handleDeleteButtonClick);\n            return this;\n        },\n        handleDeleteButtonClick:function(event){\n            var ids=this.getSelectedIds();\n            _.each(ids,function(id){\n                var model = app.aliasCollection.get(id);\n                if(!_.isUndefined(model)){\n                    model.delete().done(function(){\n                        app.aliasCollection.remove(model.id);\n                    }).fail(function(xhr){\n                        alertify.error(\"Error deleting alias: \"+model.id);\n                    });\n                }\n            });\n            alertify.success(ids.length+\" aliases deleted.\");\n        }\n    });\n    var DetailView = Backbone.View.extend({\n        className:'detail-view',\n        template: _.template(aliasDetailTemplate),\n        events: {\n            \"click #deleteAliasButton\":\"handleDeleteButtonClick\",\n            \"click #saveAliasButton\":\"handleSaveButtonClick\",\n            \"keyup input\":\"handleInputKeyUp\",\n            \"keyup textarea\":\"handleTextAreaKeyUp\"\n        },\n        initialize:function(){\n        },\n        render:function(){\n            var html = this.template({                \t\n                alias:this.model.toJSON()\n            });\n            this.$el.html(html);\n            return this;\n        },\n        handleDeleteButtonClick:function(event){\n            var self=this;\n            this.model.delete().done(function(data){\n                alertify.success(\"Alias deleted successfully.\");\n                app.router.navigate(\"#alias\",{trigger:true});\n            }).fail(function(xhr){\n                alertify.error(\"Error deleting alias.\");\n            });\n        },\n        handleSaveButtonClick:function(event){\n            var self=this,isNew=this.model.isNew();\n            this.model.save().done(function(data){\n                alertify.success(\"Alias saved successfully.\");\n                if(!_.isUndefined(app.aliasCollection.get(data.name))){\n                    self.model.set(Model.prototype.parse(data));\n                    app.router.navigate(\"#alias/\"+data.name,{trigger:true});\n                }else{\n                    app.aliasCollection.fetch({\n                        success:function(){\n                            app.router.navigate(\"#alias/\"+data.name,{trigger:true});\n                        }\n                    });\n                }\n            }).fail(function(xhr){\n                alertify.error(\"Error saving alias: \"+self.model.id);\n            });\n        },\n        handleInputKeyUp:function(event){\n            var input=$(event.currentTarget);\n            var name = input.attr(\"name\");\n            var value = input.val();\n            this.model.set(name,value);\n        },\n        handleTextAreaKeyUp:function(event){\n            var txt=$(event.currentTarget);\n            var name = txt.attr(\"name\");\n            var value = txt.val();\n            var jobs = [];\n            _.each(value.split(','),function(job){\n                var trimmed = $.trim(job);\n                if(!_.isEmpty(trimmed)){\n                    jobs.push(trimmed);\n                }\n            });\n            this.model.set(name,jobs);\n        }\n    });\n    return {\n        Model:Model,\n        Collection: Collection,\n        TableView: TableView,\n        DetailView: DetailView\n    };\n}).apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__),\n\t\t\t\t__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./src/js/modules/alias.js\n");

/***/ }),

/***/ "./src/js/modules/command.js":
/*!***********************************!*\
  !*** ./src/js/modules/command.js ***!
  \***********************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;/*\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n!(__WEBPACK_AMD_DEFINE_ARRAY__ = [\n    __webpack_require__(/*! jquery */ \"./node_modules/jquery/dist/jquery.js\"),\n    __webpack_require__(/*! underscore */ \"./node_modules/underscore/underscore.js\"),\n    __webpack_require__(/*! app */ \"./src/js/app.js\"),\n    __webpack_require__(/*! alertify */ \"./src/js/vendor/alertify.js\"),\n    __webpack_require__(/*! modules/datatable */ \"./src/js/modules/datatable.js\"),\n    __webpack_require__(/*! modules/util */ \"./src/js/modules/util.js\"),\n    __webpack_require__(/*! text!../../templates/command.filter.html */ \"./node_modules/text-loader/index.js!./src/templates/command.filter.html\"),\n    __webpack_require__(/*! text!../../templates/command.selectable.html */ \"./node_modules/text-loader/index.js!./src/templates/command.selectable.html\"),\n    __webpack_require__(/*! text!../../templates/command.detail.html */ \"./node_modules/text-loader/index.js!./src/templates/command.detail.html\"),\n    __webpack_require__(/*! backbone */ \"./node_modules/backbone/backbone.js\")\n], __WEBPACK_AMD_DEFINE_RESULT__ = (function(\n    $,\n    _,\n    app,\n    alertify,\n    DataTable,\n    util,\n    commandFilterTemplate,\n    commandSelectableTemplate,\n    commandDetailTemplate,\n    Backbone\n){\n    var Model = Backbone.Model.extend({\n        idAttribute:\"name\"\n        ,url:function(){\n            return \"/command/get?command=\"+this.id;\n        },defaults: {\n            name:\"(no name)\",\n            command:[],\n            owner:\"none\",\n            reqCPU:1,\n            reqIO:1,\n            reqMEM:512\n        },\n        save:function(){\n            var data = this.toJSON();\n            data.command = data.command.join(\",\");\n            return $.ajax({\n                url: \"/command/save\",\n                type: \"POST\",\n                data: data,\n                dataType: \"json\"\n            });\n        },\n        delete:function(){\n            var name = this.get(\"name\");\n            var self = this;\n            return $.ajax({\n                url: \"/command/delete\",\n                type: \"POST\",\n                data: {name:name},\n                dataType:\"text\"\n            });\n        },\n        parse:function(data){\n            data.DT_RowId=data.name;\n            data.DT_RowClass='command-row';\n            return data;\n        }\n    });\n    var Collection = Backbone.Collection.extend({\n        url:\"/command/list\",\n        parse:function(collection){\n            var array = new Array(collection.length);\n            _.each(collection,function(model,idx){\n                array[idx]= Model.prototype.parse(model);\n            });\n            return array;\n        },\n        model:Model\n    });\n    var TableView = DataTable.View.extend({\n        initialize:function(options){\n            _.bindAll(this,'handleDeleteButtonClick');\n            options = options || {};\n            this.id = options.id || \"commandTable\";\n            this.$el.attr(\"id\",this.id);\n            var self=this;\n            var columns = [\n                {\n                    \"sTitle\":\"\",\n                    \"sClass\":\"command-cb\",\n                    \"sWidth\":\"3%\",\n                    \"mData\": \"name\",\n                    \"bSearchable\":false,\n                    \"bSortable\":false,\n                    \"mRender\":function(val,type,data){\n                        if(self.selectedIds[val]){\n                            return \"<input checked class='row_selectable' type='checkbox'></input>\";\n                        }\n                        else{\n                            return \"<input class='row_selectable' type='checkbox'></input>\";\n                        }\n                    }\n                },\n                {\n                    \"mData\": \"name\",\n                    \"bVisible\":false,\n                    \"bSearchable\":true\n                },\n                {\n                    \"sTitle\":\"Name\",\n                    \"sClass\":\"command-name\",\n                    \"mData\": \"name\",\n                    \"sWidth\":\"30%\",\n                    \"bVisible\":true,\n                    \"bSearchable\":false,\n                    \"mRender\":function(val,type,data){\n                        return \"<a href='#commands/\"+encodeURIComponent(val)+\"'>\"+val+\"</a>\";\n                    }\n                },\n                {\n                    \"sTitle\":\"Command\",\n                    \"sClass\":\"command-command\",\n                    \"mData\": \"command\",\n                    \"sWidth\":\"67%\",\n                    \"bVisible\":true,\n                    \"bSearchable\":true,\n                    \"mRender\":function(val,type,data){\n                        return val.join(\",\");\n                    }\n                }\n            ];\n            DataTable.View.prototype.initialize.apply(this,[{\n                columns:columns,\n                filterTemplate:commandFilterTemplate,\n                selectableTemplate:commandSelectableTemplate,\n                heightBuffer:80,\n                //columnFilterIndex:5,\n                id:this.id,\n                emptyMessage:\" \",\n                idAttribute:\"name\"\n            }]);\n        },\n        render:function(){\n            DataTable.View.prototype.render.apply(this,[]);\n            this.views.selectable.find(\"#deleteCommandButton\").on(\"click\",this.handleDeleteButtonClick);\n            return this;\n        },\n        handleDeleteButtonClick:function(event){\n            var ids=this.getSelectedIds();\n            _.each(ids,function(id){\n                var model = app.commandCollection.get(id);\n                if(!_.isUndefined(model)){\n                    model.delete().done(function(){\n                        app.commandCollection.remove(model.id);\n                    }).fail(function(xhr){\n                        alertify.error(\"Error deleting '\" + model.id + \"': \" + xhr.responseText);\n                    });\n                }\n            });\n            alertify.message(\"Deleting \" + ids.length + \" commands...\");\n        }\n    });\n    var DetailView = Backbone.View.extend({\n        className:\"detail-view\",\n        template: _.template(commandDetailTemplate),\n        events: {\n            \"click #deleteCommandButton\":\"handleDeleteButtonClick\",\n            \"click #saveCommandButton\":\"handleSaveButtonClick\",\n            \"keyup input\":\"handleInputKeyUp\",\n            \"keyup textarea\":\"handleTextAreaKeyUp\"\n        },\n        initialize:function(){\n        },\n        render:function(){\n            var html = this.template({\n                command:this.model.toJSON()\n            });\n            this.$el.html(html);\n            return this;\n        },\n        handleDeleteButtonClick:function(event){\n            var self=this;\n            this.model.delete().done(function(data){\n                alertify.success(\"Command deleted successfully.\");\n                app.router.navigate(\"#commands\",{trigger:true});\n            }).fail(function(xhr){\n                alertify.error(\"Error deleting command.\");\n            });\n        },\n        handleSaveButtonClick:function(event){\n            var self=this,isNew=this.model.isNew();\n            this.model.save().done(function(data){\n                alertify.success(\"Command saved successfully.\");\n                if(!_.isUndefined(app.commandCollection.get(data.name))){\n                    self.model.set(Model.prototype.parse(data));\n                    app.router.navigate(\"#commands/\"+data.name,{trigger:true});\n                }else{\n                    app.commandCollection.fetch({\n                        success:function(){\n                            app.router.navigate(\"#commands/\"+data.name,{trigger:true});\n                        }\n                    });\n                }\n            }).fail(function(xhr){\n                alertify.error(\"Error saving command: \"+self.model.id);\n            });\n        },\n        handleInputKeyUp:function(event){\n            var input=$(event.currentTarget);\n            var name = input.attr(\"name\");\n            var value = input.val();\n            this.model.set(name,value);\n        },\n        handleTextAreaKeyUp:function(event){\n            var txt=$(event.currentTarget);\n            var name = txt.attr(\"name\");\n            var value = txt.val();\n            var commands = [];//value.split('\\n');\n            _.each(value.split('\\n'),function(comm){\n                var trimmed = $.trim(comm);\n                if(!_.isEmpty(trimmed)){\n                    commands.push(trimmed);\n                }\n            });\n            this.model.set(\"command\",commands);\n        }\n    });\n    return {\n        Model:Model,\n        Collection: Collection,\n        TableView: TableView,\n        DetailView: DetailView\n    };\n}).apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__),\n\t\t\t\t__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9zcmMvanMvbW9kdWxlcy9jb21tYW5kLmpzLmpzIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vLy4vc3JjL2pzL21vZHVsZXMvY29tbWFuZC5qcz9iZTBkIl0sInNvdXJjZXNDb250ZW50IjpbIi8qXG4gKiBMaWNlbnNlZCB1bmRlciB0aGUgQXBhY2hlIExpY2Vuc2UsIFZlcnNpb24gMi4wICh0aGUgXCJMaWNlbnNlXCIpO1xuICogeW91IG1heSBub3QgdXNlIHRoaXMgZmlsZSBleGNlcHQgaW4gY29tcGxpYW5jZSB3aXRoIHRoZSBMaWNlbnNlLlxuICogWW91IG1heSBvYnRhaW4gYSBjb3B5IG9mIHRoZSBMaWNlbnNlIGF0XG4gKlxuICogaHR0cDovL3d3dy5hcGFjaGUub3JnL2xpY2Vuc2VzL0xJQ0VOU0UtMi4wXG4gKlxuICogVW5sZXNzIHJlcXVpcmVkIGJ5IGFwcGxpY2FibGUgbGF3IG9yIGFncmVlZCB0byBpbiB3cml0aW5nLCBzb2Z0d2FyZVxuICogZGlzdHJpYnV0ZWQgdW5kZXIgdGhlIExpY2Vuc2UgaXMgZGlzdHJpYnV0ZWQgb24gYW4gXCJBUyBJU1wiIEJBU0lTLFxuICogV0lUSE9VVCBXQVJSQU5USUVTIE9SIENPTkRJVElPTlMgT0YgQU5ZIEtJTkQsIGVpdGhlciBleHByZXNzIG9yIGltcGxpZWQuXG4gKiBTZWUgdGhlIExpY2Vuc2UgZm9yIHRoZSBzcGVjaWZpYyBsYW5ndWFnZSBnb3Zlcm5pbmcgcGVybWlzc2lvbnMgYW5kXG4gKiBsaW1pdGF0aW9ucyB1bmRlciB0aGUgTGljZW5zZS5cbiAqL1xuZGVmaW5lKFtcbiAgICBcImpxdWVyeVwiLFxuICAgIFwidW5kZXJzY29yZVwiLFxuICAgIFwiYXBwXCIsXG4gICAgXCJhbGVydGlmeVwiLFxuICAgIFwibW9kdWxlcy9kYXRhdGFibGVcIixcbiAgICBcIm1vZHVsZXMvdXRpbFwiLFxuICAgIFwidGV4dCEuLi8uLi90ZW1wbGF0ZXMvY29tbWFuZC5maWx0ZXIuaHRtbFwiLFxuICAgIFwidGV4dCEuLi8uLi90ZW1wbGF0ZXMvY29tbWFuZC5zZWxlY3RhYmxlLmh0bWxcIixcbiAgICBcInRleHQhLi4vLi4vdGVtcGxhdGVzL2NvbW1hbmQuZGV0YWlsLmh0bWxcIixcbiAgICBcImJhY2tib25lXCJcbl0sXG5mdW5jdGlvbihcbiAgICAkLFxuICAgIF8sXG4gICAgYXBwLFxuICAgIGFsZXJ0aWZ5LFxuICAgIERhdGFUYWJsZSxcbiAgICB1dGlsLFxuICAgIGNvbW1hbmRGaWx0ZXJUZW1wbGF0ZSxcbiAgICBjb21tYW5kU2VsZWN0YWJsZVRlbXBsYXRlLFxuICAgIGNvbW1hbmREZXRhaWxUZW1wbGF0ZSxcbiAgICBCYWNrYm9uZVxuKXtcbiAgICB2YXIgTW9kZWwgPSBCYWNrYm9uZS5Nb2RlbC5leHRlbmQoe1xuICAgICAgICBpZEF0dHJpYnV0ZTpcIm5hbWVcIlxuICAgICAgICAsdXJsOmZ1bmN0aW9uKCl7XG4gICAgICAgICAgICByZXR1cm4gXCIvY29tbWFuZC9nZXQ/Y29tbWFuZD1cIit0aGlzLmlkO1xuICAgICAgICB9LGRlZmF1bHRzOiB7XG4gICAgICAgICAgICBuYW1lOlwiKG5vIG5hbWUpXCIsXG4gICAgICAgICAgICBjb21tYW5kOltdLFxuICAgICAgICAgICAgb3duZXI6XCJub25lXCIsXG4gICAgICAgICAgICByZXFDUFU6MSxcbiAgICAgICAgICAgIHJlcUlPOjEsXG4gICAgICAgICAgICByZXFNRU06NTEyXG4gICAgICAgIH0sXG4gICAgICAgIHNhdmU6ZnVuY3Rpb24oKXtcbiAgICAgICAgICAgIHZhciBkYXRhID0gdGhpcy50b0pTT04oKTtcbiAgICAgICAgICAgIGRhdGEuY29tbWFuZCA9IGRhdGEuY29tbWFuZC5qb2luKFwiLFwiKTtcbiAgICAgICAgICAgIHJldHVybiAkLmFqYXgoe1xuICAgICAgICAgICAgICAgIHVybDogXCIvY29tbWFuZC9zYXZlXCIsXG4gICAgICAgICAgICAgICAgdHlwZTogXCJQT1NUXCIsXG4gICAgICAgICAgICAgICAgZGF0YTogZGF0YSxcbiAgICAgICAgICAgICAgICBkYXRhVHlwZTogXCJqc29uXCJcbiAgICAgICAgICAgIH0pO1xuICAgICAgICB9LFxuICAgICAgICBkZWxldGU6ZnVuY3Rpb24oKXtcbiAgICAgICAgICAgIHZhciBuYW1lID0gdGhpcy5nZXQoXCJuYW1lXCIpO1xuICAgICAgICAgICAgdmFyIHNlbGYgPSB0aGlzO1xuICAgICAgICAgICAgcmV0dXJuICQuYWpheCh7XG4gICAgICAgICAgICAgICAgdXJsOiBcIi9jb21tYW5kL2RlbGV0ZVwiLFxuICAgICAgICAgICAgICAgIHR5cGU6IFwiUE9TVFwiLFxuICAgICAgICAgICAgICAgIGRhdGE6IHtuYW1lOm5hbWV9LFxuICAgICAgICAgICAgICAgIGRhdGFUeXBlOlwidGV4dFwiXG4gICAgICAgICAgICB9KTtcbiAgICAgICAgfSxcbiAgICAgICAgcGFyc2U6ZnVuY3Rpb24oZGF0YSl7XG4gICAgICAgICAgICBkYXRhLkRUX1Jvd0lkPWRhdGEubmFtZTtcbiAgICAgICAgICAgIGRhdGEuRFRfUm93Q2xhc3M9J2NvbW1hbmQtcm93JztcbiAgICAgICAgICAgIHJldHVybiBkYXRhO1xuICAgICAgICB9XG4gICAgfSk7XG4gICAgdmFyIENvbGxlY3Rpb24gPSBCYWNrYm9uZS5Db2xsZWN0aW9uLmV4dGVuZCh7XG4gICAgICAgIHVybDpcIi9jb21tYW5kL2xpc3RcIixcbiAgICAgICAgcGFyc2U6ZnVuY3Rpb24oY29sbGVjdGlvbil7XG4gICAgICAgICAgICB2YXIgYXJyYXkgPSBuZXcgQXJyYXkoY29sbGVjdGlvbi5sZW5ndGgpO1xuICAgICAgICAgICAgXy5lYWNoKGNvbGxlY3Rpb24sZnVuY3Rpb24obW9kZWwsaWR4KXtcbiAgICAgICAgICAgICAgICBhcnJheVtpZHhdPSBNb2RlbC5wcm90b3R5cGUucGFyc2UobW9kZWwpO1xuICAgICAgICAgICAgfSk7XG4gICAgICAgICAgICByZXR1cm4gYXJyYXk7XG4gICAgICAgIH0sXG4gICAgICAgIG1vZGVsOk1vZGVsXG4gICAgfSk7XG4gICAgdmFyIFRhYmxlVmlldyA9IERhdGFUYWJsZS5WaWV3LmV4dGVuZCh7XG4gICAgICAgIGluaXRpYWxpemU6ZnVuY3Rpb24ob3B0aW9ucyl7XG4gICAgICAgICAgICBfLmJpbmRBbGwodGhpcywnaGFuZGxlRGVsZXRlQnV0dG9uQ2xpY2snKTtcbiAgICAgICAgICAgIG9wdGlvbnMgPSBvcHRpb25zIHx8IHt9O1xuICAgICAgICAgICAgdGhpcy5pZCA9IG9wdGlvbnMuaWQgfHwgXCJjb21tYW5kVGFibGVcIjtcbiAgICAgICAgICAgIHRoaXMuJGVsLmF0dHIoXCJpZFwiLHRoaXMuaWQpO1xuICAgICAgICAgICAgdmFyIHNlbGY9dGhpcztcbiAgICAgICAgICAgIHZhciBjb2x1bW5zID0gW1xuICAgICAgICAgICAgICAgIHtcbiAgICAgICAgICAgICAgICAgICAgXCJzVGl0bGVcIjpcIlwiLFxuICAgICAgICAgICAgICAgICAgICBcInNDbGFzc1wiOlwiY29tbWFuZC1jYlwiLFxuICAgICAgICAgICAgICAgICAgICBcInNXaWR0aFwiOlwiMyVcIixcbiAgICAgICAgICAgICAgICAgICAgXCJtRGF0YVwiOiBcIm5hbWVcIixcbiAgICAgICAgICAgICAgICAgICAgXCJiU2VhcmNoYWJsZVwiOmZhbHNlLFxuICAgICAgICAgICAgICAgICAgICBcImJTb3J0YWJsZVwiOmZhbHNlLFxuICAgICAgICAgICAgICAgICAgICBcIm1SZW5kZXJcIjpmdW5jdGlvbih2YWwsdHlwZSxkYXRhKXtcbiAgICAgICAgICAgICAgICAgICAgICAgIGlmKHNlbGYuc2VsZWN0ZWRJZHNbdmFsXSl7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgcmV0dXJuIFwiPGlucHV0IGNoZWNrZWQgY2xhc3M9J3Jvd19zZWxlY3RhYmxlJyB0eXBlPSdjaGVja2JveCc+PC9pbnB1dD5cIjtcbiAgICAgICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgICAgIGVsc2V7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgcmV0dXJuIFwiPGlucHV0IGNsYXNzPSdyb3dfc2VsZWN0YWJsZScgdHlwZT0nY2hlY2tib3gnPjwvaW5wdXQ+XCI7XG4gICAgICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICB9LFxuICAgICAgICAgICAgICAgIHtcbiAgICAgICAgICAgICAgICAgICAgXCJtRGF0YVwiOiBcIm5hbWVcIixcbiAgICAgICAgICAgICAgICAgICAgXCJiVmlzaWJsZVwiOmZhbHNlLFxuICAgICAgICAgICAgICAgICAgICBcImJTZWFyY2hhYmxlXCI6dHJ1ZVxuICAgICAgICAgICAgICAgIH0sXG4gICAgICAgICAgICAgICAge1xuICAgICAgICAgICAgICAgICAgICBcInNUaXRsZVwiOlwiTmFtZVwiLFxuICAgICAgICAgICAgICAgICAgICBcInNDbGFzc1wiOlwiY29tbWFuZC1uYW1lXCIsXG4gICAgICAgICAgICAgICAgICAgIFwibURhdGFcIjogXCJuYW1lXCIsXG4gICAgICAgICAgICAgICAgICAgIFwic1dpZHRoXCI6XCIzMCVcIixcbiAgICAgICAgICAgICAgICAgICAgXCJiVmlzaWJsZVwiOnRydWUsXG4gICAgICAgICAgICAgICAgICAgIFwiYlNlYXJjaGFibGVcIjpmYWxzZSxcbiAgICAgICAgICAgICAgICAgICAgXCJtUmVuZGVyXCI6ZnVuY3Rpb24odmFsLHR5cGUsZGF0YSl7XG4gICAgICAgICAgICAgICAgICAgICAgICByZXR1cm4gXCI8YSBocmVmPScjY29tbWFuZHMvXCIrZW5jb2RlVVJJQ29tcG9uZW50KHZhbCkrXCInPlwiK3ZhbCtcIjwvYT5cIjtcbiAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIH0sXG4gICAgICAgICAgICAgICAge1xuICAgICAgICAgICAgICAgICAgICBcInNUaXRsZVwiOlwiQ29tbWFuZFwiLFxuICAgICAgICAgICAgICAgICAgICBcInNDbGFzc1wiOlwiY29tbWFuZC1jb21tYW5kXCIsXG4gICAgICAgICAgICAgICAgICAgIFwibURhdGFcIjogXCJjb21tYW5kXCIsXG4gICAgICAgICAgICAgICAgICAgIFwic1dpZHRoXCI6XCI2NyVcIixcbiAgICAgICAgICAgICAgICAgICAgXCJiVmlzaWJsZVwiOnRydWUsXG4gICAgICAgICAgICAgICAgICAgIFwiYlNlYXJjaGFibGVcIjp0cnVlLFxuICAgICAgICAgICAgICAgICAgICBcIm1SZW5kZXJcIjpmdW5jdGlvbih2YWwsdHlwZSxkYXRhKXtcbiAgICAgICAgICAgICAgICAgICAgICAgIHJldHVybiB2YWwuam9pbihcIixcIik7XG4gICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICBdO1xuICAgICAgICAgICAgRGF0YVRhYmxlLlZpZXcucHJvdG90eXBlLmluaXRpYWxpemUuYXBwbHkodGhpcyxbe1xuICAgICAgICAgICAgICAgIGNvbHVtbnM6Y29sdW1ucyxcbiAgICAgICAgICAgICAgICBmaWx0ZXJUZW1wbGF0ZTpjb21tYW5kRmlsdGVyVGVtcGxhdGUsXG4gICAgICAgICAgICAgICAgc2VsZWN0YWJsZVRlbXBsYXRlOmNvbW1hbmRTZWxlY3RhYmxlVGVtcGxhdGUsXG4gICAgICAgICAgICAgICAgaGVpZ2h0QnVmZmVyOjgwLFxuICAgICAgICAgICAgICAgIC8vY29sdW1uRmlsdGVySW5kZXg6NSxcbiAgICAgICAgICAgICAgICBpZDp0aGlzLmlkLFxuICAgICAgICAgICAgICAgIGVtcHR5TWVzc2FnZTpcIiBcIixcbiAgICAgICAgICAgICAgICBpZEF0dHJpYnV0ZTpcIm5hbWVcIlxuICAgICAgICAgICAgfV0pO1xuICAgICAgICB9LFxuICAgICAgICByZW5kZXI6ZnVuY3Rpb24oKXtcbiAgICAgICAgICAgIERhdGFUYWJsZS5WaWV3LnByb3RvdHlwZS5yZW5kZXIuYXBwbHkodGhpcyxbXSk7XG4gICAgICAgICAgICB0aGlzLnZpZXdzLnNlbGVjdGFibGUuZmluZChcIiNkZWxldGVDb21tYW5kQnV0dG9uXCIpLm9uKFwiY2xpY2tcIix0aGlzLmhhbmRsZURlbGV0ZUJ1dHRvbkNsaWNrKTtcbiAgICAgICAgICAgIHJldHVybiB0aGlzO1xuICAgICAgICB9LFxuICAgICAgICBoYW5kbGVEZWxldGVCdXR0b25DbGljazpmdW5jdGlvbihldmVudCl7XG4gICAgICAgICAgICB2YXIgaWRzPXRoaXMuZ2V0U2VsZWN0ZWRJZHMoKTtcbiAgICAgICAgICAgIF8uZWFjaChpZHMsZnVuY3Rpb24oaWQpe1xuICAgICAgICAgICAgICAgIHZhciBtb2RlbCA9IGFwcC5jb21tYW5kQ29sbGVjdGlvbi5nZXQoaWQpO1xuICAgICAgICAgICAgICAgIGlmKCFfLmlzVW5kZWZpbmVkKG1vZGVsKSl7XG4gICAgICAgICAgICAgICAgICAgIG1vZGVsLmRlbGV0ZSgpLmRvbmUoZnVuY3Rpb24oKXtcbiAgICAgICAgICAgICAgICAgICAgICAgIGFwcC5jb21tYW5kQ29sbGVjdGlvbi5yZW1vdmUobW9kZWwuaWQpO1xuICAgICAgICAgICAgICAgICAgICB9KS5mYWlsKGZ1bmN0aW9uKHhocil7XG4gICAgICAgICAgICAgICAgICAgICAgICBhbGVydGlmeS5lcnJvcihcIkVycm9yIGRlbGV0aW5nICdcIiArIG1vZGVsLmlkICsgXCInOiBcIiArIHhoci5yZXNwb25zZVRleHQpO1xuICAgICAgICAgICAgICAgICAgICB9KTtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICB9KTtcbiAgICAgICAgICAgIGFsZXJ0aWZ5Lm1lc3NhZ2UoXCJEZWxldGluZyBcIiArIGlkcy5sZW5ndGggKyBcIiBjb21tYW5kcy4uLlwiKTtcbiAgICAgICAgfVxuICAgIH0pO1xuICAgIHZhciBEZXRhaWxWaWV3ID0gQmFja2JvbmUuVmlldy5leHRlbmQoe1xuICAgICAgICBjbGFzc05hbWU6XCJkZXRhaWwtdmlld1wiLFxuICAgICAgICB0ZW1wbGF0ZTogXy50ZW1wbGF0ZShjb21tYW5kRGV0YWlsVGVtcGxhdGUpLFxuICAgICAgICBldmVudHM6IHtcbiAgICAgICAgICAgIFwiY2xpY2sgI2RlbGV0ZUNvbW1hbmRCdXR0b25cIjpcImhhbmRsZURlbGV0ZUJ1dHRvbkNsaWNrXCIsXG4gICAgICAgICAgICBcImNsaWNrICNzYXZlQ29tbWFuZEJ1dHRvblwiOlwiaGFuZGxlU2F2ZUJ1dHRvbkNsaWNrXCIsXG4gICAgICAgICAgICBcImtleXVwIGlucHV0XCI6XCJoYW5kbGVJbnB1dEtleVVwXCIsXG4gICAgICAgICAgICBcImtleXVwIHRleHRhcmVhXCI6XCJoYW5kbGVUZXh0QXJlYUtleVVwXCJcbiAgICAgICAgfSxcbiAgICAgICAgaW5pdGlhbGl6ZTpmdW5jdGlvbigpe1xuICAgICAgICB9LFxuICAgICAgICByZW5kZXI6ZnVuY3Rpb24oKXtcbiAgICAgICAgICAgIHZhciBodG1sID0gdGhpcy50ZW1wbGF0ZSh7XG4gICAgICAgICAgICAgICAgY29tbWFuZDp0aGlzLm1vZGVsLnRvSlNPTigpXG4gICAgICAgICAgICB9KTtcbiAgICAgICAgICAgIHRoaXMuJGVsLmh0bWwoaHRtbCk7XG4gICAgICAgICAgICByZXR1cm4gdGhpcztcbiAgICAgICAgfSxcbiAgICAgICAgaGFuZGxlRGVsZXRlQnV0dG9uQ2xpY2s6ZnVuY3Rpb24oZXZlbnQpe1xuICAgICAgICAgICAgdmFyIHNlbGY9dGhpcztcbiAgICAgICAgICAgIHRoaXMubW9kZWwuZGVsZXRlKCkuZG9uZShmdW5jdGlvbihkYXRhKXtcbiAgICAgICAgICAgICAgICBhbGVydGlmeS5zdWNjZXNzKFwiQ29tbWFuZCBkZWxldGVkIHN1Y2Nlc3NmdWxseS5cIik7XG4gICAgICAgICAgICAgICAgYXBwLnJvdXRlci5uYXZpZ2F0ZShcIiNjb21tYW5kc1wiLHt0cmlnZ2VyOnRydWV9KTtcbiAgICAgICAgICAgIH0pLmZhaWwoZnVuY3Rpb24oeGhyKXtcbiAgICAgICAgICAgICAgICBhbGVydGlmeS5lcnJvcihcIkVycm9yIGRlbGV0aW5nIGNvbW1hbmQuXCIpO1xuICAgICAgICAgICAgfSk7XG4gICAgICAgIH0sXG4gICAgICAgIGhhbmRsZVNhdmVCdXR0b25DbGljazpmdW5jdGlvbihldmVudCl7XG4gICAgICAgICAgICB2YXIgc2VsZj10aGlzLGlzTmV3PXRoaXMubW9kZWwuaXNOZXcoKTtcbiAgICAgICAgICAgIHRoaXMubW9kZWwuc2F2ZSgpLmRvbmUoZnVuY3Rpb24oZGF0YSl7XG4gICAgICAgICAgICAgICAgYWxlcnRpZnkuc3VjY2VzcyhcIkNvbW1hbmQgc2F2ZWQgc3VjY2Vzc2Z1bGx5LlwiKTtcbiAgICAgICAgICAgICAgICBpZighXy5pc1VuZGVmaW5lZChhcHAuY29tbWFuZENvbGxlY3Rpb24uZ2V0KGRhdGEubmFtZSkpKXtcbiAgICAgICAgICAgICAgICAgICAgc2VsZi5tb2RlbC5zZXQoTW9kZWwucHJvdG90eXBlLnBhcnNlKGRhdGEpKTtcbiAgICAgICAgICAgICAgICAgICAgYXBwLnJvdXRlci5uYXZpZ2F0ZShcIiNjb21tYW5kcy9cIitkYXRhLm5hbWUse3RyaWdnZXI6dHJ1ZX0pO1xuICAgICAgICAgICAgICAgIH1lbHNle1xuICAgICAgICAgICAgICAgICAgICBhcHAuY29tbWFuZENvbGxlY3Rpb24uZmV0Y2goe1xuICAgICAgICAgICAgICAgICAgICAgICAgc3VjY2VzczpmdW5jdGlvbigpe1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGFwcC5yb3V0ZXIubmF2aWdhdGUoXCIjY29tbWFuZHMvXCIrZGF0YS5uYW1lLHt0cmlnZ2VyOnRydWV9KTtcbiAgICAgICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgfSk7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgfSkuZmFpbChmdW5jdGlvbih4aHIpe1xuICAgICAgICAgICAgICAgIGFsZXJ0aWZ5LmVycm9yKFwiRXJyb3Igc2F2aW5nIGNvbW1hbmQ6IFwiK3NlbGYubW9kZWwuaWQpO1xuICAgICAgICAgICAgfSk7XG4gICAgICAgIH0sXG4gICAgICAgIGhhbmRsZUlucHV0S2V5VXA6ZnVuY3Rpb24oZXZlbnQpe1xuICAgICAgICAgICAgdmFyIGlucHV0PSQoZXZlbnQuY3VycmVudFRhcmdldCk7XG4gICAgICAgICAgICB2YXIgbmFtZSA9IGlucHV0LmF0dHIoXCJuYW1lXCIpO1xuICAgICAgICAgICAgdmFyIHZhbHVlID0gaW5wdXQudmFsKCk7XG4gICAgICAgICAgICB0aGlzLm1vZGVsLnNldChuYW1lLHZhbHVlKTtcbiAgICAgICAgfSxcbiAgICAgICAgaGFuZGxlVGV4dEFyZWFLZXlVcDpmdW5jdGlvbihldmVudCl7XG4gICAgICAgICAgICB2YXIgdHh0PSQoZXZlbnQuY3VycmVudFRhcmdldCk7XG4gICAgICAgICAgICB2YXIgbmFtZSA9IHR4dC5hdHRyKFwibmFtZVwiKTtcbiAgICAgICAgICAgIHZhciB2YWx1ZSA9IHR4dC52YWwoKTtcbiAgICAgICAgICAgIHZhciBjb21tYW5kcyA9IFtdOy8vdmFsdWUuc3BsaXQoJ1xcbicpO1xuICAgICAgICAgICAgXy5lYWNoKHZhbHVlLnNwbGl0KCdcXG4nKSxmdW5jdGlvbihjb21tKXtcbiAgICAgICAgICAgICAgICB2YXIgdHJpbW1lZCA9ICQudHJpbShjb21tKTtcbiAgICAgICAgICAgICAgICBpZighXy5pc0VtcHR5KHRyaW1tZWQpKXtcbiAgICAgICAgICAgICAgICAgICAgY29tbWFuZHMucHVzaCh0cmltbWVkKTtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICB9KTtcbiAgICAgICAgICAgIHRoaXMubW9kZWwuc2V0KFwiY29tbWFuZFwiLGNvbW1hbmRzKTtcbiAgICAgICAgfVxuICAgIH0pO1xuICAgIHJldHVybiB7XG4gICAgICAgIE1vZGVsOk1vZGVsLFxuICAgICAgICBDb2xsZWN0aW9uOiBDb2xsZWN0aW9uLFxuICAgICAgICBUYWJsZVZpZXc6IFRhYmxlVmlldyxcbiAgICAgICAgRGV0YWlsVmlldzogRGV0YWlsVmlld1xuICAgIH07XG59KTtcbiJdLCJtYXBwaW5ncyI6IkFBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0Esb0NBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQUE7Iiwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./src/js/modules/command.js\n");

/***/ }),

/***/ "./src/js/modules/datatable.js":
/*!*************************************!*\
  !*** ./src/js/modules/datatable.js ***!
  \*************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;/*\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n!(__WEBPACK_AMD_DEFINE_ARRAY__ = [\n    __webpack_require__(/*! underscore */ \"./node_modules/underscore/underscore.js\"),\n    __webpack_require__(/*! jquery */ \"./node_modules/jquery/dist/jquery.js\"),\n    __webpack_require__(/*! datatables.net */ \"./src/js/vendor/datatable-1.9.4-modified.js\"),\n    __webpack_require__(/*! backbone */ \"./node_modules/backbone/backbone.js\"),\n    __webpack_require__(/*! datatables.net-dt/css/jquery.dataTables.css */ \"./node_modules/datatables.net-dt/css/jquery.dataTables.css\")\n], __WEBPACK_AMD_DEFINE_RESULT__ = (function(_, $, dt, Backbone){\n    // Attach datatables plugin to jquery\n    dt.call($);\n    $.fn.dataTableExt.sErrMode = 'throw';\n    $.fn.dataTableExt.oApi.fnStandingRedraw = function(oSettings) {\n        if(oSettings.oFeatures.bServerSide === false){\n            oSettings.oApi._fnReDraw(oSettings);\n            // iDisplayStart has been reset to zero - so lets change it back\n            oSettings.oApi._fnCalculateEnd(oSettings);\n        }\n        // draw the 'current' page\n        oSettings.oApi._fnDraw(oSettings);\n    };\n    $.fn.dataTableExt.oApi.fnFilterCallback = function(oSettings){\n    };\n    $.fn.dataTableExt.oApi.fnFilterKVString = function(oSettings,kvStr){\n        //Parse filter query string to a key value object (aka \"filteringCriteria\" object).\n        //Example: \"share creator:foo map status:disabled\" -> { _all:\"share map\", creator:\"foo\", status:\"disabled\"}\n        var filterCriteria = DataTable.parseFilter(kvStr);\n        //Use the _all attribute which is a string that contains all words that are not KV's (creator:andres status:disabled)\n        //to filter all searchable columns\n        this.fnFilterSearchableColumnsByString(filterCriteria._all);\n        //Check if there's an attribute specific filter other than _all.\n        var keys = _.keys(_.omit(filterCriteria,\"_all\"));\n        if(keys.length>0){\n            //If there is, then let's kv filter\n            this.fnFilterColumnsByKV(filterCriteria);\n        }\n        else{\n            //If there is none, then let's make sure the per column filters are cleared.\n            this.fnClearAllColumnFilters();\n        }\n        //Let's find the X that is next to the search input and show it if the input has something, and hide it if it's empty\n        if (this.fnSettings().aanFeatures.f) {\n            var anControl = $('input', this.fnSettings().aanFeatures.f);\n            if(!_.isEmpty(kvStr)){\n                anControl.next().show();\n            }\n            else{\n                anControl.next().hide();\n            }\n            //Let's make sure that the input field has the stringified version of the filter criteria\n            anControl.val(DataTable.stringifyFilter(filterCriteria));\n        }\n    };\n    $.fn.dataTableExt.oApi.fnClearAllColumnFilters = function(oSettings){\n        //Data tables keeps the per column search state in the oSettings object. If there are no attribute-based filtering (basicaly if the\n        //filteringCriteria is an object with only a _all attribute) then we have to loop through all columns and \"clear\" the state for each\n        //column by making sure the have an empty sSearch value.\n        for(var idx=0;idx<oSettings.aoPreSearchCols.length;idx++){\n            $.extend( oSettings.aoPreSearchCols[ idx ], {\n                \"sSearch\": \"\",\n                \"bRegex\": false,\n                \"bSmart\": false,\n                \"bCaseInsensitive\": true\n            });\n        }\n        //Since we just changed the state for each column, then we need to trigger a fnFilterComplete\n        this._fnFilterComplete( oSettings.oPreviousSearch, 1 );\n    };\n    $.fn.dataTableExt.oApi.fnFilterSearchableColumnsByString = function(oSettings,filterString){\n        //Filter first using the _all key which contains all the non KV string values,\n        //this filter will filter every column tagged as searchable\n        this._fnFilterComplete({\n            \"sSearch\":filterString,\n            \"bRegex\": false,\n            \"bSmart\": false,\n            \"bCaseInsensitive\": true\n        }, 1 );\n    };\n    $.fn.dataTableExt.oApi.fnFilterColumnsByKV = function(oSettings,filterCriteria){\n        //Loop through each of the defined columns (aoColumns) and see if that column's mData or attribute name is defined in\n        //the filteringCriteria object. If it is, then extract the filter value for that column and do a filter for a specific\n        //column, if that column attribute has no filteringCriteria value then use the filtering criteria it had before. If the\n        //column had no filtering criteria value, then it will show that the previous filtering value was empty string \"\".\n        for(var idx=0;idx<oSettings.aoColumns.length;idx++){\n            //Take column object from the settings by index\n            var column = oSettings.aoColumns[idx];\n            //Take the previous search query object this column had. Every column by default has a search criteria object. If it has never\n            //been searched, then it will be a search boject with an empty string as \"sSearch\"\n            var columnSearch = oSettings.aoPreSearchCols[ idx ];\n            //Take the filtering query string if defined. If not defined, filterVal will be undefined.\n            var filterVal  = filterCriteria[column.mData];\n            //Assign the filter value and if not defined then make it an empty string \"\"\n            var value = (!_.isNull(filterVal) && !_.isUndefined(filterVal)?filterVal:\"\");\n            //Extend the column's filtering object which will overwrite the sSearch,bRegex,bSmart,bCaseInsensitive attributes\n            $.extend( columnSearch, {\n                \"sSearch\": value,\n                \"bRegex\": false,\n                \"bSmart\": false,\n                \"bCaseInsensitive\": true\n            });\n        }\n        //Invoke this internal data table oApi function to force a (from docs: \"..filter [of] the table using both the global filter and column based filtering\")\n        //With the previous logic, we made sure that the table's global and column based filter values were in order.\n        //Since we already changed the oPreviousSearch to reflect the desired search values, we can use this as the search information object that\n        //fnFilterComplete wants.\n        this._fnFilterComplete( oSettings.oPreviousSearch, 1 );\n    };\n    $.fn.dataTableExt.oApi.fnFilterOnReturn = function (oSettings) {\n        var _that = this, oApi=oSettings.oApi;\n        this.each(function (i) {\n            $.fn.dataTableExt.iApiIndex = i;\n            var $this = this;\n            if (_that.fnSettings().aanFeatures.f) {\n                var anControl = $('input', _that.fnSettings().aanFeatures.f);\n                anControl.unbind('keyup').bind('keypress', function (e) {\n                    if (e.which == 13) {\n                        $.fn.dataTableExt.iApiIndex = i;\n                        //Extract the filter query string from the input field\n                        var val = anControl.val();\n                        _that.fnFilterKVString(val);\n                    }\n                });\n                anControl.unbind('blur').bind('blur',function(e){\n                    $.fn.dataTableExt.iApiIndex = i;\n                    //Extract the filter query string from the input field\n                    var val = anControl.val();\n                    _that.fnFilterKVString(val);\n                });\n            }\n            return this;\n        });\n        return this;\n    };\n    $.fn.dataTableExt.oApi.fnAdjustWidthCustom = function(o){\n        var oSettings=o;\n        var\n            nScrollHeadInner = o.nScrollHead.getElementsByTagName('div')[0],\n            nScrollHeadTable = nScrollHeadInner.getElementsByTagName('table')[0],\n            nScrollBody = o.nTable.parentNode,\n            i, iLen, j, jLen, anHeadToSize, anHeadSizers, anFootSizers, anFootToSize, oStyle, iVis,\n            nTheadSize, nTfootSize,\n            iWidth, aApplied=[], aAppliedFooter=[], iSanityWidth,\n            nScrollFootInner = (o.nTFoot !== null) ? o.nScrollFoot.getElementsByTagName('div')[0] : null,\n            nScrollFootTable = (o.nTFoot !== null) ? nScrollFootInner.getElementsByTagName('table')[0] : null,\n            ie67 = o.oBrowser.bScrollOversize,\n            zeroOut = function(nSizer) {\n                oStyle = nSizer.style;\n                oStyle.paddingTop = \"0\";\n                oStyle.paddingBottom = \"0\";\n                oStyle.borderTopWidth = \"0\";\n                oStyle.borderBottomWidth = \"0\";\n                oStyle.height = 0;\n            };\n\n        /*\n         * 1. Re-create the table inside the scrolling div\n         */\n\n        /* Remove the old minimised thead and tfoot elements in the inner table */\n        $(o.nTable).children('thead, tfoot').remove();\n\n        /* Clone the current header and footer elements and then place it into the inner table */\n        nTheadSize = $(o.nTHead).clone()[0];\n        o.nTable.insertBefore( nTheadSize, o.nTable.childNodes[0] );\n        anHeadToSize = o.nTHead.getElementsByTagName('tr');\n        anHeadSizers = nTheadSize.getElementsByTagName('tr');\n\n        if ( o.nTFoot !== null )\n        {\n            nTfootSize = $(o.nTFoot).clone()[0];\n            o.nTable.insertBefore( nTfootSize, o.nTable.childNodes[1] );\n            anFootToSize = o.nTFoot.getElementsByTagName('tr');\n            anFootSizers = nTfootSize.getElementsByTagName('tr');\n        }\n\n        /*\n         * 2. Take live measurements from the DOM - do not alter the DOM itself!\n         */\n\n        /* Remove old sizing and apply the calculated column widths\n         * Get the unique column headers in the newly created (cloned) header. We want to apply the\n         * calculated sizes to this header\n         */\n        if ( o.oScroll.sX === \"\" )\n        {\n            nScrollBody.style.width = '100%';\n            nScrollHeadInner.parentNode.style.width = '100%';\n        }\n\n        var nThs = oSettings.oApi._fnGetUniqueThs( o, nTheadSize );\n        for ( i=0, iLen=nThs.length ; i<iLen ; i++ )\n        {\n            iVis = oSettings.oApi._fnVisibleToColumnIndex( o, i );\n            nThs[i].style.width = o.aoColumns[iVis].sWidth;\n        }\n\n        if ( o.nTFoot !== null )\n        {\n            oSettings.oApi._fnApplyToChildren( function(n) {\n                n.style.width = \"\";\n            }, anFootSizers );\n        }\n\n        // If scroll collapse is enabled, when we put the headers back into the body for sizing, we\n        // will end up forcing the scrollbar to appear, making our measurements wrong for when we\n        // then hide it (end of this function), so add the header height to the body scroller.\n        if ( o.oScroll.bCollapse && o.oScroll.sY !== \"\" )\n        {\n            nScrollBody.style.height = (nScrollBody.offsetHeight + o.nTHead.offsetHeight)+\"px\";\n        }\n\n        /* Size the table as a whole */\n        iSanityWidth = $(o.nTable).outerWidth();\n        if ( o.oScroll.sX === \"\" )\n        {\n            /* No x scrolling */\n            o.nTable.style.width = \"100%\";\n\n            /* I know this is rubbish - but IE7 will make the width of the table when 100% include\n             * the scrollbar - which is shouldn't. When there is a scrollbar we need to take this\n             * into account.\n             */\n            if ( ie67 && ($('tbody', nScrollBody).height() > nScrollBody.offsetHeight ||\n                $(nScrollBody).css('overflow-y') == \"scroll\")  )\n            {\n                o.nTable.style.width = oSettings.oApi._fnStringToCss( $(o.nTable).outerWidth() - o.oScroll.iBarWidth);\n            }\n        }\n        else\n        {\n            if ( o.oScroll.sXInner !== \"\" )\n            {\n                /* x scroll inner has been given - use it */\n                o.nTable.style.width = oSettings.oApi._fnStringToCss(o.oScroll.sXInner);\n            }\n            else if ( iSanityWidth == $(nScrollBody).width() &&\n                $(nScrollBody).height() < $(o.nTable).height() )\n            {\n                /* There is y-scrolling - try to take account of the y scroll bar */\n                o.nTable.style.width = oSettings.oApi._fnStringToCss( iSanityWidth-o.oScroll.iBarWidth );\n                if ( $(o.nTable).outerWidth() > iSanityWidth-o.oScroll.iBarWidth )\n                {\n                    /* Not possible to take account of it */\n                    o.nTable.style.width = oSettings.oApi._fnStringToCss( iSanityWidth );\n                }\n            }\n            else\n            {\n                /* All else fails */\n                o.nTable.style.width = oSettings.oApi._fnStringToCss( iSanityWidth );\n            }\n        }\n\n        /* Recalculate the sanity width - now that we've applied the required width, before it was\n         * a temporary variable. This is required because the column width calculation is done\n         * before this table DOM is created.\n         */\n        iSanityWidth = $(o.nTable).outerWidth();\n\n        /* We want the hidden header to have zero height, so remove padding and borders. Then\n         * set the width based on the real headers\n         */\n\n        // Apply all styles in one pass. Invalidates layout only once because we don't read any\n        // DOM properties.\n        oSettings.oApi._fnApplyToChildren( zeroOut, anHeadSizers );\n\n        // Read all widths in next pass. Forces layout only once because we do not change\n        // any DOM properties.\n        oSettings.oApi._fnApplyToChildren( function(nSizer) {\n            aApplied.push( oSettings.oApi._fnStringToCss( $(nSizer).width() ) );\n        }, anHeadSizers );\n\n        // Apply all widths in final pass. Invalidates layout only once because we do not\n        // read any DOM properties.\n        oSettings.oApi._fnApplyToChildren( function(nToSize, i) {\n            nToSize.style.width = aApplied[i];\n        }, anHeadToSize );\n\n        $(anHeadSizers).height(0);\n\n        /* Same again with the footer if we have one */\n        if ( o.nTFoot !== null )\n        {\n            oSettings.oApi._fnApplyToChildren( zeroOut, anFootSizers );\n\n            oSettings.oApi._fnApplyToChildren( function(nSizer) {\n                aAppliedFooter.push( oSettings.oApi._fnStringToCss( $(nSizer).width() ) );\n            }, anFootSizers );\n\n            oSettings.oApi._fnApplyToChildren( function(nToSize, i) {\n                nToSize.style.width = aAppliedFooter[i];\n            }, anFootToSize );\n\n            $(anFootSizers).height(0);\n        }\n\n        /*\n         * 3. Apply the measurements\n         */\n\n        /* \"Hide\" the header and footer that we used for the sizing. We want to also fix their width\n         * to what they currently are\n         */\n        oSettings.oApi._fnApplyToChildren( function(nSizer, i) {\n            nSizer.innerHTML = \"\";\n            nSizer.style.width = aApplied[i];\n        }, anHeadSizers );\n\n        if ( o.nTFoot !== null )\n        {\n            oSettings.oApi._fnApplyToChildren( function(nSizer, i) {\n                nSizer.innerHTML = \"\";\n                nSizer.style.width = aAppliedFooter[i];\n            }, anFootSizers );\n        }\n\n        /* Sanity check that the table is of a sensible width. If not then we are going to get\n         * misalignment - try to prevent this by not allowing the table to shrink below its min width\n         */\n        if ( $(o.nTable).outerWidth() < iSanityWidth )\n        {\n            /* The min width depends upon if we have a vertical scrollbar visible or not */\n            var iCorrection = ((nScrollBody.scrollHeight > nScrollBody.offsetHeight ||\n                $(nScrollBody).css('overflow-y') == \"scroll\")) ?\n                iSanityWidth+o.oScroll.iBarWidth : iSanityWidth;\n\n            /* IE6/7 are a law unto themselves... */\n            if ( ie67 && (nScrollBody.scrollHeight >\n                nScrollBody.offsetHeight || $(nScrollBody).css('overflow-y') == \"scroll\")  )\n            {\n                o.nTable.style.width = oSettings.oApi._fnStringToCss( iCorrection-o.oScroll.iBarWidth );\n            }\n\n            /* Apply the calculated minimum width to the table wrappers */\n            nScrollBody.style.width = oSettings.oApi._fnStringToCss( iCorrection );\n            o.nScrollHead.style.width = oSettings.oApi._fnStringToCss( iCorrection );\n\n            if ( o.nTFoot !== null )\n            {\n                o.nScrollFoot.style.width = oSettings.oApi._fnStringToCss( iCorrection );\n            }\n\n            /* And give the user a warning that we've stopped the table getting too small */\n            if ( o.oScroll.sX === \"\" )\n            {\n                oSettings.oApi._fnLog( o, 1, \"The table cannot fit into the current element which will cause column\"+\n                    \" misalignment. The table has been drawn at its minimum possible width.\" );\n            }\n            else if ( o.oScroll.sXInner !== \"\" )\n            {\n                oSettings.oApi._fnLog( o, 1, \"The table cannot fit into the current element which will cause column\"+\n                    \" misalignment. Increase the sScrollXInner value or remove it to allow automatic\"+\n                    \" calculation\" );\n            }\n        }\n        else\n        {\n            nScrollBody.style.width = oSettings.oApi._fnStringToCss( '100%' );\n            o.nScrollHead.style.width = oSettings.oApi._fnStringToCss( '100%' );\n\n            if ( o.nTFoot !== null )\n            {\n                o.nScrollFoot.style.width = oSettings.oApi._fnStringToCss( '100%' );\n            }\n        }\n\n\n        /*\n         * 4. Clean up\n         */\n        if ( o.oScroll.sY === \"\" )\n        {\n            /* IE7< puts a vertical scrollbar in place (when it shouldn't be) due to subtracting\n             * the scrollbar height from the visible display, rather than adding it on. We need to\n             * set the height in order to sort this. Don't want to do it in any other browsers.\n             */\n            if ( ie67 )\n            {\n                nScrollBody.style.height = oSettings.oApi._fnStringToCss( o.nTable.offsetHeight+o.oScroll.iBarWidth );\n            }\n        }\n\n        if ( o.oScroll.sY !== \"\" && o.oScroll.bCollapse )\n        {\n            nScrollBody.style.height = oSettings.oApi._fnStringToCss( o.oScroll.sY );\n\n            var iExtra = (o.oScroll.sX !== \"\" && o.nTable.offsetWidth > nScrollBody.offsetWidth) ?\n                o.oScroll.iBarWidth : 0;\n            if ( o.nTable.offsetHeight < nScrollBody.offsetHeight )\n            {\n                nScrollBody.style.height = oSettings.oApi._fnStringToCss( o.nTable.offsetHeight+iExtra );\n            }\n        }\n\n        /* Finally set the width's of the header and footer tables */\n        var iOuterWidth = $(o.nTable).outerWidth();\n        nScrollHeadTable.style.width = oSettings.oApi._fnStringToCss( iOuterWidth );\n        nScrollHeadInner.style.width = oSettings.oApi._fnStringToCss( iOuterWidth );\n\n        // Figure out if there are scrollbar present - if so then we need a the header and footer to\n        // provide a bit more space to allow \"overflow\" scrolling (i.e. past the scrollbar)\n        var bScrolling = $(o.nTable).height() > nScrollBody.clientHeight || $(nScrollBody).css('overflow-y') == \"scroll\";\n        nScrollHeadInner.style.paddingRight = bScrolling ? o.oScroll.iBarWidth+\"px\" : \"0px\";\n\n        if ( o.nTFoot !== null )\n        {\n            nScrollFootTable.style.width = oSettings.oApi._fnStringToCss( iOuterWidth );\n            nScrollFootInner.style.width = oSettings.oApi._fnStringToCss( iOuterWidth );\n            nScrollFootInner.style.paddingRight = bScrolling ? o.oScroll.iBarWidth+\"px\" : \"0px\";\n        }\n        $(anHeadToSize).children(\"th\").height(\"0px\");\n    };\n    $.fn.dataTableExt.oApi.fnAdjustWidth = function (oSettings){\n        var o=oSettings;\n        var\n            nScrollHeadInner = o.nScrollHead.getElementsByTagName('div')[0],\n            nScrollHeadTable = nScrollHeadInner.getElementsByTagName('table')[0],\n            nScrollBody = o.nTable.parentNode,\n            i, iLen, j, jLen, anHeadToSize, anHeadSizers, anFootSizers, anFootToSize, oStyle, iVis,\n            nTheadSize, nTfootSize,\n            iWidth, aApplied=[], aAppliedFooter=[], iSanityWidth,\n            nScrollFootInner = (o.nTFoot !== null) ? o.nScrollFoot.getElementsByTagName('div')[0] : null,\n            nScrollFootTable = (o.nTFoot !== null) ? nScrollFootInner.getElementsByTagName('table')[0] : null,\n            ie67 = o.oBrowser.bScrollOversize,\n            zeroOut = function(nSizer) {\n                oStyle = nSizer.style;\n                oStyle.paddingTop = \"0\";\n                oStyle.paddingBottom = \"0\";\n                oStyle.borderTopWidth = \"0\";\n                oStyle.borderBottomWidth = \"0\";\n                oStyle.height = 0;\n            };\n        var table = $(o.nTable), invisibleCount=0;\n        for ( var iColumn=0, iColumns=o.aoColumns.length ; iColumn<iColumns ; iColumn++ ){\n            var oCol= o.aoColumns[iColumn];\n            if(oCol.bVisible){\n                table.find(\"tr td:nth-child(\"+(iColumn-invisibleCount+1)+\")\").width(oCol.sWidth);\n            }\n            else{\n                invisibleCount++;\n            }\n        }\n    };\n    $.fn.dataTableExt.oApi.fnDataUpdate = function (oSettings, dataRow) {\n        try {\n            //console.log(nRowObject);\n            //var nRow = oSettings.aoData[iRowIndex].nTr;\n            //var dataRow = oSettings.aoData[iRowIndex]._aData;\n            $('td').each(function(i) {\n                dataRow[i] = $(this).html();\n            });\n\n            this.oApi._fnDraw(oSettings, true);\n        }\n        catch(e) {\n            console.log(\"[fnDataUpdate] threw exception: \" + e);\n        }\n    };\n    $.fn.dataTableExt.oApi.fnSetFilteringDelay = function ( oSettings, iDelay ) {\n        var _that = this;\n\n        if ( iDelay === undefined ) {\n            iDelay = 300;\n        }\n\n        this.each( function ( i ) {\n            $.fn.dataTableExt.iApiIndex = i;\n            var\n                $this = this,\n                oTimerId = null,\n                sPreviousSearch = null,\n                anControl = $( 'input', _that.fnSettings().aanFeatures.f );\n\n            if (_that.fnSettings().aanFeatures.f) {\n                anControl.unbind( 'keyup' ).bind( 'keyup', function() {\n                    var $$this = $this;\n\n                    if (sPreviousSearch === null || sPreviousSearch != anControl.val()) {\n                        window.clearTimeout(oTimerId);\n                        sPreviousSearch = anControl.val();\n                        oTimerId = window.setTimeout(function() {\n                            $.fn.dataTableExt.iApiIndex = i;\n                            _that.fnFilter( anControl.val() );\n                            _that.trigger(\"filtered\",[]);\n                        }, iDelay);\n                    }\n                });\n            }\n            return this;\n        } );\n        return this;\n    };\n    var DataTable = {};\n    DataTable.parseFilter = function(str){\n        if(_.isEmpty(str)){\n            return {_all:\"\"};\n        }\n        else{\n            var toks = str.split(\" \");\n            var byCol = {};\n            var all =[];\n            _.each(toks,function(tok){\n                if(_.contains(tok,\":\")){\n                    var tuple = tok.split(\":\");\n                    var key = _.first(tuple);\n                    var values = _.rest(tuple);\n                    var value = values.join(\"\");\n                    byCol[key]=value;\n                }else{\n                    all.push(tok);\n                }\n            });\n            byCol._all= $.trim(all.join(\" \"));\n            return byCol;\n        }\n    };\n    DataTable.findColumnIndices=function(columns,attributes){\n        var map={};\n        _.each(columns,function(column,index){\n            if(!_.isNumber(column.mData) && !_.isEmpty(column.mData) && _.contains(attributes,column.mData)){\n                map[column.mData]=index;\n            }\n        });\n        return map;\n    };\n    DataTable.stringifyFilter = function(criteria){\n        var keys = _.keys(_.omit(criteria,\"_all\"));\n        var value = criteria._all;\n        _.each(keys,function(key){\n            value+=\" \"+key+\":\"+criteria[key];\n        });\n        return $.trim(value);\n    };\n    DataTable.View = Backbone.View.extend({\n        tagName:\"table\",\n        className:\"table table-bordered table-collapsed table-condensed\",\n        attributes:{\n            cellPadding:0,\n            cellSpacing:0,\n            border:0\n        },\n        events:{\n            \"click tr\":\"handleSelect\",\n            \"filtered\":\"handleFiltered\"\n        },\n        handleFiltered:function(){\n            var rows = this.views.table._('tr.row_selected', {\"filter\":\"applied\"});\n            this.selectedIds={};\n            var self=this;\n            _.each(rows,function(row){\n                self.selectedIds[row[self.idAttribute]]=true;\n            });\n            this.saveSelectedState();\n        },\n        initialize:function(options){\n            _.bindAll(this,'cacheColumnIndices','handleFiltered','handleCheckboxButtonClick','handleCheckboxPartialClick','handleCheckboxNoneClick','handleCheckboxAllClick','checkDirty','resort','handleScroll','resize','handleReset','handleRemove','handleAdd','handleChange','handleFilter','resetAllFilters');\n            options = options || {};\n            this.views={};\n            this.height=0;\n            this.width=0;\n            this.initialized=false;\n            this.collapsible = (_.isUndefined(options.collapsible)?false:true);\n            this.heightBuffer=options.heightBuffer || 89;\n            this.columns = options.columns || this.columns ||  [];\n            this.filterTemplate = options.filterTemplate || \"\";\n            this.selectableTemplate = options.selectableTemplate || \"\";\n            this.columnFilterIndex = localStorage[this.id+\"_filterIndex\"];\n            this.columnIndexMap={};\n            this.emptyMessage = (_.has(options,\"emptyMessage\")?options.emptyMessage:\"No data available\");\n            this.enableSearch = (_.has(options,\"enableSearch\")?options.enableSearch:true);\n            this.id=options.id || \"\";\n            this.dirty=true;\n            this.drawCallback=options.drawCallback;\n            this.dirtyInterval = setInterval(this.checkDirty,2000);\n            this.scrollTop=0;\n            this.changeAttrs=options.changeAttrs || [];\n            this.listenTo(this.collection,\"reset\",this.handleReset);\n            this.listenTo(this.collection,\"remove\",this.handleRemove);\n            this.listenTo(this.collection,\"add\",this.handleAdd);\n            this.listenTo(this.collection,\"change\",this.handleChange);\n            this.rowCount=0;\n            this.rowById={};\n            this.sortCols=[];\n            this.idAttribute=options.idAttribute || \"DT_RowId\";\n            this.loadSelectedState();\n            this.cacheColumnIndices();\n        },\n        cacheColumnIndices:function(){\n            var map={};\n            _.each(this.columns,function(column,index){\n                if(!_.isNumber(column.mData) && !_.isEmpty(column.mData)){\n                    map[column.mData]=index;\n                }\n            });\n            this.columnIndexMap = map;\n        },\n        checkDirty:function(){\n            var oSettings=(!_.isUndefined(this.views.table)?this.views.table.fnSettings():{});\n            if(this.dirty && !_.isEmpty(oSettings) && !oSettings.bDrawing){\n                oSettings.iInitDisplayStart=this.scrollTop;\n                this.resort();\n                this.dirty=false;\n            }\n        },\n        handleScroll:function(event){\n            var body = this.views.body;\n            this.scrollTop=body.scrollTop();\n        },\n        render:function(){\n            var height = this.$el.parent().height()-this.heightBuffer;\n            var self=this;\n            this.views.parent=this.$el.parent();\n            if(!this.initialized){\n                var prefix = \"\";\n                var id = this.id;\n                this.views.table =this.$el.dataTable({\n                    \"aaData\":this.collection.toJSON(),\n                    \"aoColumns\": this.columns,\n                    \"aaSorting\":[],\n                    //\"bScrollInfinite\":false,\n                    //\"bAutoWidth\": true,\n                    //\"sScrollX\": \"100%\",\n                    //\"sScrollXInner\": \"100%\",\n                    \"oSearch\": {\"bRegex\":false,\"bSmart\": false},\n                    \"bPaginate\":false,\n                    \"sScrollY\":height+\"px\",\n                    \"bProcessing\":false,\n                    \"bStateSave\": true,\n                    \"bServerSide\":false,\n                    \"bCaseInsensitive\":true,\n                    \"bDeferRender\": true,\n                    //\"bScrollCollapse\":self.collapsible,\n                    \"sInfoEmpty\":this.emptyMessage,\n                    //\"bScrollAutoCss\": true,\n                    \"oLanguage\":{\n                        \"sEmptyTable\":self.emptyMessage,\n                        \"sSearch\":\"\"\n                    },\n                    \"sCookiePrefix\":prefix,\n                    \"iCookieDuration\":7*60*60*24,//1 week\n                    \"fnStateSave\": function (oSettings, oData) {\n                        var state=JSON.stringify(oData);\n                        state.columnFilterIndex=self.columnFilterIndex;\n                        localStorage[id]=state;\n                        self.sortCols=oData.aaSorting;\n                        localStorage[id+\"_filterIndex\"]=self.columnFilterIndex;\n                        return true;\n                    },\n                    \"fnStateLoad\":function(oSettings){\n                        var state = localStorage[id];\n                        state=(_.isUndefined(state)?null:state);\n                        state=JSON.parse(state);\n                        if(!_.isNull(oSettings.oLoadedState)){\n                            state= _.extend(oSettings.oLoadedState,state);\n                            self.sortCols=state.aaSorting;\n                        }\n                        var filterIndex = localStorage[id+\"_filterIndex\"];\n                        if(!_.isUndefined(filterIndex)){\n                            self.columnFilterIndex=parseInt(filterIndex,10);\n                        }\n                        return state;\n                    },\n                    \"fnStateLoadParams\":function (oSettings, oData) {\n                        return true;\n                    },\n                    \"fnCookieCallback\":function(sName, oData, sExpires, sPath){\n                        return sName + \"=\"+JSON.stringify(oData)+\"; expires=\" + sExpires +\"; path=\" + sPath+id;\n                    },\n                    \"fnDrawCallback\" : function(oSettings) {\n                        if(!_.isUndefined(self.drawCallback)){\n                            self.drawCallback(oSettings);\n                        }\n                        self.dirty=false;\n                    },\n                    \"fnPreDrawCallback\":function(){\n                        return true;\n                    },\n                    \"fnInitComplete\": function(oSettings, json){\n                        var anControl = $(\"div#\"+id+\"_filter label input[type='text']\");\n                        var clearButton = $(\"<span class='icon_clear'>X</span>\");\n                        clearButton.bind('click',function(){\n                            $(this).hide();\n                            self.resetAllFilters();\n                            self.views.table.fnFilter(\"\");\n                        });\n                        if(_.isEmpty(anControl.val())){\n                            clearButton.hide();\n                        }\n                        else{\n                            clearButton.show();\n                        }\n                        clearButton.insertAfter(anControl);\n\n                        var search = oSettings.oPreviousSearch.sSearch;\n                        var columns = self.columns;\n                        _.each(columns,function(column,idx){\n                            var colSearch = oSettings.aoPreSearchCols[idx];\n                            if(!_.isNumber(colSearch.sSearch) && !_.isEmpty(colSearch.sSearch)){\n                                search+=\" \"+column.mData+\":\"+colSearch.sSearch;\n                            }\n                        });\n                        anControl.val($.trim(search));\n\n                    },\n                    \"fnCreatedRow\":function(nRow, aData, iDataIndex){\n                        self.rowCount++;\n                        var $row=$(nRow),rowId=aData[self.idAttribute];\n                        self.rowById[rowId]=nRow;\n                        if(!_.isUndefined(self.selectedIds[rowId])){\n                            $row.addClass(\"row_selected\");\n                            $row.find(\"td input.row_selectable\").prop(\"checked\",true);\n                        }\n                        $row.attr(\"id\",rowId);\n                    },\n                    bFilter:this.enableSearch,\n                    \"sDom\": '<\"dataTables_header\"<\"selectable_action\">'+(this.enableSearch?'f':'')+'<\"filter_links\">>lrt<\"dataTables_footer\"i<\"summary_info\">>'\n                });\n                //filter template\n                this.views.selectable = $(this.selectableTemplate);\n                this.views.filter = $(this.filterTemplate);\n                this.views.parent.find(\"div.selectable_action\").append(this.views.selectable);\n                this.views.parent.find(\"div.filter_links\").append(this.views.filter);\n                this.views.parent.find(\"div.dataTables_filter input\").attr(\"placeholder\",\"Search\");\n                this.initialized=true;\n                $(window).resize(this.resize);\n                this.views.selectable.bind('click button.checkbox-button',this.handleCheckboxButtonClick);\n                this.views.filter.bind('click li a',this.handleFilter);\n                $(this.views.table.fnSettings().oInstance).on('filter',this.handleFiltered);\n                this.views.body = this.$el.closest('div.dataTables_scrollBody');\n                this.$el=$(this.views.table.fnSettings().nTableWrapper);\n                this.adjustWidth();\n                this.saveSelectedState();\n                this.views.table.fnFilterOnReturn();\n            }\n            else{\n                this.resize();\n                this.adjustWidth();\n                this.redrawTable();\n            }\n            return this;\n        },\n        checkFilterState:function(settings){\n        },\n        resetAllFilters:function(settings){\n            var oSettings;\n            if(_.isUndefined(settings)){\n                oSettings = this.views.table.fnSettings();\n            }else{\n                oSettings=settings;\n            }\n            for(iCol = 0; iCol < oSettings.aoPreSearchCols.length; iCol++) {\n                oSettings.aoPreSearchCols[ iCol ].sSearch = '';\n            }\n            this.columnFilterIndex=-1;\n            // fnDraw?\n        },\n        adjustColumnSizing:function(){\n            try{\n                this.views.table.fnAdjustColumnSizing();\n            }\n            catch(err){\n                console.log(\"Error resizing columns.\");\n            }\n        },\n        adjustWidth:function(){\n            try{\n                this.views.table.fnAdjustWidthCustom();\n            }\n            catch(err){\n                console.log(\"Error adjusting width.\");\n            }\n        },\n        resize:function(event){\n            app.log(\"Resizing table: \"+this.id);\n            var parent = this.views.parent;\n            var height = parent.height() - this.heightBuffer;\n            var width = parent.width();\n            if(!_.isEqual(this.height,height)){\n                var table = this.views.table;\n                var settings = table.fnSettings();\n                if(!_.isNull(settings)){\n                    settings.oScroll.sY = height + \"px\";\n                    this.views.parent.find('div.dataTables_scrollBody').height(height+'px');\n                    this.redrawTable();\n                    this.height=height;\n                }\n            }\n            if(!_.isEqual(width,this.width)){\n                this.adjustColumnSizing();\n                this.adjustWidth();\n                this.width=width;\n            }\n        },\n        redrawTable:function(){\n            this.views.table.fnDraw(true);\n        },\n        resort:function(){\n            if(this.sortCols.length>0){\n                this.views.table.fnSort(this.sortCols);\n            }\n        },\n        handleReset:function(){\n            this.dirty=true;\n            this.views.table.fnClearTable();\n            this.views.table.fnAddData(this.collection.toJSON());\n            this.redrawTable();\n            this.saveSelectedState();\n        },\n        handleSelect:function(event){\n            var currentTarget = $(event.currentTarget);\n            var target = $(event.target);\n            if(!target.is(\"a\") && !target.is(\"button\")){\n                var row = currentTarget;\n                if(row.hasClass(\"row_selected\")){\n                    delete this.selectedIds[row.attr(\"id\")];\n                    row.removeClass(\"row_selected\");\n                    row.find(\"td input.row_selectable\").prop(\"checked\",false);\n                }\n                else{\n                    row.addClass(\"row_selected\");\n                    this.selectedIds[row.attr(\"id\")]=true;\n                    row.find(\"td input.row_selectable\").prop(\"checked\",true);\n                }\n                this.saveSelectedState();\n            }\n        },\n        handleRemove:function(model){\n            var tr = $(this.rowById[model.id]);\n            if(tr.length===1){\n                delete this.selectedIds[tr.attr(\"id\")];\n                delete this.rowById[model.id];\n                var index = this.views.table.fnGetPosition(tr.get(0));\n                this.dirty=true;\n                this.views.table.fnDeleteRow(index,null,false);\n                this.redrawTable();\n            }\n            this.saveSelectedState();\n        },\n        handleAdd:function(model){\n            this.dirty=true;\n            this.views.table.fnAddData(model.toJSON(),true);\n        },\n        handleChange:function(model){\n            var needUpdate=true;\n            if(!_.isEmpty(this.changeAttrs)){\n                for(var i=0;i<this.changeAttrs.length;i++){\n                    var attr=this.changeAttrs[i];\n                    if(_.has(model.changed,attr)){\n                        needUpdate=true;\n                        break;\n                    }\n                    else{\n                        needUpdate=false;\n                    }\n                }\n            }\n            if(needUpdate){\n                var tr;\n                if(!_.isUndefined(this.rowById[model.id])){\n                    tr = $(this.rowById[model.id]);\n                }\n                else{\n                    tr = this.views.table.$(\"#\"+model.id);\n                }\n                if(tr.length===1){\n                    this.dirty=true;\n                    try{\n                        this.views.table.fnUpdate(model.toJSON(),tr.get(0),undefined,false,false);\n                    }catch(er){\n                        console.log(\"Couldn't find data for row: \"+model.id);\n                        var tr2 = this.views.table.$(\"#\"+model.id);\n                        if(tr2.length===1){\n                            this.views.table.fnUpdate(model.toJSON(),tr2.get(0),undefined,false,false);\n                        }\n                    }\n                }\n            }\n        },\n        handleFilter:function(event){\n            var link = $(event.target);\n            var oSettings = this.views.table.fnSettings();\n            if (oSettings.aanFeatures.f) {\n                var anControl = $( 'input', oSettings.aanFeatures.f );\n                var search = anControl.val();\n                var index = parseInt(link.data(\"index\"),10);\n                var value = link.data(\"value\");\n                var col = this.columns[index];\n                if(!_.isNull(col) && !_.isUndefined(col)){\n                    var key = this.columns[index].mData;\n                    if(!_.isNumber(key) && !_.isEmpty(key)){\n                        search+=\" \"+key+\":\"+value;\n                    }\n                }\n                anControl.val($.trim(search));\n                anControl.trigger(\"blur\");\n                event.preventDefault();\n                event.stopImmediatePropagation();\n            }\n        },\n        remove:function(){\n            this.$el.detach();\n        },\n        getSelectedIds:function(){\n            var ids = _.keys(this.selectedIds);\n            return ids;\n        },\n        saveSelectedState:function(){\n            localStorage[this.id+\"_selected\"]=JSON.stringify(this.selectedIds);\n            var keys= _.keys(this.selectedIds), checkbox=this.views.selectable.find(\"span.checkbox\");\n            this.views.parent.find(\"#selectedCount\").html(\"[\"+keys.length+\"]\");\n\n            if (keys.length == 1) {\n                this.views.selectable.find(\"button.btn-show-one\").removeClass(\"disabled\");\n            } else {\n                this.views.selectable.find(\"button.btn-show-one\").addClass(\"disabled\");\n            }\n\n            if(_.isEqual(keys.length,this.collection.length)){\n                checkbox.attr(\"class\",\"checkbox checked-all\");\n                checkbox.parent().data(\"state\",\"all\");\n                this.views.selectable.find(\"button.btn-hide-zero\").removeClass(\"disabled\");\n            }\n            else if(keys.length>0){\n                checkbox.attr(\"class\",\"checkbox checked-partial\");\n                checkbox.parent().data(\"state\",\"partial\");\n                this.views.selectable.find(\"button.btn-hide-zero\").removeClass(\"disabled\");\n            }\n            else{\n                checkbox.attr(\"class\",\"checkbox\");\n                checkbox.parent().data(\"state\",\"none\");\n                this.views.selectable.find(\"button.btn-hide-zero\").addClass(\"disabled\");\n            }\n        },\n        loadSelectedState:function(){\n            if(!_.isUndefined(localStorage[this.id+\"_selected\"])){\n                this.selectedIds=JSON.parse(localStorage[this.id+\"_selected\"]);\n            }\n            else{\n                this.selectedIds={};\n            }\n        },\n        handleCheckboxButtonClick:function(event){\n            if(!$(event.currentTarget).is(\"button.checkbox-button\")){\n                return;\n            }\n            var button = this.views.parent.find(\"button.checkbox-button\");\n            if(_.isEqual(button.data(\"state\"),\"partial\")){\n                this.handleCheckboxPartialClick(event);\n            }else if(_.isEqual(button.data(\"state\"),\"none\")){\n                this.handleCheckboxNoneClick(event);\n            }else if(_.isEqual(button.data(\"state\"),\"all\")){\n                this.handleCheckboxAllClick(event);\n            }\n        },\n        handleCheckboxPartialClick:function(event){\n            this.selectedIds={};\n            var rows = this.views.table.$(\"tr.row_selected\");\n            rows.removeClass(\"row_selected\");\n            rows.find(\"td input.row_selectable\").prop(\"checked\",false);\n            this.saveSelectedState();\n        },\n        handleCheckboxNoneClick:function(event){\n            var trs = this.views.table.$(\"tbody tr\");\n            this.selectedIds={};\n            var self=this;\n            _.each(trs,function(tr){\n                var row=$(tr);\n                row.addClass(\"row_selected\");\n                row.find(\"td input.row_selectable\").prop(\"checked\",true);\n                self.selectedIds[row.attr(\"id\")]=true;\n            });\n            this.saveSelectedState();\n        },\n        handleCheckboxAllClick:function(event){\n            this.selectedIds={};\n            var rows = this.views.table.$(\"tr.row_selected\");\n            rows.removeClass(\"row_selected\");\n            rows.find(\"td input.row_selectable\").prop(\"checked\",false);\n            this.saveSelectedState();\n        }\n    });\n    return DataTable;\n}).apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__),\n\t\t\t\t__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./src/js/modules/datatable.js\n");

/***/ }),

/***/ "./src/js/modules/editor.js":
/*!**********************************!*\
  !*** ./src/js/modules/editor.js ***!
  \**********************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;/*\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n!(__WEBPACK_AMD_DEFINE_ARRAY__ = [\n\t__webpack_require__(/*! underscore */ \"./node_modules/underscore/underscore.js\"),\n\t__webpack_require__(/*! ace */ \"./node_modules/brace/index.js\"),\n\t__webpack_require__(/*! brace/theme/monokai */ \"./node_modules/brace/theme/monokai.js\"),\n\t__webpack_require__(/*! brace/mode/javascript */ \"./node_modules/brace/mode/javascript.js\"),\n\t__webpack_require__(/*! brace/ext/searchbox */ \"./node_modules/brace/ext/searchbox.js\"),\n\t__webpack_require__(/*! backbone */ \"./node_modules/backbone/backbone.js\")\n], __WEBPACK_AMD_DEFINE_RESULT__ = (function(\n\t_,\n    ace\n){\n    var Editor={};\n    Editor.AceView = Backbone.View.extend({\n\t\tevents:{\n\t\t\t\"change\":\"handleEditorChange\"\n\t\t},\n\t\tinitialize:function(options){\n\t\t\t_.bindAll(this,'handleEditorChange');\n            options = options || {};\n            this.keyName=options.keyName;\n\t\t\tthis.readOnly=(options.readOnly?options.readOnly:false);\n\t\t\tthis.hasRendered=false;\n\t\t\tthis.hasReset=false;\n\t\t\tthis.scrollTo=options.scrollTo || {line: 0, col: 0},\n\t\t\tthis.listenTo(this.model,\"change:\"+options.keyName,this.render);\n\t\t\t//this.listenTo(this.model,\"reset\",this.handleReset);\n\t\t\tthis.model.bind(\"reset\",this.handleReset);\n            if(!_.isUndefined(options.css)){\n                this.$el.css(options.css);\n            }\n\t\t},\n\t\thandleEditorChange:function(event){\n\t\t\tthis.model.set(this.keyName, this.views.editor.session.getValue(),{silent:true});\n\t\t\tif(this.hasReset){\n\t\t\t\tthis.model.trigger(\"user_edit\");\n\t\t\t}\n            else{\n                this.views.editor.resize();\n            }\n\t\t},\n\t\thandleReset:function(event){\n\t\t\tthis.views.editor.session.setValue(this.model.get(this.keyName));\n\t\t\tthis.hasReset=true;\n\t\t},\n\t\trender:function(){\n\t\t\tthis.views={\n\t\t\t\teditor: ace.edit(this.el)\n\t\t\t};\n\n\t\t\tif(this.readOnly){\n\t\t\t\tthis.views.editor.setReadOnly(this.readOnly);\n\t\t\t}\n\t\t\tthis.views.editor.setShowPrintMargin(false);\n            this.views.editor.getSession().setUseWorker(false);\n            this.views.editor.getSession().setOption('useSoftTabs',true);\n\t\t\tthis.views.editor.getSession().setMode(\"ace/mode/javascript\");\n\t\t\tthis.views.editor.setTheme(\"ace/theme/monokai\");\n\t\t\tthis.views.editor.getSession().on(\"change\",this.handleEditorChange);\n\t\t\tthis.views.editor.session.setValue(this.model.get(this.keyName) || '');\n\t\t\tthis.hasRendered=true;\n            this.views.editor.resize();\n\t\t\tthis.views.editor.scrollToLine(this.scrollTo.line, true, false);\n\t\t\tthis.views.editor.gotoLine(this.scrollTo.line, this.scrollTo.col);\n\t\t\treturn this;\n\t\t},\n\t\thandleChange:function(event){\n\t\t\tthis.views.editor.session.setValue(this.model.get(this.keyName));\n\t\t},\n\t\tclose:function(){\n\t\t\tthis.stopListening();\n\t\t\tthis.$el.remove();\n\t\t\treturn this;\n\t\t}\n    });\n    return Editor;\n}).apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__),\n\t\t\t\t__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9zcmMvanMvbW9kdWxlcy9lZGl0b3IuanMuanMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9zcmMvanMvbW9kdWxlcy9lZGl0b3IuanM/ZDlmOCJdLCJzb3VyY2VzQ29udGVudCI6WyIvKlxuICogTGljZW5zZWQgdW5kZXIgdGhlIEFwYWNoZSBMaWNlbnNlLCBWZXJzaW9uIDIuMCAodGhlIFwiTGljZW5zZVwiKTtcbiAqIHlvdSBtYXkgbm90IHVzZSB0aGlzIGZpbGUgZXhjZXB0IGluIGNvbXBsaWFuY2Ugd2l0aCB0aGUgTGljZW5zZS5cbiAqIFlvdSBtYXkgb2J0YWluIGEgY29weSBvZiB0aGUgTGljZW5zZSBhdFxuICpcbiAqIGh0dHA6Ly93d3cuYXBhY2hlLm9yZy9saWNlbnNlcy9MSUNFTlNFLTIuMFxuICpcbiAqIFVubGVzcyByZXF1aXJlZCBieSBhcHBsaWNhYmxlIGxhdyBvciBhZ3JlZWQgdG8gaW4gd3JpdGluZywgc29mdHdhcmVcbiAqIGRpc3RyaWJ1dGVkIHVuZGVyIHRoZSBMaWNlbnNlIGlzIGRpc3RyaWJ1dGVkIG9uIGFuIFwiQVMgSVNcIiBCQVNJUyxcbiAqIFdJVEhPVVQgV0FSUkFOVElFUyBPUiBDT05ESVRJT05TIE9GIEFOWSBLSU5ELCBlaXRoZXIgZXhwcmVzcyBvciBpbXBsaWVkLlxuICogU2VlIHRoZSBMaWNlbnNlIGZvciB0aGUgc3BlY2lmaWMgbGFuZ3VhZ2UgZ292ZXJuaW5nIHBlcm1pc3Npb25zIGFuZFxuICogbGltaXRhdGlvbnMgdW5kZXIgdGhlIExpY2Vuc2UuXG4gKi9cbmRlZmluZShbXG5cdFwidW5kZXJzY29yZVwiLFxuXHRcImFjZVwiLFxuXHRcImJyYWNlL3RoZW1lL21vbm9rYWlcIixcblx0XCJicmFjZS9tb2RlL2phdmFzY3JpcHRcIixcblx0XCJicmFjZS9leHQvc2VhcmNoYm94XCIsXG5cdFwiYmFja2JvbmVcIlxuXSxcbmZ1bmN0aW9uKFxuXHRfLFxuICAgIGFjZVxuKXtcbiAgICB2YXIgRWRpdG9yPXt9O1xuICAgIEVkaXRvci5BY2VWaWV3ID0gQmFja2JvbmUuVmlldy5leHRlbmQoe1xuXHRcdGV2ZW50czp7XG5cdFx0XHRcImNoYW5nZVwiOlwiaGFuZGxlRWRpdG9yQ2hhbmdlXCJcblx0XHR9LFxuXHRcdGluaXRpYWxpemU6ZnVuY3Rpb24ob3B0aW9ucyl7XG5cdFx0XHRfLmJpbmRBbGwodGhpcywnaGFuZGxlRWRpdG9yQ2hhbmdlJyk7XG4gICAgICAgICAgICBvcHRpb25zID0gb3B0aW9ucyB8fCB7fTtcbiAgICAgICAgICAgIHRoaXMua2V5TmFtZT1vcHRpb25zLmtleU5hbWU7XG5cdFx0XHR0aGlzLnJlYWRPbmx5PShvcHRpb25zLnJlYWRPbmx5P29wdGlvbnMucmVhZE9ubHk6ZmFsc2UpO1xuXHRcdFx0dGhpcy5oYXNSZW5kZXJlZD1mYWxzZTtcblx0XHRcdHRoaXMuaGFzUmVzZXQ9ZmFsc2U7XG5cdFx0XHR0aGlzLnNjcm9sbFRvPW9wdGlvbnMuc2Nyb2xsVG8gfHwge2xpbmU6IDAsIGNvbDogMH0sXG5cdFx0XHR0aGlzLmxpc3RlblRvKHRoaXMubW9kZWwsXCJjaGFuZ2U6XCIrb3B0aW9ucy5rZXlOYW1lLHRoaXMucmVuZGVyKTtcblx0XHRcdC8vdGhpcy5saXN0ZW5Ubyh0aGlzLm1vZGVsLFwicmVzZXRcIix0aGlzLmhhbmRsZVJlc2V0KTtcblx0XHRcdHRoaXMubW9kZWwuYmluZChcInJlc2V0XCIsdGhpcy5oYW5kbGVSZXNldCk7XG4gICAgICAgICAgICBpZighXy5pc1VuZGVmaW5lZChvcHRpb25zLmNzcykpe1xuICAgICAgICAgICAgICAgIHRoaXMuJGVsLmNzcyhvcHRpb25zLmNzcyk7XG4gICAgICAgICAgICB9XG5cdFx0fSxcblx0XHRoYW5kbGVFZGl0b3JDaGFuZ2U6ZnVuY3Rpb24oZXZlbnQpe1xuXHRcdFx0dGhpcy5tb2RlbC5zZXQodGhpcy5rZXlOYW1lLCB0aGlzLnZpZXdzLmVkaXRvci5zZXNzaW9uLmdldFZhbHVlKCkse3NpbGVudDp0cnVlfSk7XG5cdFx0XHRpZih0aGlzLmhhc1Jlc2V0KXtcblx0XHRcdFx0dGhpcy5tb2RlbC50cmlnZ2VyKFwidXNlcl9lZGl0XCIpO1xuXHRcdFx0fVxuICAgICAgICAgICAgZWxzZXtcbiAgICAgICAgICAgICAgICB0aGlzLnZpZXdzLmVkaXRvci5yZXNpemUoKTtcbiAgICAgICAgICAgIH1cblx0XHR9LFxuXHRcdGhhbmRsZVJlc2V0OmZ1bmN0aW9uKGV2ZW50KXtcblx0XHRcdHRoaXMudmlld3MuZWRpdG9yLnNlc3Npb24uc2V0VmFsdWUodGhpcy5tb2RlbC5nZXQodGhpcy5rZXlOYW1lKSk7XG5cdFx0XHR0aGlzLmhhc1Jlc2V0PXRydWU7XG5cdFx0fSxcblx0XHRyZW5kZXI6ZnVuY3Rpb24oKXtcblx0XHRcdHRoaXMudmlld3M9e1xuXHRcdFx0XHRlZGl0b3I6IGFjZS5lZGl0KHRoaXMuZWwpXG5cdFx0XHR9O1xuXG5cdFx0XHRpZih0aGlzLnJlYWRPbmx5KXtcblx0XHRcdFx0dGhpcy52aWV3cy5lZGl0b3Iuc2V0UmVhZE9ubHkodGhpcy5yZWFkT25seSk7XG5cdFx0XHR9XG5cdFx0XHR0aGlzLnZpZXdzLmVkaXRvci5zZXRTaG93UHJpbnRNYXJnaW4oZmFsc2UpO1xuICAgICAgICAgICAgdGhpcy52aWV3cy5lZGl0b3IuZ2V0U2Vzc2lvbigpLnNldFVzZVdvcmtlcihmYWxzZSk7XG4gICAgICAgICAgICB0aGlzLnZpZXdzLmVkaXRvci5nZXRTZXNzaW9uKCkuc2V0T3B0aW9uKCd1c2VTb2Z0VGFicycsdHJ1ZSk7XG5cdFx0XHR0aGlzLnZpZXdzLmVkaXRvci5nZXRTZXNzaW9uKCkuc2V0TW9kZShcImFjZS9tb2RlL2phdmFzY3JpcHRcIik7XG5cdFx0XHR0aGlzLnZpZXdzLmVkaXRvci5zZXRUaGVtZShcImFjZS90aGVtZS9tb25va2FpXCIpO1xuXHRcdFx0dGhpcy52aWV3cy5lZGl0b3IuZ2V0U2Vzc2lvbigpLm9uKFwiY2hhbmdlXCIsdGhpcy5oYW5kbGVFZGl0b3JDaGFuZ2UpO1xuXHRcdFx0dGhpcy52aWV3cy5lZGl0b3Iuc2Vzc2lvbi5zZXRWYWx1ZSh0aGlzLm1vZGVsLmdldCh0aGlzLmtleU5hbWUpIHx8ICcnKTtcblx0XHRcdHRoaXMuaGFzUmVuZGVyZWQ9dHJ1ZTtcbiAgICAgICAgICAgIHRoaXMudmlld3MuZWRpdG9yLnJlc2l6ZSgpO1xuXHRcdFx0dGhpcy52aWV3cy5lZGl0b3Iuc2Nyb2xsVG9MaW5lKHRoaXMuc2Nyb2xsVG8ubGluZSwgdHJ1ZSwgZmFsc2UpO1xuXHRcdFx0dGhpcy52aWV3cy5lZGl0b3IuZ290b0xpbmUodGhpcy5zY3JvbGxUby5saW5lLCB0aGlzLnNjcm9sbFRvLmNvbCk7XG5cdFx0XHRyZXR1cm4gdGhpcztcblx0XHR9LFxuXHRcdGhhbmRsZUNoYW5nZTpmdW5jdGlvbihldmVudCl7XG5cdFx0XHR0aGlzLnZpZXdzLmVkaXRvci5zZXNzaW9uLnNldFZhbHVlKHRoaXMubW9kZWwuZ2V0KHRoaXMua2V5TmFtZSkpO1xuXHRcdH0sXG5cdFx0Y2xvc2U6ZnVuY3Rpb24oKXtcblx0XHRcdHRoaXMuc3RvcExpc3RlbmluZygpO1xuXHRcdFx0dGhpcy4kZWwucmVtb3ZlKCk7XG5cdFx0XHRyZXR1cm4gdGhpcztcblx0XHR9XG4gICAgfSk7XG4gICAgcmV0dXJuIEVkaXRvcjtcbn0pO1xuIl0sIm1hcHBpbmdzIjoiQUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0Esb0NBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQUE7Iiwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./src/js/modules/editor.js\n");

/***/ }),

/***/ "./src/js/modules/git.js":
/*!*******************************!*\
  !*** ./src/js/modules/git.js ***!
  \*******************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;/*\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n!(__WEBPACK_AMD_DEFINE_ARRAY__ = [\n   __webpack_require__(/*! underscore */ \"./node_modules/underscore/underscore.js\"),\n   __webpack_require__(/*! text!../../templates/git.properties.html */ \"./node_modules/text-loader/index.js!./src/templates/git.properties.html\"),\n   __webpack_require__(/*! backbone */ \"./node_modules/backbone/backbone.js\")\n], __WEBPACK_AMD_DEFINE_RESULT__ = (function(\n    _,\n    gitPropertiesTemplate\n){\n    var Git={};\n    Git.Model = Backbone.Model.extend({\n        url:\"/system/git.properties\",\n        defaults:{\n            branch:\"\",\n            buildTime:\"\",\n            buildUserEmail:\"\",\n            buildUserName:\"\",\n            commitId:\"\",\n            commitIdAbbrev:\"\",\n            commitIdDescribe:\"\",\n            commitMessageFull:\"\",\n            commitTime:\"\",\n            commitUserEmail:\"\",\n            commitUserName:\"\"\n        }\n    });\n    Git.PropertiesView = Backbone.View.extend({\n        events:{\n        },\n        template:_.template(gitPropertiesTemplate),\n        initialize:function(options){\n            this.listenTo(this.model,\"change\",this.render);\n        },\n        render:function(){\n            this.$el.empty();\n            var html = this.template(this.model.toJSON());\n            this.$el.html(html);\n            this.show();\n            return this;\n        },\n        close:function(){\n            this.$el.remove();\n            return this;\n        },\n        show:function(){\n            this.$el.show();\n        },\n        hide:function(){\n            this.$el.hide();\n            return this;\n        }\n    });\n    return Git;\n}).apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__),\n\t\t\t\t__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9zcmMvanMvbW9kdWxlcy9naXQuanMuanMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9zcmMvanMvbW9kdWxlcy9naXQuanM/YTM4MCJdLCJzb3VyY2VzQ29udGVudCI6WyIvKlxuICogTGljZW5zZWQgdW5kZXIgdGhlIEFwYWNoZSBMaWNlbnNlLCBWZXJzaW9uIDIuMCAodGhlIFwiTGljZW5zZVwiKTtcbiAqIHlvdSBtYXkgbm90IHVzZSB0aGlzIGZpbGUgZXhjZXB0IGluIGNvbXBsaWFuY2Ugd2l0aCB0aGUgTGljZW5zZS5cbiAqIFlvdSBtYXkgb2J0YWluIGEgY29weSBvZiB0aGUgTGljZW5zZSBhdFxuICpcbiAqIGh0dHA6Ly93d3cuYXBhY2hlLm9yZy9saWNlbnNlcy9MSUNFTlNFLTIuMFxuICpcbiAqIFVubGVzcyByZXF1aXJlZCBieSBhcHBsaWNhYmxlIGxhdyBvciBhZ3JlZWQgdG8gaW4gd3JpdGluZywgc29mdHdhcmVcbiAqIGRpc3RyaWJ1dGVkIHVuZGVyIHRoZSBMaWNlbnNlIGlzIGRpc3RyaWJ1dGVkIG9uIGFuIFwiQVMgSVNcIiBCQVNJUyxcbiAqIFdJVEhPVVQgV0FSUkFOVElFUyBPUiBDT05ESVRJT05TIE9GIEFOWSBLSU5ELCBlaXRoZXIgZXhwcmVzcyBvciBpbXBsaWVkLlxuICogU2VlIHRoZSBMaWNlbnNlIGZvciB0aGUgc3BlY2lmaWMgbGFuZ3VhZ2UgZ292ZXJuaW5nIHBlcm1pc3Npb25zIGFuZFxuICogbGltaXRhdGlvbnMgdW5kZXIgdGhlIExpY2Vuc2UuXG4gKi9cbmRlZmluZShbXG4gICBcInVuZGVyc2NvcmVcIixcbiAgIFwidGV4dCEuLi8uLi90ZW1wbGF0ZXMvZ2l0LnByb3BlcnRpZXMuaHRtbFwiLFxuICAgXCJiYWNrYm9uZVwiXG5dLFxuZnVuY3Rpb24oXG4gICAgXyxcbiAgICBnaXRQcm9wZXJ0aWVzVGVtcGxhdGVcbil7XG4gICAgdmFyIEdpdD17fTtcbiAgICBHaXQuTW9kZWwgPSBCYWNrYm9uZS5Nb2RlbC5leHRlbmQoe1xuICAgICAgICB1cmw6XCIvc3lzdGVtL2dpdC5wcm9wZXJ0aWVzXCIsXG4gICAgICAgIGRlZmF1bHRzOntcbiAgICAgICAgICAgIGJyYW5jaDpcIlwiLFxuICAgICAgICAgICAgYnVpbGRUaW1lOlwiXCIsXG4gICAgICAgICAgICBidWlsZFVzZXJFbWFpbDpcIlwiLFxuICAgICAgICAgICAgYnVpbGRVc2VyTmFtZTpcIlwiLFxuICAgICAgICAgICAgY29tbWl0SWQ6XCJcIixcbiAgICAgICAgICAgIGNvbW1pdElkQWJicmV2OlwiXCIsXG4gICAgICAgICAgICBjb21taXRJZERlc2NyaWJlOlwiXCIsXG4gICAgICAgICAgICBjb21taXRNZXNzYWdlRnVsbDpcIlwiLFxuICAgICAgICAgICAgY29tbWl0VGltZTpcIlwiLFxuICAgICAgICAgICAgY29tbWl0VXNlckVtYWlsOlwiXCIsXG4gICAgICAgICAgICBjb21taXRVc2VyTmFtZTpcIlwiXG4gICAgICAgIH1cbiAgICB9KTtcbiAgICBHaXQuUHJvcGVydGllc1ZpZXcgPSBCYWNrYm9uZS5WaWV3LmV4dGVuZCh7XG4gICAgICAgIGV2ZW50czp7XG4gICAgICAgIH0sXG4gICAgICAgIHRlbXBsYXRlOl8udGVtcGxhdGUoZ2l0UHJvcGVydGllc1RlbXBsYXRlKSxcbiAgICAgICAgaW5pdGlhbGl6ZTpmdW5jdGlvbihvcHRpb25zKXtcbiAgICAgICAgICAgIHRoaXMubGlzdGVuVG8odGhpcy5tb2RlbCxcImNoYW5nZVwiLHRoaXMucmVuZGVyKTtcbiAgICAgICAgfSxcbiAgICAgICAgcmVuZGVyOmZ1bmN0aW9uKCl7XG4gICAgICAgICAgICB0aGlzLiRlbC5lbXB0eSgpO1xuICAgICAgICAgICAgdmFyIGh0bWwgPSB0aGlzLnRlbXBsYXRlKHRoaXMubW9kZWwudG9KU09OKCkpO1xuICAgICAgICAgICAgdGhpcy4kZWwuaHRtbChodG1sKTtcbiAgICAgICAgICAgIHRoaXMuc2hvdygpO1xuICAgICAgICAgICAgcmV0dXJuIHRoaXM7XG4gICAgICAgIH0sXG4gICAgICAgIGNsb3NlOmZ1bmN0aW9uKCl7XG4gICAgICAgICAgICB0aGlzLiRlbC5yZW1vdmUoKTtcbiAgICAgICAgICAgIHJldHVybiB0aGlzO1xuICAgICAgICB9LFxuICAgICAgICBzaG93OmZ1bmN0aW9uKCl7XG4gICAgICAgICAgICB0aGlzLiRlbC5zaG93KCk7XG4gICAgICAgIH0sXG4gICAgICAgIGhpZGU6ZnVuY3Rpb24oKXtcbiAgICAgICAgICAgIHRoaXMuJGVsLmhpZGUoKTtcbiAgICAgICAgICAgIHJldHVybiB0aGlzO1xuICAgICAgICB9XG4gICAgfSk7XG4gICAgcmV0dXJuIEdpdDtcbn0pO1xuIl0sIm1hcHBpbmdzIjoiQUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0Esb0NBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFBQTsiLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./src/js/modules/git.js\n");

/***/ }),

/***/ "./src/js/modules/graph.js":
/*!*********************************!*\
  !*** ./src/js/modules/graph.js ***!
  \*********************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;/*\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n!(__WEBPACK_AMD_DEFINE_ARRAY__ = [\n    __webpack_require__(/*! jquery */ \"./node_modules/jquery/dist/jquery.js\"),\n    __webpack_require__(/*! underscore */ \"./node_modules/underscore/underscore.js\"),\n    __webpack_require__(/*! backbone */ \"./node_modules/backbone/backbone.js\"),\n    __webpack_require__(/*! d3 */ \"./node_modules/d3/d3.js\")\n], __WEBPACK_AMD_DEFINE_RESULT__ = (function(\n    $,\n    _,\n    Backbone,\n    d3\n){\n    var TreeForceDirectedGraphView = Backbone.View.extend({\n        initialize:function(){\n            _.bindAll(this);\n        },\n        render:function(){\n            var w = 960,\n                h = 500,\n                node,\n                link,\n                root;\n\n            var force = d3.layout.force()\n                .on(\"tick\", this.tick)\n                .size([w, h]);\n\n            var vis = d3.select(this.$el.get(0)).append(\"svg\")\n                .attr(\"width\", w)\n                .attr(\"height\", h);\n\n            this.update();\n            return this;\n        },\n        // Returns a list of all nodes under the root.\n        flatten:function(root) {\n            var nodes = [], i = 0;\n\n            function visit(node) {\n                if (node.children) node.children.forEach(visit);\n                if (!node.id) node.id = ++i;\n                nodes.push(node);\n            }\n\n            visit(root);\n            return nodes;\n        },\n        // Toggle children on click.\n        click: function(d) {\n            if (d.children) {\n                d._children = d.children;\n                d.children = null;\n            } else {\n                d.children = d._children;\n                d._children = null;\n            }\n            this.update();\n        },\n        // Color leaf nodes orange, and packages white or blue.\n        color:function(d) {\n            return d._children ? \"#3182bd\" : d.children ? \"#c6dbef\" : \"#fd8d3c\";\n        },\n        tick: function() {\n            link.attr(\"x1\", function(d) { return d.source.x; })\n                .attr(\"y1\", function(d) { return d.source.y; })\n                .attr(\"x2\", function(d) { return d.target.x; })\n                .attr(\"y2\", function(d) { return d.target.y; });\n\n            node.attr(\"cx\", function(d) { return d.x; })\n                .attr(\"cy\", function(d) { return d.y; });\n        },\n        update: function() {\n            var w = 960,\n                h = 500,\n                node,\n                link,\n                root;\n\n            var force = d3.layout.force()\n                .on(\"tick\", this.tick)\n                .size([w, h]);\n\n            var vis = d3.select(this.$el.get(0)).append(\"svg\")\n                .attr(\"width\", w)\n                .attr(\"height\", h);\n            var root = this.model.toJSON();\n            var nodes = this.flatten(root),\n                links = d3.layout.tree().links(nodes);\n\n            // Restart the force layout.\n            force.nodes(nodes)\n                .links(links)\n                .start();\n\n            // Update the links…\n            link = vis.selectAll(\"line.link\")\n                .data(links, function(d) { return d.target.id; });\n\n            // Enter any new links.\n            link.enter().insert(\"svg:line\", \".node\")\n                .attr(\"class\", \"link\")\n                .attr(\"x1\", function(d) { return d.source.x; })\n                .attr(\"y1\", function(d) { return d.source.y; })\n                .attr(\"x2\", function(d) { return d.target.x; })\n                .attr(\"y2\", function(d) { return d.target.y; });\n\n            // Exit any old links.\n            link.exit().remove();\n\n            // Update the nodes…\n            node = vis.selectAll(\"circle.node\")\n                .data(nodes, function(d) { return d.id; })\n                .style(\"fill\", this.color);\n\n            node.append(\"text\")\n                .attr(\"dx\", 12)\n                .attr(\"dy\", \".35em\")\n                .text(function(d) { return d.name });\n            // Enter any new nodes.\n            node.enter().append(\"svg:circle\")\n                .attr(\"class\", \"node\")\n                .attr(\"cx\", function(d) { return d.x; })\n                .attr(\"cy\", function(d) { return d.y; })\n                .attr(\"r\", function(d) { return Math.sqrt(d.size) / 10 || 30; })\n                .style(\"fill\", this.color)\n                .on(\"click\", this.click)\n                .call(force.drag);\n\n            // Exit any old nodes.\n            node.exit().remove();\n        }\n    });\n    var ForceDirectedGraphView = Backbone.View.extend({\n        initialize:function(){\n\n        },\n        render:function(){\n            var width = 960,height = 500;\n            var color = d3.scale.category20();\n            var force = d3.layout.force()\n                .charge(-120)\n                .linkDistance(60)\n                .size([width, height]);\n            var svg = d3.select(this.$el.get(0)).append(\"svg\")\n                .attr(\"width\", width)\n                .attr(\"height\", height);\n            var graph = this.model.toJSON();\n            force.nodes(graph.nodes)\n                .links(graph.links)\n                .start();\n            var link = svg.selectAll(\".link\")\n                .data(graph.links)\n                .enter().append(\"line\")\n                .attr(\"class\", \"link\")\n                .style(\"stroke-width\", function(d) { return Math.sqrt(d.value); });\n            var node = svg.selectAll(\".node\")\n                .data(graph.nodes)\n                .enter().append(\"circle\")\n                .attr(\"class\", \"node\")\n                .attr(\"r\", 10)\n                .style(\"fill\", function(d) { return color(d.group); })\n                .call(force.drag);\n            node.append(\"title\")\n                .text(function(d) { return d.name; });\n            node.append(\"text\")\n                .text(function(d) { return d.name; });\n            force.on(\"tick\", function() {\n                link.attr(\"x1\", function(d) { return d.source.x; })\n                    .attr(\"y1\", function(d) { return d.source.y; })\n                    .attr(\"x2\", function(d) { return d.target.x; })\n                    .attr(\"y2\", function(d) { return d.target.y; });\n                node.attr(\"cx\", function(d) { return d.x; })\n                    .attr(\"cy\", function(d) { return d.y; });\n            });\n            return this;\n        }\n    });\n    var TreeDependencyGraphView = Backbone.View.extend({\n        initialize:function(){\n        },\n        render:function(){\n            var diameter = 760;\n            var tree = d3.layout.tree()\n                .size([360, diameter / 2 - 120])\n                .separation(function(a, b) {\n                    return (a.parent == b.parent ? 1 : 2) / a.depth;\n                });\n            var diagonal = d3.svg.diagonal.radial()\n                .projection(function(d) {\n                    var x = (d.x/180.0)*Math.PI;\n                    return [d.y, (d.x / 180) * Math.PI];\n                });\n            var svg = d3.select(this.$el.get(0)).append(\"svg\")\n                .attr(\"width\", diameter)\n                .attr(\"height\", diameter - 150)\n                .append(\"g\")\n                .attr(\"transform\", \"translate(\" + diameter / 2 + \",\" + diameter / 2 + \")\");\n            var nodes = tree.nodes(this.model.toJSON());\n            var links = tree.links(nodes);\n            var link = svg.selectAll(\".link\")\n                .data(links)\n                .enter().append(\"path\")\n                .attr(\"class\", \"link\")\n                .attr(\"d\", diagonal);\n            var node = svg.selectAll(\".node\")\n                .data(nodes)\n                .enter().append(\"g\")\n                .attr(\"class\", \"node\")\n                .attr(\"transform\", function(d) {\n                    return \"rotate(\" + (d.x - 90) + \")translate(\" + d.y + \")\";\n                });\n            node.append(\"circle\")\n                .attr(\"r\", 4.5)\n                .attr(\"style\", function(d) {\n                    return \"stroke: \" + d.color;\n                });\n            var anchor = node.append(\"a\")\n                .attr(\"xlink:href\", function(d) {\n                    return \"#jobs/\" + d.jobId + \"/conf\"\n                });\n            anchor.append(\"text\")\n                .attr(\"dy\", \".31em\")\n                .attr(\"text-anchor\", function(d) {\n                    return \"start\";\n                })\n                .attr(\"transform\", function(d) {\n                    return \"rotate(\" + (90 - d.x) + \")translate(8)\"\n                })\n                .text(function(d) {\n                    return d.name;\n                });\n            return this;\n        }\n    });\n    var ForceDirectedGraphModel = Backbone.Model.extend({\n        initialize:function(opts){\n            _.bindAll(this);\n            this.jobId=opts.jobId;\n        },\n        url:function(){\n            return \"/job/dependencies/sinks?id=\"+this.jobId;\n        },\n        parse:function(data){\n            var nodeMap = {}, nodeList=[];\n            _.each(data.nodes,function(node,idx){\n                nodeMap[node.id]=nodeList.length;\n                nodeList.push({\n                    name:node.id,\n                    group:1\n                });\n            });\n            var edges = [];\n            _.each(data.edges,function(edge){\n                edges.push({\n                    source:nodeMap[edge.source],\n                    target:nodeMap[edge.sink],\n                    value:1\n                });\n            });\n            return {\n                nodes:nodeList,\n                links:edges\n            };\n        }\n    });\n    var TreeGraphModel = Backbone.Model.extend({\n        initialize:function(opts){\n            _.bindAll(this,'url','parse','buildGraph');\n            this.jobId=opts.jobId;\n        },\n        url:function(){\n            return \"/job/dependencies/connected?id=\"+this.jobId;\n        },\n        parse:function(data){\n            var nodes = {};\n            _.each(data.nodes,function(node){\n                nodes[node.id]=node;\n            });\n            var edges = {};\n            _.each(data.edges,function(edge){\n                if(_.isUndefined(edges[edge.source])){\n                    edges[edge.source]=[edge.sink];\n                }\n                else{\n                    edges[edge.source].push(edge.sink);\n                }\n            });\n            var graph = this.buildGraph(nodes,edges);\n            return graph;\n        },\n        buildGraph:function(nodes, edges){\n            // poor man's topological sort\n            var result = _.reduce(\n                _.flatten(_.values(edges)),\n                function(nodeList, child){\n                    return _.without(nodeList, child);\n                },\n                _.keys(nodes)\n            );\n            var root = _.first(result);\n\n            return this.buildGraphHelp(root, nodes, edges);\n        },\n        buildGraphHelp:function(nodeId,nodes,edges){\n            var childrenIds = edges[nodeId];\n            var childrenNodes = [],self=this;\n            _.each(childrenIds,function(child){\n                var childNode = self.buildGraphHelp(child,nodes,edges);\n                childrenNodes.push(childNode);\n            });\n            return {\n                name:nodeId.substring(0,10),\n                jobId:nodeId,\n                children: childrenNodes,\n                color: nodeId === this.jobId ? \"green\" : \"blue\",\n                size:1\n            };\n        }\n    });\n    return {\n        TreeForceDirectedGraphView:TreeForceDirectedGraphView,\n        ForceDirectedGraphView:ForceDirectedGraphView,\n        ForceDirectedGraphModel:ForceDirectedGraphModel,\n        TreeGraphModel:TreeGraphModel,\n        TreeDependencyGraphView:TreeDependencyGraphView\n    };\n}).apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__),\n\t\t\t\t__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./src/js/modules/graph.js\n");

/***/ }),

/***/ "./src/js/modules/host.js":
/*!********************************!*\
  !*** ./src/js/modules/host.js ***!
  \********************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;/*\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n!(__WEBPACK_AMD_DEFINE_ARRAY__ = [\n    __webpack_require__(/*! jquery */ \"./node_modules/jquery/dist/jquery.js\"),\n    __webpack_require__(/*! underscore */ \"./node_modules/underscore/underscore.js\"),\n    __webpack_require__(/*! app */ \"./src/js/app.js\"),\n    __webpack_require__(/*! alertify */ \"./src/js/vendor/alertify.js\"),\n    __webpack_require__(/*! modules/datatable */ \"./src/js/modules/datatable.js\"),\n    __webpack_require__(/*! modules/task */ \"./src/js/modules/task.js\"),\n    __webpack_require__(/*! modules/util */ \"./src/js/modules/util.js\"),\n    __webpack_require__(/*! text!../../templates/host.filter.html */ \"./node_modules/text-loader/index.js!./src/templates/host.filter.html\"),\n    __webpack_require__(/*! text!../../templates/host.selectable.html */ \"./node_modules/text-loader/index.js!./src/templates/host.selectable.html\"),\n    __webpack_require__(/*! text!../../templates/host.detail.html */ \"./node_modules/text-loader/index.js!./src/templates/host.detail.html\"),\n    __webpack_require__(/*! backbone */ \"./node_modules/backbone/backbone.js\")\n], __WEBPACK_AMD_DEFINE_RESULT__ = (function(\n    $,\n    _,\n    app,\n    alertify,\n    DataTable,\n    Task,\n    util,\n    hostFilterTemplate,\n    hostSelectableTemplate,\n    hostDetailTemplate,\n    Backbone\n){\n    var Model = Backbone.Model.extend({\n        idAttribute:\"uuid\",\n        parse:function(data){\n            data.DT_RowId=data.uuid;\n            data.DT_RowClass='host-row';\n            data.host= data.host || \"\";\n            data.port= data.port || \"\";\n            data.minionTypes= data.minionTypes || \"\";\n            data.runCount = data.running.length;\n            data.queuedCount = data.queued.length;\n            data.total=data.total || 0;\n            if(_.isEmpty(data.max)){\n                data.max= {\n                    cpu: \"\",\n                    disk: \"\",\n                    io: \"\",\n                    mem:\"\"\n                };\n            }\n            if(_.isEmpty(data.used)){\n                data.used={\n                    cpu: \"\",\n                    disk: \"\",\n                    io: \"\",\n                    mem: \"\"\n                };\n            }\n            data.diskUsed = data.used.disk;\n            data.diskMax = data.max.disk;\n            data.availableTaskSlots=data.availableTaskSlots;\n            return data;\n        },\n        defaults:{\n            \"availableTaskSlots\": \"\",\n            \"runCount\":0,\n            \"queuedCount\":0,\n            \"backingup\": [],\n            \"dead\": \"\",\n            \"disabled\": \"\",\n            \"diskReadOnly\": \"\",\n            \"group\": \"\",\n            \"histQueueSize\": \"\",\n            \"histWaitTime\": \"\",\n            \"host\": \"\",\n            \"jobRuntimes\": {},\n            \"lastUpdateTime\": \"\",\n            \"max\": {\n                \"cpu\": \"\",\n                \"disk\": \"\",\n                \"io\": \"\",\n                \"mem\":\"\"\n            },\n            \"meanActiveTasks\": \"\",\n            \"minionTypes\": \"\",\n            \"path\": \"\",\n            \"port\": \"\",\n            \"queued\": [],\n            \"readOnly\": \"\",\n            \"replicating\": [],\n            \"running\": [],\n            \"score\": \"\",\n            \"stopped\": \"\",\n            \"total\":0,\n            \"time\": \"\",\n            \"up\": \"\",\n            \"uptime\": \"\",\n            \"used\": {\n                \"cpu\": \"\",\n                \"disk\": \"\",\n                \"io\": \"\",\n                \"mem\": \"\"\n            },\n            \"user\": \"\",\n            \"uuid\": \"\"\n        }\n    });\n    var Collection = Backbone.Collection.extend({\n        url:\"/host/list\",\n        initialize:function(){\n            this.listenTo(app.server,\"host.update\",this.handleHostUpdate);\n        },\n        parse:function(collection){\n            var array = new Array(collection.length);\n            _.each(collection,function(model,idx){\n                array[idx]= Model.prototype.parse(model);\n            });\n            return array;\n        },\n        handleHostUpdate:function(data){\n            var host = this.get(data.uuid);\n            if(!_.isUndefined(host)){\n                host.set(\n                    Model.prototype.parse(data)\n                );\n            }\n            else{\n                host=new Model(\n                    Model.prototype.parse(data)\n                );\n                this.add([host]);\n            }\n        },\n        model:Model,\n        rebalanceSelected:function(hostIds){\n            var count = hostIds.length;\n            var parameters = {};\n            parameters[\"id\"] = hostIds.join();\n            app.authQueryParameters(parameters);\n            $.ajax({\n                url: \"/host/rebalance\",\n                type: \"GET\",\n                data: parameters,\n                dataType: \"json\"\n            }).done(function(data){\n                alertify.message(count+\" host(s) rebalanced.\",2)\n            }).fail(function(e){\n                alertify.error(\"Error rebalancing: \"+count+\" hosts. <br/> \"+e.responseText);\n            });\n        },\n        failSelected:function(hostIds, deadFs){\n            var count = hostIds.length;\n            var parameters = {};\n            parameters[\"id\"] = hostIds.join();\n            parameters[\"deadFs\"] = deadFs;\n            app.authQueryParameters(parameters);\n            $.ajax({\n                url: \"/host/fail\",\n                type: \"GET\",\n                data: parameters,\n                dataType: \"json\"\n            }).done(function(data){\n                alertify.message(count+\" host(s) failed.\",2)\n            }).fail(function(e){\n                alertify.error(\"Error failing: \"+count+\" hosts. <br/> \"+e.responseText);\n            });\n        },\n        dropSelected:function(self, hostIds){\n            var count = hostIds.length;\n            var parameters = {};\n            parameters[\"id\"] = hostIds.join();\n            app.authQueryParameters(parameters);\n            $.ajax({\n                url: \"/host/drop\",\n                type: \"GET\",\n                data: parameters,\n                dataType: \"text\"\n            }).done(function(data){\n                self.collection.fetch();\n                alertify.message(count+\" host(s) dropped.\",2);\n            }).fail(function(e){\n                alertify.error(\"Error dropping: \"+count+\" hosts. <br/> \"+e.responseText);\n            });\n        },\n        toggleSelected:function(hostIds, disable){\n            var count = hostIds.length;\n            var parameters = {};\n            parameters[\"id\"] = hostIds.join();\n            parameters[\"disable\"] = disable;\n            app.authQueryParameters(parameters);\n            $.ajax({\n                url: \"/host/toggle\",\n                type: \"GET\",\n                data: parameters,\n                dataType: \"text\"\n            }).done(function(data){\n                alertify.success(count+\" host(s) \"+(disable?\"dis\":\"en\")+\"abled successfully\",2);\n            }).fail(function(e){\n                alertify.error(\"Error \"+(disable?\"dis\":\"en\")+\"abling: \"+count+\" hosts. <br/> \"+e.responseText);\n            });\n        },\n        getFailInfo:function(self, hostIds, deadFs){\n            var count = hostIds.length;\n            var parameters = {};\n            parameters[\"id\"] = hostIds.join()\n            parameters[\"deadFs\"] = deadFs;\n            app.authQueryParameters(parameters);\n            $.ajax({\n                url: \"/host/failinfo\",\n                type: \"GET\",\n                data: parameters,\n                dataType: \"json\"\n            }).done(function(data){\n                uuids = data.uuids;\n\t\t\t\tif (data.fatal){\n\t\t\t\t\talertify.error(\"Fatal warning for failing \" + uuids + \": \" + data.fatal + \"; fail aborted\");\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n                var msg = \"\";\n                if(deadFs) {        // dead\n                    msg = \"<span class=\\\"bold-red\\\">Do you really want to fail now (file system dead) \" + uuids + \"?</span><br/>\";\n                } else {            // queue\n                    msg = \"<span>Do you really want to queue \" + uuids + \" to fail?</span><br/>\";\n                }\n                msg += \"(After failing, cluster will go from \" + util.formatPercent(data.prefail) + \"% disk used to \" + util.formatPercent(data.postfail) + \"%)\";\n\n\t\t\t\tif (data.warning){\n\t\t\t\t\tmsg += \"Warning: \" + data.warning;\n\t\t\t\t}\n\t\t\t\talertify.confirm(msg,\n                \tfunction(resp){\n                    \tself.collection.failSelected(hostIds, data.deadFs);\n                \t}\n            \t);\n            }).fail(function(e){\n                alertify.error(\"Error trying to fail: \"+count+\" hosts. <br/> \"+e.responseText);\n            });\n        },\n        cancelFailSelected:function(self, hostIds){\n            var count = hostIds.length;\n            var parameters = {};\n            parameters[\"id\"] = hostIds.join();\n            app.authQueryParameters(parameters);\n        \t$.ajax({\n        \t\turl: \"/host/failcancel\",\n        \t\ttype: \"GET\",\n        \t\tdata: parameters,\n        \t\tdataType: \"text\"\n        \t}).done(function(data){\n        \t\talertify.success(count+\" host(s) removed from failure queue\");\n        \t}).fail(function(e){\n        \t\talertify.error(\"Error trying to remove: \"+hostIds+\" from failure queue. <br/> \"+e.responseText);\n        \t});\n        }\n    });\n    var TableView = DataTable.View.extend({\n        initialize:function(options){\n            _.bindAll(this,'render','handleRebalanceButtonClick','handleCancelFailButtonClick','handleFailFsOkayButtonClick','handleFailFsDeadButtonClick','handleDropButtonClick','handleEnableButtonClick','handleDisableButtonClick');\n            options = options || {};\n            this.id = options.id || \"hostTable\";\n            this.$el.attr(\"id\",this.id);\n            var self=this;\n            var columns = [\n                {\n                    \"sTitle\":\"\",\n                    \"sClass\":\"host-cb\",\n                    \"sWidth\":\"3%\",\n                    \"mData\": \"uuid\",\n                    \"bSearchable\":false,\n                    \"bSortable\":false,\n                    \"mRender\":function(val,type,data){\n                        if(self.selectedIds[val]){\n                            return \"<input checked class='row_selectable' type='checkbox'></input>\";\n                        }\n                        else{\n                            return \"<input class='row_selectable' type='checkbox'></input>\";\n                        }\n                    }\n                },\n                {\n                    \"sTitle\":\"Host\",\n                    \"sClass\":\"host-host\",\n                    \"mData\": \"host\"\n                },\n                {\n                    \"sTitle\":\"Port\",\n                    \"sClass\":\"host-port\",\n                    \"mData\": \"port\"\n                },\n                {\n                    \"mData\": \"uuid\",\n                    \"bVisible\":false,\n                    \"bSearchable\":true\n                },\n                {\n                    \"sTitle\":\"UUID\",\n                    \"sClass\":\"host-uuid\",\n                    \"mData\": \"uuid\",\n                    \"bVisible\":true,\n                    \"bSearchable\":false,\n                    \"mRender\":function(val,type,data){\n                        return \"<a href='#hosts/\"+val+\"'>\"+val+\"</a>\";\n                    },\n                    \"aDataSort\":[3],\n                    \"aTargets\":[4]\n                },\n                {\n                    \"sTitle\":\"Type\",\n                    \"sClass\":\"host-minionTypes\",\n                    \"mData\": \"minionTypes\"\n                },\n                {\n                    \"sTitle\":\"State\",\n                    \"sClass\":\"host-state center\",\n                    \"mData\": \"spawnState\",\n                    \"bSearchable\":true,\n                },\n                {\n                    \"sTitle\":\"Group\",\n                    \"sClass\":\"host-group center\",\n                    \"mData\": \"group\"\n                },\n                {\n                    \"sTitle\":\"Score\",\n                    \"sClass\":\"host-score center\",\n                    \"mData\": \"score\",\n                    \"bSearchable\":false,\n                    \"mRender\":function(val,type,data){\n                        return Math.round(val);\n                    }\n                },\n                {\n                    \"sTitle\":\"Queued\",\n                    \"sClass\":\"host-queued center\",\n                    \"mData\": \"queuedCount\",\n                    \"bSearchable\":false\n                },\n                {\n                    \"sTitle\":\"Running\",\n                    \"sClass\":\"host-running center\",\n                    \"mData\": \"runCount\",\n                    \"bSearchable\":false\n                },\n                {\n                    \"sTitle\":\"Live\",\n                    \"sClass\":\"host-total center\",\n                    \"mData\": \"total\",\n                    \"bSearchable\":false\n                },\n            \t{\n                    \"sTitle\":\"Disk\",\n                    \"sClass\":\"host-disk center\",\n                    \"mData\": \"used.disk\",\n                    \"bSearchable\":false,\n                    \"mRender\":function(val,type,data){\n                        return util.convertToDFH(val)+\" / \"+util.convertToDFH(data.max.disk);\n                    }\n                }\n            ];\n            DataTable.View.prototype.initialize.apply(this,[{\n                columns:columns,\n                filterTemplate:hostFilterTemplate,\n                selectableTemplate:hostSelectableTemplate,\n                heightBuffer:80,\n                columnFilterIndex:5,\n                id:this.id,\n                idAttribute:\"uuid\",\n                changeAttrs:[\n                    \"runCount\",\n                    \"queuedCount\",\n                    \"total\",\n                    \"diskUsed\",\n                    \"host\",\n                    \"port\",\n                    \"up\",\n                    \"score\",\n                    \"spawnState\",\n                    \"diskMax\",\n                    \"disabled\",\n                    \"down\",\n                    \"dead\"\n                ]\n            }]);\n            this.hasRendered=false\n        },\n        render:function(){\n            DataTable.View.prototype.render.apply(this,[]);\n            if(!this.hasRendered){\n                this.views.selectable.find(\"#hostRebalanceButton\").on(\"click\",this.handleRebalanceButtonClick);\n                this.views.selectable.find(\"#hostFailFsOkayButton\").on(\"click\",this.handleFailFsOkayButtonClick);\n                this.views.selectable.find(\"#hostFailFsDeadButton\").on(\"click\",this.handleFailFsDeadButtonClick);\n                this.views.selectable.find(\"#hostFailCancelButton\").on(\"click\",this.handleCancelFailButtonClick);\n                this.views.selectable.find(\"#hostDropButton\").on(\"click\",this.handleDropButtonClick);\n                this.views.selectable.find(\"#hostEnableButton\").on(\"click\",this.handleEnableButtonClick);\n                this.views.selectable.find(\"#hostDisableButton\").on(\"click\",this.handleDisableButtonClick);\n                this.hasRendered=true;\n            }\n        },\n        handleRebalanceButtonClick:function(event){\n            var ids = this.getSelectedIds();\n            this.collection.rebalanceSelected(ids);\n        },\n        handleFailFsOkayButtonClick:function(event){\n            var ids = this.getSelectedIds(), self=this;\n            this.collection.getFailInfo(self, ids, false);\n        },\n        handleFailFsDeadButtonClick:function(event){\n            var ids = this.getSelectedIds(), self=this;\n            this.collection.getFailInfo(self, ids, true);\n        },\n        handleCancelFailButtonClick:function(event){\n        \tvar ids = this.getSelectedIds(), self=this;\n        \tthis.collection.cancelFailSelected(self, ids);\n        },\n        handleDropButtonClick:function(event){\n            var ids = this.getSelectedIds(),self=this;\n            alertify.confirm(\"Are you sure you would like to DROP \"+ids.length+\" host(s): \"+ids.join(\",\")+\"?\",\n                function(resp){\n                    self.collection.dropSelected(self, ids);\n                }\n            );\n        },\n        handleEnableButtonClick:function(event){\n            var ids = this.getSelectedIds();\n            this.collection.toggleSelected(ids,false);\n        },\n        handleDisableButtonClick:function(event){\n            var ids = this.getSelectedIds();\n            this.collection.toggleSelected(ids,true);\n        }\n    });\n    var DetailView = Backbone.View.extend({\n        className:\"detail-view\",\n        template: _.template(hostDetailTemplate),\n        initialize:function(){\n        },\n        render:function(){\n            var html = this.template({\n                host:this.model.toJSON()\n            });\n            this.$el.html(html);\n            return this;\n        }\n    });\n    var TaskDetailView = DetailView.extend({\n        initialize:function(){\n            this.listenTo(app.server,'job.update',this.handleJobUpdate);\n        },\n        render:function(){\n            DetailView.prototype.render.apply(this,[]);\n            this.views={\n                table: new Task.TableView({\n                    id:'jobTaskTable',\n                    collection:this.collection\n                })\n            };\n            var detail = this.$el.find(\"div#detailContainer\");\n            detail.append(this.views.table.$el);\n            this.views.table.render();\n            this.$el.find(\"ul.nav.nav-tabs li#tasksTab\").addClass(\"active\");\n            return this;\n        },\n        handleJobUpdate:function(job){\n            var tasks = this.collection.where({\"jobUuid\":job.id});\n            _.each(tasks,function(task){\n                task.fetch();\n            });\n        },\n        handleHostUpdate:function(){\n            _.each(this.collection,function(task){\n                task.fetch();\n            });\n        }\n    });\n    return {\n        Model:Model,\n        Collection: Collection,\n        TableView: TableView,\n        DetailView:DetailView,\n        TaskDetailView: TaskDetailView\n    };\n}).apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__),\n\t\t\t\t__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__))\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./src/js/modules/host.js\n");

/***/ }),

/***/ "./src/js/modules/jobs.js":
/*!********************************!*\
  !*** ./src/js/modules/jobs.js ***!
  \********************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;/*\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n!(__WEBPACK_AMD_DEFINE_ARRAY__ = [\n    __webpack_require__(/*! jquery */ \"./node_modules/jquery/dist/jquery.js\"),\n    __webpack_require__(/*! underscore */ \"./node_modules/underscore/underscore.js\"),\n    __webpack_require__(/*! app */ \"./src/js/app.js\"),\n    __webpack_require__(/*! alertify */ \"./src/js/vendor/alertify.js\"),\n    __webpack_require__(/*! jscookie */ \"./node_modules/js-cookie/src/js.cookie.js\"),\n    __webpack_require__(/*! modules/datatable */ \"./src/js/modules/datatable.js\"),\n    __webpack_require__(/*! modules/util */ \"./src/js/modules/util.js\"),\n    __webpack_require__(/*! modules/editor */ \"./src/js/modules/editor.js\"),\n    __webpack_require__(/*! modules/task */ \"./src/js/modules/task.js\"),\n    __webpack_require__(/*! modules/graph */ \"./src/js/modules/graph.js\"),\n    __webpack_require__(/*! modules/layout.views */ \"./src/js/modules/layout.views.js\"),\n    __webpack_require__(/*! text!../../templates/job.filter.html */ \"./node_modules/text-loader/index.js!./src/templates/job.filter.html\"),\n    __webpack_require__(/*! text!../../templates/job.selectable.html */ \"./node_modules/text-loader/index.js!./src/templates/job.selectable.html\"),\n    __webpack_require__(/*! text!../../templates/task.divider.html */ \"./node_modules/text-loader/index.js!./src/templates/task.divider.html\"),\n    __webpack_require__(/*! text!../../templates/task.detail.divider.html */ \"./node_modules/text-loader/index.js!./src/templates/task.detail.divider.html\"),\n    __webpack_require__(/*! text!../../templates/job.configuration.html */ \"./node_modules/text-loader/index.js!./src/templates/job.configuration.html\"),\n    __webpack_require__(/*! text!../../templates/job.setting.html */ \"./node_modules/text-loader/index.js!./src/templates/job.setting.html\"),\n    __webpack_require__(/*! text!../../templates/job.detail.html */ \"./node_modules/text-loader/index.js!./src/templates/job.detail.html\"),\n    __webpack_require__(/*! text!../../templates/job.alerts.html */ \"./node_modules/text-loader/index.js!./src/templates/job.alerts.html\"),\n    __webpack_require__(/*! text!../../templates/job.dependencies.html */ \"./node_modules/text-loader/index.js!./src/templates/job.dependencies.html\"),\n    __webpack_require__(/*! text!../../templates/job.expandedconf.html */ \"./node_modules/text-loader/index.js!./src/templates/job.expandedconf.html\"),\n    __webpack_require__(/*! text!../../templates/job.history.html */ \"./node_modules/text-loader/index.js!./src/templates/job.history.html\"),\n    __webpack_require__(/*! text!../../templates/job.task.html */ \"./node_modules/text-loader/index.js!./src/templates/job.task.html\"),\n    __webpack_require__(/*! text!../../templates/job.parameter.html */ \"./node_modules/text-loader/index.js!./src/templates/job.parameter.html\"),\n    __webpack_require__(/*! text!../../templates/job.taskdetail.html */ \"./node_modules/text-loader/index.js!./src/templates/job.taskdetail.html\"),\n    __webpack_require__(/*! text!../../templates/job.task.breadcrumbs.html */ \"./node_modules/text-loader/index.js!./src/templates/job.task.breadcrumbs.html\"),\n    __webpack_require__(/*! text!../../templates/job.revert.modal.html */ \"./node_modules/text-loader/index.js!./src/templates/job.revert.modal.html\"),\n    __webpack_require__(/*! text!../../templates/job.permissions.modal.html */ \"./node_modules/text-loader/index.js!./src/templates/job.permissions.modal.html\"),\n    __webpack_require__(/*! text!../../templates/job.table.info.html */ \"./node_modules/text-loader/index.js!./src/templates/job.table.info.html\"),\n    __webpack_require__(/*! text!../../templates/job.checkdirs.html */ \"./node_modules/text-loader/index.js!./src/templates/job.checkdirs.html\")\n], __WEBPACK_AMD_DEFINE_RESULT__ = (function(\n    $,\n    _,\n    app,\n    alertify,\n    Cookies,\n    DataTable,\n    util,\n    Editor,\n    Task,\n    Graph,\n    Layout,\n    jobFilterTemplate,\n    jobSelectableTemplate,\n    taskDividerTemplate,\n    taskDetailDividerTemplate,\n    jobConfigurationTemplate,\n    jobSettingTemplate,\n    jobDetailTemplate,\n    jobAlertsTemplate,\n    jobDependenciesTemplate,\n    jobExpandedConfTemplate,\n    jobHistoryTemplate,\n    jobTaskTableTemplate,\n    jobParameterTemplate,\n    jobTaskDetailTemplate,\n    jobTaskBreadcrumbTemplate,\n    jobRevertModalTemplate,\n    jobPermissionsModalTemplate,\n    jobTableInfoTemplate,\n    jobCheckDirsTemplate\n){\n    var showStartStopStateChange = function(data, state){\n        if (data.success.length > 0) {\n            alertify.success(data.success.length + \" job(s) have been \" + state, 10);\n        }\n        if (data.error.length > 0) {\n            alertify.error(data.error.length + \" job(s) have not been \" + state, 10);\n        }\n        if (data.disable.length > 0) {\n            alertify.error(data.disable.length + \" job(s) are disabled\", 10);\n        }\n        if (data.unauthorized.length > 0) {\n            alertify.error(data.unauthorized.length + \" job(s) insufficient privileges\");\n        }\n    };\n    var States = [\n        \"IDLE\",\n        \"SCHEDULED\",\n        \"RUNNING\",\n        \"DEGRADED\",\n        \"UNKNOWN\",\n        \"ERROR\",\n        \"REBALANCE\"\n    ];\n    var StateLabels = [\n        \"label-default\",\n        \"label-info\",\n        \"label-success\",\n        \"label-inverse\",\n        \"label-inverse\",\n        \"label-danger\",\n        \"label-info\"\n    ];\n    var Model = Backbone.Model.extend({\n        idAttribute:\"id\",\n        url:function(){\n            return \"/job/get?id=\"+this.id;\n        },\n        initialize:function(options){\n            options = options || {};\n            this.cloneId = (_.has(options,\"cloneId\")?options.cloneId:\"\");\n        },\n        parse:function(data){\n            data.DT_RowId=data.id;\n            data.DT_RowClass='job-row';\n            data.submitTime = data.submitTime || \"\";\n            data.endTime = data.endTime || \"\";\n            data.creator = data.creator || \"\";\n            data.owner = data.owner || \"\";\n            data.group = data.group || \"\";\n            data.state = (_.has(data,'state')?data.state:4);\n            if(data.disabled){\n                data.status = \"disabled\";\n            }\n            else if(data.stopped){\n                data.status = \"stopped\";\n            }\n            else{\n                data.status=\"enabled\";\n            }\n            data.bytes = data.bytes || \"\";\n            data.maxRunTime = data.maxRunTime || \"\";\n            data.rekickTimeout = data.rekickTimeout || \"\";\n            data.nodes = (_.isArray(data.nodes)?data.nodes.length: data.nodes);\n            if(_.has(data,\"config\")){\n                delete data.config;\n            }\n            data.stateText = States[data.state];\n            data.stateLabel = StateLabels[data.state];\n            data.parameters = data.parameters || [];\n            data.onComplete=data.onComplete || \"\";\n            data.onError=data.onError || \"\";\n            if(!_.isEmpty(data.queryConfig)){\n                data.qc_canQuery=data.queryConfig.canQuery;\n            }\n            else{\n                data.qc_canQuery=false;\n            }\n            data.queryConfig=undefined;\n            return data;\n        },\n        defaults: function() {\n            result = {\n                description:\"(no title)\",\n                state:4,\n                creator: app.user.get(\"username\"),\n                owner: app.user.get(\"username\"),\n                submitTime:-1,\n                endTime:-1,\n                status:\"\",\n                maxRunTime:\"\",\n                rekickTimeout:\"\",\n                nodes:\"\",\n                bytes:\"\",\n                parameters:[],\n                alerts:[],\n                command:'default-task',\n                nodes:1,\n                stateText:\"\",\n                stateLabel:\"\",\n                minionType:\"default\"\n            };\n            return $.extend(result, app.jobDefaults);\n        },\n        rebalance:function(){\n            var self=this;\n            var parameters = {};\n            parameters[\"id\"] = self.id;\n            app.authQueryParameters(parameters);\n            $.ajax({\n                url: \"/job/rebalance\",\n                type: \"GET\",\n                data: parameters,\n                statusCode: {\n                    500: function(data) {\n                        alertify.error(e.responseText,5);\n                    },\n                    200: function(data){\n                        alertify.success(data.responseText,2);\n                    }\n                },\n                dataType: \"json\"\n            });\n        },\n        enable : function(unsafe) {\n            var self = this;\n            var parameters = {};\n            parameters[\"jobs\"] = self.id;\n            parameters[\"enable\"] = 1;\n            parameters[\"unsafe\"] = unsafe;\n            app.authQueryParameters(parameters);\n            $.ajax({\n                url: \"/job/enable\",\n                type: \"GET\",\n                data: parameters,\n                dataType: \"json\"\n            }).done(function(data){\n                self.showEnableStateChange(data, \"enabled\", unsafe);\n            }).fail(function(e){\n                alertify.error(\"Error enabling job \"+self.id+\"<br/>\" + e.responseText);\n            });\n        },\n        disable : function() {\n            var self = this;\n            var parameters = {};\n            parameters[\"jobs\"] = self.id;\n            parameters[\"enable\"] = 0;\n            app.authQueryParameters(parameters);\n            $.ajax({\n                url: \"/job/enable\",\n                type: \"GET\",\n                data: parameters,\n                dataType: \"json\"\n            }).done(function(data){\n                self.showEnableStateChange(data, \"disabled\");\n            }).fail(function(e){\n                alertify.error(\"Error disabling job \"+self.id+\"<br/>\" + e.responseText);\n            });\n        },\n        showEnableStateChange:function(data, state, unsafe){\n            var jobId = this.id;\n            if (data.changed.length > 0) {\n                var v = (unsafe ? \"unsafely \" : \"\") + state;\n                alertify.success(\"Job \" + jobId + \" has been \" + v, 2);\n            } else if (data.unchanged.length > 0) {\n                alertify.message(\"Job \" + jobId + \" is already \" + state, 2);\n            } else if (data.notFound.length > 0) {\n                alertify.error(\"Job \" + jobId + \" is not found\");\n            } else if (data.notAllowed.length > 0) {\n                alertify.error(\"Job \" + jobId + \" must be IDLE to be enabled safely\");\n            } else if (data.notPermitted.length > 0) {\n                alertify.error(\"User has insufficient privileges for Job \" + jobId);\n            } else {\n                alertify.error(\"Unexpected response data. Check console log\")\n                console.log(\"Unexpected response data from /job/enable call: \" + data);\n            }\n        },\n        revert:function(params){\n            var self = this;\n            var data = _.extend(params,{\n                id:self.get(\"id\")\n            });\n            app.authQueryParameters(data);\n            return $.ajax({\n                url:\"/job/revert\",\n                type: \"GET\",\n                data:data\n            });\n        },\n        fixDirs:function(node){\n            var self=this;\n            node = node || -1;\n            var parameters = {};\n            parameters[\"id\"] = self.id;\n            parameters[\"node\"] = node;\n            app.authQueryParameters(parameters);\n            $.ajax({\n                url: \"/job/fixJobDirs\",\n                type: \"GET\",\n                data: parameters,\n                dataType:\"text\"\n            }).done(function(data){\n                alertify.success(data);\n            }).fail(function(xhr){\n                alertify.error(xhr.responseText);\n            });\n        },\n        query : function(){\n            window.open(\"http://\"+app.queryHost+\"/query/index.html?job=\"+this.id,\"_blank\");\n        },\n        browse : function(){\n            window.open(\"http://\"+app.meshHttpHost+\"?path=/job/\"+this.id+\"/*\",\"_blank\")\n        },\n        delete : function(dontShowSuccessAlert){\n            var self=this;\n            var parameters = {};\n            parameters[\"id\"] = self.id;\n            app.authQueryParameters(parameters);\n            $.ajax({\n                url: \"/job/delete\",\n                type: \"GET\",\n                data: parameters,\n                statusCode: {\n                    304: function() {\n                        alertify.error(\"Job with id \"+self.id+\" has \\\"do not delete\\\" parameter enabled.\");\n                    },\n                    404: function() {\n                        alertify.error(\"Job with id \"+self.id+\" was not found.\");\n                    },\n                    500: function(res){\n                        alertify.error(\"Error deleting job \"+self.id+\":\\n\"+res.responseText);\n                    },\n                    200: function(){\n                        if(!dontShowSuccessAlert){\n                            app.router.navigate(\"#jobs\",{trigger:true});\n                            alertify.success(\"Job deleted successfully.\");\n                        }\n                    }\n                },\n                dataType: \"text\"\n            });\n        },\n        kick : function(priority){\n            var self = this;\n            var parameters = {};\n            parameters[\"jobid\"] = self.id;\n            parameters[\"priority\"] = priority || 2;\n            app.authQueryParameters(parameters);\n            $.ajax({\n                url: \"/job/start\",\n                type: \"GET\",\n                data: parameters,\n                dataType: \"json\"\n            }).done(function(data){\n                showStartStopStateChange(data, \"started\");\n            }).fail(function(e){\n                alertify.error(\"<p align='left'>Error kicking: \" + self.id + \"<br/>\" + e.responseText + \"</p>\", 10);\n            });\n        },\n        stop : function(){\n            var self=this;\n            var parameters = {};\n            parameters[\"id\"] = self.id;\n            app.authQueryParameters(parameters);\n            $.ajax({\n                url: \"/job/stop\",\n                type: \"GET\",\n                data: parameters,\n                dataType: \"json\"\n            }).done(function(data){\n                showStartStopStateChange(data, \"stopped\");\n            }).fail(function(e){\n                alertify.error(\"Error stopping: \"+self.id+\". <br/> \"+e.responseText);\n            });\n        },\n        kill : function(){\n            var self=this;\n            var parameters = {};\n            parameters[\"id\"] = self.id;\n            parameters[\"force\"] = \"true\";\n            app.authQueryParameters(parameters);\n            $.ajax({\n                url: \"/job/stop\",\n                type: \"GET\",\n                data: parameters,\n                dataType: \"json\"\n            }).done(function(data){\n                alertify.message(self.id+\" job killed.\",2)\n            }).fail(function(e){\n                alertify.error(\"Error killing: \"+self.id+\". <br/> \"+e.responseText);\n            });\n        },\n        save : function(param){\n            var data = _.extend(_.omit(this.toJSON(),'parameters','alerts','config','DT_RowId','DT_RowClass'),param);\n            data= _.omit(data,'state');\n            if (!_.isEmpty(this.commit)) {\n                data.commit=this.commit;\n            }\n            var parameters = {};\n            if (!this.isNew()) {\n                parameters['id'] = this.id;\n            }\n            app.authQueryParameters(parameters);\n            parameters['defaults'] = false;\n            return $.ajax({\n                url: \"/job/save?\" + $.param(parameters),\n                data: data,\n                type: \"POST\"\n            });\n        },\n        validate:function(config,params){\n            var data={\n                id:this.id,\n                config:config\n            };\n            _.each(params,function(param){\n                data[\"sp_\"+param.name]=param.value;\n            });\n            return $.ajax({\n                url: \"/job/validate\",\n                type: \"POST\",\n                data: data,\n                dataType:\"json\"\n            });\n        }\n    });\n    var ParameterModel = Backbone.Model.extend({\n        idAttribute:\"name\",\n        defaults:{\n            defaultValue:\"\",\n            name:\"\",\n            value:\"\"\n        }\n    });\n    var ParameterCollection = Backbone.Collection.extend({\n        initialize:function(options){\n        },\n        url:function(){\n            return \"/job/get?id=\"+this.jobUuid+\"&field=parameters\";\n        },\n        sync: function(method, model, options){\n            if(_.isEqual(method,'read')){\n                var self=this, url=self.url();\n                var ajax = $.ajax({\n                    url:\"/job/get\",\n                    data:{\n                        id:self.jobUuid,\n                        field:\"parameters\"\n                    },\n                    success:function(data){\n                        var models=[];\n                        _.each(data,function(param){\n                            var model = new ParameterModel(param);\n                            models.push(model);\n                        });\n                        self.reset(models);\n                    },\n                    dataType:\"json\"\n                });\n                return ajax;\n            }\n            else{\n                return Backbone.sync(method, model, options);\n            }\n        },\n        model:ParameterModel\n    });\n    var ConfigModel = Backbone.Model.extend({\n        idAttribute:\"jobUuid\",\n        defaults:{\n            config:\"\",\n            savedConfig:\"\"\n        },\n        initialize:function(options){\n        },\n        url:function(){\n            return \"/job/get?id=\"+this.get(\"jobUuid\")+\"&field=config\";\n        },\n        sync: function(method, model, options){\n            if(_.isEqual(method,'read')){\n                var self=this,url=self.url();\n                var ajax = $.ajax({\n                    url:\"/job/get\",\n                    data:{\n                        id:self.get(\"jobUuid\"),\n                        field:\"config\"\n                    },\n                    type:\"GET\",\n                    dataType:\"text\"\n                }).done(function(data){\n                    self.set(\"config\",data);\n                    self.set(\"savedConfig\",data);\n                }).fail(function(xhr){\n                    alertify.error(\"Error loading config: \"+xhr.responseText);\n                });\n                return ajax;\n            }\n            else{\n                return Backbone.sync(method, model, options);\n            }\n        }\n    });\n    var HistoryModel = Backbone.Model.extend({\n        idAttribute:\"commit\",\n        defaults:{\n            commit:\"\",\n            time:\"\",\n            msg:\"\"\n        },\n        parseMessage: function() {\n            var val = this.get(\"msg\");\n            this.set(\"user\", val.split(\":\")[0]);\n            var non_user = val.split(\":\")[1];\n            var non_user_parts = non_user.split(\"(\");\n            non_user_parts.pop();\n            this.set(\"message\", non_user_parts.join(\"(\"));\n            this.set(\"delta\", \"(\" + val.split(\":\")[1].split(\"(\").pop());\n        },\n        diff:function(){\n            var self=this;\n            var data = {\n                id: self.get(\"jobUuid\"),\n                commit: self.get(\"commit\")\n            };\n            return $.ajax({\n                url: \"/job/config.diff\",\n                type: \"GET\",\n                data: data,\n                dataType:\"text\"\n            });\n        },\n        load: function(){\n            var self=this;\n            var data = {\n                id: self.get(\"jobUuid\"),\n                commit: self.get(\"commit\")\n            };\n            return $.ajax({\n                url: \"/job/config.view\",\n                type: \"GET\",\n                data: data,\n                dataType: \"text\"\n            });\n        }\n    });\n    var HistoryCollection = Backbone.Collection.extend({\n        initialize:function(options){\n            //this.jobUuid=options.jobUuid;\n        },\n        sync: function(method, model, options){\n            if(_.isEqual(method,'read')){\n                var self=this;\n                var ajax=$.ajax({\n                    url: \"/job/history\",\n                    type: \"GET\",\n                    data: {\n                        id:self.jobUuid\n                    },\n                    success: function(data){\n                        var models=[];\n                        _.each(data,function(history){\n                            var model = new HistoryModel(history);\n                            model.set(\"jobUuid\",self.jobUuid);\n                            model.parseMessage();\n                            models.push(model);\n                        });\n                        self.reset(models);\n                    },\n                    fail: function(e){\n                        throw new Error(e.error());\n                    },\n                    dataType: \"json\"\n                });\n                return ajax;\n            }\n            else{\n                return Backbone.sync(method, model, options);\n            }\n        }\n    });\n    var ExpandedConfigModel = Backbone.Model.extend({\n        defaults:{\n            config:\"\"\n        },\n        sync: function(method, model, options){\n            if(_.isEqual(method,'read')){\n                var self=this;\n                var data = this.toJSON();\n                var ajax = $.ajax({\n                    url:\"/job/expand\",\n                    data:data,\n                    type:\"POST\"\n                }).done(function(data){\n                    self.set(\"expanded\",data);\n                }).fail(function(xhr){\n                    alertify.error(\"Error expanding config: \"+xhr.responseText);\n                });\n                return ajax;\n            }\n            else{\n                return Backbone.sync(method, model, options);\n            }\n        }\n    });\n    var Collection = Backbone.Collection.extend({\n        url:\"/job/list\",\n        initialize:function(){\n            _.bindAll(this,'handleJobUpdate');\n            this.listenTo(app.server,'job.update',this.handleJobUpdate);\n            this.listenTo(app.server,'job.delete',this.handleJobDelete);\n        },\n        parse:function(collection){\n            var array = new Array(collection.length);\n            _.each(collection,function(model,idx){\n                array[idx]= Model.prototype.parse(model);\n            });\n            return array;\n        },\n        model:Model,\n        handleJobUpdate:function(data){\n            var job = this.get(data.id);\n            if(!_.isUndefined(job)){\n                job.set(\n                    Model.prototype.parse(data)\n                );\n            }\n            else{\n                job=new Model(\n                    Model.prototype.parse(data)\n                );\n                this.add([job],{merge:true});\n            }\n        },\n        handleJobDelete:function(data){\n            var job = this.get(data.id);\n            if(!_.isUndefined(job)){\n                this.remove([job]);\n            }\n        },\n        kickSelected:function(jobIds, priority){\n            var self = this;\n            var count = jobIds.length;\n            var parameters = {};\n            parameters[\"jobid\"] = jobIds.join();\n            // all known callers will manually set priority, but can never be too careful\n            parameters[\"priority\"] = priority || 2;\n            app.authQueryParameters(parameters);\n            $.ajax({\n                url: \"/job/start\",\n                type: \"GET\",\n                data: parameters,\n                dataType: \"json\"\n            }).done(function(data){\n                showStartStopStateChange(data, \"started\");\n            }).fail(function(e){\n                alertify.error(\"Error kicking: \" + count + \" job(s) <br><p align='left'>\" + e.responseText + \"</p>\", 10);\n            });\n        },\n        stopSelected:function(jobIds){\n            var self = this;\n            var count = jobIds.length;\n            var parameters = {};\n            parameters[\"jobid\"] = jobIds.join();\n            app.authQueryParameters(parameters);\n            $.ajax({\n                url: \"/job/stop\",\n                type: \"GET\",\n                data: parameters,\n                dataType: \"json\"\n            }).done(function(data){\n                showStartStopStateChange(data, \"stopped\");\n            }).fail(function(e){\n                alertify.error(\"Error stopping: \"+count+\" jobs. <br/> \"+e.responseText);\n            });\n        },\n        killSelected:function(jobIds){\n            var count = jobIds.length;\n            var parameters = {};\n            parameters[\"jobid\"] = jobIds.join();\n            parameters[\"force\"] = \"true\";\n            app.authQueryParameters(parameters);\n            $.ajax({\n                url: \"/job/stop\",\n                type: \"GET\",\n                data: parameters,\n                dataType: \"json\"\n            }).done(function(data){\n                showStartStopStateChange(data, \"killed\");\n            }).fail(function(e){\n                alertify.error(\"Error killing: \"+count+\" jobs. <br/> \"+e.responseText);\n            });\n        },\n        enableBatch:function(jobIds, unsafe){\n            var self=this;\n            var count = jobIds.length;\n            var parameters = {};\n            parameters[\"jobs\"] = jobIds.join();\n            parameters[\"enable\"] = 1;\n            parameters[\"unsafe\"] = unsafe;\n            app.authQueryParameters(parameters);\n            $.ajax({\n                url: \"/job/enable\",\n                type: \"GET\",\n                data: parameters,\n                dataType: \"json\"\n            }).done(function(data){\n                self.showEnableStateChange(data, \"enabled\", unsafe);\n            }).fail(function(e){\n                alertify.error(\"Error enabling: \"+count+\" jobs. <br/> \"+e.responseText);\n            });\n        },\n        disableBatch:function(jobIds){\n            var self=this;\n            var count = jobIds.length;\n            var parameters = {};\n            parameters[\"jobs\"] = jobIds.join();\n            parameters[\"enable\"] = 0;\n            app.authQueryParameters(parameters);\n            $.ajax({\n                url: \"/job/enable\",\n                type: \"GET\",\n                data: parameters,\n                dataType: \"json\"\n            }).done(function(data){\n                self.showEnableStateChange(data, \"disabled\");\n            }).fail(function(e){\n                alertify.error(\"Error disabling: \"+count+\" jobs. <br/> \"+e.responseText);\n            });\n        },\n        showEnableStateChange:function(data, state, unsafe){\n            if (data.changed.length > 0) {\n                var v = (unsafe ? \"unsafely \" : \"\") + state;\n                alertify.success(data.changed.length + \" job(s) have been \" + v, 5);\n            }\n            if (data.unchanged.length > 0) {\n                alertify.message(data.unchanged.length + \" job(s) are already \" + state, 5);\n            }\n            if (data.notFound.length > 0) {\n                alertify.error(data.notFound.length + \" job(s) are not found\");\n            }\n            if (data.notAllowed.length > 0) {\n                alertify.error(data.notAllowed.length + \" job(s) cannot be enabled safely - they must be IDLE\");\n            }\n            if (data.notPermitted.length > 0) {\n                alertify.error(data.notPermitted.length + \" job(s) insufficient privileges\");\n            }\n        },\n        deleteSelected:function(jobIds){\n            var count = jobIds.length;\n            var self=this;\n            alertify.confirm(\"Are you sure you would like to DELETE \" + count + \" \" + (count > 1 ? \" jobs\" : \" job\") + \"?\", function (resp) {\n\n                _.each(jobIds,function(jobId){\n                    var job = self.get(jobId);\n                    if(!_.isUndefined(job)){\n                        job.delete(true);\n                    }\n                });\n            });\n        }\n    });\n    var InfoMetricView = Backbone.View.extend({\n        initialize:function(options){\n            this.el=options.el;\n            this.listenTo(this.model,\"change\",this.render);\n            this.listenTo(this.model,\"reset\",this.render);\n        },\n        template: _.template(jobTableInfoTemplate),\n        render:function(){\n            this.$el=$(this.el);\n            var html = this.template(this.model.toJSON());\n            this.$el.html(html);\n            return this;\n        }\n    })\n    var InfoMetricModel = Backbone.Model.extend({\n        initialize:function(options){\n            _.bindAll(this,'handleJobAdd','handleJobRemove','handleJobNodesChange','handleTaskQueueChange','handleJobReset','handleRunningChange','handleDoneChange');\n            this.listenTo(app.server,\"task.queue.size\",this.handleTaskQueueChange);\n            this.listenTo(app.hostCollection,\"change:diskUsed\",this.handleDiskUsedChange);\n            this.listenTo(app.hostCollection,\"change:diskMax\",this.handleDiskMaxChange);\n            this.listenTo(app.hostCollection,\"change:availableTaskSlots\",this.handleAvailTaskChange);\n            this.listenTo(app.jobCollection,\"add\",this.handleJobAdd);\n            this.listenTo(app.jobCollection,\"reset\",this.handleJobReset);\n            this.listenTo(app.jobCollection,\"change:nodes\",this.handleJobNodesChange);\n            this.listenTo(app.jobCollection,\"change:running\",this.handleRunningChange);\n            this.listenTo(app.jobCollection,\"change:errored\",this.handleErroredChange);\n            this.listenTo(app.jobCollection,\"change:done\",this.handleDoneChange);\n            this.listenTo(app.jobCollection,\"remove\",this.handleJobRemove);\n            this.listenTo(app.hostCollection,\"reset\",this.handleHostReset);\n            this.listenTo(app.hostCollection,\"add\",this.handleHostAdd);\n            this.handleJobReset();\n            this.handleHostReset();\n        },\n        defaults:{\n            tasksCount:0,\n            queuedCount:0,\n            queuedCountNoSlot:0,\n            erroredCount:0,\n            queuedErrorCount:0,\n            runningCount:0,\n            jobCount:0,\n            availTaskSlots:0,\n            disk:0,\n            diskUsed:0,\n            diskMax:0,\n            hostCount:0\n        },\n        handleHostReset:function(){\n            var diskUsed= 0,diskMax= 0, avail=0;\n            app.hostCollection.each(function(hostModel){\n                diskUsed+=hostModel.get(\"diskUsed\");\n                diskMax+=hostModel.get(\"diskMax\");\n                if (!hostModel.get(\"dead\")) {\n                \tavail+=hostModel.get(\"availableTaskSlots\");\n                }\n            });\n            if(diskMax>0){\n                var disk = (diskUsed / diskMax).toFixed(2);\n                this.set(\"disk\",disk);\n            }\n            this.set(\"diskUsed\",diskUsed);\n            this.set(\"diskMax\",diskMax);\n            this.set(\"availTaskSlots\",avail);\n            this.set(\"hostCount\",app.hostCollection.length);\n        },\n        handleHostAdd: function(newHost) {\n            var used = newHost.get('used');\n            var max = newHost.get('max');\n            var diskUsed = Number(this.get('diskUsed')) + Number(used.disk);\n            var diskMax = Number(this.get('diskMax')) + Number(max.disk);\n            var avail = Number(this.get('availTaskSlots')) + Number(newHost.get('availableTaskSlots'));\n\n            if (diskMax > 0){\n                var disk = (diskUsed / diskMax).toFixed(2);\n                this.set('disk', disk);\n            }\n\n            this.set('diskUsed', diskUsed);\n            this.set('diskMax', diskMax);\n            this.set('availTaskSlots', avail);\n            this.set('hostCount', app.hostCollection.length);\n        },\n        handleDiskChange:function(){\n            if(this.get(\"diskMax\")>0){\n                var diskUsed=this.get(\"diskUsed\"), diskMax=this.get(\"diskMax\");\n                var disk = (diskUsed / diskMax).toFixed(2);\n                this.get(\"disk\",disk);\n            }\n        },\n        handleDiskUsedChange:function(model){\n            var delta = parseInt(model.get(\"diskUsed\"))-parseInt(model.previous(\"diskUsed\"));\n            if(_.isNumber(delta) && !_.isNaN(delta)){\n                var prev = this.get(\"diskUsed\");\n                this.set(\"diskUsed\",prev+delta);\n            }\n            this.handleDiskChange();\n        },\n        handleDiskMaxChange:function(model){\n            var delta = parseInt(model.get(\"diskMax\"))-parseInt(model.previous(\"diskMax\"));\n            if(_.isNumber(delta) && !_.isNaN(delta)){\n                var prev = this.get(\"diskMax\");\n                this.set(\"diskMax\",prev+delta);\n            }\n            this.handleDiskChange();\n        },\n        handleAvailTaskChange:function(model){\n            var delta = parseInt(model.get(\"availableTaskSlots\"))-parseInt(model.previous(\"availableTaskSlots\"));\n            if(_.isNumber(delta) && !_.isNaN(delta) && !this.get(\"dead\")){\n                var prev = this.get(\"availTaskSlots\");\n                this.set(\"availTaskSlots\",prev+delta);\n            }\n        },\n        handleJobAdd:function(model){\n            var tasks = parseInt(model.get(\"nodes\"));\n            if(_.isNumber(tasks) && !_.isNaN(tasks)){\n                var prev = this.get(\"tasksCount\");\n                this.set(\"tasksCount\",prev+tasks);\n            }\n            this.set(\"jobCount\",this.get(\"jobCount\")+1);\n        },\n        handleJobNodesChange:function(model){\n            var delta = parseInt(model.get(\"nodes\"))-parseInt(model.previous(\"nodes\"));\n            if(_.isNumber(delta) && !_.isNaN(delta)){\n                var prev = this.get(\"tasksCount\");\n                this.set(\"tasksCount\",prev+delta);\n            }\n        },\n        handleErroredChange:function(model){\n            var delta = parseInt(model.get(\"errored\"))-parseInt(model.previous(\"errored\"));\n            if(_.isNumber(delta) && !_.isNaN(delta)){\n                var prev = this.get(\"erroredCount\");\n                this.set(\"erroredCount\",prev+delta);\n            }\n        },\n        handleRunningChange:function(model){\n            var delta = parseInt(model.get(\"running\"))-parseInt(model.previous(\"running\"));\n            if(_.isNumber(delta) && !_.isNaN(delta)){\n                var prev = this.get(\"runningCount\");\n                this.set(\"runningCount\",prev+delta);\n            }\n        },\n        handleDoneChange:function(model){\n            var delta = parseInt(model.get(\"done\"))-parseInt(model.previous(\"done\"));\n            if(_.isNumber(delta) && !_.isNaN(delta)){\n                var prev = this.get(\"runningCount\");\n                this.set(\"runningCount\",prev-delta);\n            }\n        },\n        handleJobRemove:function(model){\n            var tasks = parseInt(model.get(\"nodes\"));\n            if(_.isNumber(tasks) && !_.isNaN(tasks)){\n                var prev = this.get(\"tasksCount\");\n                this.set(\"tasksCount\",prev-tasks);\n            }\n            this.set(\"jobCount\",this.get(\"jobCount\")-1);\n        },\n        handleTaskQueueChange:function(data){\n            this.set(\"queuedCount\",data.size - data.sizeErr);\n            this.set(\"queuedCountNoSlot\",data.sizeSlot);\n            this.set(\"queuedErrorCount\",data.sizeErr);\n        },\n        handleJobReset:function(){\n            var tasks= 0,running= 0,errored=0;\n            app.jobCollection.each(function(model){\n                tasks+=model.get(\"nodes\");\n                running+=model.get(\"running\")-model.get(\"done\");\n                errored+=model.get(\"errored\");\n            });\n            this.set(\"tasksCount\",tasks);\n            this.set(\"runningCount\",running);\n            this.set(\"erroredCount\",errored);\n            this.set(\"jobCount\",app.jobCollection.length);\n        }\n    });\n    var JobTable = DataTable.View.extend({\n        initialize:function(options){\n            _.bindAll(this,\n                'render',\n                'handleKickButtonClick',\n                'handleStopButtonClick',\n                'handleKillButtonClick',\n                'handleEnableButtonClick',\n                'handleDisableButtonClick',\n                'handleDeleteButtonClick',\n                'handleCreateAlertButtonClick',\n                'handleChangePermissionsButtonClick',\n                'handleFindDeletedJobButtonClick'\n            );\n            this.hasRendered=false;\n            this.listenTo(app.user,\"change:username\",this.handleUsernameChange);\n            DataTable.View.prototype.initialize.apply(this,[options]);\n        },\n        render:function(){\n            DataTable.View.prototype.render.apply(this,[]);\n            if(!this.hasRendered){\n                this.views.selectable.find(\"#kickButton\").on(\"click\",this.handleKickButtonClick);\n                this.views.selectable.find(\"#stopButton\").on(\"click\",this.handleStopButtonClick);\n                this.views.selectable.find(\"#killButton\").on(\"click\",this.handleKillButtonClick);\n                this.views.selectable.find(\"#enableButton\").on(\"click\",this.handleEnableButtonClick);\n                this.views.selectable.find(\"#disableButton\").on(\"click\",this.handleDisableButtonClick);\n                this.views.selectable.find(\"#deleteButton\").on(\"click\",this.handleDeleteButtonClick);\n                this.views.selectable.find(\"#createAlertButton\").on(\"click\", this.handleCreateAlertButtonClick);\n                this.views.selectable.find(\"#changePermissionsButton\").on(\"click\", this.handleChangePermissionsButtonClick);\n                this.hasRendered=true;\n            }\n            // Find deleted job\n            this.views.parent.find(\"#findDeletedJobButton\").on(\"click\", this.handleFindDeletedJobButtonClick);\n            // Jobs filter\n            var jobFilter = this.views.filter.find(\"#myJobs\");\n            jobFilter.data(\"value\",app.user.get(\"username\"));\n            var state = this.views.table.fnSettings().oLoadedState;\n            if(!_.isNull(state) && !_.isUndefined(state.aoSearchCols)){\n                var col=state.aoSearchCols[jobFilter.data(\"index\")];\n                var search = col.sSearch;\n                if(!_.isEmpty(search)){\n                    jobFilter.addClass(\"selected\");\n                }\n            }\n            return this;\n        },\n        handleKickButtonClick:function(event){\n            var ids = this.getSelectedIds(),self=this;\n            if(app.isQuiesced){\n                alertify.confirm(\"Cluster is quiesced, do you want to kick \"+ids.length+\" job(s) with extra priority?\", function (e) {\n                    self.collection.kickSelected(ids, 100);\n                });\n            }else{\n                self.collection.kickSelected(ids, 2);\n            }\n        },\n        handleStopButtonClick:function(event){\n            var ids = this.getSelectedIds();\n            this.collection.stopSelected(ids);\n        },\n        handleKillButtonClick:function(event){\n            var ids = this.getSelectedIds();\n            this.collection.killSelected(ids);\n        },\n        handleEnableButtonClick:function(event){\n            var ids = this.getSelectedIds();\n            // shift click triggers unsafe enable!\n            this.collection.enableBatch(ids, event.shiftKey);\n        },\n        handleDisableButtonClick:function(event){\n            var ids = this.getSelectedIds();\n            this.collection.disableBatch(ids);\n        },\n        handleDeleteButtonClick:function(event){\n            var ids = this.getSelectedIds();\n            this.collection.deleteSelected(ids);\n        },\n        handleCreateAlertButtonClick:function(event){\n            var ids = this.getSelectedIds();\n            app.router.navigate(\"alerts/create/\" + ids.join(), {trigger:true});\n        },\n        handleChangePermissionsButtonClick:function(event){\n            var ids = this.getSelectedIds();\n            app.router.trigger(\"route:showChangePermissions\", ids);\n        },\n        handleFindDeletedJobButtonClick:function(event){\n            alertify.prompt(\"Enter the deleted job ID:\",\"\",function(evt, str){\n                window.open(\"/job/config.deleted?id=\"+str,\"_blank\");\n            });\n        },\n        remove:function(){\n            this.$el.detach();\n        },\n        handleUsernameChange:function(event){\n            this.views.filter.find(\"#myJobs\").data(\"value\",app.user.get(\"username\"));\n            this.checkFilterState();\n        }\n    });\n    var ComfyJobTable = JobTable.extend({\n        initialize:function(options){\n           // _.bindAll(this,'resize','handleReset','handleRemove','handleAdd','handleChange','handleFilter');\n            _.bindAll(this,'drawCallback');\n            options = options || {};\n            this.id = options.id || \"comfyJobTable\";\n            this.jobInfoMetricModel = options.jobInfoMetricModel;\n            this.$el.attr(\"id\",this.id);\n            var self=this;\n            var columns = [\n                {\n                    \"mData\": \"submitTime\",\n                    \"bVisible\":false,\n                    \"bSearchable\":false\n                },\n                {\n                    \"mData\": \"endTime\",\n                    \"bVisible\":false,\n                    \"bSearchable\":false\n                },\n                {\n                    \"sTitle\":\"\",\n                    \"sClass\":\"job-cb\",\n                    \"mData\": null,\n                    \"bSearchable\":false,\n                    \"bSortable\":false,\n                    \"mRender\":function(val,type,data){\n                        if(self.selectedIds[data.id]){\n                            return \"<input checked class='row_selectable' type='checkbox'>\";\n                        }\n                        else{\n                            return \"<input class='row_selectable' type='checkbox'>\";\n                        }\n                    }\n                },\n                {\n                    \"sTitle\":\"ID\",\n                    \"sClass\":\"job-id\",\n                    \"mData\": \"id\",\n                    \"sWidth\":\"6%\",\n                    \"bSearchable\":true,\n                    \"mRender\":function(val,type,data){\n                        return \"<a class='bs-tooltip' href='#jobs/\"+val+\"/quick'>\"+val+\"</a>\";\n                    }\n                },\n                {\n                    \"sTitle\":\"Creator\",\n                    \"sClass\":\"job-creator center\",\n                    \"mData\": \"creator\",\n                    \"sWidth\":\"7%\",\n                    \"bSearchable\":true\n                },\n                {\n                    \"mData\": \"state\",\n                    \"bVisible\":false,\n                    \"bSearchable\":true,\n                    \"mRender\":function(val){\n                        return \"<div class='label \"+StateLabels[val]+\"'>\"+States[val]+\"</div>\";\n                    },\n                },\n                {\n                    \"sTitle\":\"State\",\n                    \"sClass\":\"job-state center\",\n                    \"mData\": \"state\",\n                    \"sWidth\":\"8%\",\n                    \"bSearchable\":false,\n                    \"mRender\":function(val){\n                        return \"<div class='label \"+StateLabels[val]+\"'>\"+States[val]+\"</div>\";\n                    },\n                    \"sType\": \"num\",\n                    \"aDataSort\":[5],\n                    \"aTargets\":[6]\n                },\n                {\n                    \"sTitle\":\"Status\",\n                    \"sClass\":\"job-status center\",\n                    \"mData\": \"status\",\n                    \"sWidth\":\"6%\",\n                    \"bSearchable\":true\n                },\n                {\n                    \"sTitle\":\"Submitted\",\n                    \"sClass\":\"job-submitTime center\",\n                    \"mData\": \"submitTime\",\n                    \"sType\": \"date\",\n                    \"sWidth\":\"8%\",\n                    \"bSearchable\":false,\n                    \"mRender\":function(val){\n                        return util.convertToDateTimeText(val);\n                    },\n                    \"aDataSort\":[0],\n                    \"aTargets\":[8]\n                },\n                {\n                    \"sTitle\":\"Ended\",\n                    \"sClass\":\"job-endTime center\",\n                    \"mData\": \"endTime\",\n                    \"sType\": \"date\",\n                    \"sWidth\":\"8%\",\n                    \"bSearchable\":false,\n                    \"mRender\":function(val){\n                        return util.convertToDateTimeText(val);\n                    },\n                    \"aDataSort\":[1],\n                    \"aTargets\":[9]\n                },\n                {\n                    \"sTitle\":\"Description\",\n                    \"sClass\":\"job-desc\",\n                    \"mData\": \"description\",\n                    \"sWidth\":\"31%\",//3,\n                    \"bSearchable\":true,\n                    \"mRender\":function(val,type,data){\n                        return \"<a class='bs-tooltip' href='#jobs/\"+encodeURIComponent(data.id)+\"/conf' class='bs-tooltip' data-toggle='tooltip' data-placement='right' title='' data-original-title='\"+val+\"'>\"+val+\"</a>\";\n                    }\n                },\n                {\n                    \"sTitle\":\"maxT\",\n                    \"sClass\":\"job-maxt center\",\n                    \"mData\": \"maxRunTime\",\n                    \"sWidth\":\"4%\",\n                    \"bSearchable\":false\n                },\n                {\n                    \"sTitle\":\"rekT\",\n                    \"sClass\":\"job-rekt center\",\n                    \"mData\": \"rekickTimeout\",\n                    \"sWidth\":\"4%\",\n                    \"bSearchable\":false\n                },\n                {\n                    \"sTitle\":\"Nodes\",\n                    \"sClass\":\"job-nodes center\",\n                    \"mData\": \"nodes\",\n                    \"sWidth\":\"7%\",\n                    \"bSearchable\":false\n                },\n                {//10\n                    \"mData\": \"bytes\",\n                    \"bVisible\":false,\n                    \"bSearchable\":false\n                },\n                {\n                    \"sTitle\":\"Size\",\n                    \"sClass\":\"job-size center\",\n                    \"mData\": \"bytes\",\n                    \"sWidth\":\"5%\",\n                    \"bSearchable\":false,\n                    \"mRender\":function(val){\n                        return util.convertToDFH(val);\n                    },\n                    \"aDataSort\":[14],\n                    \"aTargets\":[15]\n                },\n                {\n                    \"mData\": \"priority\",\n                    \"bSearchable\":true,\n                    //\"bVisible\":false, // this doesn't seem to do anything (for any column) -- guessing broken supers\n                    \"sWidth\":\"0%\" // does a decent job of emulating not being visible I guess\n                },\n                {\n                    \"sTitle\":\"\",\n                    \"sClass\":\"job-actions center\",\n                    \"mData\": null,\n                    \"sWidth\":\"4%\",\n                    \"bSortable\":false,\n                    \"bSearchable\":false,\n                    \"sSortData\":1,\n                    \"mRender\":function(val,type,data){\n                        var html = \"\";\n                        if(data.qc_canQuery){\n                            html+=\"<a data-id='\"+data.id+\"' class='btn btn-default btn-tiny btn-blue' href='http://\"+app.queryHost+\"/query/index.html?job=\"+data.id+\"' target='_blank'>Q</a>\";\n                        }\n                        return html;\n                    }\n                }\n            ];\n            JobTable.prototype.initialize.apply(this,[{\n                columns:columns,\n                filterTemplate: _.template(jobFilterTemplate)({username:app.user.get('username')}),\n                selectableTemplate:jobSelectableTemplate,\n                heightBuffer:80,\n                columnFilterIndex:2,\n                jobInfoMetricModel:this.jobInfoMetricModel,\n                drawCallback:this.drawCallback,\n                id:this.id,\n                changeAttrs:[\n                    'submitTime',\n                    'endTime',\n                    'stateText',\n                    'state',\n                    'disabled',\n                    'running',\n                    'errored',\n                    'done',\n                    'bytes',\n                    'description',\n                    'maxRunTime',\n                    'rekickTimeout',\n                    'qc_canQuery'\n                ]\n            }]);\n        },\n        render:function(){\n            JobTable.prototype.render.apply(this,[]);\n            this.views.parent.find(\"a#comfortableTable\").parent().addClass(\"active\");\n            return this;\n        },\n        drawCallback:function(oSettings){\n            if(this.dirty){\n                var info = $(oSettings.nTableWrapper).find(\"div.dataTables_footer div.summary_info\");\n                this.$el.find(\"tr td.job-id a.bs-tooltip,tr td.job-desc a.bs-tooltip\").hover(function(event){\n                    var text = $(event.currentTarget).text();\n                    if(info.length===1){\n                        info.html(text);\n                    }\n                },function(event){\n                    info.html(\"\");\n                });\n            }\n        }\n    });\n    var CompactTable = JobTable.extend({\n        initialize:function(options){\n            options = options || {};\n            this.id = options.id || \"compactTable\";\n            this.jobInfoMetricModel=options.jobInfoMetricModel;\n            this.$el.attr(\"id\",this.id);\n            var self=this;\n            var columns = [\n                {\n                    \"sTitle\":\"\",\n                    \"sClass\":\"job-cb\",\n                    \"sWidth\":\"3%\",\n                    \"mData\": null,\n                    \"bSearchable\":false,\n                    \"bSortable\":false,\n                    \"mRender\":function(val,type,data){\n                        if(self.selectedIds[data.id]){\n                            return \"<input checked class='row_selectable' type='checkbox'>\";\n                        }\n                        else{\n                            return \"<input class='row_selectable' type='checkbox'>\";\n                        }\n                    }\n                },\n                {\n                    \"sTitle\":\"ID\",\n                    \"sClass\":\"job-id\",\n                    \"mData\": \"id\",\n                    \"sWidth\":\"6%\",\n                    \"bSearchable\":true,\n                    \"mRender\":function(val){\n                        return \"<a href='#jobs/\"+val+\"/quick'>\"+val+\"</a>\";\n                    }\n                },//0\n                {\n                    \"sTitle\":\"Creator\",\n                    \"sClass\":\"job-creator center\",\n                    \"mData\": \"creator\",\n                    \"bSearchable\":true,\n                    \"sWidth\":\"7%\"\n                },//1\n                {\n                    \"mData\": \"stateText\",\n                    \"bVisible\":false,\n                    \"bSearchable\":true\n                },//2\n                {\n                    \"sTitle\":\"State\",\n                    \"sClass\":\"job-state center\",\n                    \"mData\": \"state\",\n                    \"sWidth\":\"5%\",\n                    \"bSearchable\":false,\n                    \"mRender\":function(val,type,data){\n                        var html = \"<span class='label \"+StateLabels[val]+\"'>\"+States[val]+\"</span>\";\n                        return html;\n                    },\n                    \"sType\": \"num\",\n                    \"aDataSort\":[3],\n                    \"aTargets\":[4]\n                },//3\n                {\n                    \"mData\": \"submitTime\",\n                    \"bVisible\":false,\n                    \"bSearchable\":false\n                },//4\n                {\n                    \"sTitle\":\"Submitted\",\n                    \"sClass\":\"job-submitTime center\",\n                    \"sType\": \"date\",\n                    \"mData\": \"submitTime\",\n                    \"sWidth\":\"7%\",\n                    \"bSearchable\":false,\n                    \"mRender\":function(val){\n                        return util.convertToDateTimeText(val);\n                    },\n                    \"aDataSort\":[5],\n                    \"aTargets\":[6]\n                },//5\n                {\n                    \"mData\": \"endTime\",\n                    \"bVisible\":false,\n                    \"bSearchable\":false\n                },//6\n                {\n                    \"sTitle\":\"Ended\",\n                    \"sClass\":\"job-endTime center\",\n                    \"sType\": \"date\",\n                    \"mData\": \"endTime\",\n                    \"sWidth\":\"7%\",\n                    \"bSearchable\":false,\n                    \"mRender\":function(val){\n                        return util.convertToDateTimeText(val);\n                    },\n                    \"aDataSort\":[7],\n                    \"aTargets\":[8]\n                },//7\n                {\n                    \"sTitle\":\"Description\",\n                    \"sClass\":\"job-desc\",\n                    \"mData\": \"description\",\n                    \"sWidth\":\"32%\",\n                    \"bSearchable\":true,\n                    \"mRender\":function(val,type,data){\n                        return \"<a href='#jobs/\"+encodeURIComponent(data.id)+\"/conf'>\"+val+\"</a>\";\n                    }\n                },//8\n                {\n                    \"sTitle\":\"mT\",\n                    \"sClass\":\"job-maxt center\",\n                    \"mData\": \"maxRunTime\",\n                    \"sWidth\":\"4%\",\n                    \"bSearchable\":false\n                },//9\n                {\n                    \"sTitle\":\"rT\",\n                    \"sClass\":\"job-rekt center\",\n                    \"mData\": \"rekickTimeout\",\n                    \"sWidth\":\"4%\",\n                    \"bSearchable\":false\n                },//10\n                {\n                    \"sTitle\":\"N\",\n                    \"sClass\":\"job-nodes center\",\n                    \"mData\": \"nodes\",\n                    \"sWidth\":\"4%\",\n                    \"bSearchable\":false\n                },//11\n                {\n                    \"sTitle\":\"R\",\n                    \"sClass\":\"job-running center\",\n                    \"mData\": \"running\",\n                    \"sWidth\":\"4%\",\n                    \"bSearchable\":false\n                },//12\n                {\n                    \"sTitle\":\"E\",\n                    \"sClass\":\"job-errored center\",\n                    \"mData\": \"errored\",\n                    \"sWidth\":\"4%\",\n                    \"bSearchable\":false\n                },//13\n                {\n                    \"sTitle\":\"D\",\n                    \"sClass\":\"job-done center\",\n                    \"mData\": \"done\",\n                    \"sWidth\":\"4%\",\n                    \"bSearchable\":false\n                },//14\n                {\n                    \"mData\": \"bytes\",\n                    \"bVisible\":false,\n                    \"bSearchable\":false\n                },//15\n                {\n                    \"sTitle\":\"Size\",\n                    \"sClass\":\"job-size center\",\n                    \"mData\": \"bytes\",\n                    \"sWidth\":\"5%\",\n                    \"bSearchable\":false,\n                    \"mRender\":function(val){\n                        return util.convertToDFH(val);\n                    },\n                    \"aDataSort\":[16],\n                    \"aTargets\":[17]\n                },//16\n                {\n                    \"sTitle\":\"\",\n                    \"sClass\":\"job-actions center\",\n                    \"mData\": \"id\",\n                    \"sWidth\":\"4%\",\n                    \"bSortable\":false,\n                    \"bSearchable\":false,\n                    \"sSortData\":1,\n                    \"mRender\":function(val,type,data){\n                        var html = \"\";\n                        if(data.qc_canQuery){\n                            html+=\"<a data-id='\"+val+\"' class='btn btn-default btn-tiny btn-blue' href='http://\"+app.queryHost+\"/query/index.html?job=\"+data.id+\"' target='_blank'>Q</a>\";\n                        }\n                        return html;\n                    }\n                }//17\n            ];\n            JobTable.prototype.initialize.apply(this,[{\n                columns:columns,\n                filterTemplate: _.template(jobFilterTemplate)({username:app.user.get('username')}),\n                selectableTemplate:jobSelectableTemplate,\n                heightBuffer:80,\n                columnFilterIndex:2,\n                jobInfoMetricModel:this.jobInfoMetricModel,\n                id:this.id,\n                changeAttrs:[\n                    'submitTime',\n                    'endTime',\n                    'stateText',\n                    'state',\n                    'running',\n                    'errored',\n                    'done',\n                    'bytes',\n                    'description',\n                    'maxRunTime',\n                    'rekickTimeout'\n                ]\n            }]);\n        },\n        render:function(){\n            JobTable.prototype.render.apply(this,[]);\n            this.views.parent.find(\"a#compactTable\").parent().addClass(\"active\");\n            return this;\n        }\n    });\n    var TaskDividerView = Backbone.View.extend({\n        className:\"task-divider\",\n        initialize:function(){\n\n        },\n        template: _.template(taskDividerTemplate),\n        render:function(){\n            var html = this.template(this.model.toJSON());\n            this.$el.html(html);\n            return this;\n        }\n    });\n    var TaskDetailDividerView = Backbone.View.extend({\n        className:\"task-divider\",\n        initialize:function(options){\n            this.nodeNumber=options.nodeNumber;\n        },\n        template: _.template(taskDetailDividerTemplate),\n        render:function(){\n            var html = this.template({\n                job:this.model.toJSON()\n            });\n            this.$el.html(html);\n            return this;\n        }\n    });\n    var BackupModel = Backbone.Model.extend({\n        idAttribute:\"jobUuid\",\n        url:function(){\n            return \"/job/backups.list?id=\"+this.get(\"jobUuid\")+\"&node=\"+this.get(\"node\");\n        },\n        sync: function(method, model, options){\n            if(_.isEqual(method,'read')){\n                var self=this, url=self.url();\n                var ajax = $.ajax({\n                    url:url,\n                    data:{\n                        id:self.jobUuid,\n                        node:self.get(\"node\")\n                    }\n                }).done(function(data){\n                    self.set(data);\n                    self.trigger(\"change\");\n                });\n                return ajax;\n            }\n        }\n    });\n    var ChangePermissionsModalView = Backbone.View.extend({\n        className:\"modal fade\",\n        template: _.template(jobPermissionsModalTemplate),\n        events:{\n            \"click button#jobPermissionsModalSubmit\":\"handleSubmitButtonClick\",\n            \"hidden.bs.modal\":\"close\",\n        },\n        initialize: function(options){\n            _.bindAll(this, 'handleSubmitButtonClick', 'close');\n            this.jobIds = options.jobIds;\n        },\n        render: function(){\n            var html = this.template();\n            this.$el.html(html);\n            this.$el.modal(\"show\");\n            return this;\n        },\n        handleSubmitButtonClick: function() {\n            var parameters = {};\n            parameters[\"jobs\"] = this.jobIds.join();\n            parameters[\"creator\"] = $('input[name=\"creatorModal\"]').val();\n            parameters[\"owner\"] = $('input[name=\"chownModal\"]').val();\n            parameters[\"group\"] = $('input[name=\"chgrpModal\"]').val();\n            parameters[\"ownerWritable\"] = $('input[name=\"ownerWritable\"]:checked').val();\n            parameters[\"groupWritable\"] = $('input[name=\"groupWritable\"]:checked').val();\n            parameters[\"worldWritable\"] = $('input[name=\"worldWritable\"]:checked').val();\n            parameters[\"ownerExecutable\"] = $('input[name=\"ownerExecutable\"]:checked').val();\n            parameters[\"groupExecutable\"] = $('input[name=\"groupExecutable\"]:checked').val();\n            parameters[\"worldExecutable\"] = $('input[name=\"worldExecutable\"]:checked').val();\n            app.authQueryParameters(parameters);\n            $.ajax({\n                url: \"/job/permissions\",\n                type: \"POST\",\n                data: parameters,\n                dataType: \"json\"\n            }).done(function(data) {\n               if (data.changed.length > 0) {\n                    alertify.success(data.changed.length + \" job(s) have been updated\");\n                }\n                if (data.unchanged.length > 0) {\n                    alertify.message(data.unchanged.length + \" job(s) already had these changes\");\n                }\n                if (data.notFound.length > 0) {\n                    alertify.error(data.notFound.length + \" job(s) are not found\");\n                }\n                if (data.notPermitted.length > 0) {\n                    alertify.error(data.notPermitted.length + \" job(s) insufficient privileges\");\n                }\n            }).fail(function(e){\n                alertify.error(\"Error changing permissions\" + e.responseText);\n            });\n        },\n        close: function() {\n            this.remove();\n            this.unbind();\n        }\n    });\n    var BackupModalView = Backbone.View.extend({\n        className:\"modal fade\",\n        template: _.template(jobRevertModalTemplate),\n        events:{\n            \"click button#runButton\":\"handleRunButtonClick\",\n            \"click button#goldButton\":\"handleGoldButtonClick\",\n            \"click button#hourlyButton\":\"handleHourlyButtonClick\",\n            \"click button#dailyButton\":\"handleDailyButtonClick\",\n            \"click button#weeklyButton\":\"handleWeeklyButtonClick\",\n            \"click button#MonthlyButton\":\"handleMonthlyButtonClick\"\n        },\n        initialize:function(options){\n            _.bindAll(this,\n                'handleButtonClickForTimestampRevert',\n                'handleButtonClickForRevisionRevert',\n                'handleRunButtonClick',\n                'handleGoldButtonClick',\n                'handleDailyButtonClick',\n                'handleHourlyButtonClick',\n                'handleWeeklyButtonClick',\n                'handleMonthlyButtonClick');\n            this.backupModel = options.backupModel;\n            this.listenTo(this.backupModel,\"change\",this.handleBackupChange);\n        },\n        render:function(){\n            var node = this.backupModel.get(\"node\");\n            var html = this.template({\n                model: this.model.toJSON(),\n                title: node > -1 ? \"Revert task \" + node : \"Revert job\"\n            });\n            this.$el.html(html);\n            this.$el.modal(\"show\");\n            this.showMessage(\"Searching for available backups...\");\n            return this;\n        },\n        handleBackupChange:function(){\n            var self=this;\n            var node = this.backupModel.get(\"node\");\n            var data = this.backupModel.toJSON()\n            var count = 0;\n            if (node == -1) {\n                // reverting a job - don't populate/show gold backups by timestamp. see T51329\n                var selects = [\"hourly\", \"daily\", \"weekly\", \"monthly\"]\n            } else {\n                var selects = [\"gold\", \"hourly\", \"daily\", \"weekly\", \"monthly\"]\n            }\n            _.each(selects,function(type){\n                var select = self.$el.find(\"#\"+type+\"Select\");\n                var options = \"\";\n                _.each(data[type],function(ts){\n                    options+=\"<option value='\"+ts+\"'>\"+util.convertToDateTimeText(ts)+\"</option>\"\n                    count++;\n                });\n                select.html(options);\n                if(!_.isEmpty(options)){\n                    select.closest(\"tr\").show();\n                }\n            });\n            if (count == 0) {\n                this.showMessage(\"There is no backup!\");\n            } else {\n                this.showMessage(\"\");\n            }\n            if (node >= 0) {\n                // reverting a task - hide the revert by revision selection because it will be\n                // replaced by the dropdown for timestamp based backups\n                this.$el.find(\"#goldRevertByRevision\").hide();\n            }\n        },\n        showMessage:function(msg){\n            this.$el.find(\"#backupMessage\").text(msg);\n        },\n        handleButtonClickForTimestampRevert:function(selectElem, backupType){\n            var node = this.backupModel.get(\"node\");\n            var value = this.$el.find(selectElem).val();\n            var params = {\n                type:backupType,\n                node:node,\n                time:value\n            };\n            this.handleButtonClickRaw(node, params);\n        },\n        handleButtonClickForRevisionRevert:function(rev){\n            var node = this.backupModel.get(\"node\");\n            var params = {\n                type:\"gold\",\n                node:node,\n                revision:rev\n            };\n            this.handleButtonClickRaw(node, params);\n        },\n        handleButtonClickRaw:function(node, params){\n            var name = node > -1 ? \"Task \" + node : \"Job\";\n            this.model.revert(params).done(function(data,result,xhr){\n                if (params.hasOwnProperty(\"revision\")) {\n                    alertify.message(\"Attempted to revert to a previous run (which may not exist)\");\n                } else {\n                    alertify.success(name + \" reverted successfully.\");\n                }\n            }).fail(function(xhr){\n                alertify.error(\"Error reverting \" + name + \":<br/>\" + xhr.responseText);\n            });\n        },\n        handleRunButtonClick:function(event){\n            rev = this.$el.find(\"#runSelect\").val();\n            this.handleButtonClickForRevisionRevert(rev);\n        },\n        handleGoldButtonClick:function(event){\n            this.handleButtonClickForTimestampRevert(\"#goldSelect\", \"gold\");\n        },\n        handleHourlyButtonClick:function(event){\n            this.handleButtonClickForTimestampRevert(\"#hourlySelect\", \"hourly\");\n        },\n        handleDailyButtonClick:function(event){\n            this.handleButtonClickForTimestampRevert(\"#dailySelect\", \"daily\");\n        },\n        handleWeeklyButtonClick:function(event){\n            this.handleButtonClickForTimestampRevert(\"#weeklySelect\", \"weekly\");\n        },\n        handleMonthlyButtonClick:function(event){\n            this.handleButtonClickForTimestampRevert(\"#monthlySelect\", \"monthly\");\n        }\n    });\n    var DetailView = Backbone.View.extend({\n        className:\"detail-view\",\n        events:{\n            \"click #kickJobButton\":\"handleKickButtonClick\",\n            \"click #rebalanceJobButton\":\"handleRebalanceButtonClick\",\n            \"click #enableJobButton\":\"handleEnableButtonClick\",\n            \"click #disableJobButton\":\"handleDisableButtonClick\",\n            \"click #fixDirsJobButton\":\"handleFixDirsButtonClick\",\n            \"click #queryJobButton\":\"handleQueryButtonClick\",\n            \"click #deleteJobButton\":\"handleDeleteButtonClick\",\n            \"click #stopJobButton\":\"handleStopButtonClick\",\n            \"click #killJobButton\":\"handleKillButtonClick\",\n            \"click #checkDirsJobButton\":\"handleCheckDirsJobButton\",\n            \"click #commitJobButton\":\"handleCommitJobButton\",\n            \"click #revertJobButton\":\"handleRevertJobButtonClick\",\n            \"click #saveJobButton\":\"handleSaveJobButtonClick\",\n            \"click #settingsChangePermission\":\"handleSettingsChangePermissionClick\",\n            \"click #validateLink\":\"handleValidateClick\",\n            \"click li.disabled > a\":\"handleDisabledTabClick\",\n            \"click #cloneJobButton\":\"handleCloneClick\",\n            \"click #browseDataButton\":\"handleBrowseClick\"\n        },\n        initialize:function(options){\n            options = options || {};\n            _.bindAll(this,'render','template','handleSaveJobButtonClick','handleCloneClick');\n            this.isClone=(_.has(options,\"isClone\")?options.isClone:false);\n            this.configModel = options.configModel;\n            this.parameterCollection = options.parameterCollection;\n            this.listenTo(app.jobCollection,\"change:qc_canQuery\",this.handleCanQueryChange);\n            this.listenTo(app.jobCollection,\"change:stateText\",this.handleStateChange);\n            this.listenTo(app.jobCollection,\"change:status\",this.handleStatusChange);\n        },\n        detailTemplate: _.template(jobDetailTemplate),\n        render:function(){\n            var html = this.detailTemplate({\n                job:this.model.toJSON(),\n                isClone:this.isClone,\n                cloneId:this.model.cloneId\n            });\n            this.$el.html(html);\n            this.$el.find(\"ul.nav.nav-tabs li.active\").removeClass(\"active\");\n            return this;\n        },\n        handleDisabledTabClick:function(event){\n            event.preventDefault();\n            event.stopImmediatePropagation();\n        },\n        handleCloneClick:function(event){\n            event.preventDefault();\n            if (this.model.attributes.dontCloneMe) {\n                alertify.alert(\"Job with id \"+this.model.id+\" has \\\"do not clone\\\" parameter enabled.\");\n            } else {\n                app.router.navigate(\"#jobs/\"+this.model.id+\"/conf/clone\",{trigger:true});\n            }\n        },\n        handleBrowseClick:function(event){\n            event.preventDefault();\n            this.model.browse();\n        },\n        handleCommitJobButton:function(event){\n            event.preventDefault();\n            var self=this;\n            alertify.prompt(\"Enter commit message:\",\"\",function(evt, str){\n                self.model.commit=str;\n                self.handleSaveJobButtonClick(event);\n            });\n        },\n        handleStatusChange:function(model){\n            var statusBox = this.$el.find(\"#statusBox\");\n            if(_.isEqual(model.id,this.model.id)){\n                this.model.set(\"status\",model.get(\"status\"));\n                statusBox.html(this.model.get(\"status\"));\n            }\n        },\n        handleValidateClick:function(event){\n            event.preventDefault();\n            event.stopImmediatePropagation();\n            var config = this.configModel.get(\"config\");\n            var params = this.parameterCollection.toJSON();\n            var self=this;\n            this.model.validate(config,params).done(function(data){\n                var log,model=self.model;\n                if(data.result==\"preExpansionError\"){\n                    log=alertify.error(data.message, 60);\n                }\n                else if(data.result==\"postExpansionError\"){\n                    log=alertify.error(data.message, 60);\n                    if (!_.isEmpty(model.cloneId)){\n                        app.router.navigate(\"#jobs/\"+model.cloneId+\"/clone/expanded\",{trigger:true});\n                    }\n                    else if(_.isUndefined(model.id)){\n                        app.router.navigate(\"#jobs/create/expanded\",{trigger:true});\n                    }\n                    else{\n                        app.router.navigate(\"#jobs/\"+model.id+\"/expanded\",{trigger:true});\n                    }\n                }\n                else{\n                    log=alertify.success(\"Job is valid.\");\n                }\n                //Spawn.updateSingleCategoryAlerts('validation', log)\n            }).fail(function(xhr){\n                alertify.error(\"Error requesting job validation.\");\n            });\n        },\n        handleStateChange:function(model){\n            var stateBox = this.$el.find(\"#stateTextBox\");\n            if(_.isEqual(model.id,this.model.id)){\n                this.model.set(\"state\",model.get(\"state\"));\n                this.model.set(\"stateText\",model.get(\"stateText\"));\n                this.model.set(\"stateLabel\",model.get(\"stateLabel\"));\n                stateBox.attr(\"class\",\"label \"+this.model.get(\"stateLabel\"));\n                stateBox.html(this.model.get(\"stateText\"));\n            }\n        },\n        handleCanQueryChange:function(model){\n            if(_.isEqual(model.id,this.model.id)){\n                this.model.set(\"qc_canQuery\",model.get(\"qc_canQuery\"));\n                if(this.model.get(\"qc_canQuery\")){\n                    this.$el.find(\"#queryJobButton\").show();\n                }\n                else{\n                    this.$el.find(\"#queryJobButton\").hide();\n                }\n            }\n        },\n        handleKickButtonClick:function(event){\n            event.preventDefault();\n            var self = this;\n            if (this.configModel) {\n                var tempConfig = this.configModel.get(\"config\");\n                var config = this.configModel.get(\"savedConfig\");\n                if (tempConfig !== config) {\n                        alertify.warning(\"Warning: kicking job that may have unsaved changes!\", 12);\n                }\n            }\n            var params = this.parameterCollection.toJSON();\n            var confirmIfInvalid = function(priority){\n                var validatePromise = self.model.validate(config,params);\n                validatePromise.done(function(data){\n                    if (data.result==\"preExpansionError\" || data.result==\"postExpansionError\") {\n                        alertify.confirm(\"Job failed validation, are you sure you want to kick?\", function (e) {\n                            self.model.kick(priority);\n                        });\n                    } else {\n                        self.model.kick(priority);\n                    }\n                }).fail(function(data){\n                    alertify.confirm(\"Something went wrong with checking validation, do you still want to kick?\", function (e) {\n                        self.model.kick(priority);\n                    });\n                });\n            };\n            if(app.isQuiesced){\n                alertify.confirm(\"Cluster is quiesced, do you want to kick job '\"+this.model.get(\"description\")+\"' with extra priority?\", function (e) {\n                    confirmIfInvalid(100);\n                });\n            }else{\n                confirmIfInvalid(2);\n            }\n        },\n        handleRebalanceButtonClick:function(event){\n            event.preventDefault();\n            this.model.rebalance();\n        },\n        handleEnableButtonClick:function(event){\n            event.preventDefault();\n            // shift click triggers unsafe enable!\n            this.model.enable(event.shiftKey);\n        },\n        handleDisableButtonClick:function(event){\n            event.preventDefault();\n            this.model.disable();\n        },\n        handleFixDirsButtonClick:function(event){\n            event.preventDefault();\n            this.model.fixDirs();\n        },\n        handleQueryButtonClick :function(event){\n            event.preventDefault();\n            this.model.query();\n        },\n        handleDeleteButtonClick :function(event){\n            event.preventDefault();\n            event.stopImmediatePropagation();\n            var self=this;\n            alertify.confirm(\"Are you sure you would like to delete job '\"+this.model.get(\"description\")+\"'?\", function (e) {\n                self.model.delete();\n            });\n        },\n        handleStopButtonClick:function(event){\n            event.preventDefault();\n            this.model.stop();\n        },\n        handleKillButtonClick:function(event){\n            event.preventDefault();\n            this.model.kill();\n        },\n        handleCheckDirsJobButton:function(event){\n            event.preventDefault();\n            app.router.trigger(\"showCheckDirs\",this.model.id);\n        },\n        handleRevertJobButtonClick:function(event){\n            event.preventDefault();\n            app.router.trigger(\"route:showJobBackups\",this.model.id);\n        },\n        handleSettingsChangePermissionClick:function(event){\n            var parameters = {};\n            parameters[\"jobs\"] = this.model.id;\n            parameters[\"owner\"] = $('#jobOwner').val();\n            parameters[\"group\"] = $('#jobGroup').val();\n            parameters[\"ownerWritable\"] = $('#ownerWritable').is(':checked');\n            parameters[\"groupWritable\"] = $('#groupWritable').is(':checked');\n            parameters[\"worldWritable\"] = $('#worldWritable').is(':checked');\n            parameters[\"ownerExecutable\"] = $('#ownerExecutable').is(':checked');\n            parameters[\"groupExecutable\"] = $('#groupExecutable').is(':checked');\n            parameters[\"worldExecutable\"] = $('#worldExecutable').is(':checked');\n            app.authQueryParameters(parameters);\n            $.ajax({\n                url: \"/job/permissions\",\n                type: \"POST\",\n                data: parameters,\n                dataType: \"json\"\n            }).done(function(data) {\n               if (data.changed.length > 0) {\n                    alertify.success(\"job permissions have been updated\");\n                }\n                if (data.unchanged.length > 0) {\n                    alertify.message(\"job permissions already had these changes\");\n                }\n                if (data.notFound.length > 0) {\n                    alertify.error(\"job not found\");\n                }\n                if (data.notPermitted.length > 0) {\n                    alertify.error(\"insufficient privileges\");\n                }\n            }).fail(function(e){\n                alertify.error(\"Error changing permissions\" + e.responseText);\n            });\n        },\n        handleSaveJobButtonClick:function(event){\n            this.$el.find(\"#saveJobButton\").addClass(\"disabled\");\n            var self = this;\n            var formData = {};\n            var config = this.configModel.get(\"config\");\n            var params = this.parameterCollection.toJSON();\n            _.each(params, function(param){\n                var name = \"sp_\"+param.name;\n                formData[name]=param.value;\n            });\n            formData.config = config;\n            var validatePromise = this.model.validate(config,params);\n            validatePromise.done(function(data){\n                if(data.result==\"preExpansionError\" || data.result==\"postExpansionError\"){\n                    alertify.warning(\"Warning: saving job that failed validation!<br>\" + data.message, 12);\n                }\n            }).fail(function(data){\n                alertify.error(\"Error requesting job validation.\");\n            });\n            this.model.save(formData).done(function(resp){\n                alertify.success(resp.id + \" saved successfully.\",2)\n                self.configModel.set(\"savedConfig\", config);\n                self.model.trigger(\"save.done\");\n                self.model.commit=\"\";\n                if(self.model.isNew()){\n                    self.model.set(\"id\",resp.id);\n                    self.model.fetch({\n                        success:function(model){\n                            app.jobCollection.add(model);\n                            app.job=undefined;\n                            var location = window.location.hash;\n                            if(self.isClone){\n                                location=location.replace(self.model.cloneId,resp.id).replace(\"/clone\",\"\");\n                            }else{\n                                location=location.replace(\"create\",resp.id);\n                            }\n                            self.$el.find(\"#saveJobButton\").removeClass(\"disabled\");\n                            app.router.navigate(location,{trigger:true});\n                        },\n                        error:function(xhr){\n                            alertify.error(\"Error loading job data for: \"+resp.id);\n                        }\n                    });\n                }\n                else{\n                    self.$el.find(\"#saveJobButton\").removeClass(\"disabled\");\n                }\n\n            }).fail(function(xhr){\n                alertify.error(\"Error saving job: \"+ xhr.responseText);\n                self.model.trigger(\"save.error\");\n                self.$el.find(\"#saveJobButton\").removeClass(\"disabled\");\n            });\n        }\n    });\n    var ConfDetailView = DetailView.extend({\n        template: _.template(jobConfigurationTemplate),\n        events: _.defaults({\n            'click a#hideParamLink':'handleParamChange',\n            'change input':'handleInputChange',\n            'change select#command':'handleCommandInputChange'\n        }, DetailView.prototype.events),\n        initialize:function(options){\n            DetailView.prototype.initialize.apply(this,[options]);\n            _.bindAll(this,'render','template');\n            this.scrollTo=options.scrollTo;\n            this.configModel=options.configModel;\n            this.commandCollection=options.commandCollection;\n            this.listenTo(this.parameterCollection,\"reset\",this.handleParamChange);\n            this.listenTo(this.configModel,\"reset\",this.handleParamChange);\n            this.listenTo(this.commandCollection,\"reset\",this.handleCommandsChange);\n        },\n        render:function(){\n            DetailView.prototype.render.apply(this,[]);\n            var main = this.$el.find(\"div#detailContainer\");\n            main.html(this.template({\n                job:this.model.toJSON(),\n                commands:this.commandCollection.toJSON()\n            }));\n            main.find(\"#command\").val(this.model.get(\"command\"));\n            this.views = {\n                editor: new Editor.AceView({\n                    model:this.configModel,\n                    scrollTo:this.scrollTo,\n                    keyName:\"config\"\n                }).render(),\n                paramBox:new ParameterView({\n                    model:this.model,\n                    collection:this.parameterCollection\n                }).render()\n            };\n            //adjust height\n            main.append(this.views.editor.$el);\n            main.append(this.views.paramBox.$el);\n            this.$el.find(\"ul.nav.nav-tabs li#confTab\").addClass(\"active\");\n            this.handleParamChange();\n            this.resize();\n            return this;\n        },\n        handleCommandsChange:function(){\n            var optionsHtml=\"\";\n            _.each(this.commandCollection.toJSON(),function(command){\n                optionsHtml+=\"<options value='\"+command.name+\"'>\"+command.name+\"</options>\";\n            });\n            var command = this.$el.find(\"#command\");\n            command.html(optionsHtml);\n            command.val(this.model.get(\"command\"));\n        },\n        handleCommandInputChange:function(event){\n            var select = $(event.currentTarget);\n            var value = select.val();\n            this.model.set(\"command\",value);\n        },\n        handleParamChange:function(){\n            this.resize();\n            this.views.paramBox.render();\n            this.views.editor.$el.css({\n                bottom:this.views.paramBox.$el.height()\n            });\n            this.views.editor.views.editor.resize();\n        },\n        handleInputChange:function(event){\n            var input = $(event.currentTarget);\n            var value = input.val();\n            var name = input.attr(\"name\");\n            this.model.set(name,value);\n        },\n        resize:function(event){\n            this.views.editor.$el.css({\n                position:\"absolute\",\n                top:'59px',\n                bottom:this.views.paramBox.$el.height(),\n                right:0,\n                left:0\n            });\n            this.views.paramBox.$el.css({\n                position:\"absolute\",\n                bottom:0,\n                right:0,\n                left:0,\n                \"z-index\":100,\n                \"background-color\":\"white\"\n            });\n        }\n    });\n    var SettingDetailView = DetailView.extend({\n        template: _.template(jobSettingTemplate),\n        events: _.defaults({\n            \"keyup input\":\"handleInputKeyUp\",\n            \"change input[type!='checkbox']\":\"handleInputKeyUp\",\n            \"click input[type='checkbox']\":\"handleCheckboxClick\"\n        }, DetailView.prototype.events),\n        initialize:function(options){\n            DetailView.prototype.initialize.apply(this,[options]);\n        },\n        render:function(){\n            DetailView.prototype.render.apply(this,[]);\n            var html = this.template({\n                job:this.model.toJSON()\n            });\n            this.$el.find(\"div#detailContainer\").html(html);\n            this.$el.find(\"ul.nav.nav-tabs li#settingsTab\").addClass(\"active\");\n            return this;\n        },\n        handleInputKeyUp:function(event){\n            var input = $(event.currentTarget);\n            var name = input.attr(\"name\");\n            var value = input.val();\n            this.model.set(name,value);\n        },\n        handleCheckboxClick:function(event){\n            var input = $(event.currentTarget);\n            this.model.set(input.attr(\"name\"),input.is(\":checked\"));\n        }\n    });\n    var TaskTableView = DetailView.extend({\n        template: _.template(jobTaskTableTemplate),\n        initialize:function(options){\n            DetailView.prototype.initialize.apply(this,[options]);\n            this.taskCollection=options.taskCollection;\n        },\n        render:function(){\n            DetailView.prototype.render.apply(this,[]);\n            this.views={\n                table: new Task.TableView({\n                    id:'jobTaskTable',\n                    collection:this.taskCollection,\n                    hostUrlTemplate: \"#jobs/<%=jobUuid%>/tasks/<%=node%>\",\n                    allJobUrlTemplate:\"#jobs/<%=jobUuid%>/tasks\"\n                })\n            };\n            var detail = this.$el.find(\"div#detailContainer\");\n            detail.append(this.views.table.$el);\n            this.views.table.render();\n            this.$el.find(\"ul.nav.nav-tabs li#tasksTab\").addClass(\"active\");\n            return this;\n        }\n    });\n    var AlertDetailView = DetailView.extend({\n        template: _.template(jobAlertsTemplate),\n        events: _.extend(DetailView.prototype.events,{\n            \"click #addAlertButton\":\"handleAddAlertButtonClick\",\n            \"click #viewAlertsButton\":\"handleViewAlertsButtonClick\",\n            \"keyup input[name='email']\":\"handleEmailKeyUp\",\n            \"change select[name='type']\":\"handleSelectChange\",\n            \"keyup input[name='timeout']\":\"handleTimeoutKeyUp\",\n            \"click button.close\":\"handleCloseButtonClick\"\n        }),\n        initialize:function(options){\n            //this.listenTo(this.model,\"change:alerts\",this.render);\n            this.listenTo(this.model,\"alerts.add\",this.render);\n            this.listenTo(this.model,\"save.start\",this.render);\n            DetailView.prototype.initialize.apply(this,[options]);\n        },\n        render:function(){\n            DetailView.prototype.render.apply(this,[]);\n            var html = this.template({\n                job:this.model.toJSON(),\n                util:util\n            });\n            this.$el.find(\"div#detailContainer\").html(html);\n            this.$el.find(\"ul.nav.nav-tabs li#alertsTab\").addClass(\"active\");\n            return this;\n        },\n        handleAddAlertButtonClick:function(event){\n            app.router.navigate(\"#alerts/create/\" + this.model.id, {trigger: true});\n        },\n        handleViewAlertsButtonClick:function(event){\n        \tapp.router.navigate(\"#alertsFiltered/\" + this.model.id, {trigger: true});\n        },\n        handleEmailKeyUp:function(event){\n            var input = $(event.currentTarget);\n            var index = input.data(\"index\");\n            var alerts = this.model.get(\"alerts\");\n            alerts[index].email=input.val();\n        },\n        handleSelectChange:function(event){\n            var select = $(event.currentTarget);\n            var index = select.data(\"index\");\n            var alerts = this.model.get(\"alerts\");\n            var value = parseInt(select.val());\n            alerts[index].type=value;\n            if(value<=1){\n                alerts[index].timeout=\"\";\n            }\n            this.render();\n        },\n        handleTimeoutKeyUp:function(event){\n            var input = $(event.currentTarget);\n            var index = input.data(\"index\");\n            var alerts = this.model.get(\"alerts\");\n            var value = parseInt(input.val());\n            if(value>0){\n                alerts[index].timeout=value;\n            }\n        },\n        handleCloseButtonClick:function(event){\n            var button = $(event.currentTarget);\n            var index = parseInt(button.data(\"index\"));\n            var alerts = this.model.get(\"alerts\");\n            alerts.splice(index,1);\n            this.model.set(\"alerts\",alerts);\n            this.render();\n        }\n    });\n    var DependenciesDetailView = DetailView.extend({\n        template: _.template(jobDependenciesTemplate),\n        initialize:function(options){\n            DetailView.prototype.initialize.apply(this,[options]);\n            _.bindAll(this,'render','close');\n            this.graphModel=options.graphModel;\n            this.listenTo(this.model,\"change\",this.render);\n            this.listenTo(this.graphModel,\"change\",this.handleGraphModelChange);\n        },\n        render:function(){\n            DetailView.prototype.render.apply(this,[]);\n            this.views={\n                graph: new Graph.TreeDependencyGraphView({\n                    model:this.graphModel\n                })\n            };\n            var detail = this.$el.find(\"div#detailContainer\");\n            this.views.graph.$el.css({\n                \"margin-left\":\"0px\",\n                \"width\":detail.width(),\n                \"height\":detail.height()\n            });\n            detail.append(this.views.graph.$el);\n            this.$el.find(\"ul.nav.nav-tabs li#depTab\").addClass(\"active\");\n            return this;\n        },\n        handleGraphModelChange:function(){\n            this.views.graph.render();\n        },\n        close:function(){\n            this.$el.remove();\n            return this;\n        }\n    });\n    var ExpandedConfDetailView = DetailView.extend({\n        initialize:function(options){\n            DetailView.prototype.initialize.apply(this,[options]);\n            _.bindAll(this,'render','handleConfigChange','handleParamChange');\n            this.configModel=options.configModel;\n            this.expandModel=options.expandModel;\n            this.parameterCollection=options.parameterCollection;\n            this.listenTo(this.configModel,\"change:config\",this.handleConfigChange);\n            this.listenTo(this.expandModel,\"change:expanded\",this.render);\n            this.listenTo(this.parameterCollection,\"change\",this.handleParamChange);\n            this.listenTo(this.parameterCollection,\"reset\",this.handleParamChange);\n        },\n        template: _.template(jobExpandedConfTemplate),\n        render:function(){\n            DetailView.prototype.render.apply(this,[]);\n            var detail = this.$el.find(\"div#detailContainer\");\n            this.views = {\n                editor: new Editor.AceView({\n                    model:this.expandModel,\n                    keyName:\"expanded\",\n                    readOnly:true\n                }).render()\n            };\n            //adjust height\n            this.views.editor.$el.css({\n                position:\"absolute\",\n                top:0,\n                bottom:0,\n                right:0,\n                left:0\n            });\n            detail.append(this.views.editor.$el);\n            this.$el.find(\"ul.nav.nav-tabs li#expTab\").addClass(\"active\");\n            return this;\n        },\n        handleConfigChange:function(){\n            this.expandModel.set(\"config\",this.configModel.get(\"config\"));\n            this.expandModel.fetch();\n        },\n        handleParamChange:function(){\n            var self=this;\n            _.each(self.parameterCollection.toJSON(),function(param){\n                self.expandModel.set(\"sp_\"+param.name,param.value);\n            });\n            self.expandModel.fetch();\n        }\n    });\n    var CheckDirsModel = Backbone.Model.extend({\n        defaults:{\n            \"hostId\": \"\",\n            \"isReplica\": \"\",\n            \"jobKey\": {\n                \"jobUuid\": \"\",\n                \"nodeNumber\": \"\"\n            },\n            \"type\": \"\"\n        }\n    });\n    var CheckDirsCollection = Backbone.Collection.extend({\n        initialize:function(options){\n            //this.jobUuid=options.jobUuid;\n        },\n        sync: function(method, model, options){\n            if(_.isEqual(method,'read')){\n                var self=this;\n                var ajax = $.ajax({\n                    url: \"/job/checkJobDirs\",\n                    data:{id:self.jobUuid}\n                }).done(function(data){\n                    self.set(data);\n                    self.trigger(\"change\");\n                });\n                return ajax;\n            }\n        },\n        model:CheckDirsModel\n    });\n    var CheckDirsModal = Backbone.View.extend({\n        className:\"modal fade\",\n        events:{\n            \"click button.fix\":\"handleFixButtonClick\",\n            \"click button.fix-all\":\"handleFixAllDirsButtonClick\"\n        },\n        initialize:function(options){\n            _.bindAll(this,'handleCollectionChange');\n            this.listenTo(this.collection,\"change\",this.handleCollectionChange);\n        },\n        template: _.template(jobCheckDirsTemplate),\n        render:function(){\n            var html = this.template({\n                dirs:this.collection.toJSON(),\n                job:this.model.toJSON()\n            });\n            this.$el.html(html);\n            return this;\n        },\n        handleFixAllDirsButtonClick:function(event){\n            this.model.fixDirs(-1);\n        },\n        handleFixButtonClick:function(event){\n            var button = $(event.currentTarget);\n            var jobId = button.data(\"job\"), node=parseInt(button.data(\"node\"));\n            this.model.fixDirs(node);\n        },\n        handleCollectionChange:function(){\n            var html = \"\";\n            _.each(this.collection.toJSON(),function(match,index){\n                html+=\"<tr class='row'>\"+\n                        \"<td>\"+\n                            match.jobKey.nodeNumber+\n                        \"</td>\"+\n                        \"<td>\"+\n                            (match.isReplica?\"Replica\":\"Live\")+\n                        \"</td>\"+\n                        \"<td>\"+\n                            util.generateTaskDirStatusText(match.type)+\n                        \"</td>\"+\n                        \"<td>\"+\n                            match.hostId+\n                        \"</td>\"+\n                        \"<td>\"+\n                            ((match.type != \"MATCH\" && match.type != \"REPLICATION_IN_PROGRESS\") ? \"<button class='btn btn-default btn-small fix' data-job='\"+match.jobKey.jobUuid+\"' data-node='\"+match.jobKey.nodeNumber+\"' class='btn btn-default btn-small'>Fix</button>\":\"<button class='btn btn-default btn-small disabled'>Fix</button>\")+\n                        \"</td>\"+\n                    \"</tr>\";\n            });\n            this.$el.find(\"table tbody\").html(html);\n            this.$el.modal(\"show\");\n        }\n    });\n    var HistTableView = DataTable.View.extend({\n        initialize:function(options){\n            var self=this;\n            options = options || {};\n            this.id = options.id || \"jobHistTable\";\n            var columns =[\n                {\n                    \"sTitle\":\"Commit\",\n                    \"sClass\":\"hist-commit\",\n                    \"mData\": \"commit\",\n                    \"mRender\":function(val,type,data){\n                        return \"<a href='#jobs/\"+self.collection.jobUuid+\"/history/\"+val+\"'>\"+val.substring(0, 20)+\"</a>\";\n                    }\n                },\n                {\n                    \"sTitle\":\"Time\",\n                    \"sClass\":\"hist-time\",\n                    \"sType\": \"date\",\n                    \"mData\": \"time\",\n                    \"mRender\":function(val,type,data){\n                        return util.convertToDateTimeText(val);\n                    }\n                },\n                {\n                    \"sTitle\":\"User\",\n                    \"sClass\":\"hist-user\",\n                    \"mData\": \"user\"\n                },\n                {\n                    \"sTitle\":\"Message\",\n                    \"sClass\":\"hist-msg\",\n                    \"mData\": \"message\"\n                },\n                {\n                    \"sTitle\":\"Delta\",\n                    \"sClass\":\"hist-delta\",\n                    \"mData\": \"delta\"\n                },\n                {\n                    \"sTitle\":\"\",\n                    \"sClass\":\"hist-actions\",\n                    \"mData\":\"commit\",\n                    \"bSearchable\":false,\n                    \"bSortable\":false,\n                    \"mRender\":function(val,type,data){\n                        var html=\"<a href='#jobs/\"+self.collection.jobUuid+\"/history/\"+val+\"/diff' class='btn btn-default btn-tiny conf-diff' data-commit='\"+val+\"'>Diff</a>\";\n                        //html+=\"<button class='btn btn-default btn-tiny conf-view' data-commit='\"+val+\"'>View</button>\";\n                        html+=\"<a class='btn btn-default btn-tiny conf-load' data-commit='\"+val+\"'>Load</a>\";\n                        return html;\n                    }\n                }\n            ];\n            DataTable.View.prototype.initialize.apply(this,[{\n                columns:columns,\n                heightBuffer:80,\n                columnFilterIndex:1,\n                id:this.id,\n                emptyMessage:\" \"\n            }]);\n        }\n    });\n    var HistoryDetailView = DetailView.extend({\n        events: _.extend(DetailView.prototype.events,{\n            \"click a.conf-load\":\"handleCommitLoad\"\n        }),\n        template: _.template(jobHistoryTemplate),\n        initialize:function(options){\n            _.bindAll(this,'handleCommitLoad');\n            DetailView.prototype.initialize.apply(this,[options]);\n            this.historyCollection=options.historyCollection;\n        },\n        render:function(dontAppend){\n            DetailView.prototype.render.apply(this,[]);\n            this.views={\n                table: new HistTableView({\n                    id:'jobHistTable',\n                    collection:this.historyCollection\n                })\n            };\n            if(!dontAppend){\n                var detail = this.$el.find(\"div#detailContainer\");\n                detail.append(this.views.table.$el);\n                this.views.table.render();\n            }\n\n            this.$el.find(\"ul.nav.nav-tabs li#historyTab\").addClass(\"active\");\n            return this;\n        },\n        handleCommitLoad:function(event){\n            event.preventDefault();\n            var self=this;\n            var button = $(event.currentTarget);\n            var jobId = this.model.id;\n            var commit = button.data(\"commit\");\n            var commitModel = this.historyCollection.get(commit);\n            commitModel.load().done(function(data){\n                self.configModel.set(\"config\",data);\n                alertify.success(\"Loaded config from \"+commit+\". Save the job to finalize the change.\");\n                app.router.navigate(\"#jobs/\"+jobId+\"/conf\",{trigger:true});\n            }).fail(function(xhr){\n                alertify.error(\"Error loading config for commit: \"+commit);\n            });\n            //this.configModel.set(\"config\",c)\n        }\n    });\n    var HistoryCommitView = HistoryDetailView.extend({\n        initialize:function(options){\n            HistoryDetailView.prototype.initialize.apply(this,[options]);\n            this.commitModel=options.commitModel;\n            this.editorAttribute = (_.isUndefined(options.editorAttribute)?\"historyConfig\":\"diff\");\n        },\n        render:function(){\n            var self=this;\n            HistoryDetailView.prototype.render.apply(this,[true]);\n            this.views.editor = new Editor.AceView({\n                model:this.commitModel,\n                keyName:self.editorAttribute,\n                readOnly:true\n            });\n            this.views.layout = new Layout.HorizontalSplit({\n                topView:self.views.table,\n                bottomView:self.views.editor,\n                topHeight:30,\n                bottomHeight:70\n            }).render();\n            var detail = this.$el.find(\"div#detailContainer\");\n            detail.append(this.views.layout.$el);\n            this.views.editor.$el.height(\"100%\");\n\n            // sad hack to ensure the table's columns expand properly after rendering\n            $(window).trigger('resize');\n            return this;\n        }\n    });\n    var ParameterView = Backbone.View.extend({\n        template: _.template(jobParameterTemplate),\n        events:{\n            \"click a#hideParamLink\":\"handleHideParamClick\",\n            \"change input\":\"handleInputKeyUp\",\n            \"keyup input\":\"handleInputKeyUp\"\n        },\n        initialize:function(){\n        },\n        render:function(){\n            var cookie = Cookies.get(\"hideParam\");\n            var html = this.template({\n                hidden:_.isEqual(cookie,1),\n                parameters:this.collection.toJSON()\n            });\n            this.$el.html(html);\n            return this;\n        },\n        handleHideParamClick:function(event){\n            var val = this.$el.find(\"a#hideParamLink\").data(\"hide\");\n            var hideVal = (parseInt(val)+1)%2;\n            Cookies.set(\"hideParam\", hideVal);\n        },\n        handleInputKeyUp:function(event){\n            var input = $(event.currentTarget);\n            //console.log(input.attr(\"name\")+\" just changed: \"+input.val());\n            var param = this.collection.get(input.attr(\"name\"));\n            if(!_.isUndefined(param)){\n                param.set(\"value\",input.val());\n            }\n        }\n    });\n    var TaskDetailView = DetailView.extend({\n        template: _.template(jobTaskDetailTemplate),\n        initialize:function(options){\n            DetailView.prototype.initialize.apply(this,[options]);\n            this.taskModel = options.taskModel;\n            this.logModel = options.logModel;\n            this.taskCollection = options.taskCollection;\n        },\n        render:function(){\n            DetailView.prototype.render.apply(this,[]);\n            var detail = new Task.DetailView({\n                model:this.taskModel,\n                log:this.logModel\n            });\n            var table = new Task.TinyTableView({\n                id:\"taskTable\"+this.model.id,\n                collection:this.taskCollection,\n                model:this.taskModel,\n                nodeNumber:this.taskModel.get(\"node\"),\n                enableSearch:false,\n                hostUrlTemplate: \"#jobs/<%=jobUuid%>/tasks/<%=node%>\",\n                breadcrumbTemplate: _.template(jobTaskBreadcrumbTemplate)\n            });\n            this.views={\n                table: table,\n                detail: detail,\n                layout: new Layout.VerticalSplit({\n                    rightView:detail,\n                    leftView:table,\n                    rightWidth:80,\n                    leftWidth:20\n                })\n            };\n            var container = this.$el.find(\"div#detailContainer\");\n            container.append(this.views.layout.$el);\n            this.views.layout.render();\n            this.$el.find(\"ul.nav.nav-tabs li#tasksTab\").addClass(\"active\");\n            return this;\n        },\n        remove:function(){\n            this.views.layout.remove();\n            this.$el.html(\"\");\n        }\n    });\n    return {\n        AlertDetailView:AlertDetailView,\n        BackupModalView:BackupModalView,\n        ChangePermissionsModalView:ChangePermissionsModalView,\n        BackupModel: BackupModel,\n        CheckDirsCollection:CheckDirsCollection,\n        CheckDirsModal:CheckDirsModal,\n        ConfigModel:ConfigModel,\n        Collection:Collection,\n        ComfyTableView:ComfyJobTable,\n        CompactTable:CompactTable,\n        ConfDetailView:ConfDetailView,\n        DependenciesDetailView:DependenciesDetailView,\n        DetailView: DetailView,\n        ExpandedConfDetailView:ExpandedConfDetailView,\n        ExpandedConfigModel:ExpandedConfigModel,\n        HistoryModel:HistoryModel,\n        HistoryCollection:HistoryCollection,\n        HistoryDetailView:HistoryDetailView,\n        HistoryCommitView:HistoryCommitView,\n        InfoMetricModel: InfoMetricModel,\n        InfoMetricView: InfoMetricView,\n        JobTable:JobTable,\n        Model: Model,\n        ParameterCollection:ParameterCollection,\n        ParameterModel:ParameterModel,\n        ParameterView:ParameterView,\n        SettingDetailView:SettingDetailView,\n        TaskDividerView:TaskDividerView,\n        TaskDetailDividerView:TaskDetailDividerView,\n        TaskTableView:TaskTableView,\n        TaskDetailView:TaskDetailView\n    };\n}).apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__),\n\t\t\t\t__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./src/js/modules/jobs.js\n");

/***/ }),

/***/ "./src/js/modules/layout.views.js":
/*!****************************************!*\
  !*** ./src/js/modules/layout.views.js ***!
  \****************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;/*\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n!(__WEBPACK_AMD_DEFINE_ARRAY__ = [\n    __webpack_require__(/*! backbone */ \"./node_modules/backbone/backbone.js\")\n], __WEBPACK_AMD_DEFINE_RESULT__ = (function(\n    Backbone\n){\n    var Layout={};\n    Layout.VerticalSplit = Backbone.View.extend({\n        initialize:function(options){\n            options=options || {};\n            this.leftView = options.leftView || new Backbone.View;\n            this.rightView = options.rightView || new Backbone.View;\n            this.leftWidth = options.leftWidth || 50;\n            this.rightWidth = options.rightWidth || 50;\n            this.views={};\n        },\n        render:function(){\n            this.$el.empty();\n            this.views.left=new Backbone.View;\n            this.views.right=new Backbone.View;\n            //top view\n            this.views.left.$el.addClass(\"left-view\");\n            this.views.left.$el.css({\n                \"width\":this.leftWidth+\"%\"\n            });\n            this.views.left.$el.append(this.leftView.$el);\n            this.$el.append(this.views.left.$el);\n            this.leftView.render();\n            //bottom view\n            this.views.right.$el.addClass(\"right-view\");\n            this.views.right.$el.css({\n                \"width\":this.rightWidth+\"%\"\n            });\n            this.views.right.$el.append(this.rightView.$el);\n            this.$el.append(this.views.right.$el);\n            this.rightView.render();\n            return this;\n        },\n        remove:function(){\n            this.leftView.remove();\n            this.rightView.remove();\n            Backbone.View.prototype.remove.apply(this,[]);\n        }\n    });\n    Layout.HorizontalSplit = Backbone.View.extend({\n        initialize:function(options){\n            options=options || {};\n            this.bottomView = options.bottomView || new Backbone.View;\n            this.topView = options.topView || new Backbone.View;\n            this.bottomHeight = options.bottomHeight || \"50%\";\n            this.topHeight = options.topHeight || \"50%\";\n            this.views={};\n        },\n        render:function(){\n            this.$el.empty();\n            this.views.top=new Backbone.View;\n            this.views.bottom=new Backbone.View;\n            //top view\n            this.views.top.$el.addClass(\"top-view\");\n            this.views.top.$el.css({\n                \"height\":this.topHeight+'%'\n            });\n            this.views.top.$el.append(this.topView.$el);\n            this.$el.append(this.views.top.$el);\n            this.topView.render();\n            //bottom view\n            this.views.bottom.$el.addClass(\"bottom-view\");\n            this.views.bottom.$el.css({\n                \"height\":this.bottomHeight+'%'\n            });\n            this.views.bottom.$el.append(this.bottomView.$el);\n            this.$el.append(this.views.bottom.$el);\n            this.bottomView.render();\n            return this;\n        },\n        remove:function(){\n            this.topView.remove();\n            this.bottomView.remove();\n            Backbone.View.prototype.remove.apply(this,[]);\n        }\n    })\n    Layout.HorizontalDividedSplit = Backbone.View.extend({\n        initialize:function(options){\n            options=options || {};\n            this.bottomView = options.bottomView || new Backbone.View;\n            this.topView = options.topView || new Backbone.View;\n            this.dividerView = options.dividerView || new Backbone.View;\n            this.bottomHeight = options.bottomHeight || 49;\n            this.dividerHeight = options.dividerHeight || 2;\n            this.topHeight = options.topHeight || 49;\n            this.views={};\n        },\n        render:function(){\n            this.$el.empty();\n            this.views.top=new Backbone.View;\n            this.views.divider=new Backbone.View;\n            this.views.bottom=new Backbone.View;\n            //top view\n            this.views.top.$el.addClass(\"top-view\");\n            this.views.top.$el.css({\n                \"height\":this.topHeight+\"%\"\n            });\n            this.views.top.$el.append(this.topView.$el);\n            this.$el.append(this.views.top.$el);\n            this.topView.render();\n            //divider view\n            this.views.divider.$el.addClass(\"divider-view\");\n            this.views.divider.$el.css({\n                \"height\":this.dividerHeight+\"%\",\n                \"bottom\":this.bottomHeight+\"%\",\n                \"top\":this.topHeight+\"%\"\n            });\n            this.views.divider.$el.append(this.dividerView.$el);\n            this.$el.append(this.views.divider.$el);\n            this.dividerView.render();\n            //bottom view\n            this.views.bottom.$el.addClass(\"bottom-view\");\n            this.views.bottom.$el.css({\n                \"height\":this.bottomHeight+\"%\"\n            });\n            this.views.bottom.$el.append(this.bottomView.$el);\n            this.$el.append(this.views.bottom.$el);\n            this.bottomView.render();\n            return this;\n        },\n        remove:function(){\n            this.topView.remove();\n            this.dividerView.remove();\n            this.bottomView.remove();\n            Backbone.View.prototype.remove.apply(this,[]);\n        }\n    });;\n    Layout.ClosableView = Backbone.View.extend({\n        initialize:function(options){\n            options = options || {};\n            this.views={\n                main: options.main || new Backbone.View,\n                top: options.top || new Backbone.View\n            };\n        },\n        render:function(){\n            this.views.top.$el.addClass(\"top-view\");\n            this.views.main.$el.addClass(\"main-view\");\n            this.$el.append(this.views.top.$el);\n            this.$el.append(this.views.main.$el);\n            this.views.top.render();\n            this.views.main.render();\n            return this;\n        }\n    });\n    return Layout;\n}).apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__),\n\t\t\t\t__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./src/js/modules/layout.views.js\n");

/***/ }),

/***/ "./src/js/modules/macro.js":
/*!*********************************!*\
  !*** ./src/js/modules/macro.js ***!
  \*********************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;/*\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n!(__WEBPACK_AMD_DEFINE_ARRAY__ = [\n    __webpack_require__(/*! jquery */ \"./node_modules/jquery/dist/jquery.js\"),\n    __webpack_require__(/*! underscore */ \"./node_modules/underscore/underscore.js\"),\n    __webpack_require__(/*! app */ \"./src/js/app.js\"),\n    __webpack_require__(/*! alertify */ \"./src/js/vendor/alertify.js\"),\n    __webpack_require__(/*! modules/datatable */ \"./src/js/modules/datatable.js\"),\n    __webpack_require__(/*! modules/util */ \"./src/js/modules/util.js\"),\n    __webpack_require__(/*! modules/editor */ \"./src/js/modules/editor.js\"),\n    __webpack_require__(/*! text!../../templates/macro.filter.html */ \"./node_modules/text-loader/index.js!./src/templates/macro.filter.html\"),\n    __webpack_require__(/*! text!../../templates/macro.selectable.html */ \"./node_modules/text-loader/index.js!./src/templates/macro.selectable.html\"),\n    __webpack_require__(/*! text!../../templates/macro.detail.html */ \"./node_modules/text-loader/index.js!./src/templates/macro.detail.html\"),\n    __webpack_require__(/*! text!../../templates/macro.configuration.html */ \"./node_modules/text-loader/index.js!./src/templates/macro.configuration.html\"),\n    __webpack_require__(/*! backbone */ \"./node_modules/backbone/backbone.js\")\n], __WEBPACK_AMD_DEFINE_RESULT__ = (function(\n    $,\n    _,\n    app,\n    alertify,\n    DataTable,\n    util,\n    Editor,\n    macroFilterTemplate,\n    macroSelectableTemplate,\n    macroDetailTemplate,\n    macroConfigurationTemplate,\n    Backbone\n){\n    var Model = Backbone.Model.extend({\n        idAttribute:\"name\"\n        ,url:function(){\n            return \"/macro/get?label=\"+this.id;\n        },\n        defaults: {\n            modified:\"\",\n            owner:\"none\",\n            description:\"(no description)\",\n            macro:\"        \\n\"\n        },\n        parse:function(data){\n            data.DT_RowId=data.name;\n            data.DT_RowClass='macro-row';\n            return data;\n        },\n        delete:function(){\n            var self = this;\n            return $.ajax({\n                url: \"/macro/delete\",\n                type: \"POST\",\n                data: {name:self.id},\n                dataType:\"text\"\n            });\n        },\n        save:function(){\n            var self=this;\n            var data = this.toJSON();\n            data.label=data.name;\n            data.owner=app.user.get(\"username\");\n            return $.ajax({\n                url: \"/macro/save\",\n                type: \"POST\",\n                data: data,\n                dataType:\"json\"\n            });\n        }\n    });\n    var Collection = Backbone.Collection.extend({\n        url:\"/macro/list\",\n        parse:function(collection){\n            var array = new Array(collection.length);\n            _.each(collection,function(model,idx){\n                array[idx]= Model.prototype.parse(model);\n            });\n            return array;\n        },\n        model:Model\n    });\n    var TableView = DataTable.View.extend({\n        initialize:function(options){\n            _.bindAll(this,'handleDeleteButtonClick');\n            options = options || {};\n            this.id = options.id || \"macroTable\";\n            this.$el.attr(\"id\",this.id);\n            var self=this;\n            var columns = [\n                {\n                    \"sTitle\":\"\",\n                    \"sClass\":\"macro-cb\",\n                    \"sWidth\":\"3%\",\n                    \"mData\": \"name\",\n                    \"bSearchable\":false,\n                    \"bSortable\":false,\n                    \"mRender\":function(val,type,data){\n                        if(self.selectedIds[val]){\n                            return \"<input checked class='row_selectable' type='checkbox'></input>\";\n                        }\n                        else{\n                            return \"<input class='row_selectable' type='checkbox'></input>\";\n                        }\n                    }\n                },\n                {\n                    \"mData\": \"name\",\n                    \"bVisible\":false,\n                    \"bSearchable\":true\n                },\n                {\n                    \"sTitle\":\"Name\",\n                    \"sClass\":\"macro-name\",\n                    \"mData\": \"name\",\n                    \"sWidth\":\"25%\",\n                    \"bVisible\":true,\n                    \"bSearchable\":false,\n                    \"mRender\":function(val,type,data){\n                        return \"<a href='#macros/\"+encodeURIComponent(val)+\"'>\"+val+\"</a>\";\n                    }\n                },\n                {\n                    \"sTitle\":\"Modified\",\n                    \"sClass\":\"macro-modified\",\n                    \"sType\": \"date\",\n                    \"mData\": \"modified\",\n                    \"sWidth\":\"10%\",\n                    \"mRender\":function(val,type,data){\n                        return util.convertToDateTimeText(val);\n                    }\n                },\n                {\n                    \"sTitle\":\"Owner\",\n                    \"sClass\":\"macro-owner\",\n                    \"mData\": \"owner\",\n                    \"sWidth\":\"10%\"\n                },\n                {\n                    \"sTitle\":\"Description\",\n                    \"sClass\":\"macro-description\",\n                    \"mData\": \"description\",\n                    \"sWidth\":\"53%\"\n                }\n            ];\n            DataTable.View.prototype.initialize.apply(this,[{\n                columns:columns,\n                filterTemplate:macroFilterTemplate,\n                selectableTemplate:macroSelectableTemplate,\n                heightBuffer:80,\n                id:this.id,\n                emptyMessage:\" \",\n                idAttribute:\"name\"\n            }]);\n        },\n        render:function(){\n            DataTable.View.prototype.render.apply(this,[]);\n            this.views.selectable.find(\"#deleteMacroButton\").on(\"click\",this.handleDeleteButtonClick);\n            return this;\n        },\n        handleDeleteButtonClick:function(event){\n            var ids=this.getSelectedIds();\n            _.each(ids,function(id){\n                var model = app.macroCollection.get(id);\n                if(!_.isUndefined(model)){\n                    model.delete().done(function(){\n                        app.macroCollection.remove(model.id);\n                    }).fail(function(xhr){\n                        alertify.error(\"Error deleting '\" + model.id + \"': \" + xhr.responseText);\n                    });\n                }\n            });\n            alertify.message(\"Deleting \" + ids.length + \" macros...\");\n        }\n    });\n    var DetailView = Backbone.View.extend({\n        className: 'detail-view',\n        initialize: function(options){\n            _.bindAll(this, 'render', 'template', 'handleDeleteButtonClick', 'handleSaveButtonClick');\n            this.scrollTo = options.scrollTo;\n\n        },\n        template: _.template(macroDetailTemplate),\n        events: {\n            'click #deleteMacroButton': 'handleDeleteButtonClick',\n            'click #saveMacroButton': 'handleSaveButtonClick',\n            'keyup input': 'handleInputKeyUp'\n        },\n        render: function(){\n            var html = this.template({\n                macro: this.model.toJSON(),\n                util: util\n            });\n            this.$el.html(html);\n            this.views = {\n                editor: new Editor.AceView({\n                    model: this.model,\n                    keyName: 'macro',\n                    scrollTo: this.scrollTo\n                }).render()\n            };\n            //adjust height\n            this.views.editor.$el.css({\n                position: 'absolute',\n                top: '59px',\n                bottom: 0,\n                right: 0,\n                left: 0\n            });\n            this.$el.find('div#detailContainer').append(this.views.editor.$el);\n            return this;\n        },\n        handleDeleteButtonClick:function(event){\n            var self=this;\n            this.model.delete().done(function(data){\n                alertify.success(\"Macro deleted successfully.\");\n                app.router.navigate(\"#macros\",{trigger:true});\n            }).fail(function(xhr){\n                alertify.error(\"Error deleting macro.\");\n            });\n        },\n        handleSaveButtonClick:function(event){\n            var self=this,isNew=this.model.isNew();\n            this.model.save().done(function(data){\n                alertify.success(\"Macro saved successfully.\");\n                app.macroCollection.fetch({\n                    success:function(){\n                        app.router.navigate(\"#macros/\"+data.name,{trigger:true});\n                    }\n                });\n            }).fail(function(xhr){\n                alertify.error(\"Error saving macro: \"+self.model.id);\n            });\n        },\n        handleInputKeyUp:function(event){\n            var input=$(event.currentTarget);\n            var name = input.attr(\"name\");\n            var value = input.val();\n            this.model.set(name,value);\n        }\n    });\n    return {\n        Model:Model,\n        Collection: Collection,\n        TableView: TableView,\n        DetailView: DetailView\n    };\n}).apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__),\n\t\t\t\t__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./src/js/modules/macro.js\n");

/***/ }),

/***/ "./src/js/modules/server.js":
/*!**********************************!*\
  !*** ./src/js/modules/server.js ***!
  \**********************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;/*\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n!(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__(/*! underscore */ \"./node_modules/underscore/underscore.js\"),__webpack_require__(/*! backbone */ \"./node_modules/backbone/backbone.js\")], __WEBPACK_AMD_DEFINE_RESULT__ = (function(_,Backbone){\n    var server= _.extend({\n        connect:function(){\n            var webSocketProtocol = window.location.protocol === 'https:' ? 'wss:' : 'ws:';\n\n            _.bindAll(this,'sendText','sendJSON','handleOpen','handleClose','handleMessage','stopHeartbeat','startHeartbeat');\n            this.ws=new WebSocket(webSocketProtocol + '//' +window.location.host+ '/ws?user=' +this.user);\n            this.ws.onopen=this.handleOpen;\n            this.ws.onclose=this.handleClose;\n            this.ws.onmessage=this.handleMessage;\n            this.heartbeat=undefined;\n            return this;\n        },\n        user:\"anonymous\",\n        sendText:function(text){\n            this.ws.send(text);\n            return this;\n        },\n        sendJSON: function(data){\n            var stringified = JSON.stringify(data);\n            this.ws.send(stringified);\n            return this;\n        },\n        handleOpen:function(event){\n            console.log(\"Connection with WebSocketManager has been established.\");\n            this.startHeartbeat();\n        },\n        handleClose:function(event){\n            console.log(\"Closing connection... code: \"+event.code+\", reason: \"+event.reason+\", wasClean: \"+event.wasClean);\n            this.stopHeartbeat();\n        },\n        handleMessage:function(event){\n            if(!_.isEqual(event.data,\"pong\")){\n                var data = JSON.parse(event.data);\n                var message = JSON.parse(data.message);\n                if(_.isEqual(data.topic,\"event.batch.update\")){\n                    var count = {},self=this;\n                    _.each(message,function(ev){\n                        self.trigger(ev.topic,ev.message);\n                    });\n                }\n                else{\n                    this.trigger(data.topic,message);\n                }\n            }\n        },\n        stopHeartbeat:function(){\n            if(!_.isUndefined(this.heartbeat)){\n                clearInterval(this.heartbeat);\n                this.heartbeat=undefined;\n            }\n        },\n        startHeartbeat:function(){\n            if(_.isUndefined(this.heartbeat)){\n                var self=this;\n                this.heartbeat = setInterval(function(){\n                    self.sendText(\"ping\");\n                },10000);\n            }\n        }\n    }, Backbone.Events);\n    return server;\n}).apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__),\n\t\t\t\t__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9zcmMvanMvbW9kdWxlcy9zZXJ2ZXIuanMuanMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9zcmMvanMvbW9kdWxlcy9zZXJ2ZXIuanM/M2ViMCJdLCJzb3VyY2VzQ29udGVudCI6WyIvKlxuICogTGljZW5zZWQgdW5kZXIgdGhlIEFwYWNoZSBMaWNlbnNlLCBWZXJzaW9uIDIuMCAodGhlIFwiTGljZW5zZVwiKTtcbiAqIHlvdSBtYXkgbm90IHVzZSB0aGlzIGZpbGUgZXhjZXB0IGluIGNvbXBsaWFuY2Ugd2l0aCB0aGUgTGljZW5zZS5cbiAqIFlvdSBtYXkgb2J0YWluIGEgY29weSBvZiB0aGUgTGljZW5zZSBhdFxuICpcbiAqIGh0dHA6Ly93d3cuYXBhY2hlLm9yZy9saWNlbnNlcy9MSUNFTlNFLTIuMFxuICpcbiAqIFVubGVzcyByZXF1aXJlZCBieSBhcHBsaWNhYmxlIGxhdyBvciBhZ3JlZWQgdG8gaW4gd3JpdGluZywgc29mdHdhcmVcbiAqIGRpc3RyaWJ1dGVkIHVuZGVyIHRoZSBMaWNlbnNlIGlzIGRpc3RyaWJ1dGVkIG9uIGFuIFwiQVMgSVNcIiBCQVNJUyxcbiAqIFdJVEhPVVQgV0FSUkFOVElFUyBPUiBDT05ESVRJT05TIE9GIEFOWSBLSU5ELCBlaXRoZXIgZXhwcmVzcyBvciBpbXBsaWVkLlxuICogU2VlIHRoZSBMaWNlbnNlIGZvciB0aGUgc3BlY2lmaWMgbGFuZ3VhZ2UgZ292ZXJuaW5nIHBlcm1pc3Npb25zIGFuZFxuICogbGltaXRhdGlvbnMgdW5kZXIgdGhlIExpY2Vuc2UuXG4gKi9cbmRlZmluZShbXCJ1bmRlcnNjb3JlXCIsXCJiYWNrYm9uZVwiXSxmdW5jdGlvbihfLEJhY2tib25lKXtcbiAgICB2YXIgc2VydmVyPSBfLmV4dGVuZCh7XG4gICAgICAgIGNvbm5lY3Q6ZnVuY3Rpb24oKXtcbiAgICAgICAgICAgIHZhciB3ZWJTb2NrZXRQcm90b2NvbCA9IHdpbmRvdy5sb2NhdGlvbi5wcm90b2NvbCA9PT0gJ2h0dHBzOicgPyAnd3NzOicgOiAnd3M6JztcblxuICAgICAgICAgICAgXy5iaW5kQWxsKHRoaXMsJ3NlbmRUZXh0Jywnc2VuZEpTT04nLCdoYW5kbGVPcGVuJywnaGFuZGxlQ2xvc2UnLCdoYW5kbGVNZXNzYWdlJywnc3RvcEhlYXJ0YmVhdCcsJ3N0YXJ0SGVhcnRiZWF0Jyk7XG4gICAgICAgICAgICB0aGlzLndzPW5ldyBXZWJTb2NrZXQod2ViU29ja2V0UHJvdG9jb2wgKyAnLy8nICt3aW5kb3cubG9jYXRpb24uaG9zdCsgJy93cz91c2VyPScgK3RoaXMudXNlcik7XG4gICAgICAgICAgICB0aGlzLndzLm9ub3Blbj10aGlzLmhhbmRsZU9wZW47XG4gICAgICAgICAgICB0aGlzLndzLm9uY2xvc2U9dGhpcy5oYW5kbGVDbG9zZTtcbiAgICAgICAgICAgIHRoaXMud3Mub25tZXNzYWdlPXRoaXMuaGFuZGxlTWVzc2FnZTtcbiAgICAgICAgICAgIHRoaXMuaGVhcnRiZWF0PXVuZGVmaW5lZDtcbiAgICAgICAgICAgIHJldHVybiB0aGlzO1xuICAgICAgICB9LFxuICAgICAgICB1c2VyOlwiYW5vbnltb3VzXCIsXG4gICAgICAgIHNlbmRUZXh0OmZ1bmN0aW9uKHRleHQpe1xuICAgICAgICAgICAgdGhpcy53cy5zZW5kKHRleHQpO1xuICAgICAgICAgICAgcmV0dXJuIHRoaXM7XG4gICAgICAgIH0sXG4gICAgICAgIHNlbmRKU09OOiBmdW5jdGlvbihkYXRhKXtcbiAgICAgICAgICAgIHZhciBzdHJpbmdpZmllZCA9IEpTT04uc3RyaW5naWZ5KGRhdGEpO1xuICAgICAgICAgICAgdGhpcy53cy5zZW5kKHN0cmluZ2lmaWVkKTtcbiAgICAgICAgICAgIHJldHVybiB0aGlzO1xuICAgICAgICB9LFxuICAgICAgICBoYW5kbGVPcGVuOmZ1bmN0aW9uKGV2ZW50KXtcbiAgICAgICAgICAgIGNvbnNvbGUubG9nKFwiQ29ubmVjdGlvbiB3aXRoIFdlYlNvY2tldE1hbmFnZXIgaGFzIGJlZW4gZXN0YWJsaXNoZWQuXCIpO1xuICAgICAgICAgICAgdGhpcy5zdGFydEhlYXJ0YmVhdCgpO1xuICAgICAgICB9LFxuICAgICAgICBoYW5kbGVDbG9zZTpmdW5jdGlvbihldmVudCl7XG4gICAgICAgICAgICBjb25zb2xlLmxvZyhcIkNsb3NpbmcgY29ubmVjdGlvbi4uLiBjb2RlOiBcIitldmVudC5jb2RlK1wiLCByZWFzb246IFwiK2V2ZW50LnJlYXNvbitcIiwgd2FzQ2xlYW46IFwiK2V2ZW50Lndhc0NsZWFuKTtcbiAgICAgICAgICAgIHRoaXMuc3RvcEhlYXJ0YmVhdCgpO1xuICAgICAgICB9LFxuICAgICAgICBoYW5kbGVNZXNzYWdlOmZ1bmN0aW9uKGV2ZW50KXtcbiAgICAgICAgICAgIGlmKCFfLmlzRXF1YWwoZXZlbnQuZGF0YSxcInBvbmdcIikpe1xuICAgICAgICAgICAgICAgIHZhciBkYXRhID0gSlNPTi5wYXJzZShldmVudC5kYXRhKTtcbiAgICAgICAgICAgICAgICB2YXIgbWVzc2FnZSA9IEpTT04ucGFyc2UoZGF0YS5tZXNzYWdlKTtcbiAgICAgICAgICAgICAgICBpZihfLmlzRXF1YWwoZGF0YS50b3BpYyxcImV2ZW50LmJhdGNoLnVwZGF0ZVwiKSl7XG4gICAgICAgICAgICAgICAgICAgIHZhciBjb3VudCA9IHt9LHNlbGY9dGhpcztcbiAgICAgICAgICAgICAgICAgICAgXy5lYWNoKG1lc3NhZ2UsZnVuY3Rpb24oZXYpe1xuICAgICAgICAgICAgICAgICAgICAgICAgc2VsZi50cmlnZ2VyKGV2LnRvcGljLGV2Lm1lc3NhZ2UpO1xuICAgICAgICAgICAgICAgICAgICB9KTtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgZWxzZXtcbiAgICAgICAgICAgICAgICAgICAgdGhpcy50cmlnZ2VyKGRhdGEudG9waWMsbWVzc2FnZSk7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgfVxuICAgICAgICB9LFxuICAgICAgICBzdG9wSGVhcnRiZWF0OmZ1bmN0aW9uKCl7XG4gICAgICAgICAgICBpZighXy5pc1VuZGVmaW5lZCh0aGlzLmhlYXJ0YmVhdCkpe1xuICAgICAgICAgICAgICAgIGNsZWFySW50ZXJ2YWwodGhpcy5oZWFydGJlYXQpO1xuICAgICAgICAgICAgICAgIHRoaXMuaGVhcnRiZWF0PXVuZGVmaW5lZDtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfSxcbiAgICAgICAgc3RhcnRIZWFydGJlYXQ6ZnVuY3Rpb24oKXtcbiAgICAgICAgICAgIGlmKF8uaXNVbmRlZmluZWQodGhpcy5oZWFydGJlYXQpKXtcbiAgICAgICAgICAgICAgICB2YXIgc2VsZj10aGlzO1xuICAgICAgICAgICAgICAgIHRoaXMuaGVhcnRiZWF0ID0gc2V0SW50ZXJ2YWwoZnVuY3Rpb24oKXtcbiAgICAgICAgICAgICAgICAgICAgc2VsZi5zZW5kVGV4dChcInBpbmdcIik7XG4gICAgICAgICAgICAgICAgfSwxMDAwMCk7XG4gICAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICB9LCBCYWNrYm9uZS5FdmVudHMpO1xuICAgIHJldHVybiBzZXJ2ZXI7XG59KTtcbiJdLCJtYXBwaW5ncyI6IkFBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFBQTsiLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./src/js/modules/server.js\n");

/***/ }),

/***/ "./src/js/modules/settings.js":
/*!************************************!*\
  !*** ./src/js/modules/settings.js ***!
  \************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;/*\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n!(__WEBPACK_AMD_DEFINE_ARRAY__ = [\n    __webpack_require__(/*! underscore */ \"./node_modules/underscore/underscore.js\"),\n    __webpack_require__(/*! jquery */ \"./node_modules/jquery/dist/jquery.js\"),\n    __webpack_require__(/*! alertify */ \"./src/js/vendor/alertify.js\"),\n    __webpack_require__(/*! text!../../templates/settings.rebalance.html */ \"./node_modules/text-loader/index.js!./src/templates/settings.rebalance.html\"),\n    __webpack_require__(/*! backbone */ \"./node_modules/backbone/backbone.js\")\n], __WEBPACK_AMD_DEFINE_RESULT__ = (function(\n    _,\n    $,\n    alertify,\n    settingsRebalanceTemplate,\n    Backbone\n){\n    var RebalanceModel = Backbone.Model.extend({\n        url:\"/system/balance.params.get\",\n        defaults:{\n            autoBalanceLevel:\"\",\n            bytesMovedFullRebalance:\"\",\n            hostAutobalanceIntervalMillis:\"\",\n            jobAutobalanceIntervalMillis:\"\",\n            tasksMovedFullRebalance:\"\"\n        },\n        save:function(){\n            var self=this;\n            return $.ajax({\n                url: \"/system/balance.params.set\",\n                type: \"GET\",\n                data: {\n                    params:JSON.stringify(self.toJSON())\n                },\n                dataType:\"text\"\n            });\n        }\n    });\n    var RebalanceView = Backbone.View.extend({\n        template: _.template(settingsRebalanceTemplate),\n        events:{\n            \"click #saveButton\":\"handleSaveButton\",\n            \"click #resetButton\":\"handleResetButton\"\n        },\n        initialize:function(){\n            this.listenTo(this.model,\"change\",this.render);\n        },\n        render:function(){\n            var html = this.template(this.model.toJSON());\n            this.$el.html(html);\n            return html;\n        },\n        handleResetButton:function(event){\n            var self=this;\n            this.model.fetch({\n                success:function(){\n                    self.render();\n                }\n            });\n        },\n        handleSaveButton:function(event){\n            var data = this.getFormValues();\n            this.model.set(data);\n            this.model.save().done(function(data){\n                alertify.success(\"Rebalance params saved successfully.\");\n            }).fail(function(xhr){\n                alertify.error(xhr.responseText);\n            });\n        },\n        getFormValues:function(){\n            var inputs = this.$el.find(\"input\"), self=this;\n            var data={};\n            _.each(inputs,function(input){\n                var $input = $(input);\n                var name = $input.attr(\"name\");\n                var value = $input.val();\n                data[name]=value;\n            });\n            return data;\n        }\n    });\n    return {\n        RebalanceModel:RebalanceModel,\n        RebalanceView:RebalanceView\n    };\n}).apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__),\n\t\t\t\t__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9zcmMvanMvbW9kdWxlcy9zZXR0aW5ncy5qcy5qcyIsInNvdXJjZXMiOlsid2VicGFjazovLy8uL3NyYy9qcy9tb2R1bGVzL3NldHRpbmdzLmpzPzhmNGQiXSwic291cmNlc0NvbnRlbnQiOlsiLypcbiAqIExpY2Vuc2VkIHVuZGVyIHRoZSBBcGFjaGUgTGljZW5zZSwgVmVyc2lvbiAyLjAgKHRoZSBcIkxpY2Vuc2VcIik7XG4gKiB5b3UgbWF5IG5vdCB1c2UgdGhpcyBmaWxlIGV4Y2VwdCBpbiBjb21wbGlhbmNlIHdpdGggdGhlIExpY2Vuc2UuXG4gKiBZb3UgbWF5IG9idGFpbiBhIGNvcHkgb2YgdGhlIExpY2Vuc2UgYXRcbiAqXG4gKiBodHRwOi8vd3d3LmFwYWNoZS5vcmcvbGljZW5zZXMvTElDRU5TRS0yLjBcbiAqXG4gKiBVbmxlc3MgcmVxdWlyZWQgYnkgYXBwbGljYWJsZSBsYXcgb3IgYWdyZWVkIHRvIGluIHdyaXRpbmcsIHNvZnR3YXJlXG4gKiBkaXN0cmlidXRlZCB1bmRlciB0aGUgTGljZW5zZSBpcyBkaXN0cmlidXRlZCBvbiBhbiBcIkFTIElTXCIgQkFTSVMsXG4gKiBXSVRIT1VUIFdBUlJBTlRJRVMgT1IgQ09ORElUSU9OUyBPRiBBTlkgS0lORCwgZWl0aGVyIGV4cHJlc3Mgb3IgaW1wbGllZC5cbiAqIFNlZSB0aGUgTGljZW5zZSBmb3IgdGhlIHNwZWNpZmljIGxhbmd1YWdlIGdvdmVybmluZyBwZXJtaXNzaW9ucyBhbmRcbiAqIGxpbWl0YXRpb25zIHVuZGVyIHRoZSBMaWNlbnNlLlxuICovXG5kZWZpbmUoW1xuICAgIFwidW5kZXJzY29yZVwiLFxuICAgIFwianF1ZXJ5XCIsXG4gICAgXCJhbGVydGlmeVwiLFxuICAgIFwidGV4dCEuLi8uLi90ZW1wbGF0ZXMvc2V0dGluZ3MucmViYWxhbmNlLmh0bWxcIixcbiAgICBcImJhY2tib25lXCJcbl0sXG5mdW5jdGlvbihcbiAgICBfLFxuICAgICQsXG4gICAgYWxlcnRpZnksXG4gICAgc2V0dGluZ3NSZWJhbGFuY2VUZW1wbGF0ZSxcbiAgICBCYWNrYm9uZVxuKXtcbiAgICB2YXIgUmViYWxhbmNlTW9kZWwgPSBCYWNrYm9uZS5Nb2RlbC5leHRlbmQoe1xuICAgICAgICB1cmw6XCIvc3lzdGVtL2JhbGFuY2UucGFyYW1zLmdldFwiLFxuICAgICAgICBkZWZhdWx0czp7XG4gICAgICAgICAgICBhdXRvQmFsYW5jZUxldmVsOlwiXCIsXG4gICAgICAgICAgICBieXRlc01vdmVkRnVsbFJlYmFsYW5jZTpcIlwiLFxuICAgICAgICAgICAgaG9zdEF1dG9iYWxhbmNlSW50ZXJ2YWxNaWxsaXM6XCJcIixcbiAgICAgICAgICAgIGpvYkF1dG9iYWxhbmNlSW50ZXJ2YWxNaWxsaXM6XCJcIixcbiAgICAgICAgICAgIHRhc2tzTW92ZWRGdWxsUmViYWxhbmNlOlwiXCJcbiAgICAgICAgfSxcbiAgICAgICAgc2F2ZTpmdW5jdGlvbigpe1xuICAgICAgICAgICAgdmFyIHNlbGY9dGhpcztcbiAgICAgICAgICAgIHJldHVybiAkLmFqYXgoe1xuICAgICAgICAgICAgICAgIHVybDogXCIvc3lzdGVtL2JhbGFuY2UucGFyYW1zLnNldFwiLFxuICAgICAgICAgICAgICAgIHR5cGU6IFwiR0VUXCIsXG4gICAgICAgICAgICAgICAgZGF0YToge1xuICAgICAgICAgICAgICAgICAgICBwYXJhbXM6SlNPTi5zdHJpbmdpZnkoc2VsZi50b0pTT04oKSlcbiAgICAgICAgICAgICAgICB9LFxuICAgICAgICAgICAgICAgIGRhdGFUeXBlOlwidGV4dFwiXG4gICAgICAgICAgICB9KTtcbiAgICAgICAgfVxuICAgIH0pO1xuICAgIHZhciBSZWJhbGFuY2VWaWV3ID0gQmFja2JvbmUuVmlldy5leHRlbmQoe1xuICAgICAgICB0ZW1wbGF0ZTogXy50ZW1wbGF0ZShzZXR0aW5nc1JlYmFsYW5jZVRlbXBsYXRlKSxcbiAgICAgICAgZXZlbnRzOntcbiAgICAgICAgICAgIFwiY2xpY2sgI3NhdmVCdXR0b25cIjpcImhhbmRsZVNhdmVCdXR0b25cIixcbiAgICAgICAgICAgIFwiY2xpY2sgI3Jlc2V0QnV0dG9uXCI6XCJoYW5kbGVSZXNldEJ1dHRvblwiXG4gICAgICAgIH0sXG4gICAgICAgIGluaXRpYWxpemU6ZnVuY3Rpb24oKXtcbiAgICAgICAgICAgIHRoaXMubGlzdGVuVG8odGhpcy5tb2RlbCxcImNoYW5nZVwiLHRoaXMucmVuZGVyKTtcbiAgICAgICAgfSxcbiAgICAgICAgcmVuZGVyOmZ1bmN0aW9uKCl7XG4gICAgICAgICAgICB2YXIgaHRtbCA9IHRoaXMudGVtcGxhdGUodGhpcy5tb2RlbC50b0pTT04oKSk7XG4gICAgICAgICAgICB0aGlzLiRlbC5odG1sKGh0bWwpO1xuICAgICAgICAgICAgcmV0dXJuIGh0bWw7XG4gICAgICAgIH0sXG4gICAgICAgIGhhbmRsZVJlc2V0QnV0dG9uOmZ1bmN0aW9uKGV2ZW50KXtcbiAgICAgICAgICAgIHZhciBzZWxmPXRoaXM7XG4gICAgICAgICAgICB0aGlzLm1vZGVsLmZldGNoKHtcbiAgICAgICAgICAgICAgICBzdWNjZXNzOmZ1bmN0aW9uKCl7XG4gICAgICAgICAgICAgICAgICAgIHNlbGYucmVuZGVyKCk7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgfSk7XG4gICAgICAgIH0sXG4gICAgICAgIGhhbmRsZVNhdmVCdXR0b246ZnVuY3Rpb24oZXZlbnQpe1xuICAgICAgICAgICAgdmFyIGRhdGEgPSB0aGlzLmdldEZvcm1WYWx1ZXMoKTtcbiAgICAgICAgICAgIHRoaXMubW9kZWwuc2V0KGRhdGEpO1xuICAgICAgICAgICAgdGhpcy5tb2RlbC5zYXZlKCkuZG9uZShmdW5jdGlvbihkYXRhKXtcbiAgICAgICAgICAgICAgICBhbGVydGlmeS5zdWNjZXNzKFwiUmViYWxhbmNlIHBhcmFtcyBzYXZlZCBzdWNjZXNzZnVsbHkuXCIpO1xuICAgICAgICAgICAgfSkuZmFpbChmdW5jdGlvbih4aHIpe1xuICAgICAgICAgICAgICAgIGFsZXJ0aWZ5LmVycm9yKHhoci5yZXNwb25zZVRleHQpO1xuICAgICAgICAgICAgfSk7XG4gICAgICAgIH0sXG4gICAgICAgIGdldEZvcm1WYWx1ZXM6ZnVuY3Rpb24oKXtcbiAgICAgICAgICAgIHZhciBpbnB1dHMgPSB0aGlzLiRlbC5maW5kKFwiaW5wdXRcIiksIHNlbGY9dGhpcztcbiAgICAgICAgICAgIHZhciBkYXRhPXt9O1xuICAgICAgICAgICAgXy5lYWNoKGlucHV0cyxmdW5jdGlvbihpbnB1dCl7XG4gICAgICAgICAgICAgICAgdmFyICRpbnB1dCA9ICQoaW5wdXQpO1xuICAgICAgICAgICAgICAgIHZhciBuYW1lID0gJGlucHV0LmF0dHIoXCJuYW1lXCIpO1xuICAgICAgICAgICAgICAgIHZhciB2YWx1ZSA9ICRpbnB1dC52YWwoKTtcbiAgICAgICAgICAgICAgICBkYXRhW25hbWVdPXZhbHVlO1xuICAgICAgICAgICAgfSk7XG4gICAgICAgICAgICByZXR1cm4gZGF0YTtcbiAgICAgICAgfVxuICAgIH0pO1xuICAgIHJldHVybiB7XG4gICAgICAgIFJlYmFsYW5jZU1vZGVsOlJlYmFsYW5jZU1vZGVsLFxuICAgICAgICBSZWJhbGFuY2VWaWV3OlJlYmFsYW5jZVZpZXdcbiAgICB9O1xufSk7Il0sIm1hcHBpbmdzIjoiQUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLG9DQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EiLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./src/js/modules/settings.js\n");

/***/ }),

/***/ "./src/js/modules/task.js":
/*!********************************!*\
  !*** ./src/js/modules/task.js ***!
  \********************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;/*\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n!(__WEBPACK_AMD_DEFINE_ARRAY__ = [\n    __webpack_require__(/*! jquery */ \"./node_modules/jquery/dist/jquery.js\"),\n    __webpack_require__(/*! underscore */ \"./node_modules/underscore/underscore.js\"),\n    __webpack_require__(/*! app */ \"./src/js/app.js\"),\n    __webpack_require__(/*! alertify */ \"./src/js/vendor/alertify.js\"),\n    __webpack_require__(/*! jscookie */ \"./node_modules/js-cookie/src/js.cookie.js\"),\n    __webpack_require__(/*! modules/datatable */ \"./src/js/modules/datatable.js\"),\n    __webpack_require__(/*! modules/util */ \"./src/js/modules/util.js\"),\n    __webpack_require__(/*! text!../../templates/task.filter.html */ \"./node_modules/text-loader/index.js!./src/templates/task.filter.html\"),\n    __webpack_require__(/*! text!../../templates/task.selectable.html */ \"./node_modules/text-loader/index.js!./src/templates/task.selectable.html\"),\n    __webpack_require__(/*! text!../../templates/task.breadcrumbs.html */ \"./node_modules/text-loader/index.js!./src/templates/task.breadcrumbs.html\"),\n    __webpack_require__(/*! text!../../templates/task.detail.html */ \"./node_modules/text-loader/index.js!./src/templates/task.detail.html\")\n], __WEBPACK_AMD_DEFINE_RESULT__ = (function(\n    $,\n    _,\n    app,\n    alertify,\n    Cookies,\n    DataTable,\n    util,\n    taskFilterTemplate,\n    taskSelectableTemplate,\n    taskBreadcrumbsTemplate,\n    taskDetailTemplate\n){\n    var States=[\n        \"IDLE\",\n        \"BUSY\",\n        \"ERROR\",\n        \"ALLOCATED\",\n        \"BACKUP\",\n        \"REPLICATE\",\n        \"UNKNOWN\",\n        \"REBALANCE\",\n        \"REVERT\",\n        \"QUEUED, WAITING ON UNAVAIL HOST\",\n        \"SWAPPING\",\n        \"QUEUED\",\n        \"MIGRATING\",\n        \"FULL REPLICATE\",\n        \"QUEUED, WAITING ON TASK SLOT\"\n    ];\n    var StateLabels=[\n        \"label-default\",//idle\n        \"label-success\",//busy\n        \"label-danger\",//error\n        \"label-info\",//allocated\n        \"label-success\",//backup\n        \"label-success\",//replicate\n        \"label-inverse\",//unknown\n        \"label-info\",//rebalance\n        \"label-success\",//revert\n        \"label-info\",//disk full\n        \"label-info\",//swapping\n        \"label-info\",//queued\n        \"label-success\",//migrating\n        \"label-success\",//full replicate\n        \"label-info\",//queued-no-slot\n    ];\n    var errorCodes={\n\n    };\n    var Model = Backbone.Model.extend({\n        idAttribute:\"node\",\n        initialize:function(options){\n            _.bindAll(this,'handleHostRemove');\n            this.listenTo(app.hostCollection,\"remove\",this.handleHostRemove);\n            this.listenTo(app.hostCollection,\"add\",this.handleHostAdd);\n        },\n        url:function(){\n            return \"/task/get?job=\"+this.get(\"jobUuid\")+\"&task=\"+this.id;\n        },\n        parse:function(data){\n            data.DT_RowId=\"\"+data.node;\n            data.DT_RowClass='task-row';\n            data.node=data.node;\n            data.state = (_.isNumber(data.state)?data.state:6);\n            data.stateText = States[data.state];\n            data.stateLabel = StateLabels[data.state];\n            data.replicas = (_.isArray(data.replicas)?data.replicas.length:0);\n            data.hostUuid = data.hostUuid || \"\";\n            if(!_.isUndefined(app.hostCollection.get(data.hostUuid))){\n                var host = app.hostCollection.get(data.hostUuid);\n                data.host = host.get(\"host\");\n                data.hostPort = host.get(\"port\");\n            }\n            else{\n                data.host=\"n/a\";\n            }\n            return data;\n        },\n        defaults:{\n            node:\"\",\n            stateText:States[6],\n            state:6,\n            host:\"\",\n            hostUuid:\"\",\n            errorCode:\"\",\n            replicas:\"\",\n            input:\"\",\n            skipped:\"\",\n            totalEmitted:\"\",\n            meanRate:\"\",\n            fileCount:\"\",\n            fileBytes:\"\"\n\n        },\n        handleHostRemove:function(host){\n            if(_.isEqual(host.id,this.get(\"hostUuid\"))){\n                this.set(\"host\",\"n/a\");\n            }\n        },\n        handleHostAdd:function(host){\n            if(_.isEqual(host.id,this.get(\"hostUuid\"))){\n                var host = app.hostCollection.get(host.id);\n                this.set(\"host\",host.get(\"host\"));\n            }\n        },\n        stop:function(notify){\n            notify = notify || false;\n            var self = this;\n            $.ajax({\n                url: \"/task/stop\",\n                data: app.authQueryParameters({\n                    job:this.get(\"jobUuid\"),\n                    task:this.get(\"node\")\n                }),\n                type: \"GET\",\n                dataType: \"text\"\n            }).done(function(data){\n                if(notify){\n                    alertify.message(\"Task \"+self.id+\" stopped.\");\n                }\n            }).fail(function(e){\n                alertify.error(\"Error stopped task: \"+self.id+\" <br/>\"+e.responseText);\n            });\n        },\n        kick:function(notify, priority){\n            priority = priority || 2;\n            notify = notify || false;\n            var self = this;\n            $.ajax({\n                url: \"/task/start\",\n                data: app.authQueryParameters({\n                    job:this.get(\"jobUuid\"),\n                    task:this.get(\"node\"),\n                    priority: priority\n                }),\n                type: \"GET\",\n                dataType: \"text\"\n            }).done(function(data){\n                if(notify){\n                    alertify.message(\"Task \"+self.id+\" kicked.\");\n                }\n            }).fail(function(e){\n                alertify.error(\"Error kicking task: \"+self.id+\" <br/>\"+e.responseText);\n            });\n        },\n        kill:function(notify){\n            notify = notify || false;\n            var self = this;\n            $.ajax({\n                url: \"/task/kill\",\n                data: app.authQueryParameters({\n                    job:this.get(\"jobUuid\"),\n                    task:this.get(\"node\")\n                }),\n                type: \"GET\",\n                dataType: \"text\"\n            }).done(function(data){\n                if(notify){\n                    alertify.message(\"Task \"+self.id+\" killed.\");\n                }\n            }).fail(function(e){\n                alertify.error(\"Error killing task: \"+self.id+\" <br/>\"+e.responseText);\n            });\n        }\n    });\n    var Collection = Backbone.Collection.extend({\n        initialize:function(options){\n            this.listenTo(app.server,'job.update',this.handleJobUpdate);\n        },\n        url:function(){\n            return \"/job/get?id=\"+this.jobUuid+\"&field=nodes\";\n        },\n        parse:function(collection){\n            var array = new Array(collection.length);\n            _.each(collection,function(model,idx){\n                array[idx]= Model.prototype.parse(model);\n            });\n            return array;\n        },\n        model:Model,\n        handleJobUpdate:function(job){\n            if(!_.isUndefined(this.jobUuid) && _.isEqual(job.id,this.jobUuid)){\n                this.fetch();\n            }\n        }\n    });\n    var TableView = DataTable.View.extend({\n        initialize:function(options){\n            _.bindAll(this,\n                'handleKickButtonClick',\n                'handleStopButtonClick',\n                'handleKillButtonClick');\n            options = options || {};\n            this.id = options.id || \"taskTable\";\n            this.hostUrlTemplate = (_.isEmpty(options.hostUrlTemplate)? _.template(\"#jobs/<%=jobUuid%>/quick/<%=node%>\"): _.template(options.hostUrlTemplate));\n            this.allJobUrlTemplate = (_.isEmpty(options.allJobUrlTemplate)? _.template(\"#jobs/<%=jobUuid%>/quick\"):_.template(options.allJobUrlTemplate));\n            this.$el.attr(\"id\",this.id);\n            var self=this;\n            var columns = [\n                {\n                    \"sTitle\":\"\",\n                    \"sClass\":\"task-cb\",\n                    \"sWidth\":\"2%\",\n                    \"mData\": \"node\",\n                    \"bSearchable\":false,\n                    \"bSortable\":false,\n                    \"mRender\":function(val,type,data){\n                        if(self.selectedIds[val]){\n                            return \"<input checked class='row_selectable' type='checkbox'></input>\";\n                        }\n                        else{\n                            return \"<input class='row_selectable' type='checkbox'></input>\";\n                        }\n                    }\n                },\n                {\n                    \"sTitle\":\"No\",\n                    \"sClass\":\"task-node\",\n                    \"mData\": \"node\",\n                    \"sWidth\":\"4%\"\n                },\n                {\n                    \"mData\": \"stateText\",\n                    \"bVisible\":false,\n                    \"bSearchable\":true\n                },\n                {\n                    \"sTitle\":\"State\",\n                    \"sClass\":\"task-state center\",\n                    \"mData\": \"state\",\n                    \"sWidth\":\"8%\",\n                    \"bSearchable\":false,\n                    \"mRender\":function(val,type,data){\n                        return \"<span class='label \"+StateLabels[val]+\"'>\"+States[val]+\"</span>\";\n                    },\n                    \"aDataSort\":[2],\n                    \"aTargets\":[3]\n                },\n                {\n                    \"sTitle\":\"Host\",\n                    \"sClass\":\"task-host center\",\n                    \"mData\": \"host\",\n                    \"sWidth\":\"5%\",//24\n                    \"mRender\":function(val,type,data){\n                        return \"<a href='\"+self.hostUrlTemplate(data)+\"'>\"+val+\"</a>\";\n                    }\n                },\n                {\n                    \"sTitle\":\"Host UUID\",\n                    \"sClass\":\"task-hostuuid center\",\n                    \"mData\": \"hostUuid\",\n                    \"sWidth\":\"5%\"//45\n                },\n                {\n                    \"sTitle\":\"Status\",\n                    \"sClass\":\"task-status center\",\n                    \"mRender\":function(val){\n                        return util.statusTextForExitCode(val);\n                    },\n                    \"mData\": \"errorCode\",\n                    \"sWidth\":\"4%\"//51\n                },\n                {\n                    \"sTitle\":\"Replicas\",\n                    \"sClass\":\"task-rep\",\n                    \"mData\": \"replicas\",\n                    \"sWidth\":\"4%\",//56\n                    \"bSearchable\":false\n                },\n                {\n                    \"mData\": \"input\",\n                    \"bVisible\":false,\n                    \"bSearchable\":false\n                },\n                {\n                    \"sTitle\":\"Input\",\n                    \"sClass\":\"task-input center\",\n                    \"mData\": \"input\",\n                    \"sWidth\":\"5%\",//63\n                    \"bSearchable\":false,\n                    \"mRender\":function(val){\n                        return util.shortenNumber(val);\n                    },\n                    \"aDataSort\":[8],\n                    \"aTargets\":[9]\n                },\n                {\n                    \"mData\": \"skipped\",\n                    \"bVisible\":false,\n                    \"bSearchable\":false\n                },\n                {\n                    \"sTitle\":\"Skipped\",\n                    \"sClass\":\"task-rekt center\",\n                    \"mData\": \"skipped\",\n                    \"sWidth\":\"5%\",//70\n                    \"bSearchable\":false,\n                    \"mRender\":function(val){\n                        return util.shortenNumber(val);\n                    },\n                    \"aDataSort\":[10],\n                    \"aTargets\":[11]\n                },\n                {\n                    \"mData\": \"totalEmitted\",\n                    \"bVisible\":false,\n                    \"bSearchable\":false\n                },\n                {\n                    \"sTitle\":\"Emitted\",\n                    \"sClass\":\"task-nodes center\",\n                    \"mData\": \"totalEmitted\",\n                    \"sWidth\":\"5%\",//77\n                    \"bSearchable\":false,\n                    \"mRender\":function(val){\n                        return util.shortenNumber(val);\n                    },\n                    \"aDataSort\":[12],\n                    \"aTargets\":[13]\n                },\n                {\n                    \"mData\": \"meanRate\",\n                    \"bVisible\":false,\n                    \"bSearchable\":false\n                },\n                {\n                    \"sTitle\":\"Rate\",\n                    \"sClass\":\"task-rate center\",\n                    \"mData\": \"meanRate\",\n                    \"sWidth\":\"5%\",//84\n                    \"bSearchable\":false,\n                    \"mRender\":function(val){\n                        return util.shortenNumber(val);\n                    },\n                    \"aDataSort\":[14],\n                    \"aTargets\":[15]\n                },\n                {\n                    \"mData\": \"fileCount\",\n                    \"bVisible\":false,\n                    \"bSearchable\":false\n                },\n                {\n                    \"sTitle\":\"Files\",\n                    \"sClass\":\"task-errored center\",\n                    \"mData\": \"fileCount\",\n                    \"sWidth\":\"5%\",//91\n                    \"bSearchable\":false,\n                    \"mRender\":function(val){\n                        return util.shortenNumber(val);\n                    },\n                    \"aDataSort\":[16],\n                    \"aTargets\":[17]\n                },\n                {\n                    \"mData\": \"fileBytes\",\n                    \"bVisible\":false,\n                    \"bSearchable\":false\n                },\n                {\n                    \"sTitle\":\"Size\",\n                    \"sClass\":\"task-done center\",\n                    \"mData\": \"fileBytes\",\n                    \"sWidth\":\"5%\",//98\n                    \"bSearchable\":false,\n                    \"mRender\":function(val){\n                        return util.convertToDFH(val);\n                    },\n                    \"aDataSort\":[18],\n                    \"aTargets\":[19]\n                }\n            ];\n            DataTable.View.prototype.initialize.apply(this,[{\n                columns:columns,\n                filterTemplate:taskFilterTemplate,\n                enableSearch:false,\n                selectableTemplate:taskSelectableTemplate,\n                heightBuffer:80,\n                columnFilterIndex:1,\n                id:this.id,\n                emptyMessage:\" \",\n                idAttribute:\"node\",\n                changeAttrs:[\n                    \"state\",\n                    \"input\",\n                    \"replicas\",\n                    \"skipped\",\n                    \"totalEmitted\",\n                    \"meanRate\",\n                    \"fileCount\",\n                    \"fileBytes\",\n                    \"hostUuid\",\n                    \"host\",\n                    \"errorCode\",\n                    \"stateText\"\n                ]\n            }]);\n        },\n        render:function(){\n            DataTable.View.prototype.render.apply(this,[]);\n            this.views.selectable.find(\"#kickTaskButton\").on(\"click\",this.handleKickButtonClick);\n            this.views.selectable.find(\"#stopTaskButton\").on(\"click\",this.handleStopButtonClick);\n            this.views.selectable.find(\"#killTaskButton\").on(\"click\",this.handleKillButtonClick);\n            return this;\n        },\n        handleKickButtonClick:function(event){\n            var ids = this.getSelectedIds(),self=this;\n            if (app.isQuiesced) {\n                alertify.confirm(\"Cluster is quiesced, do you want to kick \" + ids.length + \" task(s) with extra priority?\", function (e) {\n                    _.each(ids,function(id){\n                        self.collection.get(id).kick(false, 100);\n                    });\n                    alertify.message(\"Kicked \"+ids.length+\" tasks.\");\n                });\n            } else {\n                _.each(ids,function(id){\n                    self.collection.get(id).kick(false, 2);\n                });\n                alertify.message(\"Kicked \"+ids.length+\" tasks.\");\n            }\n        },\n        handleStopButtonClick:function(event){\n            var ids = this.getSelectedIds(),self=this;\n            _.each(ids,function(id){\n                self.collection.get(id).stop(false);\n            });\n            alertify.message(\"Stopped \"+ids.length+\" tasks.\");\n        },\n        handleKillButtonClick:function(event){\n            var ids = this.getSelectedIds(),self=this;\n            _.each(ids,function(id){\n                self.collection.get(id).kill(false);\n            });\n            alertify.message(\"Killed \"+ids.length+\" tasks.\");\n        }\n    });\n    var TinyTableView = DataTable.View.extend({\n        initialize:function(options){\n            options = options || {};\n            this.id = options.id || \"taskTable\";\n            this.nodeNumber = options.nodeNumber;\n            this.breadcrumbTemplate = options.breadcrumbTemplate || _.template(taskBreadcrumbsTemplate);\n            this.hostUrlTemplate = (_.isEmpty(options.hostUrlTemplate)? _.template(\"#jobs/<%=jobUuid%>/quick/<%=node%>\"): _.template(options.hostUrlTemplate));\n            this.$el.attr(\"id\",this.id);\n            var self=this;\n            var columns = [\n                {\n                    \"sTitle\":\"No\",\n                    \"sClass\":\"task-node\",\n                    \"mData\": \"node\",\n                    \"bVisible\":true,\n                    \"sWidth\":\"20%\"\n                },\n                {\n                    \"mData\": \"stateText\",\n                    \"bVisible\":false,\n                    \"bSearchable\":true\n                },\n                {\n                    \"sTitle\":\"State\",\n                    \"sClass\":\"task-state center\",\n                    \"mData\": \"state\",\n                    \"sWidth\":\"40%\",\n                    \"bVisible\":true,\n                    \"bSearchable\":false,\n                    \"mRender\":function(val,type,data){\n                        return \"<span class='label \"+StateLabels[val]+\"'>\"+States[val]+\"</span>\";\n                    },\n                    \"aDataSort\":[1],\n                    \"aTargets\":[2]\n                },\n                {\n                    \"sTitle\":\"Host\",\n                    \"sClass\":\"task-host center\",\n                    \"mData\": \"host\",\n                    \"sWidth\":\"40%\",//24\n                    \"bVisible\":true,\n                    \"mRender\":function(val,type,data){\n                        //return \"<a href='#jobs/\"+data.jobUuid+\"/quick/\"+data.node+\"'>\"+val+\"</a>\";\n                        return \"<a href='\"+self.hostUrlTemplate(data)+\"'>\"+val+\"</a>\";\n                    }\n                }\n            ];\n            var breadcrumbTemplate = this.breadcrumbTemplate({\n                task:this.model.toJSON()\n            });\n            DataTable.View.prototype.initialize.apply(this,[{\n                columns:columns,\n                selectableTemplate:breadcrumbTemplate,\n                heightBuffer:80,\n                columnFilterIndex:1,\n                enableSearch:false,\n                id:this.id,\n                idAttribute:\"node\",\n                emptyMessage:\" \"\n            }]);\n            this.listenTo(this.model,\"change\",this.handleTaskModelChange);\n        },\n        handleTaskModelChange:function(model){\n            console.log(\"task change\");\n            var breadcrumbTemplate = this.breadcrumbTemplate({\n                task:this.model.toJSON()\n            });\n            this.views.parent.find(\"div.selectable_action\").html(breadcrumbTemplate);\n        }\n    });\n    var DetailView = Backbone.View.extend({\n        template: _.template(taskDetailTemplate),\n        events:{\n            \"keyup input#linesInput\":\"handleLineInputChange\",\n            \"change input#linesInput\":\"handleLineInputChange\",\n            \"keyup input#runsAgoInput\":\"handleRunsAgoInputChange\",\n            \"change input#runsAgoInput\":\"handleRunsAgoInputChange\",\n            \"click div.log-control-button button\":\"handleLogControlClick\",\n            \"click div.log-types button:not(.active)\":\"handleLogTypeClick\",\n            \"click #kickTaskButton\":\"handleKickButtonClick\",\n            \"click #stopTaskButton\":\"handleStopButtonClick\",\n            \"click #killTaskButton\":\"handleKillButtonClick\",\n            \"click #revertTaskButton\":\"handleRevertButtonClick\"\n        },\n        initialize:function(options){\n            _.bindAll(\n                this,\n                'render',\n                'handleLineInputChange',\n                'saveState',\n                'handleLogChange',\n                'handleTaskReset',\n                'handleLogError',\n                'handleKickButtonClick',\n                'handleStopButtonClick',\n                'handleKillButtonClick');\n            var state = Cookies.getJSON(\"spawn\") || {};\n            state.log = state.log || {\n                lines: 10,\n                type: 0,\n                stdout:true,\n                runsAgo: 0\n            };\n            this.lines = state.log.lines;\n            this.type = state.log.type; //0: roll, 1:tail, 2:head\n            this.stdout = state.log.stdout;\n            this.runsAgo = state.log.runsAgo;\n            this.log = options.log;\n            this.xhr=null;\n            this.rollTimeout=null;\n            this.saveState();\n            this.listenTo(app.jobCollection,\"change:state\",this.handleJobStateUpdate);\n            this.listenTo(this.model,\"change:state\",this.handleTaskStateChange);\n            this.listenTo(this.model,\"change:host\",this.handleHostNameChange);\n            this.listenTo(this.model,\"change:hostPort\",this.handleHostPortChange);\n            this.listenTo(this.model,\"reset\",this.handleTaskReset);\n            this.listenTo(this.log,\"change\",this.handleLogChange);\n            this.listenTo(this.log,\"clear\",this.handleLogClear);\n        },\n        render:function(){\n            var html = this.template({\n                task:this.model.toJSON(),\n                lines:this.lines,\n                type:this.type,\n                stdout:this.stdout,\n                runsAgo:this.runsAgo\n            });\n            this.$el.html(html);\n            //fetch log content after rendering\n            this.log.lines=this.lines;\n            this.log.type=this.type;\n            this.log.stdout=this.stdout;\n            this.log.runsAgo=this.runsAgo;\n            this.$el.css(\"display\", \"flex\");\n            this.$el.css(\"height\", \"100%\");\n            this.$el.css(\"flex-direction\", \"column\");\n            return this;\n        },\n        handleRevertButtonClick:function(event){\n            app.router.trigger(\"route:showJobBackups\",this.model.get(\"jobUuid\"),this.model.get(\"node\"));\n        },\n        handleJobStateUpdate:function(model){\n            if(_.isEqual(model.id,this.model.get(\"jobUuid\"))){\n                this.model.fetch();\n            }\n        },\n        handleKickButtonClick:function(){\n            var self = this;\n            if (app.isQuiesced) {\n                alertify.confirm(\"Cluster is quiesced, do you want to kick \" + self.model.get(\"jobUuid\") +\n                        \"/\" + self.model.get(\"node\") + \" with extra priority?\", function (e) {\n                    self.model.kick(true, 100);\n                });\n            } else {\n                this.model.kick(true, 2);\n            }\n        },\n        handleStopButtonClick:function(){\n            this.model.stop(true);\n        },\n        handleKillButtonClick:function(){\n            this.model.kill(true);\n        },\n        replaceLink:function (match, p1, p2, offset, string) {\n            p1 = p1.replace(/</g, \"&lt;\").replace(/>/g, \"&gt;\");\n            var p1b = p1.split('.').slice(0,-2).join(\"/\");\n            if (p1b.length > 0){\n                p1b = p1b + '/';\n            }\n            return p1 + '(<a class=\"ide-link\" href=\"/?message=' + p1b + p2 + '\">' + p2 + '</a>)'\n        },\n        linkFiles:function (text) {\n            text = text.replace(/([\\w.<>]+)\\((\\w+\\.java:\\d+)\\)/g, this.replaceLink);\n            return text;\n        },\n        handleLogClear:function(){\n            if(!_.isNull(this.xhr)){\n                this.xhr.abort();\n                this.xhr=null;\n            }\n            if(!_.isNull(this.rollTimeout)){\n                clearTimeout(this.rollTimeout);\n                this.rollTimeout=null;\n            }\n            this.$el.find(\"pre#logContainer\").html(\"loading...\");\n        },\n        handleLogChange:function(log){\n            var text = log.get(\"out\");\n            text = this.linkFiles(text);\n            if(_.isEqual(this.type,0)){//roll\n                var oldOffset = log.offset;\n                var newOffset = log.get(\"offset\");\n                if (!oldOffset || newOffset < oldOffset) {\n                    this.$el.find(\"pre#logContainer\").html(\"\");\n                }\n                var isAtBottom = this.isLogAtBottom();//before changing text\n                this.$el.find(\"pre#logContainer\").append(text);\n                if(isAtBottom){\n                    this.scrollLogToBottom();\n                }\n            }\n            else if(_.isEqual(this.type,2)){//head\n                this.$el.find(\"pre#logContainer\").html(\"\");\n                this.$el.find(\"pre#logContainer\").html(text);\n                this.scrollLogToTop();\n            }\n            else{\n                this.$el.find(\"pre#logContainer\").html(\"\");\n                this.$el.find(\"pre#logContainer\").html(text);\n                this.scrollLogToBottom();\n            }\n            //bind links click event\n            this.$el.find(\"pre#logContainer\").find('a.ide-link').unbind().click(function(e) {\n                e.preventDefault();\n                var url = $(this).attr(\"href\");\n                $.getJSON('http://localhost:8091' + url + '&callback=?', function(json) {\n                    //do nothing\n                });\n            });\n        },\n        roll:function(){\n            this.log.offset=this.log.get(\"offset\");\n            this.xhr=this.log.fetch({error:this.handleLogError});\n            var self=this;\n            this.rollTimeout=setTimeout(function(){\n                self.roll();\n            },2000);\n        },\n        tail:function(){\n            this.log.offset=undefined;\n            this.xhr=this.log.fetch({error:this.handleLogError});\n        },\n        head:function(){\n            this.log.offset=0;\n            this.xhr=this.log.fetch({error:this.handleLogError});\n        },\n        handleTaskReset:function(){\n            this.handleLogClear();\n            this.fetchLog();\n        },\n        handleLogError:function(model, resp, options){\n            if (resp.status == 400) {\n                this.$el.find(\"pre#logContainer\").html(resp.responseText);\n            } else {\n                this.$el.find(\"pre#logContainer\").html(\"Error talking to minion\");\n            }\n        },\n        handleTaskStateChange:function(model){\n            var label = this.$el.find(\"span#taskLabel\");\n            label.attr(\"class\",\"label \"+model.get(\"stateLabel\"));\n            label.html(model.get(\"stateText\"));\n        },\n        handleHostNameChange:function(model){\n            var host = this.$el.find(\"span#taskHost\");\n            host.html(model.get(\"host\")+\":\"+model.get(\"hostPort\"));\n            this.log.host=model.get(\"host\");\n        },\n        handleHostPortChange:function(model){\n            this.handleHostNameChange(model);\n            this.log.port=model.get(\"hostPort\");\n        },\n        handleRunsAgoInputChange: function(event){\n            var runsAgoInput = this.$el.find(\"input#runsAgoInput\");\n            var runsAgo = parseInt(runsAgoInput.val(),10);\n            if(!_.isNaN(runsAgo)){\n                if(!_.isEqual(this.runsAgo,runsAgo)){\n                    this.log.clear();\n                    this.runsAgo=runsAgo;\n                    this.log.runsAgo=runsAgo;\n                    runsAgoInput.val(this.runsAgo);\n                    this.$el.find(\"pre#logContainer\").html(\"loading...\");\n                    this.fetchLog();\n                }\n                this.saveState();\n                return true;\n            }\n            else{\n                event.preventDefault();\n                event.stopImmediatePropagation();\n                //TODO:show error message\n                runsAgoInput.val(this.runsAgo);\n                return false;\n            }\n        },\n        handleLineInputChange: function(event){\n            var lineInput = this.$el.find(\"input#linesInput\");\n            var lines = parseInt(lineInput.val(),10);\n            if(!_.isNaN(lines) && lines>0){\n                if(!_.isEqual(this.lines,lines)){\n                    this.log.clear();\n                    this.lines=lines;\n                    this.log.lines=lines;\n                    lineInput.val(this.lines);\n                    this.$el.find(\"pre#logContainer\").html(\"loading...\");\n                    this.fetchLog();\n                }\n                this.saveState();\n                return true;\n            }\n            else{\n                event.preventDefault();\n                event.stopImmediatePropagation();\n                //TODO:show error message\n                lineInput.val(this.lines);\n                return false;\n            }\n        },\n        fetchLog:function(){\n            if(_.isEqual(this.type,0)){//roll\n                this.roll();\n            }\n            else if(_.isEqual(this.type,1)){//tail\n                this.tail();\n            }\n            else if(_.isEqual(this.type,2)){\n                this.head();\n            }\n        },\n        handleLogControlClick:function(event){\n            var button = $(event.currentTarget);\n            var value = button.data(\"value\");\n            this.log.clear();\n            this.type=value;\n            this.fetchLog();\n            this.saveState();\n            this.$el.find(\"div.log-control-button button\").removeClass(\"active\");\n            this.$el.find(\"div.log-control-button button[data-value='\"+value+\"']\").addClass(\"active\");\n        },\n        handleLogTypeClick:function(event){\n            var button = $(event.currentTarget);\n            this.$el.find(\"div.log-types button\").removeClass(\"active\");\n            this.stdout = button.is(\"button#stdoutButton\");\n            this.log.stdout = this.stdout;\n            if(this.stdout){\n                this.$el.find(\"div.log-types button#stdoutButton\").addClass(\"active\");\n            }\n            else{\n                this.$el.find(\"div.log-types button#stderrButton\").addClass(\"active\");\n            }\n            this.log.clear();\n            this.fetchLog();\n            this.saveState();\n        },\n        saveState:function(){\n            var state = Cookies.getJSON(\"spawn\") || {};\n            state.log= {\n                lines:this.lines,\n                type:this.type,\n                stdout:this.stdout,\n                runsAgo:this.runsAgo\n            };\n            Cookies.set(\"spawn\", state);\n        },\n        isLogAtBottom:function(){\n            var pre = this.$el.find(\"pre#logContainer\");\n            var scrollTop = pre.scrollTop();\n            var innerHeight = pre.innerHeight();\n            var scrollHeight = pre.get(0).scrollHeight;\n            var isBottom =((scrollTop+innerHeight+4)>=(scrollHeight));//for some reason, I'm finding that it could be off by 1 pixel\n            return isBottom;\n        },\n        scrollLogToBottom:function(){\n            var pre = this.$el.find(\"pre#logContainer\");\n            var scrollHeight = pre.get(0).scrollHeight;\n            var innerHeight = pre.innerHeight();\n            var deltaHeight = scrollHeight-innerHeight;\n            if(deltaHeight>0){\n                pre.scrollTop(scrollHeight-innerHeight);\n            }\n        },\n        scrollLogToTop:function(){\n            var pre = this.$el.find(\"pre#logContainer\");\n            pre.scrollTop(0);\n        },\n        remove:function(){\n            this.handleLogClear();//to stop any outstanding timeouts\n            Backbone.View.prototype.remove.apply(this,[]);\n        }\n    });\n    return {\n        Model:Model,\n        Collection:Collection,\n        TableView:TableView,\n        TinyTableView:TinyTableView,\n        DetailView:DetailView\n    };\n}).apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__),\n\t\t\t\t__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./src/js/modules/task.js\n");

/***/ }),

/***/ "./src/js/modules/task.log.js":
/*!************************************!*\
  !*** ./src/js/modules/task.log.js ***!
  \************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;/*\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n!(__WEBPACK_AMD_DEFINE_ARRAY__ = [\n    __webpack_require__(/*! underscore */ \"./node_modules/underscore/underscore.js\"),\n    __webpack_require__(/*! backbone */ \"./node_modules/backbone/backbone.js\")\n], __WEBPACK_AMD_DEFINE_RESULT__ = (function(\n    _,\n    Backbone\n){\n    var Model = Backbone.Model.extend({\n        initialize:function(options){\n            options=options || {};\n            this.node = options.node;\n            this.jobUuid=options.jobUuid;\n            this.lines=options.lines;\n            this.runsAgo=options.runsAgo;\n            this.host=options.host;\n            this.port=options.port;\n            this.stdout=options.stdout;\n            this.stdout=undefined;\n        },\n        url:function(){\n            var url= \"/job/\" + this.jobUuid + \"/log?out=\"+ (this.stdout ? \"1\" : \"0\") +\n            \"&lines=\" + this.lines + \"&node=\" + this.node + \"&runsAgo=\" + this.runsAgo +\n            \"&minion=\" + this.host + \"&port=\" + this.port;\n\n            if(!_.isUndefined(this.offset)){\n                url+=\"&offset=\"+this.offset;\n            }\n            return url;\n        },\n        sync: function(method, model, options){\n            options.dataType = \"json\";\n            return Backbone.sync(method, model, options);\n        },\n        parse:function(data){\n            if(_.isUndefined(data.out)){\n                data.out=\"Log file not found.\";\n            } else if (data.offset === 0) {\n                data.out=\"Log file is empty.\";\n            }\n            return data;\n        },\n        clear:function(){\n            this.set({\n                lastModified:undefined,\n                lines:undefined,\n                node:undefined,\n                offset:undefined,\n                out:\"\",\n                runsAgo:undefined\n            },{silent:true});\n            this.trigger(\"clear\");\n        }\n    });\n    return {\n        Model:Model\n    };\n}).apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__),\n\t\t\t\t__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9zcmMvanMvbW9kdWxlcy90YXNrLmxvZy5qcy5qcyIsInNvdXJjZXMiOlsid2VicGFjazovLy8uL3NyYy9qcy9tb2R1bGVzL3Rhc2subG9nLmpzPzY3OGQiXSwic291cmNlc0NvbnRlbnQiOlsiLypcbiAqIExpY2Vuc2VkIHVuZGVyIHRoZSBBcGFjaGUgTGljZW5zZSwgVmVyc2lvbiAyLjAgKHRoZSBcIkxpY2Vuc2VcIik7XG4gKiB5b3UgbWF5IG5vdCB1c2UgdGhpcyBmaWxlIGV4Y2VwdCBpbiBjb21wbGlhbmNlIHdpdGggdGhlIExpY2Vuc2UuXG4gKiBZb3UgbWF5IG9idGFpbiBhIGNvcHkgb2YgdGhlIExpY2Vuc2UgYXRcbiAqXG4gKiBodHRwOi8vd3d3LmFwYWNoZS5vcmcvbGljZW5zZXMvTElDRU5TRS0yLjBcbiAqXG4gKiBVbmxlc3MgcmVxdWlyZWQgYnkgYXBwbGljYWJsZSBsYXcgb3IgYWdyZWVkIHRvIGluIHdyaXRpbmcsIHNvZnR3YXJlXG4gKiBkaXN0cmlidXRlZCB1bmRlciB0aGUgTGljZW5zZSBpcyBkaXN0cmlidXRlZCBvbiBhbiBcIkFTIElTXCIgQkFTSVMsXG4gKiBXSVRIT1VUIFdBUlJBTlRJRVMgT1IgQ09ORElUSU9OUyBPRiBBTlkgS0lORCwgZWl0aGVyIGV4cHJlc3Mgb3IgaW1wbGllZC5cbiAqIFNlZSB0aGUgTGljZW5zZSBmb3IgdGhlIHNwZWNpZmljIGxhbmd1YWdlIGdvdmVybmluZyBwZXJtaXNzaW9ucyBhbmRcbiAqIGxpbWl0YXRpb25zIHVuZGVyIHRoZSBMaWNlbnNlLlxuICovXG5kZWZpbmUoW1xuICAgICd1bmRlcnNjb3JlJyxcbiAgICAnYmFja2JvbmUnXG5dLFxuZnVuY3Rpb24oXG4gICAgXyxcbiAgICBCYWNrYm9uZVxuKXtcbiAgICB2YXIgTW9kZWwgPSBCYWNrYm9uZS5Nb2RlbC5leHRlbmQoe1xuICAgICAgICBpbml0aWFsaXplOmZ1bmN0aW9uKG9wdGlvbnMpe1xuICAgICAgICAgICAgb3B0aW9ucz1vcHRpb25zIHx8IHt9O1xuICAgICAgICAgICAgdGhpcy5ub2RlID0gb3B0aW9ucy5ub2RlO1xuICAgICAgICAgICAgdGhpcy5qb2JVdWlkPW9wdGlvbnMuam9iVXVpZDtcbiAgICAgICAgICAgIHRoaXMubGluZXM9b3B0aW9ucy5saW5lcztcbiAgICAgICAgICAgIHRoaXMucnVuc0Fnbz1vcHRpb25zLnJ1bnNBZ287XG4gICAgICAgICAgICB0aGlzLmhvc3Q9b3B0aW9ucy5ob3N0O1xuICAgICAgICAgICAgdGhpcy5wb3J0PW9wdGlvbnMucG9ydDtcbiAgICAgICAgICAgIHRoaXMuc3Rkb3V0PW9wdGlvbnMuc3Rkb3V0O1xuICAgICAgICAgICAgdGhpcy5zdGRvdXQ9dW5kZWZpbmVkO1xuICAgICAgICB9LFxuICAgICAgICB1cmw6ZnVuY3Rpb24oKXtcbiAgICAgICAgICAgIHZhciB1cmw9IFwiL2pvYi9cIiArIHRoaXMuam9iVXVpZCArIFwiL2xvZz9vdXQ9XCIrICh0aGlzLnN0ZG91dCA/IFwiMVwiIDogXCIwXCIpICtcbiAgICAgICAgICAgIFwiJmxpbmVzPVwiICsgdGhpcy5saW5lcyArIFwiJm5vZGU9XCIgKyB0aGlzLm5vZGUgKyBcIiZydW5zQWdvPVwiICsgdGhpcy5ydW5zQWdvICtcbiAgICAgICAgICAgIFwiJm1pbmlvbj1cIiArIHRoaXMuaG9zdCArIFwiJnBvcnQ9XCIgKyB0aGlzLnBvcnQ7XG5cbiAgICAgICAgICAgIGlmKCFfLmlzVW5kZWZpbmVkKHRoaXMub2Zmc2V0KSl7XG4gICAgICAgICAgICAgICAgdXJsKz1cIiZvZmZzZXQ9XCIrdGhpcy5vZmZzZXQ7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICByZXR1cm4gdXJsO1xuICAgICAgICB9LFxuICAgICAgICBzeW5jOiBmdW5jdGlvbihtZXRob2QsIG1vZGVsLCBvcHRpb25zKXtcbiAgICAgICAgICAgIG9wdGlvbnMuZGF0YVR5cGUgPSBcImpzb25cIjtcbiAgICAgICAgICAgIHJldHVybiBCYWNrYm9uZS5zeW5jKG1ldGhvZCwgbW9kZWwsIG9wdGlvbnMpO1xuICAgICAgICB9LFxuICAgICAgICBwYXJzZTpmdW5jdGlvbihkYXRhKXtcbiAgICAgICAgICAgIGlmKF8uaXNVbmRlZmluZWQoZGF0YS5vdXQpKXtcbiAgICAgICAgICAgICAgICBkYXRhLm91dD1cIkxvZyBmaWxlIG5vdCBmb3VuZC5cIjtcbiAgICAgICAgICAgIH0gZWxzZSBpZiAoZGF0YS5vZmZzZXQgPT09IDApIHtcbiAgICAgICAgICAgICAgICBkYXRhLm91dD1cIkxvZyBmaWxlIGlzIGVtcHR5LlwiO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgcmV0dXJuIGRhdGE7XG4gICAgICAgIH0sXG4gICAgICAgIGNsZWFyOmZ1bmN0aW9uKCl7XG4gICAgICAgICAgICB0aGlzLnNldCh7XG4gICAgICAgICAgICAgICAgbGFzdE1vZGlmaWVkOnVuZGVmaW5lZCxcbiAgICAgICAgICAgICAgICBsaW5lczp1bmRlZmluZWQsXG4gICAgICAgICAgICAgICAgbm9kZTp1bmRlZmluZWQsXG4gICAgICAgICAgICAgICAgb2Zmc2V0OnVuZGVmaW5lZCxcbiAgICAgICAgICAgICAgICBvdXQ6XCJcIixcbiAgICAgICAgICAgICAgICBydW5zQWdvOnVuZGVmaW5lZFxuICAgICAgICAgICAgfSx7c2lsZW50OnRydWV9KTtcbiAgICAgICAgICAgIHRoaXMudHJpZ2dlcihcImNsZWFyXCIpO1xuICAgICAgICB9XG4gICAgfSk7XG4gICAgcmV0dXJuIHtcbiAgICAgICAgTW9kZWw6TW9kZWxcbiAgICB9O1xufSk7Il0sIm1hcHBpbmdzIjoiQUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLG9DQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBIiwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./src/js/modules/task.log.js\n");

/***/ }),

/***/ "./src/js/modules/util.js":
/*!********************************!*\
  !*** ./src/js/modules/util.js ***!
  \********************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;/*\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n!(__WEBPACK_AMD_DEFINE_ARRAY__ = [], __WEBPACK_AMD_DEFINE_RESULT__ = (function(){\n    var util = {\n       escape:function(v) {\n           return encodeURIComponent(v || '').replace('-','%2d');\n        },\n        unescape:function(v) {\n            return decodeURIComponent(v || '');\n        },\n        contains:function(self,str){\n            return self.indexOf(str) >= 0;\n        },\n        convertToDFH: function(bytes){\n            if(typeof bytes==\"number\" && bytes>=0){\n                var units = [\"B\",\"K\",\"M\",\"G\",\"T\"];\n                var shorterSize = bytes;\n                for(var u=0;u<units.length && Math.floor(shorterSize/10)>10;u++){\n                    shorterSize=(shorterSize/1024).toFixed(1);\n                }\n                return shorterSize+\" \"+units[u];\n            }\n            else{\n                return \"-\";\n            }\n        },\n        shortenNumber:function(num){\n            if(typeof num==\"number\"){\n                if(num===0){\n                    return 0;\n                }\n                else if(num>1 || num<=-1){\n                    var units = [\"\",\"k\",\"M\"];\n                    var shorterSize = num.toFixed(2);\n                    for(var u=0;u<units.length && shorterSize>1000;u++){\n                        shorterSize=(shorterSize/1000).toFixed(2);\n                    }\n                    return shorterSize+\"\"+units[u];\n                }\n                else if(num<=0.01 && num>-0.01){\n                    var shorterSize = num.toExponential(1);\n                    return shorterSize;\n                }\n                else if(num<=1 && num>-1){\n                    var shorterSize = num.toFixed(2);\n                    return shorterSize;\n                }\n                else{\n                    return \"-\";\n                }\n            }\n            else{\n                return \"-\";\n            }\n        },\n        convertToDateTimeText: function(time){\n            var preferredLanguage = navigator.languages || navigator.language;\n            if (time && time > 0) {\n                var dateTime = new Date(time);\n                return dateTime.toLocaleString(preferredLanguage,{\n                    year: \"2-digit\", month: \"2-digit\", day: \"2-digit\",\n                    hour: \"2-digit\", minute: \"2-digit\"\n                });\n            } else {\n                return \"-\";\n            }\n        },\n        fromCamelToTitleCase:function(str){\n            if (str == null || str == \"\") {\n                return str;\n            }\n            var newText = \"\";\n            var characters = str.split(\"\");\n            for (var i = 0; i < characters.length; i++) {\n                if (characters[i] == characters[i].toUpperCase()\n                    && i != 0\n                    && !(characters[i + 1] == characters[i + 1].toUpperCase())\n                    && characters[i - 1] != \" \") {\n                    newText += \" \";\n                }\n                newText += characters[i];\n             }\n            return newText;\n        },\n        startsWith:function(self,str){\n            return self.indexOf(str) == 0;\n        },\n        shorten:function(word,len){\n            return (word.length>len? word.substr(0,len)+\"...\": word);\n        },\n        formatPercent:function(v){\n            if (v) {\n                return Math.round(100 * v);\n            }\n            return '';\n        },\n        statusTextForExitCode:function(code){\n            if (code == null) {\n                return \"\";\n            }\n            if (code > 0) {\n                return \"process exit: \" + code;\n            }\n            else {\n                switch(code) {\n                case -100:\n                    return \"backup failed\";\n                case -101:\n                    return \"replicate failed\";\n                case -102:\n                    return \"revert failed\";\n                case -103:\n                    return \"swap failed\";\n                case -104:\n                    return \"failed host\";\n                case -105:\n                    return \"kick failed\";\n                case -106:\n                    return \"dir error\";\n                case -107:\n                    return \"script exec error\";\n                default:\n                    return \"\";\n                }\n            }\n        },\n        alertTypes: {0: \"On Job Error\", 1: \"On Job Completion\", 2: \"Runtime Exceeded\",\n                     3: \"Rekick Timeout\", 4: \"Split Canary\", 5: \"Map Canary\", 6: \"Bundle Canary\",\n                     7: \"Log Count Deviation\", 8: \"File Count Deviation\"},\n        generateTaskDirStatusText:function(type){\n            switch (type) {\n                case \"MISMATCH_MISSING_LIVE\":\n                    return \"<div class='label label-danger'>Missing</div>\";\n                case \"MATCH\":\n                    return \"<div class='label label-success'>Correct</div>\";\n                case \"ORPHAN_LIVE\":\n                    return \"<div class='label label-danger'>Orphan</div>\";\n                case \"REPLICATE_IN_PROGRESS\":\n                    return \"<div class='label label-success'>Replication in Progress</div>\";\n                default:\n                    console.log(\"Unexpected task state: \" + type);\n                    return \"<div class='label label-danger'>Unknown State</div>\";\n            }\n        },\n    };\n    return util;\n}).apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__),\n\t\t\t\t__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./src/js/modules/util.js\n");

/***/ }),

/***/ "./src/js/router.js":
/*!**************************!*\
  !*** ./src/js/router.js ***!
  \**************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;/*\n * Licensed under the Apache License, Version 2.0 (the 'License');\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an 'AS IS' BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n!(__WEBPACK_AMD_DEFINE_ARRAY__ = [\n    __webpack_require__(/*! backbone */ \"./node_modules/backbone/backbone.js\")\n], __WEBPACK_AMD_DEFINE_RESULT__ = (function(Backbone){\n        var Router = Backbone.Router.extend({\n            initialize: function(){\n                this.params = {};\n            },\n            routes: {\n                '': 'showIndex',\n                'jobs': 'showJobsTable',\n                'jobs/compact': 'showJobCompactTable',\n                'jobs/comfortable': 'showJobComfyTable',\n                'jobs/:jobid/quick': 'showQuickTask',\n                'jobs/:jobid/quick/:node': 'showQuickTaskDetail',\n\n                'jobs/:jobid/conf': 'showJobConf',\n                'jobs/:jobid/line/:line/conf': 'showJobConf',\n                'jobs/:jobid/line/:line/col/:col/conf': 'showJobConf',\n\n                'jobs/:jobid/conf/clone': 'showJobConfClone',\n                'jobs/:jobid/settings': 'showJobSettings',\n                'jobs/:jobid/settings/clone': 'showJobSettingsClone',\n                'jobs/:jobid/alerts': 'showJobAlerts',\n                'jobs/:jobid/alerts/clone': 'showJobAlertsClone',\n                'jobs/:jobid/deps': 'showJobDeps',\n                'jobs/:jobid/expanded': 'showJobExpConf',\n                'jobs/:jobid/history': 'showJobHistory',\n                'jobs/:jobid/history/:commit': 'showJobHistoryView',\n                'jobs/:jobid/history/:commit/diff': 'showJobHistoryDiff',\n                'jobs/:jobid/tasks': 'showJobTaskTable',\n                'jobs/:jobid/tasks/:node': 'showJobTaskDetail',\n                'hosts': 'showHostTable',\n                'hosts/:uuid': 'showHostTaskDetail',\n                'hosts/:uuid/tasks': 'showHostTaskDetail',\n                'macros': 'showMacroTable',\n\n                'macros/:name': 'showMacroDetail',\n                'macros/:name/conf': 'showMacroDetail',\n                'macros/:name/line/:line/conf': 'showMacroDetail',\n                'macros/:name/line/:line/col/:col/conf': 'showMacroDetail',\n\n\n                'alias': 'showAliasTable',\n                'alias/:name': 'showAliasDetail',\n                'commands': 'showCommandTable',\n                'commands/:name': 'showCommandDetail',\n                'git': 'showGitProperties',\n                'rebalanceParams': 'showRebalanceParams',\n                'alerts': 'showAlertsTable',\n                'alertsFiltered/:jobIdFilter': 'showAlertsTableFiltered',\n                'alerts/:alertId': 'showAlertsDetail',\n                'alerts/:alertId/:jobIds': 'showAlertsDetail'\n            }\n        });\n        return Router;\n    }).apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__),\n\t\t\t\t__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9zcmMvanMvcm91dGVyLmpzLmpzIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vLy4vc3JjL2pzL3JvdXRlci5qcz8wOWI5Il0sInNvdXJjZXNDb250ZW50IjpbIi8qXG4gKiBMaWNlbnNlZCB1bmRlciB0aGUgQXBhY2hlIExpY2Vuc2UsIFZlcnNpb24gMi4wICh0aGUgJ0xpY2Vuc2UnKTtcbiAqIHlvdSBtYXkgbm90IHVzZSB0aGlzIGZpbGUgZXhjZXB0IGluIGNvbXBsaWFuY2Ugd2l0aCB0aGUgTGljZW5zZS5cbiAqIFlvdSBtYXkgb2J0YWluIGEgY29weSBvZiB0aGUgTGljZW5zZSBhdFxuICpcbiAqIGh0dHA6Ly93d3cuYXBhY2hlLm9yZy9saWNlbnNlcy9MSUNFTlNFLTIuMFxuICpcbiAqIFVubGVzcyByZXF1aXJlZCBieSBhcHBsaWNhYmxlIGxhdyBvciBhZ3JlZWQgdG8gaW4gd3JpdGluZywgc29mdHdhcmVcbiAqIGRpc3RyaWJ1dGVkIHVuZGVyIHRoZSBMaWNlbnNlIGlzIGRpc3RyaWJ1dGVkIG9uIGFuICdBUyBJUycgQkFTSVMsXG4gKiBXSVRIT1VUIFdBUlJBTlRJRVMgT1IgQ09ORElUSU9OUyBPRiBBTlkgS0lORCwgZWl0aGVyIGV4cHJlc3Mgb3IgaW1wbGllZC5cbiAqIFNlZSB0aGUgTGljZW5zZSBmb3IgdGhlIHNwZWNpZmljIGxhbmd1YWdlIGdvdmVybmluZyBwZXJtaXNzaW9ucyBhbmRcbiAqIGxpbWl0YXRpb25zIHVuZGVyIHRoZSBMaWNlbnNlLlxuICovXG5cbmRlZmluZShbXG4gICAgJ2JhY2tib25lJ1xuXSxcbiAgICBmdW5jdGlvbihCYWNrYm9uZSl7XG4gICAgICAgIHZhciBSb3V0ZXIgPSBCYWNrYm9uZS5Sb3V0ZXIuZXh0ZW5kKHtcbiAgICAgICAgICAgIGluaXRpYWxpemU6IGZ1bmN0aW9uKCl7XG4gICAgICAgICAgICAgICAgdGhpcy5wYXJhbXMgPSB7fTtcbiAgICAgICAgICAgIH0sXG4gICAgICAgICAgICByb3V0ZXM6IHtcbiAgICAgICAgICAgICAgICAnJzogJ3Nob3dJbmRleCcsXG4gICAgICAgICAgICAgICAgJ2pvYnMnOiAnc2hvd0pvYnNUYWJsZScsXG4gICAgICAgICAgICAgICAgJ2pvYnMvY29tcGFjdCc6ICdzaG93Sm9iQ29tcGFjdFRhYmxlJyxcbiAgICAgICAgICAgICAgICAnam9icy9jb21mb3J0YWJsZSc6ICdzaG93Sm9iQ29tZnlUYWJsZScsXG4gICAgICAgICAgICAgICAgJ2pvYnMvOmpvYmlkL3F1aWNrJzogJ3Nob3dRdWlja1Rhc2snLFxuICAgICAgICAgICAgICAgICdqb2JzLzpqb2JpZC9xdWljay86bm9kZSc6ICdzaG93UXVpY2tUYXNrRGV0YWlsJyxcblxuICAgICAgICAgICAgICAgICdqb2JzLzpqb2JpZC9jb25mJzogJ3Nob3dKb2JDb25mJyxcbiAgICAgICAgICAgICAgICAnam9icy86am9iaWQvbGluZS86bGluZS9jb25mJzogJ3Nob3dKb2JDb25mJyxcbiAgICAgICAgICAgICAgICAnam9icy86am9iaWQvbGluZS86bGluZS9jb2wvOmNvbC9jb25mJzogJ3Nob3dKb2JDb25mJyxcblxuICAgICAgICAgICAgICAgICdqb2JzLzpqb2JpZC9jb25mL2Nsb25lJzogJ3Nob3dKb2JDb25mQ2xvbmUnLFxuICAgICAgICAgICAgICAgICdqb2JzLzpqb2JpZC9zZXR0aW5ncyc6ICdzaG93Sm9iU2V0dGluZ3MnLFxuICAgICAgICAgICAgICAgICdqb2JzLzpqb2JpZC9zZXR0aW5ncy9jbG9uZSc6ICdzaG93Sm9iU2V0dGluZ3NDbG9uZScsXG4gICAgICAgICAgICAgICAgJ2pvYnMvOmpvYmlkL2FsZXJ0cyc6ICdzaG93Sm9iQWxlcnRzJyxcbiAgICAgICAgICAgICAgICAnam9icy86am9iaWQvYWxlcnRzL2Nsb25lJzogJ3Nob3dKb2JBbGVydHNDbG9uZScsXG4gICAgICAgICAgICAgICAgJ2pvYnMvOmpvYmlkL2RlcHMnOiAnc2hvd0pvYkRlcHMnLFxuICAgICAgICAgICAgICAgICdqb2JzLzpqb2JpZC9leHBhbmRlZCc6ICdzaG93Sm9iRXhwQ29uZicsXG4gICAgICAgICAgICAgICAgJ2pvYnMvOmpvYmlkL2hpc3RvcnknOiAnc2hvd0pvYkhpc3RvcnknLFxuICAgICAgICAgICAgICAgICdqb2JzLzpqb2JpZC9oaXN0b3J5Lzpjb21taXQnOiAnc2hvd0pvYkhpc3RvcnlWaWV3JyxcbiAgICAgICAgICAgICAgICAnam9icy86am9iaWQvaGlzdG9yeS86Y29tbWl0L2RpZmYnOiAnc2hvd0pvYkhpc3RvcnlEaWZmJyxcbiAgICAgICAgICAgICAgICAnam9icy86am9iaWQvdGFza3MnOiAnc2hvd0pvYlRhc2tUYWJsZScsXG4gICAgICAgICAgICAgICAgJ2pvYnMvOmpvYmlkL3Rhc2tzLzpub2RlJzogJ3Nob3dKb2JUYXNrRGV0YWlsJyxcbiAgICAgICAgICAgICAgICAnaG9zdHMnOiAnc2hvd0hvc3RUYWJsZScsXG4gICAgICAgICAgICAgICAgJ2hvc3RzLzp1dWlkJzogJ3Nob3dIb3N0VGFza0RldGFpbCcsXG4gICAgICAgICAgICAgICAgJ2hvc3RzLzp1dWlkL3Rhc2tzJzogJ3Nob3dIb3N0VGFza0RldGFpbCcsXG4gICAgICAgICAgICAgICAgJ21hY3Jvcyc6ICdzaG93TWFjcm9UYWJsZScsXG5cbiAgICAgICAgICAgICAgICAnbWFjcm9zLzpuYW1lJzogJ3Nob3dNYWNyb0RldGFpbCcsXG4gICAgICAgICAgICAgICAgJ21hY3Jvcy86bmFtZS9jb25mJzogJ3Nob3dNYWNyb0RldGFpbCcsXG4gICAgICAgICAgICAgICAgJ21hY3Jvcy86bmFtZS9saW5lLzpsaW5lL2NvbmYnOiAnc2hvd01hY3JvRGV0YWlsJyxcbiAgICAgICAgICAgICAgICAnbWFjcm9zLzpuYW1lL2xpbmUvOmxpbmUvY29sLzpjb2wvY29uZic6ICdzaG93TWFjcm9EZXRhaWwnLFxuXG5cbiAgICAgICAgICAgICAgICAnYWxpYXMnOiAnc2hvd0FsaWFzVGFibGUnLFxuICAgICAgICAgICAgICAgICdhbGlhcy86bmFtZSc6ICdzaG93QWxpYXNEZXRhaWwnLFxuICAgICAgICAgICAgICAgICdjb21tYW5kcyc6ICdzaG93Q29tbWFuZFRhYmxlJyxcbiAgICAgICAgICAgICAgICAnY29tbWFuZHMvOm5hbWUnOiAnc2hvd0NvbW1hbmREZXRhaWwnLFxuICAgICAgICAgICAgICAgICdnaXQnOiAnc2hvd0dpdFByb3BlcnRpZXMnLFxuICAgICAgICAgICAgICAgICdyZWJhbGFuY2VQYXJhbXMnOiAnc2hvd1JlYmFsYW5jZVBhcmFtcycsXG4gICAgICAgICAgICAgICAgJ2FsZXJ0cyc6ICdzaG93QWxlcnRzVGFibGUnLFxuICAgICAgICAgICAgICAgICdhbGVydHNGaWx0ZXJlZC86am9iSWRGaWx0ZXInOiAnc2hvd0FsZXJ0c1RhYmxlRmlsdGVyZWQnLFxuICAgICAgICAgICAgICAgICdhbGVydHMvOmFsZXJ0SWQnOiAnc2hvd0FsZXJ0c0RldGFpbCcsXG4gICAgICAgICAgICAgICAgJ2FsZXJ0cy86YWxlcnRJZC86am9iSWRzJzogJ3Nob3dBbGVydHNEZXRhaWwnXG4gICAgICAgICAgICB9XG4gICAgICAgIH0pO1xuICAgICAgICByZXR1cm4gUm91dGVyO1xuICAgIH0pO1xuIl0sIm1hcHBpbmdzIjoiQUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLG9DQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUFBOyIsInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./src/js/router.js\n");

/***/ }),

/***/ "./src/js/vendor/alertify.js":
/*!***********************************!*\
  !*** ./src/js/vendor/alertify.js ***!
  \***********************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;/**\n * alertifyjs 1.4.1 http://alertifyjs.com\n * AlertifyJS is a javascript framework for developing pretty browser dialogs and notifications.\n * Copyright 2015 Mohammad Younes <Mohammad@alertifyjs.com> (http://alertifyjs.com) \n * Licensed under MIT <http://opensource.org/licenses/mit-license.php>*/\n( function ( window ) {\n    'use strict';\n    \n    /**\n     * Keys enum\n     * @type {Object}\n     */\n    var keys = {\n        ENTER: 13,\n        ESC: 27,\n        F1: 112,\n        F12: 123,\n        LEFT: 37,\n        RIGHT: 39\n    };\n    /**\n     * Default options \n     * @type {Object}\n     */\n    var defaults = {\n        modal:true,\n        basic:false,\n        frameless:false,\n        movable:true,\n        resizable:true,\n        closable:true,\n        closableByDimmer:true,\n        maximizable:true,\n        startMaximized:false,\n        pinnable:true,\n        pinned:true,\n        padding: true,\n        overflow:true,\n        maintainFocus:true,\n        transition:'pulse',\n        autoReset:true,\n        notifier:{\n            delay:5,\n            position:'bottom-right'\n        },\n        glossary:{\n            title:'AlertifyJS',\n            ok: 'OK',\n            cancel: 'Cancel',\n            acccpt: 'Accept',\n            deny: 'Deny',\n            confirm: 'Confirm',\n            decline: 'Decline',\n            close: 'Close',\n            maximize: 'Maximize',\n            restore: 'Restore',\n        },\n        theme:{\n            input:'ajs-input',\n            ok:'ajs-ok',\n            cancel:'ajs-cancel',\n        }\n    };\n    \n    //holds open dialogs instances\n    var openDialogs = [];\n\n    /**\n     * [Helper]  Adds the specified class(es) to the element.\n     *\n     * @element {node}      The element\n     * @className {string}  One or more space-separated classes to be added to the class attribute of the element.\n     * \n     * @return {undefined}\n     */\n    function addClass(element,classNames){\n        element.className += ' ' + classNames;\n    }\n    \n    /**\n     * [Helper]  Removes the specified class(es) from the element.\n     *\n     * @element {node}      The element\n     * @className {string}  One or more space-separated classes to be removed from the class attribute of the element.\n     * \n     * @return {undefined}\n     */\n    function removeClass(element,classNames){\n        var classes = classNames.split(' ');\n        for(var x=0;x<classes.length;x+=1){\n            element.className = element.className.replace(' ' + classes[x], '');\n        }\n    }\n\n    /**\n     * [Helper]  Checks if the document is RTL\n     *\n     * @return {Boolean} True if the document is RTL, false otherwise.\n     */\n    function isRightToLeft(){\n        return window.getComputedStyle(document.body).direction === 'rtl';\n    }\n    /**\n     * [Helper]  Get the document current scrollTop\n     *\n     * @return {Number} current document scrollTop value\n     */\n    function getScrollTop(){\n        return ((document.documentElement && document.documentElement.scrollTop) || document.body.scrollTop);\n    }\n\n    /**\n     * [Helper]  Get the document current scrollLeft\n     *\n     * @return {Number} current document scrollLeft value\n     */\n    function getScrollLeft(){\n        return ((document.documentElement && document.documentElement.scrollLeft) || document.body.scrollLeft);\n    }\n\n    /**\n    * Helper: clear contents\n    *\n    */\n    function clearContents(element){\n        while (element.lastChild) {\n            element.removeChild(element.lastChild);\n        }\n    }\n        \n\n    /**\n     * Use a closure to return proper event listener method. Try to use\n     * `addEventListener` by default but fallback to `attachEvent` for\n     * unsupported browser. The closure simply ensures that the test doesn't\n     * happen every time the method is called.\n     *\n     * @param    {Node}     el    Node element\n     * @param    {String}   event Event type\n     * @param    {Function} fn    Callback of event\n     * @return   {Function}\n     */\n    var on = (function () {\n        if (document.addEventListener) {\n            return function (el, event, fn, useCapture) {\n                el.addEventListener(event, fn, useCapture === true);\n            };\n        } else if (document.attachEvent) {\n            return function (el, event, fn) {\n                el.attachEvent('on' + event, fn);\n            };\n        }\n    }());\n\n    /**\n     * Use a closure to return proper event listener method. Try to use\n     * `removeEventListener` by default but fallback to `detachEvent` for\n     * unsupported browser. The closure simply ensures that the test doesn't\n     * happen every time the method is called.\n     *\n     * @param    {Node}     el    Node element\n     * @param    {String}   event Event type\n     * @param    {Function} fn    Callback of event\n     * @return   {Function}\n     */\n    var off = (function () {\n        if (document.removeEventListener) {\n            return function (el, event, fn, useCapture) {\n                el.removeEventListener(event, fn, useCapture === true);\n            };\n        } else if (document.detachEvent) {\n            return function (el, event, fn) {\n                el.detachEvent('on' + event, fn);\n            };\n        }\n    }());\n\n    /**\n     * Prevent default event from firing\n     *\n     * @param  {Event} event Event object\n     * @return {undefined}\n\n    function prevent ( event ) {\n        if ( event ) {\n            if ( event.preventDefault ) {\n                event.preventDefault();\n            } else {\n                event.returnValue = false;\n            }\n        }\n    }\n    */\n    var transition = (function () {\n        var t, type;\n        var supported = false;\n        var transitions = {\n            'animation'        : 'animationend',\n            'OAnimation'       : 'oAnimationEnd oanimationend',\n            'msAnimation'      : 'MSAnimationEnd',\n            'MozAnimation'     : 'animationend',\n            'WebkitAnimation'  : 'webkitAnimationEnd'\n        };\n\n        for (t in transitions) {\n            if (document.documentElement.style[t] !== undefined) {\n                type = transitions[t];\n                supported = true;\n                break;\n            }\n        }\n\n        return {\n            type: type,\n            supported: supported\n        };\n    }());\n\n    /**\n    * Creates event handler delegate that sends the instance as last argument.\n    * \n    * @return {Function}    a function wrapper which sends the instance as last argument.\n    */\n    function delegate(context, method) {\n        return function () {\n            if (arguments.length > 0) {\n                var args = [];\n                for (var x = 0; x < arguments.length; x += 1) {\n                    args.push(arguments[x]);\n                }\n                args.push(context);\n                return method.apply(context, args);\n            }\n            return method.apply(context, [null, context]);\n        };\n    }\n    /**\n    * Helper for creating a dialog close event.\n    * \n    * @return {object}\n    */\n    function createCloseEvent(index, button) {\n        return {\n            index: index,\n            button: button,\n            cancel: false\n        };\n    }\n\n\n    /**\n     * Super class for all dialogs\n     *\n     * @return {Object}\t\tbase dialog prototype\n     */\n    var dialog = (function () {\n        var //holds the list of used keys.\n            usedKeys = [],\n            //dummy variable, used to trigger dom reflow.\n            reflow = null,\n            //condition for detecting safari\n            isSafari = window.navigator.userAgent.indexOf('Safari') > -1 && window.navigator.userAgent.indexOf('Chrome') < 0,\n            //dialog building blocks\n            templates = {\n                dimmer:'<div class=\"ajs-dimmer\"></div>',\n                /*tab index required to fire click event before body focus*/\n                modal: '<div class=\"ajs-modal\" tabindex=\"0\"></div>',\n                dialog: '<div class=\"ajs-dialog\" tabindex=\"0\"></div>',\n                reset: '<button class=\"ajs-reset\"></button>',\n                commands: '<div class=\"ajs-commands\"><button class=\"ajs-pin\"></button><button class=\"ajs-maximize\"></button><button class=\"ajs-close\"></button></div>',\n                header: '<div class=\"ajs-header\"></div>',\n                body: '<div class=\"ajs-body\"></div>',\n                content: '<div class=\"ajs-content\"></div>',\n                footer: '<div class=\"ajs-footer\"></div>',\n                buttons: { primary: '<div class=\"ajs-primary ajs-buttons\"></div>', auxiliary: '<div class=\"ajs-auxiliary ajs-buttons\"></div>' },\n                button: '<button class=\"ajs-button\"></button>',\n                resizeHandle: '<div class=\"ajs-handle\"></div>',\n            },\n            //common class names\n            classes = {\n                base: 'alertify',\n                prefix: 'ajs-',\n                hidden: 'ajs-hidden',\n                noSelection: 'ajs-no-selection',\n                noOverflow: 'ajs-no-overflow',\n                noPadding:'ajs-no-padding',\n                modeless: 'ajs-modeless',\n                movable: 'ajs-movable',\n                resizable: 'ajs-resizable',\n                capture: 'ajs-capture',\n                fixed: 'ajs-fixed',\n                closable:'ajs-closable',\n                maximizable:'ajs-maximizable',\n                maximize: 'ajs-maximize',\n                restore: 'ajs-restore',\n                pinnable:'ajs-pinnable',\n                unpinned:'ajs-unpinned',\n                pin:'ajs-pin',\n                maximized: 'ajs-maximized',\n                animationIn: 'ajs-in',\n                animationOut: 'ajs-out',\n                shake:'ajs-shake',\n                basic:'ajs-basic',\n                frameless:'ajs-frameless'\n            };\n\t\t\t\n        /**\n         * Helper: initializes the dialog instance\n         * \n         * @return\t{Number}\tThe total count of currently open modals.\n         */\n        function initialize(instance){\n            \n            if(!instance.__internal){\n\t\t\t\t\n                //no need to expose init after this.\n                delete instance.__init;\n\t\t\t\t\n                //in case the script was included before body.\n                //after first dialog gets initialized, it won't be null anymore!\t\t\t\t\n                if(null === reflow){\n                    // set tabindex attribute on body element this allows script to give it\n                    // focus after the dialog is closed\n                    document.body.setAttribute( 'tabindex', '0' );\n                }\n\t\t\t\t\n                //get dialog buttons/focus setup\n                var setup;\n                if(typeof instance.setup === 'function'){\n                    setup = instance.setup();\n                    setup.options = setup.options  || {};\n                    setup.focus = setup.focus  || {};\n                }else{\n                    setup = {\n                        buttons:[],\n                        focus:{\n                            element:null,\n                            select:false\n                        },\n                        options:{\n                        }\n                    };\n                }\n                \n                //initialize hooks object.\n                if(typeof instance.hooks !== 'object'){\n                    instance.hooks = {};\n                }\n\n                //copy buttons defintion\n                var buttonsDefinition = [];\n                if(Array.isArray(setup.buttons)){\n                    for(var b=0;b<setup.buttons.length;b+=1){\n                        var ref  = setup.buttons[b],\n                            copy = {};\n                        for (var i in ref) {\n                            if (ref.hasOwnProperty(i)) {\n                                copy[i] = ref[i];\n                            }\n                        }\n                        buttonsDefinition.push(copy);\n                    }\n                }\n\n                var internal = instance.__internal = {\n                    /**\n                     * Flag holding the open state of the dialog\n                     * \n                     * @type {Boolean}\n                     */\n                    isOpen:false,\n                    /**\n                     * Active element is the element that will receive focus after\n                     * closing the dialog. It defaults as the body tag, but gets updated\n                     * to the last focused element before the dialog was opened.\n                     *\n                     * @type {Node}\n                     */\n                    activeElement:document.body,\n                    timerIn:undefined,\n                    timerOut:undefined,\n                    buttons: buttonsDefinition,\n                    focus: setup.focus,\n                    options: {\n                        title: undefined,\n                        modal: undefined,\n                        basic:undefined,\n                        frameless:undefined,\n                        pinned: undefined,\n                        movable: undefined,\n                        resizable: undefined,\n                        autoReset: undefined,\n                        closable: undefined,\n                        closableByDimmer: undefined,\n                        maximizable: undefined,\n                        startMaximized: undefined,\n                        pinnable: undefined,\n                        transition: undefined,\n                        padding:undefined,\n                        overflow:undefined,\n                        onshow:undefined,\n                        onclose:undefined,\n                        onfocus:undefined,\n                    },\n                    resetHandler:undefined,\n                    beginMoveHandler:undefined,\n                    beginResizeHandler:undefined,\n                    bringToFrontHandler:undefined,\n                    modalClickHandler:undefined,\n                    buttonsClickHandler:undefined,\n                    commandsClickHandler:undefined,\n                    transitionInHandler:undefined,\n                    transitionOutHandler:undefined\n                };\n\t\t\t\t\n                                \n                var elements = {};\n                //root node\n                elements.root = document.createElement('div');\n                \n                elements.root.className = classes.base + ' ' + classes.hidden + ' ';\n\t\t\t\t\n                elements.root.innerHTML = templates.dimmer + templates.modal;\n                \n                //dimmer\n                elements.dimmer = elements.root.firstChild;\n\t\t\t\t\n                //dialog\n                elements.modal = elements.root.lastChild;\n                elements.modal.innerHTML = templates.dialog;\n                elements.dialog = elements.modal.firstChild;\n                elements.dialog.innerHTML = templates.reset + templates.commands + templates.header + templates.body + templates.footer + templates.resizeHandle + templates.reset;\n\n                //reset links\n                elements.reset = [];\n                elements.reset.push(elements.dialog.firstChild);\n                elements.reset.push(elements.dialog.lastChild);\n                \n                //commands\n                elements.commands = {};\n                elements.commands.container = elements.reset[0].nextSibling;\n                elements.commands.pin = elements.commands.container.firstChild;\n                elements.commands.maximize = elements.commands.pin.nextSibling;\n                elements.commands.close = elements.commands.maximize.nextSibling;\n                \n                //header\n                elements.header = elements.commands.container.nextSibling;\n\n                //body\n                elements.body = elements.header.nextSibling;\n                elements.body.innerHTML = templates.content;\n                elements.content = elements.body.firstChild;\n\n                //footer\n                elements.footer = elements.body.nextSibling;\n                elements.footer.innerHTML = templates.buttons.auxiliary + templates.buttons.primary;\n                \n                //resize handle\n                elements.resizeHandle = elements.footer.nextSibling;\n\n                //buttons\n                elements.buttons = {};\n                elements.buttons.auxiliary = elements.footer.firstChild;\n                elements.buttons.primary = elements.buttons.auxiliary.nextSibling;\n                elements.buttons.primary.innerHTML = templates.button;\n                elements.buttonTemplate = elements.buttons.primary.firstChild;\n                //remove button template\n                elements.buttons.primary.removeChild(elements.buttonTemplate);\n                               \n                for(var x=0; x < instance.__internal.buttons.length; x+=1) {\n                    var button = instance.__internal.buttons[x];\n                    \n                    // add to the list of used keys.\n                    if(usedKeys.indexOf(button.key) < 0){\n                        usedKeys.push(button.key);\n                    }\n\n                    button.element = elements.buttonTemplate.cloneNode();\n                    button.element.innerHTML = button.text;\n                    if(typeof button.className === 'string' &&  button.className !== ''){\n                        addClass(button.element, button.className);\n                    }\n                    for(var key in button.attrs){\n                        if(key !== 'className' && button.attrs.hasOwnProperty(key)){\n                            button.element.setAttribute(key, button.attrs[key]);\n                        }\n                    }\n                    if(button.scope === 'auxiliary'){\n                        elements.buttons.auxiliary.appendChild(button.element);\n                    }else{\n                        elements.buttons.primary.appendChild(button.element);\n                    }\n                }\n                //make elements pubic\n                instance.elements = elements;\n                \n                //save event handlers delegates\n                internal.resetHandler = delegate(instance, onReset);\n                internal.beginMoveHandler = delegate(instance, beginMove);\n                internal.beginResizeHandler = delegate(instance, beginResize);\n                internal.bringToFrontHandler = delegate(instance, bringToFront);\n                internal.modalClickHandler = delegate(instance, modalClickHandler);\n                internal.buttonsClickHandler = delegate(instance, buttonsClickHandler);\n                internal.commandsClickHandler = delegate(instance, commandsClickHandler);\n                internal.transitionInHandler = delegate(instance, handleTransitionInEvent);\n                internal.transitionOutHandler = delegate(instance, handleTransitionOutEvent);\n\n                \n                //settings\n                instance.set('title', setup.options.title === undefined ? alertify.defaults.glossary.title : setup.options.title);\n\t\t\t\t\n                instance.set('modal', setup.options.modal === undefined ? alertify.defaults.modal : setup.options.modal);\n                instance.set('basic', setup.options.basic === undefined ? alertify.defaults.basic : setup.options.basic);\n                instance.set('frameless', setup.options.frameless === undefined ? alertify.defaults.frameless : setup.options.frameless);\n\t\t\t\t\t\t\t\n                instance.set('movable', setup.options.movable === undefined ? alertify.defaults.movable : setup.options.movable);\n                instance.set('resizable', setup.options.resizable === undefined ? alertify.defaults.resizable : setup.options.resizable);\n                instance.set('autoReset', setup.options.autoReset === undefined ? alertify.defaults.autoReset : setup.options.autoReset);\n\t\t\t\t\n                instance.set('closable', setup.options.closable === undefined ? alertify.defaults.closable : setup.options.closable);\n                instance.set('closableByDimmer', setup.options.closableByDimmer === undefined ? alertify.defaults.closableByDimmer : setup.options.closableByDimmer);\n                instance.set('maximizable', setup.options.maximizable === undefined ? alertify.defaults.maximizable : setup.options.maximizable);\n                instance.set('startMaximized', setup.options.startMaximized === undefined ? alertify.defaults.startMaximized : setup.options.startMaximized);\n\t\t\t\t\n                instance.set('pinnable', setup.options.pinnable === undefined ? alertify.defaults.pinnable : setup.options.pinnable);\n                instance.set('pinned', setup.options.pinned === undefined ? alertify.defaults.pinned : setup.options.pinned);\n\t\t\t\t\n                instance.set('transition', setup.options.transition === undefined ? alertify.defaults.transition : setup.options.transition);\n\n                instance.set('padding', setup.options.padding === undefined ? alertify.defaults.padding : setup.options.padding);\n                instance.set('overflow', setup.options.overflow === undefined ? alertify.defaults.overflow : setup.options.overflow);\n\t\t\t\t\n\n                // allow dom customization\n                if(typeof instance.build === 'function'){\n                    instance.build();\n                }\n            }\n            \n            //add to the end of the DOM tree.\n            document.body.appendChild(instance.elements.root);\n        }\n\n        /**\n         * Helper: maintains scroll position\n         *\n         */\n        var scrollX, scrollY;\n        function saveScrollPosition(){\n            scrollX = window.scrollX;\n            scrollY = window.scrollY;\n        }\n        function restoreScrollPosition(){\n            window.scrollTo(scrollX, scrollY);\n        }\n\n        /**\n         * Helper: adds/removes no-overflow class from body\n         *\n         */\n        function ensureNoOverflow(){\n            var requiresNoOverflow = 0;\n            for(var x=0;x<openDialogs.length;x+=1){\n                var instance = openDialogs[x];\n                if(instance.isModal() || instance.isMaximized()){\n                    requiresNoOverflow+=1;\n                }\n            }\n            if(requiresNoOverflow === 0){\n                //last open modal or last maximized one\n                removeClass(document.body, classes.noOverflow);\n            }else if(requiresNoOverflow > 0 && document.body.className.indexOf(classes.noOverflow) < 0){\n                //first open modal or first maximized one\n                addClass(document.body, classes.noOverflow);\n            }\n        }\n\t\t\n        /**\n         * Sets the name of the transition used to show/hide the dialog\n         * \n         * @param {Object} instance The dilog instance.\n         *\n         */\n        function updateTransition(instance, value, oldValue){\n            if(typeof oldValue === 'string'){\n                removeClass(instance.elements.root,classes.prefix +  oldValue);\n            }\n            addClass(instance.elements.root, classes.prefix + value);\n            reflow = instance.elements.root.offsetWidth;\n        }\n\t\t\n        /**\n         * Toggles the dialog display mode\n         *\n         * @param {Object} instance The dilog instance.\n         *\n         * @return {undefined}\n         */\n        function updateDisplayMode(instance){\n            if(instance.get('modal')){\n\n                //make modal\n                removeClass(instance.elements.root, classes.modeless);\n\t\t\t\t\n                //only if open\n                if(instance.isOpen()){\n                    unbindModelessEvents(instance);\n\t\t\t\t\t\n                    //in case a pinned modless dialog was made modal while open.\n                    updateAbsPositionFix(instance);\n\t\t\t\t\t\n                    ensureNoOverflow();\n                }\n            }else{\n                //make modelss\n                addClass(instance.elements.root, classes.modeless);\n\t\t\t\t\t\t\t\t\n                //only if open\n                if(instance.isOpen()){\n                    bindModelessEvents(instance);\n\t\t\t\t\t\n                    //in case pin/unpin was called while a modal is open\n                    updateAbsPositionFix(instance);\n\t\t\t\t\t\t\t\t\t\t\n                    ensureNoOverflow();\n                }\n            }\n        }\n\n        /**\n         * Toggles the dialog basic view mode \n         *\n         * @param {Object} instance The dilog instance.\n         *\n         * @return {undefined}\n         */\n        function updateBasicMode(instance){\n            if (instance.get('basic')) {\n                // add class\n                addClass(instance.elements.root, classes.basic);\n            } else {\n                // remove class\n                removeClass(instance.elements.root, classes.basic);\n            }\n        }\n\n        /**\n         * Toggles the dialog frameless view mode \n         *\n         * @param {Object} instance The dilog instance.\n         *\n         * @return {undefined}\n         */\n        function updateFramelessMode(instance){\n            if (instance.get('frameless')) {\n                // add class\n                addClass(instance.elements.root, classes.frameless);\n            } else {\n                // remove class\n                removeClass(instance.elements.root, classes.frameless);\n            }\n        }\n\t\t\n        /**\n         * Helper: Brings the modeless dialog to front, attached to modeless dialogs.\n         *\n         * @param {Event} event Focus event\n         * @param {Object} instance The dilog instance.\n         *\n         * @return {undefined}\n         */\n        function bringToFront(event, instance){\n            \n            // Do not bring to front if preceeded by an open modal\n            var index = openDialogs.indexOf(instance);\n            for(var x=index+1;x<openDialogs.length;x+=1){\n                if(openDialogs[x].isModal()){\n                    return;\n                }\n            }\n\t\t\t\n            // Bring to front by making it the last child.\n            if(document.body.lastChild !== instance.elements.root){\n                document.body.appendChild(instance.elements.root);\n                //also make sure its at the end of the list\n                openDialogs.splice(openDialogs.indexOf(instance),1);\n                openDialogs.push(instance);\n                setFocus(instance);\n            }\n\t\t\t\n            return false;\n        }\n\t\t\n        /**\n         * Helper: reflects dialogs options updates\n         *\n         * @param {Object} instance The dilog instance.\n         * @param {String} option The updated option name.\n         *\n         * @return\t{undefined}\t\n         */\n        function optionUpdated(instance, option, oldValue, newValue){\n            switch(option){\n            case 'title':\n                instance.setHeader(newValue);\n                break;\n            case 'modal':\n                updateDisplayMode(instance);\n                break;\n            case 'basic':\n                updateBasicMode(instance);\n                break;\n            case 'frameless':\n                updateFramelessMode(instance);\n                break;\n            case 'pinned':\n                updatePinned(instance);\n                break;\n            case 'closable':\n                updateClosable(instance);\n                break;\n            case 'maximizable':\n                updateMaximizable(instance);\n                break;\n            case 'pinnable':\n                updatePinnable(instance);\n                break;\n            case 'movable':\n                updateMovable(instance);\n                break;\n            case 'resizable':\n                updateResizable(instance);\n                break;\n            case 'transition':\n                updateTransition(instance,newValue, oldValue);\n                break;\n            case 'padding':\n                if(newValue){\n                    removeClass(instance.elements.root, classes.noPadding);\n                }else if(instance.elements.root.className.indexOf(classes.noPadding) < 0){\n                    addClass(instance.elements.root, classes.noPadding);\n                }\n                break;\n            case 'overflow':\n                if(newValue){\n                    removeClass(instance.elements.root, classes.noOverflow);\n                }else if(instance.elements.root.className.indexOf(classes.noOverflow) < 0){\n                    addClass(instance.elements.root, classes.noOverflow);\n                }\n                break;\n            case 'transition':\n                updateTransition(instance,newValue, oldValue);\n                break;\n            }\n\n            // internal on option updated event\n            if(typeof instance.hooks.onupdate === 'function'){\n                instance.hooks.onupdate.call(instance, option, oldValue, newValue);\n            }\n        }\n\t\t\n        /**\n         * Helper: reflects dialogs options updates\n         *\n         * @param {Object} instance The dilog instance.\n         * @param {Object} obj The object to set/get a value on/from.\n         * @param {Function} callback The callback function to call if the key was found.\n         * @param {String|Object} key A string specifying a propery name or a collection of key value pairs.\n         * @param {Object} value Optional, the value associated with the key (in case it was a string).\n         * @param {String} option The updated option name.\n         *\n         * @return\t{Object} result object \n         *\tThe result objects has an 'op' property, indicating of this is a SET or GET operation.\n         *\t\tGET: \n         *\t\t- found: a flag indicating if the key was found or not.\n         *\t\t- value: the property value.\n         *\t\tSET:\n         *\t\t- items: a list of key value pairs of the properties being set.\n         *\t\t\t\teach contains:\n         *\t\t\t\t\t- found: a flag indicating if the key was found or not.\n         *\t\t\t\t\t- key: the property key.\n         *\t\t\t\t\t- value: the property value.\n         */\n        function update(instance, obj, callback, key, value){\n            var result = {op:undefined, items: [] };\n            if(typeof value === 'undefined' && typeof key === 'string') {\n                //get\n                result.op = 'get';\n                if(obj.hasOwnProperty(key)){\n                    result.found = true;\n                    result.value = obj[key];\n                }else{\n                    result.found = false;\n                    result.value = undefined;\n                }\n            }\n            else\n            {\n                var old;\n                //set\n                result.op = 'set';\n                if(typeof key === 'object'){\n                    //set multiple\n                    var args = key;\n                    for (var prop in args) {\n                        if (obj.hasOwnProperty(prop)) {\n                            if(obj[prop] !== args[prop]){\n                                old = obj[prop];\n                                obj[prop] = args[prop];\n                                callback.call(instance,prop, old, args[prop]);\n                            }\n                            result.items.push({ 'key': prop, 'value': args[prop], 'found':true});\n                        }else{\n                            result.items.push({ 'key': prop, 'value': args[prop], 'found':false});\n                        }\n                    }\n                } else if (typeof key === 'string'){\n                    //set single\n                    if (obj.hasOwnProperty(key)) {\n                        if(obj[key] !== value){\n                            old  = obj[key];\n                            obj[key] = value;\n                            callback.call(instance,key, old, value);\n                        }\n                        result.items.push({'key': key, 'value': value , 'found':true});\n\t\t\t\t\t\t\n                    }else{\n                        result.items.push({'key': key, 'value': value , 'found':false});\n                    }\n                } else {\n                    //invalid params\n                    throw new Error('args must be a string or object');\n                }\n            }\n            return result;\n        }\n\t\t\n\n        /**\n         * Triggers a close event.\n         *\n         * @param {Object} instance\tThe dilog instance.\n         * \n         * @return {undefined}\n         */\n        function triggerClose(instance) {\n            var found;\n            triggerCallback(instance, function (button) {\n                return found = (button.invokeOnClose === true);\n            });\n            //none of the buttons registered as onclose callback\n            //close the dialog\n            if (!found && instance.isOpen()) {\n                instance.close();\n            }\n        }\n\n        /**\n         * Dialogs commands event handler, attached to the dialog commands element.\n         *\n         * @param {Event} event\tDOM event object.\n         * @param {Object} instance\tThe dilog instance.\n         * \n         * @return {undefined}\n         */\n        function commandsClickHandler(event, instance) {\n            var target = event.srcElement || event.target;\n            switch (target) {\n            case instance.elements.commands.pin:\n                if (!instance.isPinned()) {\n                    pin(instance);\n                } else {\n                    unpin(instance);\n                }\n                break;\n            case instance.elements.commands.maximize:\n                if (!instance.isMaximized()) {\n                    maximize(instance);\n                } else {\n                    restore(instance);\n                }\n                break;\n            case instance.elements.commands.close:\n                triggerClose(instance);\n                break;\n            }\n            return false;\n        }\n\n        /**\n         * Helper: pins the modeless dialog.\n         *\n         * @param {Object} instance\tThe dialog instance.\n         * \n         * @return {undefined}\n         */\n        function pin(instance) {\n            //pin the dialog\n            instance.set('pinned', true);\n        }\n\n        /**\n         * Helper: unpins the modeless dialog.\n         *\n         * @param {Object} instance\tThe dilog instance.\n         * \n         * @return {undefined}\n         */\n        function unpin(instance) {\n            //unpin the dialog \n            instance.set('pinned', false);\n        }\n\n\n        /**\n         * Helper: enlarges the dialog to fill the entire screen.\n         *\n         * @param {Object} instance\tThe dilog instance.\n         * \n         * @return {undefined}\n         */\n        function maximize(instance) {\n            //maximize the dialog \n            addClass(instance.elements.root, classes.maximized);\n            if (instance.isOpen()) {\n                ensureNoOverflow();\n            }\n        }\n\n        /**\n         * Helper: returns the dialog to its former size.\n         *\n         * @param {Object} instance\tThe dilog instance.\n         * \n         * @return {undefined}\n         */\n        function restore(instance) {\n            //maximize the dialog \n            removeClass(instance.elements.root, classes.maximized);\n            if (instance.isOpen()) {\n                ensureNoOverflow();\n            }\n        }\n\n        /**\n         * Show or hide the maximize box.\n         *\n         * @param {Object} instance The dilog instance.\n         * @param {Boolean} on True to add the behavior, removes it otherwise.\n         *\n         * @return {undefined}\n         */\n        function updatePinnable(instance) {\n            if (instance.get('pinnable')) {\n                // add class\n                addClass(instance.elements.root, classes.pinnable);\n            } else {\n                // remove class\n                removeClass(instance.elements.root, classes.pinnable);\n            }\n        }\n\n        /**\n         * Helper: Fixes the absolutly positioned modal div position.\n         *\n         * @param {Object} instance The dialog instance.\n         *\n         * @return {undefined}\n         */\n        function addAbsPositionFix(instance) {\n            var scrollLeft = getScrollLeft();\n            instance.elements.modal.style.marginTop = getScrollTop() + 'px';\n            instance.elements.modal.style.marginLeft = scrollLeft + 'px';\n            instance.elements.modal.style.marginRight = (-scrollLeft) + 'px';\n        }\n\n        /**\n         * Helper: Removes the absolutly positioned modal div position fix.\n         *\n         * @param {Object} instance The dialog instance.\n         *\n         * @return {undefined}\n         */\n        function removeAbsPositionFix(instance) {\n            var marginTop = parseInt(instance.elements.modal.style.marginTop, 10);\n            var marginLeft = parseInt(instance.elements.modal.style.marginLeft, 10);\n            instance.elements.modal.style.marginTop = '';\n            instance.elements.modal.style.marginLeft = '';\n            instance.elements.modal.style.marginRight = '';\n\n            if (instance.isOpen()) {\n                var top = 0,\n                    left = 0\n                ;\n                if (instance.elements.dialog.style.top !== '') {\n                    top = parseInt(instance.elements.dialog.style.top, 10);\n                }\n                instance.elements.dialog.style.top = (top + (marginTop - getScrollTop())) + 'px';\n\n                if (instance.elements.dialog.style.left !== '') {\n                    left = parseInt(instance.elements.dialog.style.left, 10);\n                }\n                instance.elements.dialog.style.left = (left + (marginLeft - getScrollLeft())) + 'px';\n            }\n        }\n        /**\n         * Helper: Adds/Removes the absolutly positioned modal div position fix based on its pinned setting.\n         *\n         * @param {Object} instance The dialog instance.\n         *\n         * @return {undefined}\n         */\n        function updateAbsPositionFix(instance) {\n            // if modeless and unpinned add fix\n            if (!instance.get('modal') && !instance.get('pinned')) {\n                addAbsPositionFix(instance);\n            } else {\n                removeAbsPositionFix(instance);\n            }\n        }\n        /**\n         * Toggles the dialog position lock | modeless only.\n         *\n         * @param {Object} instance The dilog instance.\n         * @param {Boolean} on True to make it modal, false otherwise.\n         *\n         * @return {undefined}\n         */\n        function updatePinned(instance) {\n            if (instance.get('pinned')) {\n                removeClass(instance.elements.root, classes.unpinned);\n                if (instance.isOpen()) {\n                    removeAbsPositionFix(instance);\n                }\n            } else {\n                addClass(instance.elements.root, classes.unpinned);\n                if (instance.isOpen() && !instance.isModal()) {\n                    addAbsPositionFix(instance);\n                }\n            }\n        }\n\n        /**\n         * Show or hide the maximize box.\n         *\n         * @param {Object} instance The dilog instance.\n         * @param {Boolean} on True to add the behavior, removes it otherwise.\n         *\n         * @return {undefined}\n         */\n        function updateMaximizable(instance) {\n            if (instance.get('maximizable')) {\n                // add class\n                addClass(instance.elements.root, classes.maximizable);\n            } else {\n                // remove class\n                removeClass(instance.elements.root, classes.maximizable);\n            }\n        }\n\n        /**\n         * Show or hide the close box.\n         *\n         * @param {Object} instance The dilog instance.\n         * @param {Boolean} on True to add the behavior, removes it otherwise.\n         *\n         * @return {undefined}\n         */\n        function updateClosable(instance) {\n            if (instance.get('closable')) {\n                // add class\n                addClass(instance.elements.root, classes.closable);\n                bindClosableEvents(instance);\n            } else {\n                // remove class\n                removeClass(instance.elements.root, classes.closable);\n                unbindClosableEvents(instance);\n            }\n        }\n\n        // flag to cancel click event if already handled by end resize event (the mousedown, mousemove, mouseup sequence fires a click event.).\n        var cancelClick = false;\n\n        /**\n         * Helper: closes the modal dialog when clicking the modal\n         *\n         * @param {Event} event\tDOM event object.\n         * @param {Object} instance The dilog instance.\n         *\n         * @return {undefined}\n         */\n        function modalClickHandler(event, instance) {\n            var target = event.srcElement || event.target;\n            if (!cancelClick && target === instance.elements.modal && instance.get('closableByDimmer') === true) {\n                triggerClose(instance);\n            }\n            cancelClick = false;\n            return false;\n        }\n\n        // flag to cancel keyup event if already handled by click event (pressing Enter on a focusted button).\n        var cancelKeyup = false;\n        /** \n         * Helper: triggers a button callback\n         *\n         * @param {Object}\t\tThe dilog instance.\n         * @param {Function}\tCallback to check which button triggered the event.\n         *\n         * @return {undefined}\n         */\n        function triggerCallback(instance, check) {\n            for (var idx = 0; idx < instance.__internal.buttons.length; idx += 1) {\n                var button = instance.__internal.buttons[idx];\n                if (!button.element.disabled && check(button)) {\n                    var closeEvent = createCloseEvent(idx, button);\n                    if (typeof instance.callback === 'function') {\n                        instance.callback.apply(instance, [closeEvent]);\n                    }\n                    //close the dialog only if not canceled.\n                    if (closeEvent.cancel === false) {\n                        instance.close();\n                    }\n                    break;\n                }\n            }\n        }\n\n        /**\n         * Clicks event handler, attached to the dialog footer.\n         *\n         * @param {Event}\t\tDOM event object.\n         * @param {Object}\t\tThe dilog instance.\n         * \n         * @return {undefined}\n         */\n        function buttonsClickHandler(event, instance) {\n            var target = event.srcElement || event.target;\n            triggerCallback(instance, function (button) {\n                // if this button caused the click, cancel keyup event\n                return button.element === target && (cancelKeyup = true);\n            });\n        }\n\n        /**\n         * Keyup event handler, attached to the document.body\n         *\n         * @param {Event}\t\tDOM event object.\n         * @param {Object}\t\tThe dilog instance.\n         * \n         * @return {undefined}\n         */\n        function keyupHandler(event) {\n            //hitting enter while button has focus will trigger keyup too.\n            //ignore if handled by clickHandler\n            if (cancelKeyup) {\n                cancelKeyup = false;\n                return;\n            }\n            var instance = openDialogs[openDialogs.length - 1];\n            var keyCode = event.keyCode;\n            if (instance.__internal.buttons.length === 0 && keyCode === keys.ESC && instance.get('closable') === true) {\n                triggerClose(instance);\n                return false;\n            }else if (usedKeys.indexOf(keyCode) > -1) {\n                triggerCallback(instance, function (button) {\n                    return button.key === keyCode;\n                });\n                return false;\n            }\n        }\n        /**\n        * Keydown event handler, attached to the document.body\n        *\n        * @param {Event}\t\tDOM event object.\n        * @param {Object}\t\tThe dilog instance.\n        * \n        * @return {undefined}\n        */\n        function keydownHandler(event) {\n            var instance = openDialogs[openDialogs.length - 1];\n            var keyCode = event.keyCode;\n            if (keyCode === keys.LEFT || keyCode === keys.RIGHT) {\n                var buttons = instance.__internal.buttons;\n                for (var x = 0; x < buttons.length; x += 1) {\n                    if (document.activeElement === buttons[x].element) {\n                        switch (keyCode) {\n                        case keys.LEFT:\n                            buttons[(x || buttons.length) - 1].element.focus();\n                            return;\n                        case keys.RIGHT:\n                            buttons[(x + 1) % buttons.length].element.focus();\n                            return;\n                        }\n                    }\n                }\n            }else if (keyCode < keys.F12 + 1 && keyCode > keys.F1 - 1 && usedKeys.indexOf(keyCode) > -1) {\n                event.preventDefault();\n                event.stopPropagation();\n                triggerCallback(instance, function (button) {\n                    return button.key === keyCode;\n                });\n                return false;\n            }\n        }\n\n\n        /**\n         * Sets focus to proper dialog element\n         *\n         * @param {Object} instance The dilog instance.\n         * @param {Node} [resetTarget=undefined] DOM element to reset focus to.\n         *\n         * @return {undefined}\n         */\n        function setFocus(instance, resetTarget) {\n            // reset target has already been determined.\n            if (resetTarget) {\n                resetTarget.focus();\n            } else {\n                // current instance focus settings\n                var focus = instance.__internal.focus;\n                // the focus element.\n                var element = focus.element;\n\n                switch (typeof focus.element) {\n                // a number means a button index\n                case 'number':\n                    if (instance.__internal.buttons.length > focus.element) {\n                        //in basic view, skip focusing the buttons.\n                        if (instance.get('basic') === true) {\n                            element = instance.elements.reset[0];\n                        } else {\n                            element = instance.__internal.buttons[focus.element].element;\n                        }\n                    }\n                    break;\n                // a string means querySelector to select from dialog body contents.\n                case 'string':\n                    element = instance.elements.body.querySelector(focus.element);\n                    break;\n                // a function should return the focus element.\n                case 'function':\n                    element = focus.element.call(instance);\n                    break;\n                }\n                \n                // if no focus element, default to first reset element.\n                if ((typeof element === 'undefined' || element === null) && instance.__internal.buttons.length === 0) {\n                    element = instance.elements.reset[0];\n                }\n                // focus\n                if (element && element.focus) {\n                    element.focus();\n                    // if selectable\n                    if (focus.select && element.select) {\n                        element.select();\n                    }\n                }\n            }\n        }\n\n        /**\n         * Focus event handler, attached to document.body and dialogs own reset links.\n         * handles the focus for modal dialogs only.\n         *\n         * @param {Event} event DOM focus event object.\n         * @param {Object} instance The dilog instance.\n         *\n         * @return {undefined}\n         */\n        function onReset(event, instance) {\n\n            // should work on last modal if triggered from document.body \n            if (!instance) {\n                for (var x = openDialogs.length - 1; x > -1; x -= 1) {\n                    if (openDialogs[x].isModal()) {\n                        instance = openDialogs[x];\n                        break;\n                    }\n                }\n            }\n            // if modal\n            if (instance && instance.isModal()) {\n                // determine reset target to enable forward/backward tab cycle.\n                var resetTarget, target = event.srcElement || event.target;\n                var lastResetElement = target === instance.elements.reset[1] || (instance.__internal.buttons.length === 0 && target === document.body);\n\n                // if last reset link, then go to maximize or close\n                if (lastResetElement) {\n                    if (instance.get('maximizable')) {\n                        resetTarget = instance.elements.commands.maximize;\n                    } else if (instance.get('closable')) {\n                        resetTarget = instance.elements.commands.close;\n                    }\n                }\n                // if no reset target found, try finding the best button\n                if (resetTarget === undefined) {\n                    if (typeof instance.__internal.focus.element === 'number') {\n                        // button focus element, go to first available button\n                        if (target === instance.elements.reset[0]) {\n                            resetTarget = instance.elements.buttons.auxiliary.firstChild || instance.elements.buttons.primary.firstChild;\n                        } else if (lastResetElement) {\n                            //restart the cycle by going to first reset link\n                            resetTarget = instance.elements.reset[0];\n                        }\n                    } else {\n                        // will reach here when tapping backwards, so go to last child\n                        // The focus element SHOULD NOT be a button (logically!).\n                        if (target === instance.elements.reset[0]) {\n                            resetTarget = instance.elements.buttons.primary.lastChild || instance.elements.buttons.auxiliary.lastChild;\n                        }\n                    }\n                }\n                // focus\n                setFocus(instance, resetTarget);\n            }\n        }\n        /**\n         * Transition in transitionend event handler. \n         *\n         * @param {Event}\t\tTransitionEnd event object.\n         * @param {Object}\t\tThe dilog instance.\n         *\n         * @return {undefined}\n         */\n        function handleTransitionInEvent(event, instance) {\n            // clear the timer\n            clearTimeout(instance.__internal.timerIn);\n\n            // once transition is complete, set focus\n            setFocus(instance);\n\n            //restore scroll to prevent document jump\n            restoreScrollPosition();\n\n            // allow handling key up after transition ended.\n            cancelKeyup = false;\n\n            // allow custom `onfocus` method\n            if (typeof instance.get('onfocus') === 'function') {\n                instance.get('onfocus').call(instance);\n            }\n\n            // unbind the event\n            off(instance.elements.dialog, transition.type, instance.__internal.transitionInHandler);\n\n            removeClass(instance.elements.root, classes.animationIn);\n        }\n\n        /**\n         * Transition out transitionend event handler. \n         *\n         * @param {Event}\t\tTransitionEnd event object.\n         * @param {Object}\t\tThe dilog instance.\n         *\n         * @return {undefined}\n         */\n        function handleTransitionOutEvent(event, instance) {\n            // clear the timer\n            clearTimeout(instance.__internal.timerOut);\n            // unbind the event\n            off(instance.elements.dialog, transition.type, instance.__internal.transitionOutHandler);\n\n            // reset move updates\n            resetMove(instance);\n            // reset resize updates\n            resetResize(instance);\n\n            // restore if maximized\n            if (instance.isMaximized() && !instance.get('startMaximized')) {\n                restore(instance);\n            }\n\n            // return focus to the last active element\n            if (alertify.defaults.maintainFocus && instance.__internal.activeElement) {\n                instance.__internal.activeElement.focus();\n                instance.__internal.activeElement = null;\n            }\n        }\n        /* Controls moving a dialog around */\n        //holde the current moving instance\n        var movable = null,\n            //holds the current X offset when move starts\n            offsetX = 0,\n            //holds the current Y offset when move starts\n            offsetY = 0,\n            xProp = 'pageX',\n            yProp = 'pageY'\n        ;\n\n        /**\n         * Helper: sets the element top/left coordinates\n         *\n         * @param {Event} event\tDOM event object.\n         * @param {Node} element The element being moved.\n         * \n         * @return {undefined}\n         */\n        function moveElement(event, element) {\n            element.style.left = (event[xProp] - offsetX) + 'px';\n            element.style.top = (event[yProp] - offsetY) + 'px';\n        }\n\n        /**\n         * Triggers the start of a move event, attached to the header element mouse down event.\n         * Adds no-selection class to the body, disabling selection while moving.\n         *\n         * @param {Event} event\tDOM event object.\n         * @param {Object} instance The dilog instance.\n         * \n         * @return {Boolean} false\n         */\n        function beginMove(event, instance) {\n            if (resizable === null && !instance.isMaximized() && instance.get('movable')) {\n                var eventSrc;\n                if (event.type === 'touchstart') {\n                    event.preventDefault();\n                    eventSrc = event.targetTouches[0];\n                    xProp = 'clientX';\n                    yProp = 'clientY';\n                } else if (event.button === 0) {\n                    eventSrc = event;\n                }\n\n                if (eventSrc) {\n\n                    movable = instance;\n                    offsetX = eventSrc[xProp];\n                    offsetY = eventSrc[yProp];\n\n                    var element = instance.elements.dialog;\n                    addClass(element, classes.capture);\n\n                    if (element.style.left) {\n                        offsetX -= parseInt(element.style.left, 10);\n                    }\n\n                    if (element.style.top) {\n                        offsetY -= parseInt(element.style.top, 10);\n                    }\n                    moveElement(eventSrc, element);\n\n                    addClass(document.body, classes.noSelection);\n                    return false;\n                }\n            }\n        }\n\n        /**\n         * The actual move handler,  attached to document.body mousemove event.\n         *\n         * @param {Event} event\tDOM event object.\n         * \n         * @return {undefined}\n         */\n        function move(event) {\n            if (movable) {\n                var eventSrc;\n                if (event.type === 'touchmove') {\n                    event.preventDefault();\n                    eventSrc = event.targetTouches[0];\n                } else if (event.button === 0) {\n                    eventSrc = event;\n                }\n                if (eventSrc) {\n                    moveElement(eventSrc, movable.elements.dialog);\n                }\n            }\n        }\n\n        /**\n         * Triggers the end of a move event,  attached to document.body mouseup event.\n         * Removes no-selection class from document.body, allowing selection.\n         *\n         * @return {undefined}\n         */\n        function endMove() {\n            if (movable) {\n                var element = movable.elements.dialog;\n                movable = null;\n                removeClass(document.body, classes.noSelection);\n                removeClass(element, classes.capture);\n            }\n        }\n\n        /**\n         * Resets any changes made by moving the element to its original state,\n         *\n         * @param {Object} instance The dilog instance.\n         *\n         * @return {undefined}\n         */\n        function resetMove(instance) {\n            movable = null;\n            var element = instance.elements.dialog;\n            element.style.left = element.style.top = '';\n        }\n\n        /**\n         * Updates the dialog move behavior.\n         *\n         * @param {Object} instance The dilog instance.\n         * @param {Boolean} on True to add the behavior, removes it otherwise.\n         *\n         * @return {undefined}\n         */\n        function updateMovable(instance) {\n            if (instance.get('movable')) {\n                // add class\n                addClass(instance.elements.root, classes.movable);\n                if (instance.isOpen()) {\n                    bindMovableEvents(instance);\n                }\n            } else {\n\n                //reset\n                resetMove(instance);\n                // remove class\n                removeClass(instance.elements.root, classes.movable);\n                if (instance.isOpen()) {\n                    unbindMovableEvents(instance);\n                }\n            }\n        }\n\n        /* Controls moving a dialog around */\n        //holde the current instance being resized\t\t\n        var resizable = null,\n            //holds the staring left offset when resize starts.\n            startingLeft = Number.Nan,\n            //holds the staring width when resize starts.\n            startingWidth = 0,\n            //holds the initial width when resized for the first time.\n            minWidth = 0,\n            //holds the offset of the resize handle.\n            handleOffset = 0\n        ;\n\n        /**\n         * Helper: sets the element width/height and updates left coordinate if neccessary.\n         *\n         * @param {Event} event\tDOM mousemove event object.\n         * @param {Node} element The element being moved.\n         * @param {Boolean} pinned A flag indicating if the element being resized is pinned to the screen.\n         * \n         * @return {undefined}\n         */\n        function resizeElement(event, element, pageRelative) {\n\n            //calculate offsets from 0,0\n            var current = element;\n            var offsetLeft = 0;\n            var offsetTop = 0;\n            do {\n                offsetLeft += current.offsetLeft;\n                offsetTop += current.offsetTop;\n            } while (current = current.offsetParent);\n\n            // determine X,Y coordinates.\n            var X, Y;\n            if (pageRelative === true) {\n                X = event.pageX;\n                Y = event.pageY;\n            } else {\n                X = event.clientX;\n                Y = event.clientY;\n            }\n            // rtl handling\n            var isRTL = isRightToLeft();\n            if (isRTL) {\n                // reverse X \n                X = document.body.offsetWidth - X;\n                // if has a starting left, calculate offsetRight\n                if (!isNaN(startingLeft)) {\n                    offsetLeft = document.body.offsetWidth - offsetLeft - element.offsetWidth;\n                }\n            }\n\n            // set width/height\n            element.style.height = (Y - offsetTop + handleOffset) + 'px';\n            element.style.width = (X - offsetLeft + handleOffset) + 'px';\n\n            // if the element being resized has a starting left, maintain it.\n            // the dialog is centered, divide by half the offset to maintain the margins.\n            if (!isNaN(startingLeft)) {\n                var diff = Math.abs(element.offsetWidth - startingWidth) * 0.5;\n                if (isRTL) {\n                    //negate the diff, why?\n                    //when growing it should decrease left\n                    //when shrinking it should increase left\n                    diff *= -1;\n                }\n                if (element.offsetWidth > startingWidth) {\n                    //growing\n                    element.style.left = (startingLeft + diff) + 'px';\n                } else if (element.offsetWidth >= minWidth) {\n                    //shrinking\n                    element.style.left = (startingLeft - diff) + 'px';\n                }\n            }\n        }\n\n        /**\n         * Triggers the start of a resize event, attached to the resize handle element mouse down event.\n         * Adds no-selection class to the body, disabling selection while moving.\n         *\n         * @param {Event} event\tDOM event object.\n         * @param {Object} instance The dilog instance.\n         * \n         * @return {Boolean} false\n         */\n        function beginResize(event, instance) {\n            if (!instance.isMaximized()) {\n                var eventSrc;\n                if (event.type === 'touchstart') {\n                    event.preventDefault();\n                    eventSrc = event.targetTouches[0];\n                } else if (event.button === 0) {\n                    eventSrc = event;\n                }\n                if (eventSrc) {\n                    resizable = instance;\n                    handleOffset = instance.elements.resizeHandle.offsetHeight / 2;\n                    var element = instance.elements.dialog;\n                    addClass(element, classes.capture);\n                    startingLeft = parseInt(element.style.left, 10);\n                    element.style.height = element.offsetHeight + 'px';\n                    element.style.minHeight = instance.elements.header.offsetHeight + instance.elements.footer.offsetHeight + 'px';\n                    element.style.width = (startingWidth = element.offsetWidth) + 'px';\n\n                    if (element.style.maxWidth !== 'none') {\n                        element.style.minWidth = (minWidth = element.offsetWidth) + 'px';\n                    }\n                    element.style.maxWidth = 'none';\n                    addClass(document.body, classes.noSelection);\n                    return false;\n                }\n            }\n        }\n\n        /**\n         * The actual resize handler,  attached to document.body mousemove event.\n         *\n         * @param {Event} event\tDOM event object.\n         * \n         * @return {undefined}\n         */\n        function resize(event) {\n            if (resizable) {\n                var eventSrc;\n                if (event.type === 'touchmove') {\n                    event.preventDefault();\n                    eventSrc = event.targetTouches[0];\n                } else if (event.button === 0) {\n                    eventSrc = event;\n                }\n                if (eventSrc) {\n                    resizeElement(eventSrc, resizable.elements.dialog, !resizable.get('modal') && !resizable.get('pinned'));\n                }\n            }\n        }\n\n        /**\n         * Triggers the end of a resize event,  attached to document.body mouseup event.\n         * Removes no-selection class from document.body, allowing selection.\n         *\n         * @return {undefined}\n         */\n        function endResize() {\n            if (resizable) {\n                var element = resizable.elements.dialog;\n                resizable = null;\n                removeClass(document.body, classes.noSelection);\n                removeClass(element, classes.capture);\n                cancelClick = true;\n            }\n        }\n\n        /**\n         * Resets any changes made by resizing the element to its original state.\n         *\n         * @param {Object} instance The dilog instance.\n         *\n         * @return {undefined}\n         */\n        function resetResize(instance) {\n            resizable = null;\n            var element = instance.elements.dialog;\n            if (element.style.maxWidth === 'none') {\n                //clear inline styles.\n                element.style.maxWidth = element.style.minWidth = element.style.width = element.style.height = element.style.minHeight = element.style.left = '';\n                //reset variables.\n                startingLeft = Number.Nan;\n                startingWidth = minWidth = handleOffset = 0;\n            }\n        }\n\n\n        /**\n         * Updates the dialog move behavior.\n         *\n         * @param {Object} instance The dilog instance.\n         * @param {Boolean} on True to add the behavior, removes it otherwise.\n         *\n         * @return {undefined}\n         */\n        function updateResizable(instance) {\n            if (instance.get('resizable')) {\n                // add class\n                addClass(instance.elements.root, classes.resizable);\n                if (instance.isOpen()) {\n                    bindResizableEvents(instance);\n                }\n            } else {\n                //reset\n                resetResize(instance);\n                // remove class\n                removeClass(instance.elements.root, classes.resizable);\n                if (instance.isOpen()) {\n                    unbindResizableEvents(instance);\n                }\n            }\n        }\n\n        /**\n         * Reset move/resize on window resize.\n         *\n         * @param {Event} event\twindow resize event object.\n         *\n         * @return {undefined}\n         */\n        function windowResize(/*event*/) {\n            for (var x = 0; x < openDialogs.length; x += 1) {\n                var instance = openDialogs[x];\n                if (instance.get('autoReset')) {\n                    resetMove(instance);\n                    resetResize(instance);\n                }\n            }\n        }\n        /**\n         * Bind dialogs events\n         *\n         * @param {Object} instance The dilog instance.\n         *\n         * @return {undefined}\n         */\n        function bindEvents(instance) {\n            // if first dialog, hook global handlers\n            if (openDialogs.length === 1) {\n                //global\n                on(window, 'resize', windowResize);\n                on(document.body, 'keyup', keyupHandler);\n                on(document.body, 'keydown', keydownHandler);\n                on(document.body, 'focus', onReset);\n\n                //move\n                on(document.documentElement, 'mousemove', move);\n                on(document.documentElement, 'touchmove', move);\n                on(document.documentElement, 'mouseup', endMove);\n                on(document.documentElement, 'touchend', endMove);\n                //resize\n                on(document.documentElement, 'mousemove', resize);\n                on(document.documentElement, 'touchmove', resize);\n                on(document.documentElement, 'mouseup', endResize);\n                on(document.documentElement, 'touchend', endResize);\n            }\n\n            // common events\n            on(instance.elements.commands.container, 'click', instance.__internal.commandsClickHandler);\n            on(instance.elements.footer, 'click', instance.__internal.buttonsClickHandler);\n            on(instance.elements.reset[0], 'focus', instance.__internal.resetHandler);\n            on(instance.elements.reset[1], 'focus', instance.__internal.resetHandler);\n\n            //prevent handling key up when dialog is being opened by a key stroke.\n            cancelKeyup = true;\n            // hook in transition handler\n            on(instance.elements.dialog, transition.type, instance.__internal.transitionInHandler);\n\n            // modelss only events\n            if (!instance.get('modal')) {\n                bindModelessEvents(instance);\n            }\n\n            // resizable\n            if (instance.get('resizable')) {\n                bindResizableEvents(instance);\n            }\n\n            // movable\n            if (instance.get('movable')) {\n                bindMovableEvents(instance);\n            }\n        }\n\n        /**\n         * Unbind dialogs events\n         *\n         * @param {Object} instance The dilog instance.\n         *\n         * @return {undefined}\n         */\n        function unbindEvents(instance) {\n            // if last dialog, remove global handlers\n            if (openDialogs.length === 1) {\n                //global\n                off(window, 'resize', windowResize);\n                off(document.body, 'keyup', keyupHandler);\n                off(document.body, 'keydown', keydownHandler);\n                off(document.body, 'focus', onReset);\n                //move\n                off(document.documentElement, 'mousemove', move);\n                off(document.documentElement, 'mouseup', endMove);\n                //resize\n                off(document.documentElement, 'mousemove', resize);\n                off(document.documentElement, 'mouseup', endResize);\n            }\n\n            // common events\n            off(instance.elements.commands.container, 'click', instance.__internal.commandsClickHandler);\n            off(instance.elements.footer, 'click', instance.__internal.buttonsClickHandler);\n            off(instance.elements.reset[0], 'focus', instance.__internal.resetHandler);\n            off(instance.elements.reset[1], 'focus', instance.__internal.resetHandler);\n\n            // hook out transition handler\n            on(instance.elements.dialog, transition.type, instance.__internal.transitionOutHandler);\n\n            // modelss only events\n            if (!instance.get('modal')) {\n                unbindModelessEvents(instance);\n            }\n\n            // movable\n            if (instance.get('movable')) {\n                unbindMovableEvents(instance);\n            }\n\n            // resizable\n            if (instance.get('resizable')) {\n                unbindResizableEvents(instance);\n            }\n\n        }\n\n        /**\n         * Bind modeless specific events\n         *\n         * @param {Object} instance The dilog instance.\n         *\n         * @return {undefined}\n         */\n        function bindModelessEvents(instance) {\n            on(instance.elements.dialog, 'focus', instance.__internal.bringToFrontHandler, true);\n        }\n\n        /**\n         * Unbind modeless specific events\n         *\n         * @param {Object} instance The dilog instance.\n         *\n         * @return {undefined}\n         */\n        function unbindModelessEvents(instance) {\n            off(instance.elements.dialog, 'focus', instance.__internal.bringToFrontHandler, true);\n        }\n\n\n\n        /**\n         * Bind movable specific events\n         *\n         * @param {Object} instance The dilog instance.\n         *\n         * @return {undefined}\n         */\n        function bindMovableEvents(instance) {\n            on(instance.elements.header, 'mousedown', instance.__internal.beginMoveHandler);\n            on(instance.elements.header, 'touchstart', instance.__internal.beginMoveHandler);\n        }\n\n        /**\n         * Unbind movable specific events\n         *\n         * @param {Object} instance The dilog instance.\n         *\n         * @return {undefined}\n         */\n        function unbindMovableEvents(instance) {\n            off(instance.elements.header, 'mousedown', instance.__internal.beginMoveHandler);\n            off(instance.elements.header, 'touchstart', instance.__internal.beginMoveHandler);\n        }\n\n\n\n        /**\n         * Bind resizable specific events\n         *\n         * @param {Object} instance The dilog instance.\n         *\n         * @return {undefined}\n         */\n        function bindResizableEvents(instance) {\n            on(instance.elements.resizeHandle, 'mousedown', instance.__internal.beginResizeHandler);\n            on(instance.elements.resizeHandle, 'touchstart', instance.__internal.beginResizeHandler);\n        }\n\n        /**\n         * Unbind resizable specific events\n         *\n         * @param {Object} instance The dilog instance.\n         *\n         * @return {undefined}\n         */\n        function unbindResizableEvents(instance) {\n            off(instance.elements.resizeHandle, 'mousedown', instance.__internal.beginResizeHandler);\n            off(instance.elements.resizeHandle, 'touchstart', instance.__internal.beginResizeHandler);\n        }\n\n        /**\n         * Bind closable events\n         *\n         * @param {Object} instance The dilog instance.\n         *\n         * @return {undefined}\n         */\n        function bindClosableEvents(instance) {\n            on(instance.elements.modal, 'click', instance.__internal.modalClickHandler);\n        }\n\n        /**\n         * Unbind closable specific events\n         *\n         * @param {Object} instance The dilog instance.\n         *\n         * @return {undefined}\n         */\n        function unbindClosableEvents(instance) {\n            off(instance.elements.modal, 'click', instance.__internal.modalClickHandler);\n        }\n        // dialog API\n        return {\n            __init:initialize,\n            /**\n             * Check if dialog is currently open\n             *\n             * @return {Boolean}\n             */\n            isOpen: function () {\n                return this.__internal.isOpen;\n            },\n            isModal: function (){\n                return this.elements.root.className.indexOf(classes.modeless) < 0;\n            },\n            isMaximized:function(){\n                return this.elements.root.className.indexOf(classes.maximized) > -1;\n            },\n            isPinned:function(){\n                return this.elements.root.className.indexOf(classes.unpinned) < 0;\n            },\n            maximize:function(){\n                if(!this.isMaximized()){\n                    maximize(this);\n                }\n                return this;\n            },\n            restore:function(){\n                if(this.isMaximized()){\n                    restore(this);\n                }\n                return this;\n            },\n            pin:function(){\n                if(!this.isPinned()){\n                    pin(this);\n                }\n                return this;\n            },\n            unpin:function(){\n                if(this.isPinned()){\n                    unpin(this);\n                }\n                return this;\n            },\n            /**\n             * Move the dialog to a specific x/y coordinates\n             *\n             * @param {Number} x    The new dialog x coordinate in pixels.\n             * @param {Number} y    The new dialog y coordinate in pixels.\n             *\n             * @return {Object} The dialog instance.\n             */\n            moveTo:function(x,y){\n                if(!isNaN(x) && !isNaN(y)){\n                    var element = this.elements.dialog,\n                        current = element,\n                        offsetLeft = 0,\n                        offsetTop = 0;\n                    \n                    //subtract existing left,top\n                    if (element.style.left) {\n                        offsetLeft -= parseInt(element.style.left, 10);\n                    }\n                    if (element.style.top) {\n                        offsetTop -= parseInt(element.style.top, 10);\n                    }\n                    //calc offset\n                    do {\n                        offsetLeft += current.offsetLeft;\n                        offsetTop += current.offsetTop;\n                    } while (current = current.offsetParent);\n\n                    //calc left, top\n                    var left = (x - offsetLeft);\n                    var top  = (y - offsetTop);\n\n                    //// rtl handling\n                    if (isRightToLeft()) {\n                        left *= -1;\n                    }\n\n                    element.style.left = left + 'px';\n                    element.style.top = top + 'px';\n                }\n                return this;\n            },\n            /**\n             * Resize the dialog to a specific width/height (the dialog must be 'resizable').\n             * The dialog can be resized to:\n             *  A minimum width equal to the initial display width\n             *  A minimum height equal to the sum of header/footer heights.\n             *\n             *\n             * @param {Number or String} width    The new dialog width in pixels or in percent.\n             * @param {Number or String} height   The new dialog height in pixels or in percent.\n             *\n             * @return {Object} The dialog instance.\n             */\n            resizeTo:function(width,height){\n                var w = parseFloat(width),\n                    h = parseFloat(height),\n                    regex = /(\\d*\\.\\d+|\\d+)%/\n                ;\n\n                if(!isNaN(w) && !isNaN(h) && this.get('resizable') === true){\n\n                    if(('' + width).match(regex)){\n                        w = w / 100 * document.documentElement.clientWidth ;\n                    }\n\n                    if(('' + height).match(regex)){\n                        h = h / 100 * document.documentElement.clientHeight;\n                    }\n\n                    var element = this.elements.dialog;\n                    if (element.style.maxWidth !== 'none') {\n                        element.style.minWidth = (minWidth = element.offsetWidth) + 'px';\n                    }\n                    element.style.maxWidth = 'none';\n                    element.style.minHeight = this.elements.header.offsetHeight + this.elements.footer.offsetHeight + 'px';\n                    element.style.width = w + 'px';\n                    element.style.height = h + 'px';\n                }\n                return this;\n            },\n            /**\n             * Gets or Sets dialog settings/options \n             *\n             * @param {String|Object} key A string specifying a propery name or a collection of key/value pairs.\n             * @param {Object} value Optional, the value associated with the key (in case it was a string).\n             *\n             * @return {undefined}\n             */\n            setting : function (key, value) {\n                var self = this;\n                var result = update(this, this.__internal.options, function(k,o,n){ optionUpdated(self,k,o,n); }, key, value);\n                if(result.op === 'get'){\n                    if(result.found){\n                        return result.value;\n                    }else if(typeof this.settings !== 'undefined'){\n                        return update(this, this.settings, this.settingUpdated || function(){}, key, value).value;\n                    }else{\n                        return undefined;\n                    }\n                }else if(result.op === 'set'){\n                    if(result.items.length > 0){\n                        var callback = this.settingUpdated || function(){};\n                        for(var x=0;x<result.items.length;x+=1){\n                            var item = result.items[x];\n                            if(!item.found && typeof this.settings !== 'undefined'){\n                                update(this, this.settings, callback, item.key, item.value);\n                            }\n                        }\n                    }\n                    return this;\n                }\n            },\n            /**\n             * [Alias] Sets dialog settings/options \n             */\n            set:function(key, value){\n                this.setting(key,value);\n                return this;\n            },\n            /**\n             * [Alias] Gets dialog settings/options \n             */\n            get:function(key){\n                return this.setting(key);\n            },\n            /**\n            * Sets dialog header\n            * @content {string or element}\n            *\n            * @return {undefined}\n            */\n            setHeader:function(content){\n                if(typeof content === 'string'){\n                    clearContents(this.elements.header);\n                    this.elements.header.innerHTML = content;\n                }else if (content instanceof window.HTMLElement && this.elements.header.firstChild !== content){\n                    clearContents(this.elements.header);\n                    this.elements.header.appendChild(content);\n                }\n                return this;\n            },\n            /**\n            * Sets dialog contents\n            * @content {string or element}\n            *\n            * @return {undefined}\n            */\n            setContent:function(content){\n                if(typeof content === 'string'){\n                    clearContents(this.elements.content);\n                    this.elements.content.innerHTML = content;\n                }else if (content instanceof window.HTMLElement && this.elements.content.firstChild !== content){\n                    clearContents(this.elements.content);\n                    this.elements.content.appendChild(content);\n                }\n                return this;\n            },\n            /**\n             * Show the dialog as modal\n             *\n             * @return {Object} the dialog instance.\n             */\n            showModal: function(className){\n                return this.show(true, className);\n            },\n            /**\n             * Show the dialog\n             *\n             * @return {Object} the dialog instance.\n             */\n            show: function (modal, className) {\n                \n                // ensure initialization\n                initialize(this);\n\t\t\t\t\t\t\t\t\n                if ( !this.__internal.isOpen ) {\n\t\t\t\t\t\n                    // add to open dialogs\n                    this.__internal.isOpen = true;\n                    openDialogs.push(this);\n\n                    // save last focused element\n                    if(alertify.defaults.maintainFocus){\n                        this.__internal.activeElement = document.activeElement;\n                    }\n\n                    //allow custom dom manipulation updates before showing the dialog.\n                    if(typeof this.prepare === 'function'){\n                        this.prepare();\n                    }\n\n                    bindEvents(this);\n\n                    if(modal !== undefined){\n                        this.set('modal', modal);\n                    }\n\t\t\t\t\t\n                    //save scroll to prevent document jump\n                    saveScrollPosition();\n\n                    ensureNoOverflow();\n\t\t\t\t\t\n                    // allow custom dialog class on show\n                    if(typeof className === 'string' && className !== ''){\n                        this.__internal.className = className;\n                        addClass(this.elements.root, className);\n                    }\n\n                    // maximize if start maximized\n                    if ( this.get('startMaximized')) {\n                        this.maximize();\n                    }else if(this.isMaximized()){\n                        restore(this);\n                    }\n\t\t\t\t\t\n                    updateAbsPositionFix(this);\n\n                    removeClass(this.elements.root, classes.animationOut);\n                    addClass(this.elements.root, classes.animationIn);\n\n                    // set 1s fallback in case transition event doesn't fire\n                    clearTimeout( this.__internal.timerIn);\n                    this.__internal.timerIn = setTimeout( this.__internal.transitionInHandler, transition.supported ? 1000 : 100 );\n\n                    if(isSafari){\n                        // force desktop safari reflow\n                        var root = this.elements.root;\n                        root.style.display  = 'none';\n                        setTimeout(function(){root.style.display  = 'block';}, 0);\n                    }\n\n                    //reflow\n                    reflow = this.elements.root.offsetWidth;\n                  \n                    // show dialog\n                    removeClass(this.elements.root, classes.hidden);\n\n                    // internal on show event\n                    if(typeof this.hooks.onshow === 'function'){\n                        this.hooks.onshow.call(this);\n                    }\n\n                    // allow custom `onshow` method\n                    if ( typeof this.get('onshow') === 'function' ) {\n                        this.get('onshow').call(this);\n                    }\n\n                }else{\n                    // reset move updates\n                    resetMove(this);\n                    // reset resize updates\n                    resetResize(this);\n                    // shake the dialog to indicate its already open\n                    addClass(this.elements.dialog, classes.shake);\n                    var self = this;\n                    setTimeout(function(){\n                        removeClass(self.elements.dialog, classes.shake);\n                    },200);\n                }\n                return this;\n            },\n            /**\n             * Close the dialog\n             *\n             * @return {Object} The dialog instance\n             */\n            close: function () {\n                if (this.__internal.isOpen ) {\n\t\t\t\t\t\n                    unbindEvents(this);\n\t\t\t\t\t\n                    removeClass(this.elements.root, classes.animationIn);\n                    addClass(this.elements.root, classes.animationOut);\n\n                    // set 1s fallback in case transition event doesn't fire\n                    clearTimeout( this.__internal.timerOut );\n                    this.__internal.timerOut = setTimeout( this.__internal.transitionOutHandler, transition.supported ? 1000 : 100 );\n                    // hide dialog\n                    addClass(this.elements.root, classes.hidden);\n                    //reflow\n                    reflow = this.elements.modal.offsetWidth;\n\n                    // remove custom dialog class on hide\n                    if (typeof this.__internal.className !== 'undefined' && this.__internal.className !== '') {\n                        removeClass(this.elements.root, this.__internal.className);\n                    }\n\n                    // internal on close event\n                    if(typeof this.hooks.onclose === 'function'){\n                        this.hooks.onclose.call(this);\n                    }\n\n                    // allow custom `onclose` method\n                    if ( typeof this.get('onclose') === 'function' ) {\n                        this.get('onclose').call(this);\n                    }\n\t\t\t\t\t\n                    //remove from open dialogs               \n                    openDialogs.splice(openDialogs.indexOf(this),1);\n                    this.__internal.isOpen = false;\n\t\t\t\t\t\n                    ensureNoOverflow();\n\t\t\t\t\t\n                }\n                return this;\n            },\n            /**\n             * Close all open dialogs except this.\n             *\n             * @return {undefined}\n             */\n            closeOthers:function(){\n                alertify.closeAll(this);\n                return this;\n            }\n        };\n\t} () );\n    var notifier = (function () {\n        var reflow,\n            element,\n            openInstances = [],\n            classes = {\n                base: 'alertify-notifier',\n                message: 'ajs-message',\n                top: 'ajs-top',\n                right: 'ajs-right',\n                bottom: 'ajs-bottom',\n                left: 'ajs-left',\n                visible: 'ajs-visible',\n                hidden: 'ajs-hidden'\n            };\n        /**\n         * Helper: initializes the notifier instance\n         * \n         */\n        function initialize(instance) {\n\n            if (!instance.__internal) {\n                instance.__internal = {\n                    position: alertify.defaults.notifier.position,\n                    delay: alertify.defaults.notifier.delay,\n                };\n\n                element = document.createElement('DIV');\n\n                updatePosition(instance);\n            }\n\n            //add to DOM tree.\n            if (element.parentNode !== document.body) {\n                document.body.appendChild(element);\n            }\n        }\n        \n        function pushInstance(instance) {\n            instance.__internal.pushed = true;\n            openInstances.push(instance);\n        }\n        function popInstance(instance) {\n            openInstances.splice(openInstances.indexOf(instance), 1);\n            instance.__internal.pushed = false;\n        }\n        /**\n         * Helper: update the notifier instance position\n         * \n         */\n        function updatePosition(instance) {\n            element.className = classes.base;\n            switch (instance.__internal.position) {\n            case 'top-right':\n                addClass(element, classes.top + ' ' + classes.right);\n                break;\n            case 'top-left':\n                addClass(element, classes.top + ' ' + classes.left);\n                break;\n            case 'bottom-left':\n                addClass(element, classes.bottom + ' ' + classes.left);\n                break;\n\n            default:\n            case 'bottom-right':\n                addClass(element, classes.bottom + ' ' + classes.right);\n                break;\n            }\n        }\n\n        /**\n        * creates a new notification message\n        *\n        * @param  {DOMElement} message\tThe notifier message element\n        * @param  {Number} wait   Time (in ms) to wait before the message is dismissed, a value of 0 means keep open till clicked.\n        * @param  {Function} callback A callback function to be invoked when the message is dismissed.\n        *\n        * @return {undefined}\n        */\n        function create(div, callback) {\n\n            function clickDelegate(event, instance) {\n                instance.dismiss(true);\n            }\n\n            function transitionDone(event, instance) {\n                // unbind event\n                off(instance.element, transition.type, transitionDone);\n                // remove the message\n                element.removeChild(instance.element);\n            }\n\n            function initialize(instance) {\n                if (!instance.__internal) {\n                    instance.__internal = {\n                        pushed: false,\n                        delay : undefined,\n                        timer: undefined,\n                        clickHandler: undefined,\n                        transitionEndHandler: undefined,\n                        transitionTimeout: undefined\n                    };\n                    instance.__internal.clickHandler = delegate(instance, clickDelegate);\n                    instance.__internal.transitionEndHandler = delegate(instance, transitionDone);\n                }\n                return instance;\n            }\n            function clearTimers(instance) {\n                clearTimeout(instance.__internal.timer);\n                clearTimeout(instance.__internal.transitionTimeout);\n            }\n            return initialize({\n                /* notification DOM element*/\n                element: div,\n                /*\n                 * Pushes a notification message \n                 * @param {string or DOMElement} content The notification message content\n                 * @param {Number} wait The time (in seconds) to wait before the message is dismissed, a value of 0 means keep open till clicked.\n                 * \n                 */\n                push: function (_content, _wait) {\n                    if (!this.__internal.pushed) {\n\n                        pushInstance(this);\n                        clearTimers(this);\n\n                        var content, wait;\n                        switch (arguments.length) {\n                        case 0:\n                            wait = this.__internal.delay;\n                            break;\n                        case 1:\n                            if (typeof (_content) === 'number') {\n                                wait = _content;\n                            } else {\n                                content = _content;\n                                wait = this.__internal.delay;\n                            }\n                            break;\n                        case 2:\n                            content = _content;\n                            wait = _wait;\n                            break;\n                        }\n                        // set contents\n                        if (typeof content !== 'undefined') {\n                            this.setContent(content);\n                        }\n                        // append or insert\n                        if (notifier.__internal.position.indexOf('top') < 0) {\n                            element.appendChild(this.element);\n                        } else {\n                            element.insertBefore(this.element, element.firstChild);\n                        }\n                        reflow = this.element.offsetWidth;\n                        addClass(this.element, classes.visible);\n                        // attach click event\n                        on(this.element, 'click', this.__internal.clickHandler);\n                        return this.delay(wait);\n                    }\n                    return this;\n                },\n                /*\n                 * {Function} callback function to be invoked before dismissing the notification message.\n                 * Remarks: A return value === 'false' will cancel the dismissal\n                 * \n                 */\n                ondismiss: function () { },\n                /*\n                 * {Function} callback function to be invoked when the message is dismissed.\n                 * \n                 */\n                callback: callback,\n                /*\n                 * Dismisses the notification message \n                 * @param {Boolean} clicked A flag indicating if the dismissal was caused by a click.\n                 * \n                 */\n                dismiss: function (clicked) {\n                    if (this.__internal.pushed) {\n                        clearTimers(this);\n                        if (!(typeof this.ondismiss === 'function' && this.ondismiss.call(this) === false)) {\n                            //detach click event\n                            off(this.element, 'click', this.__internal.clickHandler);\n                            // ensure element exists\n                            if (typeof this.element !== 'undefined' && this.element.parentNode === element) {\n                                //transition end or fallback\n                                this.__internal.transitionTimeout = setTimeout(this.__internal.transitionEndHandler, transition.supported ? 1000 : 100);\n                                removeClass(this.element, classes.visible);\n\n                                // custom callback on dismiss\n                                if (typeof this.callback === 'function') {\n                                    this.callback.call(this, clicked);\n                                }\n                            }\n                            popInstance(this);\n                        }\n                    }\n                    return this;\n                },\n                /*\n                 * Delays the notification message dismissal\n                 * @param {Number} wait The time (in seconds) to wait before the message is dismissed, a value of 0 means keep open till clicked.\n                 * \n                 */\n                delay: function (wait) {\n                    clearTimers(this);\n                    this.__internal.delay = typeof wait !== 'undefined' && !isNaN(+wait) ? +wait : notifier.__internal.delay;\n                    if (this.__internal.delay > 0) {\n                        var  self = this;\n                        this.__internal.timer = setTimeout(function () { self.dismiss(); }, this.__internal.delay * 1000);\n                    }\n                    return this;\n                },\n                /*\n                 * Sets the notification message contents\n                 * @param {string or DOMElement} content The notification message content\n                 * \n                 */\n                setContent: function (content) {\n                    if (typeof content === 'string') {\n                        clearContents(this.element);\n                        this.element.innerHTML = content;\n                    } else if (content instanceof window.HTMLElement && this.element.firstChild !== content) {\n                        clearContents(this.element);\n                        this.element.appendChild(content);\n                    }\n                    return this;\n                },\n                /*\n                 * Dismisses all open notifications except this.\n                 * \n                 */\n                dismissOthers: function () {\n                    notifier.dismissAll(this);\n                    return this;\n                }\n            });\n        }\n\n        //notifier api\n        return {\n            /**\n             * Gets or Sets notifier settings. \n             *\n             * @param {string} key The setting name\n             * @param {Variant} value The setting value.\n             *\n             * @return {Object}\tif the called as a setter, return the notifier instance.\n             */\n            setting: function (key, value) {\n                //ensure init\n                initialize(this);\n\n                if (typeof value === 'undefined') {\n                    //get\n                    return this.__internal[key];\n                } else {\n                    //set\n                    switch (key) {\n                    case 'position':\n                        this.__internal.position = value;\n                        updatePosition(this);\n                        break;\n                    case 'delay':\n                        this.__internal.delay = value;\n                        break;\n                    }\n                }\n                return this;\n            },\n            /**\n             * [Alias] Sets dialog settings/options \n             */\n            set:function(key,value){\n                this.setting(key,value);\n                return this;\n            },\n            /**\n             * [Alias] Gets dialog settings/options \n             */\n            get:function(key){\n                return this.setting(key);\n            },\n            /**\n             * Creates a new notification message\n             *\n             * @param {string} type The type of notification message (simply a CSS class name 'ajs-{type}' to be added).\n             * @param {Function} callback  A callback function to be invoked when the message is dismissed.\n             *\n             * @return {undefined}\n             */\n            create: function (type, callback) {\n                //ensure notifier init\n                initialize(this);\n                //create new notification message\n                var div = document.createElement('div');\n                div.className = classes.message + ((typeof type === 'string' && type !== '') ? ' ajs-' + type : '');\n                return create(div, callback);\n            },\n            /**\n             * Dismisses all open notifications.\n             *\n             * @param {Object} excpet [optional] The notification object to exclude from dismissal.\n             *\n             */\n            dismissAll: function (except) {\n                var clone = openInstances.slice(0);\n                for (var x = 0; x < clone.length; x += 1) {\n                    var  instance = clone[x];\n                    if (except === undefined || except !== instance) {\n                        instance.dismiss();\n                    }\n                }\n            }\n        };\n    })();\n    /**\n     * Alertify public API\n     * This contains everything that is exposed through the alertify object.\n     *\n     * @return {Object}\n     */\n    function Alertify() {\n\n        // holds a references of created dialogs\n        var dialogs = {};\n\n        /**\n         * Extends a given prototype by merging properties from base into sub.\n         *\n         * @sub {Object} sub The prototype being overwritten.\n         * @base {Object} base The prototype being written.\n         *\n         * @return {Object} The extended prototype.\n         */\n        function extend(sub, base) {\n            // copy dialog pototype over definition.\n            for (var prop in base) {\n                if (base.hasOwnProperty(prop)) {\n                    sub[prop] = base[prop];\n                }\n            }\n            return sub;\n        }\n\n\n        /**\n        * Helper: returns a dialog instance from saved dialogs.\n        * and initializes the dialog if its not already initialized.\n        *\n        * @name {String} name The dialog name.\n        *\n        * @return {Object} The dialog instance.\n        */\n        function get_dialog(name) {\n            var dialog = dialogs[name].dialog;\n            //initialize the dialog if its not already initialized.\n            if (dialog && typeof dialog.__init === 'function') {\n                dialog.__init(dialog);\n            }\n            return dialog;\n        }\n\n        /**\n         * Helper:  registers a new dialog definition.\n         *\n         * @name {String} name The dialog name.\n         * @Factory {Function} Factory a function resposible for creating dialog prototype.\n         * @transient {Boolean} transient True to create a new dialog instance each time the dialog is invoked, false otherwise.\n         * @base {String} base the name of another dialog to inherit from.\n         *\n         * @return {Object} The dialog definition.\n         */\n        function register(name, Factory, transient, base) {\n            var definition = {\n                dialog: null,\n                factory: Factory\n            };\n\n            //if this is based on an existing dialog, create a new definition\n            //by applying the new protoype over the existing one.\n            if (base !== undefined) {\n                definition.factory = function () {\n                    return extend(new dialogs[base].factory(), new Factory());\n                };\n            }\n\n            if (!transient) {\n                //create a new definition based on dialog\n                definition.dialog = extend(new definition.factory(), dialog);\n            }\n            return dialogs[name] = definition;\n        }\n\n        return {\n            /**\n             * Alertify defaults\n             * \n             * @type {Object}\n             */\n            defaults: defaults,\n            /**\n             * Dialogs factory \n             *\n             * @param {string}      Dialog name.\n             * @param {Function}    A Dialog factory function.\n             * @param {Boolean}     Indicates whether to create a singleton or transient dialog.\n             * @param {String}      The name of the base type to inherit from.\n             */\n            dialog: function (name, Factory, transient, base) {\n\n                // get request, create a new instance and return it.\n                if (typeof Factory !== 'function') {\n                    return get_dialog(name);\n                }\n\n                if (this.hasOwnProperty(name)) {\n                    throw new Error('alertify.dialog: name already exists');\n                }\n\n                // register the dialog\n                var definition = register(name, Factory, transient, base);\n\n                if (transient) {\n\n                    // make it public\n                    this[name] = function () {\n                        //if passed with no params, consider it a get request\n                        if (arguments.length === 0) {\n                            return definition.dialog;\n                        } else {\n                            var instance = extend(new definition.factory(), dialog);\n                            //ensure init\n                            if (instance && typeof instance.__init === 'function') {\n                                instance.__init(instance);\n                            }\n                            instance['main'].apply(instance, arguments);\n                            return instance['show'].apply(instance);\n                        }\n                    };\n                } else {\n                    // make it public\n                    this[name] = function () {\n                        //ensure init\n                        if (definition.dialog && typeof definition.dialog.__init === 'function') {\n                            definition.dialog.__init(definition.dialog);\n                        }\n                        //if passed with no params, consider it a get request\n                        if (arguments.length === 0) {\n                            return definition.dialog;\n                        } else {\n                            var dialog = definition.dialog;\n                            dialog['main'].apply(definition.dialog, arguments);\n                            return dialog['show'].apply(definition.dialog);\n                        }\n                    };\n                }\n            },\n            /**\n             * Close all open dialogs.\n             *\n             * @param {Object} excpet [optional] The dialog object to exclude from closing.\n             *\n             * @return {undefined}\n             */\n            closeAll: function (except) {\n                var clone = openDialogs.slice(0);\n                for (var x = 0; x < clone.length; x += 1) {\n                    var instance = clone[x];\n                    if (except === undefined || except !== instance) {\n                        instance.close();\n                    }\n                }\n            },\n            /**\n             * Gets or Sets dialog settings/options. if the dialog is transient, this call does nothing.\n             *\n             * @param {string} name The dialog name.\n             * @param {String|Object} key A string specifying a propery name or a collection of key/value pairs.\n             * @param {Variant} value Optional, the value associated with the key (in case it was a string).\n             *\n             * @return {undefined}\n             */\n            setting: function (name, key, value) {\n\n                if (name === 'notifier') {\n                    return notifier.setting(key, value);\n                }\n\n                var dialog = get_dialog(name);\n                if (dialog) {\n                    return dialog.setting(key, value);\n                }\n            },\n            /**\n             * [Alias] Sets dialog settings/options \n             */\n            set: function(name,key,value){\n                return this.setting(name, key,value);\n            },\n            /**\n             * [Alias] Gets dialog settings/options \n             */\n            get: function(name, key){\n                return this.setting(name, key);\n            },\n            /**\n             * Creates a new notification message.\n             * If a type is passed, a class name \"ajs-{type}\" will be added.\n             * This allows for custom look and feel for various types of notifications.\n             *\n             * @param  {String | DOMElement}    [message=undefined]\t\tMessage text\n             * @param  {String}                 [type='']\t\t\t\tType of log message\n             * @param  {String}                 [wait='']\t\t\t\tTime (in seconds) to wait before auto-close\n             * @param  {Function}               [callback=undefined]\tA callback function to be invoked when the log is closed.\n             *\n             * @return {Object} Notification object.\n             */\n            notify: function (message, type, wait, callback) {\n                return notifier.create(type, callback).push(message, wait);\n            },\n            /**\n             * Creates a new notification message.\n             *\n             * @param  {String}\t\t[message=undefined]\t\tMessage text\n             * @param  {String}     [wait='']\t\t\t\tTime (in seconds) to wait before auto-close\n             * @param  {Function}\t[callback=undefined]\tA callback function to be invoked when the log is closed.\n             *\n             * @return {Object} Notification object.\n             */\n            message: function (message, wait, callback) {\n                return notifier.create(null, callback).push(message, wait);\n            },\n            /**\n             * Creates a new notification message of type 'success'.\n             *\n             * @param  {String}\t\t[message=undefined]\t\tMessage text\n             * @param  {String}     [wait='']\t\t\t\tTime (in seconds) to wait before auto-close\n             * @param  {Function}\t[callback=undefined]\tA callback function to be invoked when the log is closed.\n             *\n             * @return {Object} Notification object.\n             */\n            success: function (message, wait, callback) {\n                return notifier.create('success', callback).push(message, wait);\n            },\n            /**\n             * Creates a new notification message of type 'error'.\n             *\n             * @param  {String}\t\t[message=undefined]\t\tMessage text\n             * @param  {String}     [wait='']\t\t\t\tTime (in seconds) to wait before auto-close\n             * @param  {Function}\t[callback=undefined]\tA callback function to be invoked when the log is closed.\n             *\n             * @return {Object} Notification object.\n             */\n            error: function (message, wait, callback) {\n                return notifier.create('error', callback).push(message, wait);\n            },\n            /**\n             * Creates a new notification message of type 'warning'.\n             *\n             * @param  {String}\t\t[message=undefined]\t\tMessage text\n             * @param  {String}     [wait='']\t\t\t\tTime (in seconds) to wait before auto-close\n             * @param  {Function}\t[callback=undefined]\tA callback function to be invoked when the log is closed.\n             *\n             * @return {Object} Notification object.\n             */\n            warning: function (message, wait, callback) {\n                return notifier.create('warning', callback).push(message, wait);\n            },\n            /**\n             * Dismisses all open notifications\n             *\n             * @return {undefined}\n             */\n            dismissAll: function () {\n                notifier.dismissAll();\n            }\n        };\n    }\n    var alertify = new Alertify();\n\n    /**\n    * Alert dialog definition\n    *\n    * invoked by:\n    *\talertify.alert(message);\n    *\talertify.alert(title, message);\n    *\talertify.alert(message, onok);\n    *\talertify.alert(title, message, onok);\n     */\n    alertify.dialog('alert', function () {\n        return {\n            main: function (_title, _message, _onok) {\n                var title, message, onok;\n                switch (arguments.length) {\n                case 1:\n                    message = _title;\n                    break;\n                case 2:\n                    if (typeof _message === 'function') {\n                        message = _title;\n                        onok = _message;\n                    } else {\n                        title = _title;\n                        message = _message;\n                    }\n                    break;\n                case 3:\n                    title = _title;\n                    message = _message;\n                    onok = _onok;\n                    break;\n                }\n                this.set('title', title);\n                this.set('message', message);\n                this.set('onok', onok);\n                return this;\n            },\n            setup: function () {\n                return {\n                    buttons: [\n                        {\n                            text: alertify.defaults.glossary.ok,\n                            key: keys.ESC,\n                            invokeOnClose: true,\n                            className: alertify.defaults.theme.ok,\n                        }\n                    ],\n                    focus: {\n                        element: 0,\n                        select: false\n                    },\n                    options: {\n                        maximizable: false,\n                        resizable: false\n                    }\n                };\n            },\n            build: function () {\n                // nothing\n            },\n            prepare: function () {\n                //nothing\n            },\n            setMessage: function (message) {\n                this.setContent(message);\n            },\n            settings: {\n                message: undefined,\n                onok: undefined,\n                label: undefined,\n            },\n            settingUpdated: function (key, oldValue, newValue) {\n                switch (key) {\n                case 'message':\n                    this.setMessage(newValue);\n                    break;\n                case 'label':\n                    if (this.__internal.buttons[0].element) {\n                        this.__internal.buttons[0].element.innerHTML = newValue;\n                    }\n                    break;\n                }\n            },\n            callback: function (closeEvent) {\n                if (typeof this.get('onok') === 'function') {\n                    var returnValue = this.get('onok').call(this, closeEvent);\n                    if (typeof returnValue !== 'undefined') {\n                        closeEvent.cancel = !returnValue;\n                    }\n                }\n            }\n        };\n    });\n    /**\n     * Confirm dialog object\n     *\n     *\talertify.confirm(message);\n     *\talertify.confirm(message, onok);\n     *\talertify.confirm(message, onok, oncancel);\n     *\talertify.confirm(title, message, onok, oncancel);\n     */\n    alertify.dialog('confirm', function () {\n\n        var autoConfirm = {\n            timer: null,\n            index: null,\n            text: null,\n            duration: null,\n            task: function (event, self) {\n                if (self.isOpen()) {\n                    self.__internal.buttons[autoConfirm.index].element.innerHTML = autoConfirm.text + ' (&#8207;' + autoConfirm.duration + '&#8207;) ';\n                    autoConfirm.duration -= 1;\n                    if (autoConfirm.duration === -1) {\n                        clearAutoConfirm(self);\n                        var button = self.__internal.buttons[autoConfirm.index];\n                        var closeEvent = createCloseEvent(autoConfirm.index, button);\n\n                        if (typeof self.callback === 'function') {\n                            self.callback.apply(self, [closeEvent]);\n                        }\n                        //close the dialog.\n                        if (closeEvent.close !== false) {\n                            self.close();\n                        }\n                    }\n                } else {\n                    clearAutoConfirm(self);\n                }\n            }\n        };\n\n        function clearAutoConfirm(self) {\n            if (autoConfirm.timer !== null) {\n                clearInterval(autoConfirm.timer);\n                autoConfirm.timer = null;\n                self.__internal.buttons[autoConfirm.index].element.innerHTML = autoConfirm.text;\n            }\n        }\n\n        function startAutoConfirm(self, index, duration) {\n            clearAutoConfirm(self);\n            autoConfirm.duration = duration;\n            autoConfirm.index = index;\n            autoConfirm.text = self.__internal.buttons[index].element.innerHTML;\n            autoConfirm.timer = setInterval(delegate(self, autoConfirm.task), 1000);\n            autoConfirm.task(null, self);\n        }\n\n\n        return {\n            main: function (_title, _message, _onok, _oncancel) {\n                var title, message, onok, oncancel;\n                switch (arguments.length) {\n                case 1:\n                    message = _title;\n                    break;\n                case 2:\n                    message = _title;\n                    onok = _message;\n                    break;\n                case 3:\n                    message = _title;\n                    onok = _message;\n                    oncancel = _onok;\n                    break;\n                case 4:\n                    title = _title;\n                    message = _message;\n                    onok = _onok;\n                    oncancel = _oncancel;\n                    break;\n                }\n                this.set('title', title);\n                this.set('message', message);\n                this.set('onok', onok);\n                this.set('oncancel', oncancel);\n                return this;\n            },\n            setup: function () {\n                return {\n                    buttons: [\n                        {\n                            text: alertify.defaults.glossary.ok,\n                            key: keys.ENTER,\n                            className: alertify.defaults.theme.ok,\n                        },\n                        {\n                            text: alertify.defaults.glossary.cancel,\n                            key: keys.ESC,\n                            invokeOnClose: true,\n                            className: alertify.defaults.theme.cancel,\n                        }\n                    ],\n                    focus: {\n                        element: 0,\n                        select: false\n                    },\n                    options: {\n                        maximizable: false,\n                        resizable: false\n                    }\n                };\n            },\n            build: function () {\n                //nothing\n            },\n            prepare: function () {\n                //nothing\n            },\n            setMessage: function (message) {\n                this.setContent(message);\n            },\n            settings: {\n                message: null,\n                labels: null,\n                onok: null,\n                oncancel: null,\n                defaultFocus: null,\n                reverseButtons: null,\n            },\n            settingUpdated: function (key, oldValue, newValue) {\n                switch (key) {\n                case 'message':\n                    this.setMessage(newValue);\n                    break;\n                case 'labels':\n                    if ('ok' in newValue && this.__internal.buttons[0].element) {\n                        this.__internal.buttons[0].text = newValue.ok;\n                        this.__internal.buttons[0].element.innerHTML = newValue.ok;\n                    }\n                    if ('cancel' in newValue && this.__internal.buttons[1].element) {\n                        this.__internal.buttons[1].text = newValue.cancel;\n                        this.__internal.buttons[1].element.innerHTML = newValue.cancel;\n                    }\n                    break;\n                case 'reverseButtons':\n                    if (newValue === true) {\n                        this.elements.buttons.primary.appendChild(this.__internal.buttons[0].element);\n                    } else {\n                        this.elements.buttons.primary.appendChild(this.__internal.buttons[1].element);\n                    }\n                    break;\n                case 'defaultFocus':\n                    this.__internal.focus.element = newValue === 'ok' ? 0 : 1;\n                    break;\n                }\n            },\n            callback: function (closeEvent) {\n                clearAutoConfirm(this);\n                var returnValue;\n                switch (closeEvent.index) {\n                case 0:\n                    if (typeof this.get('onok') === 'function') {\n                        returnValue = this.get('onok').call(this, closeEvent);\n                        if (typeof returnValue !== 'undefined') {\n                            closeEvent.cancel = !returnValue;\n                        }\n                    }\n                    break;\n                case 1:\n                    if (typeof this.get('oncancel') === 'function') {\n                        returnValue = this.get('oncancel').call(this, closeEvent);\n                        if (typeof returnValue !== 'undefined') {\n                            closeEvent.cancel = !returnValue;\n                        }\n                    }\n                    break;\n                }\n            },\n            autoOk: function (duration) {\n                startAutoConfirm(this, 0, duration);\n                return this;\n            },\n            autoCancel: function (duration) {\n                startAutoConfirm(this, 1, duration);\n                return this;\n            }\n        };\n    });\n    /**\n     * Prompt dialog object\n     *\n     * invoked by:\n     *\talertify.prompt(message);\n     *\talertify.prompt(message, value);\n     *\talertify.prompt(message, value, onok);\n     *\talertify.prompt(message, value, onok, oncancel);\n     *\talertify.prompt(title, message, value, onok, oncancel);\n     */\n    alertify.dialog('prompt', function () {\n        var input = document.createElement('INPUT');\n        var p = document.createElement('P');\n        return {\n            main: function (_title, _message, _value, _onok, _oncancel) {\n                var title, message, value, onok, oncancel;\n                switch (arguments.length) {\n                case 1:\n                    message = _title;\n                    break;\n                case 2:\n                    message = _title;\n                    value = _message;\n                    break;\n                case 3:\n                    message = _title;\n                    value = _message;\n                    onok = _value;\n                    break;\n                case 4:\n                    message = _title;\n                    value = _message;\n                    onok = _value;\n                    oncancel = _onok;\n                    break;\n                case 5:\n                    title = _title;\n                    message = _message;\n                    value = _value;\n                    onok = _onok;\n                    oncancel = _oncancel;\n                    break;\n                }\n                this.set('title', title);\n                this.set('message', message);\n                this.set('value', value);\n                this.set('onok', onok);\n                this.set('oncancel', oncancel);\n                return this;\n            },\n            setup: function () {\n                return {\n                    buttons: [\n                        {\n                            text: alertify.defaults.glossary.ok,\n                            key: keys.ENTER,\n                            className: alertify.defaults.theme.ok,\n                        },\n                        {\n                            text: alertify.defaults.glossary.cancel,\n                            key: keys.ESC,\n                            invokeOnClose: true,\n                            className: alertify.defaults.theme.cancel,\n                        }\n                    ],\n                    focus: {\n                        element: input,\n                        select: true\n                    },\n                    options: {\n                        maximizable: false,\n                        resizable: false\n                    }\n                };\n            },\n            build: function () {\n                input.className = alertify.defaults.theme.input;\n                input.setAttribute('type', 'text');\n                input.value = this.get('value');\n                this.elements.content.appendChild(p);\n                this.elements.content.appendChild(input);\n            },\n            prepare: function () {\n                //nothing\n            },\n            setMessage: function (message) {\n                if (typeof message === 'string') {\n                    clearContents(p);\n                    p.innerHTML = message;\n                } else if (message instanceof window.HTMLElement && p.firstChild !== message) {\n                    clearContents(p);\n                    p.appendChild(message);\n                }\n            },\n            settings: {\n                message: undefined,\n                labels: undefined,\n                onok: undefined,\n                oncancel: undefined,\n                value: '',\n                type:'text',\n                reverseButtons: undefined,\n            },\n            settingUpdated: function (key, oldValue, newValue) {\n                switch (key) {\n                case 'message':\n                    this.setMessage(newValue);\n                    break;\n                case 'value':\n                    input.value = newValue;\n                    break;\n                case 'type':\n                    switch (newValue) {\n                    case 'text':\n                    case 'color':\n                    case 'date':\n                    case 'datetime-local':\n                    case 'email':\n                    case 'month':\n                    case 'number':\n                    case 'password':\n                    case 'search':\n                    case 'tel':\n                    case 'time':\n                    case 'week':\n                        input.type = newValue;\n                        break;\n                    default:\n                        input.type = 'text';\n                        break;\n                    }\n                    break;\n                case 'labels':\n                    if (newValue.ok && this.__internal.buttons[0].element) {\n                        this.__internal.buttons[0].element.innerHTML = newValue.ok;\n                    }\n                    if (newValue.cancel && this.__internal.buttons[1].element) {\n                        this.__internal.buttons[1].element.innerHTML = newValue.cancel;\n                    }\n                    break;\n                case 'reverseButtons':\n                    if (newValue === true) {\n                        this.elements.buttons.primary.appendChild(this.__internal.buttons[0].element);\n                    } else {\n                        this.elements.buttons.primary.appendChild(this.__internal.buttons[1].element);\n                    }\n                    break;\n                }\n            },\n            callback: function (closeEvent) {\n                var returnValue;\n                switch (closeEvent.index) {\n                case 0:\n                    this.settings.value = input.value;\n                    if (typeof this.get('onok') === 'function') {\n                        returnValue = this.get('onok').call(this, closeEvent, this.settings.value);\n                        if (typeof returnValue !== 'undefined') {\n                            closeEvent.cancel = !returnValue;\n                        }\n                    }\n                    break;\n                case 1:\n                    if (typeof this.get('oncancel') === 'function') {\n                        returnValue = this.get('oncancel').call(this, closeEvent);\n                        if (typeof returnValue !== 'undefined') {\n                            closeEvent.cancel = !returnValue;\n                        }\n                    }\n                    break;\n                }\n            }\n        };\n    });\n\n    // CommonJS\n    if (  true && typeof module.exports === 'object' ) {\n        module.exports = alertify;\n    // AMD\n    } else if ( true) {\n        !(__WEBPACK_AMD_DEFINE_ARRAY__ = [], __WEBPACK_AMD_DEFINE_RESULT__ = (function () {\n            return alertify;\n        }).apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__),\n\t\t\t\t__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n    // window\n    } else {}\n\n} ( typeof window !== 'undefined' ? window : this ) );\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./src/js/vendor/alertify.js\n");

/***/ }),

/***/ "./src/js/vendor/datatable-1.9.4-modified.js":
/*!***************************************************!*\
  !*** ./src/js/vendor/datatable-1.9.4-modified.js ***!
  \***************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("/*** IMPORTS FROM imports-loader ***/\nvar $ = __webpack_require__(/*! jquery */ \"./node_modules/jquery/dist/jquery.js\");\nvar jQuery = __webpack_require__(/*! jquery */ \"./node_modules/jquery/dist/jquery.js\");\n\n/**\n * @summary     DataTables\n * @description Paginate, search and sort HTML tables\n * @version     1.9.4\n * @file        jquery.dataTables.js\n * @author      Allan Jardine (www.sprymedia.co.uk)\n * @contact     www.sprymedia.co.uk/contact\n *\n * @copyright Copyright 2008-2012 Allan Jardine, all rights reserved.\n *\n * This source file is free software, under either the GPL v2 license or a\n * BSD style license, available at:\n *   http://datatables.net/license_gpl2\n *   http://datatables.net/license_bsd\n * \n * This source file is distributed in the hope that it will be useful, but \n * WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY \n * or FITNESS FOR A PARTICULAR PURPOSE. See the license files for details.\n * \n * For details please refer to: http://www.datatables.net\n */\n\n/*jslint evil: true, undef: true, browser: true */\n/*globals $, jQuery,define,_fnExternApiFunc,_fnInitialise,_fnInitComplete,_fnLanguageCompat,_fnAddColumn,_fnColumnOptions,_fnAddData,_fnCreateTr,_fnGatherData,_fnBuildHead,_fnDrawHead,_fnDraw,_fnReDraw,_fnAjaxUpdate,_fnAjaxParameters,_fnAjaxUpdateDraw,_fnServerParams,_fnAddOptionsHtml,_fnFeatureHtmlTable,_fnScrollDraw,_fnAdjustColumnSizing,_fnFeatureHtmlFilter,_fnFilterComplete,_fnFilterCustom,_fnFilterColumn,_fnFilter,_fnBuildSearchArray,_fnBuildSearchRow,_fnFilterCreateSearch,_fnDataToSearch,_fnSort,_fnSortAttachListener,_fnSortingClasses,_fnFeatureHtmlPaginate,_fnPageChange,_fnFeatureHtmlInfo,_fnUpdateInfo,_fnFeatureHtmlLength,_fnFeatureHtmlProcessing,_fnProcessingDisplay,_fnVisibleToColumnIndex,_fnColumnIndexToVisible,_fnNodeToDataIndex,_fnVisbleColumns,_fnCalculateEnd,_fnConvertToWidth,_fnCalculateColumnWidths,_fnScrollingWidthAdjust,_fnGetWidestNode,_fnGetMaxLenString,_fnStringToCss,_fnDetectType,_fnSettingsFromNode,_fnGetDataMaster,_fnGetTrNodes,_fnGetTdNodes,_fnEscapeRegex,_fnDeleteIndex,_fnReOrderIndex,_fnColumnOrdering,_fnLog,_fnClearTable,_fnSaveState,_fnLoadState,_fnCreateCookie,_fnReadCookie,_fnDetectHeader,_fnGetUniqueThs,_fnScrollBarWidth,_fnApplyToChildren,_fnMap,_fnGetRowData,_fnGetCellData,_fnSetCellData,_fnGetObjectDataFn,_fnSetObjectDataFn,_fnApplyColumnDefs,_fnBindAction,_fnCallbackReg,_fnCallbackFire,_fnJsonString,_fnRender,_fnNodeToColumnIndex,_fnInfoMacros,_fnBrowserDetect,_fnGetColumns*/\n\n\n\"use strict\";\n\n/** \n * DataTables is a plug-in for the jQuery Javascript library. It is a \n * highly flexible tool, based upon the foundations of progressive \n * enhancement, which will add advanced interaction controls to any \n * HTML table. For a full list of features please refer to\n * <a href=\"http://datatables.net\">DataTables.net</a>.\n *\n * Note that the <i>DataTable</i> object is not a global variable but is\n * aliased to <i>jQuery.fn.DataTable</i> and <i>jQuery.fn.dataTable</i> through which \n * it may be  accessed.\n *\n *  @class\n *  @param {object} [oInit={}] Configuration object for DataTables. Options\n *    are defined by {@link DataTable.defaults}\n *  @requires jQuery 1.3+\n * \n *  @example\n *    // Basic initialisation\n *    $(document).ready( function {\n *      $('#example').dataTable();\n *    } );\n *  \n *  @example\n *    // Initialisation with configuration options - in this case, disable\n *    // pagination and sorting.\n *    $(document).ready( function {\n *      $('#example').dataTable( {\n *        \"bPaginate\": false,\n *        \"bSort\": false \n *      } );\n *    } );\n */\nvar DataTable = function( oInit )\n{\n\t\n\t\n\t/**\n\t * Add a column to the list used for the table with default values\n\t *  @param {object} oSettings dataTables settings object\n\t *  @param {node} nTh The th element for this column\n\t *  @memberof DataTable#oApi\n\t */\n\tfunction _fnAddColumn( oSettings, nTh )\n\t{\n\t\tvar oDefaults = DataTable.defaults.columns;\n\t\tvar iCol = oSettings.aoColumns.length;\n\t\tvar oCol = $.extend( {}, DataTable.models.oColumn, oDefaults, {\n\t\t\t\"sSortingClass\": oSettings.oClasses.sSortable,\n\t\t\t\"sSortingClassJUI\": oSettings.oClasses.sSortJUI,\n\t\t\t\"nTh\": nTh ? nTh : document.createElement('th'),\n\t\t\t\"sTitle\":    oDefaults.sTitle    ? oDefaults.sTitle    : nTh ? nTh.innerHTML : '',\n\t\t\t\"aDataSort\": oDefaults.aDataSort ? oDefaults.aDataSort : [iCol],\n\t\t\t\"mData\": oDefaults.mData ? oDefaults.oDefaults : iCol\n\t\t} );\n\t\toSettings.aoColumns.push( oCol );\n\t\t\n\t\t/* Add a column specific filter */\n\t\tif ( oSettings.aoPreSearchCols[ iCol ] === undefined || oSettings.aoPreSearchCols[ iCol ] === null )\n\t\t{\n\t\t\toSettings.aoPreSearchCols[ iCol ] = $.extend( {}, DataTable.models.oSearch );\n\t\t}\n\t\telse\n\t\t{\n\t\t\tvar oPre = oSettings.aoPreSearchCols[ iCol ];\n\t\t\t\n\t\t\t/* Don't require that the user must specify bRegex, bSmart or bCaseInsensitive */\n\t\t\tif ( oPre.bRegex === undefined )\n\t\t\t{\n\t\t\t\toPre.bRegex = true;\n\t\t\t}\n\t\t\t\n\t\t\tif ( oPre.bSmart === undefined )\n\t\t\t{\n\t\t\t\toPre.bSmart = true;\n\t\t\t}\n\t\t\t\n\t\t\tif ( oPre.bCaseInsensitive === undefined )\n\t\t\t{\n\t\t\t\toPre.bCaseInsensitive = true;\n\t\t\t}\n\t\t}\n\t\t\n\t\t/* Use the column options function to initialise classes etc */\n\t\t_fnColumnOptions( oSettings, iCol, null );\n\t}\n\t\n\t\n\t/**\n\t * Apply options for a column\n\t *  @param {object} oSettings dataTables settings object\n\t *  @param {int} iCol column index to consider\n\t *  @param {object} oOptions object with sType, bVisible and bSearchable etc\n\t *  @memberof DataTable#oApi\n\t */\n\tfunction _fnColumnOptions( oSettings, iCol, oOptions )\n\t{\n\t\tvar oCol = oSettings.aoColumns[ iCol ];\n\t\t\n\t\t/* User specified column options */\n\t\tif ( oOptions !== undefined && oOptions !== null )\n\t\t{\n\t\t\t/* Backwards compatibility for mDataProp */\n\t\t\tif ( oOptions.mDataProp && !oOptions.mData )\n\t\t\t{\n\t\t\t\toOptions.mData = oOptions.mDataProp;\n\t\t\t}\n\t\n\t\t\tif ( oOptions.sType !== undefined )\n\t\t\t{\n\t\t\t\toCol.sType = oOptions.sType;\n\t\t\t\toCol._bAutoType = false;\n\t\t\t}\n\t\t\t\n\t\t\t$.extend( oCol, oOptions );\n\t\t\t_fnMap( oCol, oOptions, \"sWidth\", \"sWidthOrig\" );\n\t\n\t\t\t/* iDataSort to be applied (backwards compatibility), but aDataSort will take\n\t\t\t * priority if defined\n\t\t\t */\n\t\t\tif ( oOptions.iDataSort !== undefined )\n\t\t\t{\n\t\t\t\toCol.aDataSort = [ oOptions.iDataSort ];\n\t\t\t}\n\t\t\t_fnMap( oCol, oOptions, \"aDataSort\" );\n\t\t}\n\t\n\t\t/* Cache the data get and set functions for speed */\n\t\tvar mRender = oCol.mRender ? _fnGetObjectDataFn( oCol.mRender ) : null;\n\t\tvar mData = _fnGetObjectDataFn( oCol.mData );\n\t\n\t\toCol.fnGetData = function (oData, sSpecific) {\n\t\t\tvar innerData = mData( oData, sSpecific );\n\t\n\t\t\tif ( oCol.mRender && (sSpecific && sSpecific !== '') )\n\t\t\t{\n\t\t\t\treturn mRender( innerData, sSpecific, oData );\n\t\t\t}\n\t\t\treturn innerData;\n\t\t};\n\t\toCol.fnSetData = _fnSetObjectDataFn( oCol.mData );\n\t\t\n\t\t/* Feature sorting overrides column specific when off */\n\t\tif ( !oSettings.oFeatures.bSort )\n\t\t{\n\t\t\toCol.bSortable = false;\n\t\t}\n\t\t\n\t\t/* Check that the class assignment is correct for sorting */\n\t\tif ( !oCol.bSortable ||\n\t\t\t ($.inArray('asc', oCol.asSorting) == -1 && $.inArray('desc', oCol.asSorting) == -1) )\n\t\t{\n\t\t\toCol.sSortingClass = oSettings.oClasses.sSortableNone;\n\t\t\toCol.sSortingClassJUI = \"\";\n\t\t}\n\t\telse if ( $.inArray('asc', oCol.asSorting) == -1 && $.inArray('desc', oCol.asSorting) == -1 )\n\t\t{\n\t\t\toCol.sSortingClass = oSettings.oClasses.sSortable;\n\t\t\toCol.sSortingClassJUI = oSettings.oClasses.sSortJUI;\n\t\t}\n\t\telse if ( $.inArray('asc', oCol.asSorting) != -1 && $.inArray('desc', oCol.asSorting) == -1 )\n\t\t{\n\t\t\toCol.sSortingClass = oSettings.oClasses.sSortableAsc;\n\t\t\toCol.sSortingClassJUI = oSettings.oClasses.sSortJUIAscAllowed;\n\t\t}\n\t\telse if ( $.inArray('asc', oCol.asSorting) == -1 && $.inArray('desc', oCol.asSorting) != -1 )\n\t\t{\n\t\t\toCol.sSortingClass = oSettings.oClasses.sSortableDesc;\n\t\t\toCol.sSortingClassJUI = oSettings.oClasses.sSortJUIDescAllowed;\n\t\t}\n\t}\n\t\n\t\n\t/**\n\t * Adjust the table column widths for new data. Note: you would probably want to \n\t * do a redraw after calling this function!\n\t *  @param {object} oSettings dataTables settings object\n\t *  @memberof DataTable#oApi\n\t */\n\tfunction _fnAdjustColumnSizing ( oSettings )\n\t{\n\t\t/* Not interested in doing column width calculation if auto-width is disabled */\n\t\tif ( oSettings.oFeatures.bAutoWidth === false )\n\t\t{\n\t\t\treturn false;\n\t\t}\n\t\t\n\t\t_fnCalculateColumnWidths( oSettings );\n\t\tfor ( var i=0 , iLen=oSettings.aoColumns.length ; i<iLen ; i++ )\n\t\t{\n\t\t\toSettings.aoColumns[i].nTh.style.width = oSettings.aoColumns[i].sWidth;\n\t\t}\n\t}\n\t\n\t\n\t/**\n\t * Covert the index of a visible column to the index in the data array (take account\n\t * of hidden columns)\n\t *  @param {object} oSettings dataTables settings object\n\t *  @param {int} iMatch Visible column index to lookup\n\t *  @returns {int} i the data index\n\t *  @memberof DataTable#oApi\n\t */\n\tfunction _fnVisibleToColumnIndex( oSettings, iMatch )\n\t{\n\t\tvar aiVis = _fnGetColumns( oSettings, 'bVisible' );\n\t\n\t\treturn typeof aiVis[iMatch] === 'number' ?\n\t\t\taiVis[iMatch] :\n\t\t\tnull;\n\t}\n\t\n\t\n\t/**\n\t * Covert the index of an index in the data array and convert it to the visible\n\t *   column index (take account of hidden columns)\n\t *  @param {int} iMatch Column index to lookup\n\t *  @param {object} oSettings dataTables settings object\n\t *  @returns {int} i the data index\n\t *  @memberof DataTable#oApi\n\t */\n\tfunction _fnColumnIndexToVisible( oSettings, iMatch )\n\t{\n\t\tvar aiVis = _fnGetColumns( oSettings, 'bVisible' );\n\t\tvar iPos = $.inArray( iMatch, aiVis );\n\t\n\t\treturn iPos !== -1 ? iPos : null;\n\t}\n\t\n\t\n\t/**\n\t * Get the number of visible columns\n\t *  @param {object} oSettings dataTables settings object\n\t *  @returns {int} i the number of visible columns\n\t *  @memberof DataTable#oApi\n\t */\n\tfunction _fnVisbleColumns( oSettings )\n\t{\n\t\treturn _fnGetColumns( oSettings, 'bVisible' ).length;\n\t}\n\t\n\t\n\t/**\n\t * Get an array of column indexes that match a given property\n\t *  @param {object} oSettings dataTables settings object\n\t *  @param {string} sParam Parameter in aoColumns to look for - typically \n\t *    bVisible or bSearchable\n\t *  @returns {array} Array of indexes with matched properties\n\t *  @memberof DataTable#oApi\n\t */\n\tfunction _fnGetColumns( oSettings, sParam )\n\t{\n\t\tvar a = [];\n\t\n\t\t$.map( oSettings.aoColumns, function(val, i) {\n\t\t\tif ( val[sParam] ) {\n\t\t\t\ta.push( i );\n\t\t\t}\n\t\t} );\n\t\n\t\treturn a;\n\t}\n\t\n\t\n\t/**\n\t * Get the sort type based on an input string\n\t *  @param {string} sData data we wish to know the type of\n\t *  @returns {string} type (defaults to 'string' if no type can be detected)\n\t *  @memberof DataTable#oApi\n\t */\n\tfunction _fnDetectType( sData )\n\t{\n\t\tvar aTypes = DataTable.ext.aTypes;\n\t\tvar iLen = aTypes.length;\n\t\t\n\t\tfor ( var i=0 ; i<iLen ; i++ )\n\t\t{\n\t\t\tvar sType = aTypes[i]( sData );\n\t\t\tif ( sType !== null )\n\t\t\t{\n\t\t\t\treturn sType;\n\t\t\t}\n\t\t}\n\t\t\n\t\treturn 'string';\n\t}\n\t\n\t\n\t/**\n\t * Figure out how to reorder a display list\n\t *  @param {object} oSettings dataTables settings object\n\t *  @returns array {int} aiReturn index list for reordering\n\t *  @memberof DataTable#oApi\n\t */\n\tfunction _fnReOrderIndex ( oSettings, sColumns )\n\t{\n\t\tvar aColumns = sColumns.split(',');\n\t\tvar aiReturn = [];\n\t\t\n\t\tfor ( var i=0, iLen=oSettings.aoColumns.length ; i<iLen ; i++ )\n\t\t{\n\t\t\tfor ( var j=0 ; j<iLen ; j++ )\n\t\t\t{\n\t\t\t\tif ( oSettings.aoColumns[i].sName == aColumns[j] )\n\t\t\t\t{\n\t\t\t\t\taiReturn.push( j );\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\t\n\t\treturn aiReturn;\n\t}\n\t\n\t\n\t/**\n\t * Get the column ordering that DataTables expects\n\t *  @param {object} oSettings dataTables settings object\n\t *  @returns {string} comma separated list of names\n\t *  @memberof DataTable#oApi\n\t */\n\tfunction _fnColumnOrdering ( oSettings )\n\t{\n\t\tvar sNames = '';\n\t\tfor ( var i=0, iLen=oSettings.aoColumns.length ; i<iLen ; i++ )\n\t\t{\n\t\t\tsNames += oSettings.aoColumns[i].sName+',';\n\t\t}\n\t\tif ( sNames.length == iLen )\n\t\t{\n\t\t\treturn \"\";\n\t\t}\n\t\treturn sNames.slice(0, -1);\n\t}\n\t\n\t\n\t/**\n\t * Take the column definitions and static columns arrays and calculate how\n\t * they relate to column indexes. The callback function will then apply the\n\t * definition found for a column to a suitable configuration object.\n\t *  @param {object} oSettings dataTables settings object\n\t *  @param {array} aoColDefs The aoColumnDefs array that is to be applied\n\t *  @param {array} aoCols The aoColumns array that defines columns individually\n\t *  @param {function} fn Callback function - takes two parameters, the calculated\n\t *    column index and the definition for that column.\n\t *  @memberof DataTable#oApi\n\t */\n\tfunction _fnApplyColumnDefs( oSettings, aoColDefs, aoCols, fn )\n\t{\n\t\tvar i, iLen, j, jLen, k, kLen;\n\t\n\t\t// Column definitions with aTargets\n\t\tif ( aoColDefs )\n\t\t{\n\t\t\t/* Loop over the definitions array - loop in reverse so first instance has priority */\n\t\t\tfor ( i=aoColDefs.length-1 ; i>=0 ; i-- )\n\t\t\t{\n\t\t\t\t/* Each definition can target multiple columns, as it is an array */\n\t\t\t\tvar aTargets = aoColDefs[i].aTargets;\n\t\t\t\tif ( !$.isArray( aTargets ) )\n\t\t\t\t{\n\t\t\t\t\t_fnLog( oSettings, 1, 'aTargets must be an array of targets, not a '+(typeof aTargets) );\n\t\t\t\t}\n\t\n\t\t\t\tfor ( j=0, jLen=aTargets.length ; j<jLen ; j++ )\n\t\t\t\t{\n\t\t\t\t\tif ( typeof aTargets[j] === 'number' && aTargets[j] >= 0 )\n\t\t\t\t\t{\n\t\t\t\t\t\t/* Add columns that we don't yet know about */\n\t\t\t\t\t\twhile( oSettings.aoColumns.length <= aTargets[j] )\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t_fnAddColumn( oSettings );\n\t\t\t\t\t\t}\n\t\n\t\t\t\t\t\t/* Integer, basic index */\n\t\t\t\t\t\tfn( aTargets[j], aoColDefs[i] );\n\t\t\t\t\t}\n\t\t\t\t\telse if ( typeof aTargets[j] === 'number' && aTargets[j] < 0 )\n\t\t\t\t\t{\n\t\t\t\t\t\t/* Negative integer, right to left column counting */\n\t\t\t\t\t\tfn( oSettings.aoColumns.length+aTargets[j], aoColDefs[i] );\n\t\t\t\t\t}\n\t\t\t\t\telse if ( typeof aTargets[j] === 'string' )\n\t\t\t\t\t{\n\t\t\t\t\t\t/* Class name matching on TH element */\n\t\t\t\t\t\tfor ( k=0, kLen=oSettings.aoColumns.length ; k<kLen ; k++ )\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tif ( aTargets[j] == \"_all\" ||\n\t\t\t\t\t\t\t     $(oSettings.aoColumns[k].nTh).hasClass( aTargets[j] ) )\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tfn( k, aoColDefs[i] );\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\n\t\t// Statically defined columns array\n\t\tif ( aoCols )\n\t\t{\n\t\t\tfor ( i=0, iLen=aoCols.length ; i<iLen ; i++ )\n\t\t\t{\n\t\t\t\tfn( i, aoCols[i] );\n\t\t\t}\n\t\t}\n\t}\n\t\n\t/**\n\t * Add a data array to the table, creating DOM node etc. This is the parallel to \n\t * _fnGatherData, but for adding rows from a Javascript source, rather than a\n\t * DOM source.\n\t *  @param {object} oSettings dataTables settings object\n\t *  @param {array} aData data array to be added\n\t *  @returns {int} >=0 if successful (index of new aoData entry), -1 if failed\n\t *  @memberof DataTable#oApi\n\t */\n\tfunction _fnAddData ( oSettings, aDataSupplied )\n\t{\n\t\tvar oCol;\n\t\t\n\t\t/* Take an independent copy of the data source so we can bash it about as we wish */\n\t\tvar aDataIn = ($.isArray(aDataSupplied)) ?\n\t\t\taDataSupplied.slice() :\n\t\t\t$.extend( true, {}, aDataSupplied );\n\t\t\n\t\t/* Create the object for storing information about this new row */\n\t\tvar iRow = oSettings.aoData.length;\n\t\tvar oData = $.extend( true, {}, DataTable.models.oRow );\n\t\toData._aData = aDataIn;\n\t\toSettings.aoData.push( oData );\n\t\n\t\t/* Create the cells */\n\t\tvar nTd, sThisType;\n\t\tfor ( var i=0, iLen=oSettings.aoColumns.length ; i<iLen ; i++ )\n\t\t{\n\t\t\toCol = oSettings.aoColumns[i];\n\t\n\t\t\t/* Use rendered data for filtering / sorting */\n\t\t\tif ( typeof oCol.fnRender === 'function' && oCol.bUseRendered && oCol.mData !== null )\n\t\t\t{\n\t\t\t\t_fnSetCellData( oSettings, iRow, i, _fnRender(oSettings, iRow, i) );\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\t_fnSetCellData( oSettings, iRow, i, _fnGetCellData( oSettings, iRow, i ) );\n\t\t\t}\n\t\t\t\n\t\t\t/* See if we should auto-detect the column type */\n\t\t\tif ( oCol._bAutoType && oCol.sType != 'string' )\n\t\t\t{\n\t\t\t\t/* Attempt to auto detect the type - same as _fnGatherData() */\n\t\t\t\tvar sVarType = _fnGetCellData( oSettings, iRow, i, 'type' );\n\t\t\t\tif ( sVarType !== null && sVarType !== '' )\n\t\t\t\t{\n\t\t\t\t\tsThisType = _fnDetectType( sVarType );\n\t\t\t\t\tif ( oCol.sType === null )\n\t\t\t\t\t{\n\t\t\t\t\t\toCol.sType = sThisType;\n\t\t\t\t\t}\n\t\t\t\t\telse if ( oCol.sType != sThisType && oCol.sType != \"html\" )\n\t\t\t\t\t{\n\t\t\t\t\t\t/* String is always the 'fallback' option */\n\t\t\t\t\t\toCol.sType = 'string';\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\t\n\t\t/* Add to the display array */\n\t\toSettings.aiDisplayMaster.push( iRow );\n\t\n\t\t/* Create the DOM information */\n\t\tif ( !oSettings.oFeatures.bDeferRender )\n\t\t{\n\t\t\t_fnCreateTr( oSettings, iRow );\n\t\t}\n\t\n\t\treturn iRow;\n\t}\n\t\n\t\n\t/**\n\t * Read in the data from the target table from the DOM\n\t *  @param {object} oSettings dataTables settings object\n\t *  @memberof DataTable#oApi\n\t */\n\tfunction _fnGatherData( oSettings )\n\t{\n\t\tvar iLoop, i, iLen, j, jLen, jInner,\n\t\t \tnTds, nTrs, nTd, nTr, aLocalData, iThisIndex,\n\t\t\tiRow, iRows, iColumn, iColumns, sNodeName,\n\t\t\toCol, oData;\n\t\t\n\t\t/*\n\t\t * Process by row first\n\t\t * Add the data object for the whole table - storing the tr node. Note - no point in getting\n\t\t * DOM based data if we are going to go and replace it with Ajax source data.\n\t\t */\n\t\tif ( oSettings.bDeferLoading || oSettings.sAjaxSource === null )\n\t\t{\n\t\t\tnTr = oSettings.nTBody.firstChild;\n\t\t\twhile ( nTr )\n\t\t\t{\n\t\t\t\tif ( nTr.nodeName.toUpperCase() == \"TR\" )\n\t\t\t\t{\n\t\t\t\t\tiThisIndex = oSettings.aoData.length;\n\t\t\t\t\tnTr._DT_RowIndex = iThisIndex;\n\t\t\t\t\toSettings.aoData.push( $.extend( true, {}, DataTable.models.oRow, {\n\t\t\t\t\t\t\"nTr\": nTr\n\t\t\t\t\t} ) );\n\t\n\t\t\t\t\toSettings.aiDisplayMaster.push( iThisIndex );\n\t\t\t\t\tnTd = nTr.firstChild;\n\t\t\t\t\tjInner = 0;\n\t\t\t\t\twhile ( nTd )\n\t\t\t\t\t{\n\t\t\t\t\t\tsNodeName = nTd.nodeName.toUpperCase();\n\t\t\t\t\t\tif ( sNodeName == \"TD\" || sNodeName == \"TH\" )\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t_fnSetCellData( oSettings, iThisIndex, jInner, $.trim(nTd.innerHTML) );\n\t\t\t\t\t\t\tjInner++;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tnTd = nTd.nextSibling;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tnTr = nTr.nextSibling;\n\t\t\t}\n\t\t}\n\t\t\n\t\t/* Gather in the TD elements of the Table - note that this is basically the same as\n\t\t * fnGetTdNodes, but that function takes account of hidden columns, which we haven't yet\n\t\t * setup!\n\t\t */\n\t\tnTrs = _fnGetTrNodes( oSettings );\n\t\tnTds = [];\n\t\tfor ( i=0, iLen=nTrs.length ; i<iLen ; i++ )\n\t\t{\n\t\t\tnTd = nTrs[i].firstChild;\n\t\t\twhile ( nTd )\n\t\t\t{\n\t\t\t\tsNodeName = nTd.nodeName.toUpperCase();\n\t\t\t\tif ( sNodeName == \"TD\" || sNodeName == \"TH\" )\n\t\t\t\t{\n\t\t\t\t\tnTds.push( nTd );\n\t\t\t\t}\n\t\t\t\tnTd = nTd.nextSibling;\n\t\t\t}\n\t\t}\n\t\t\n\t\t/* Now process by column */\n\t\tfor ( iColumn=0, iColumns=oSettings.aoColumns.length ; iColumn<iColumns ; iColumn++ )\n\t\t{\n\t\t\toCol = oSettings.aoColumns[iColumn];\n\t\n\t\t\t/* Get the title of the column - unless there is a user set one */\n\t\t\tif ( oCol.sTitle === null )\n\t\t\t{\n\t\t\t\toCol.sTitle = oCol.nTh.innerHTML;\n\t\t\t}\n\t\t\t\n\t\t\tvar\n\t\t\t\tbAutoType = oCol._bAutoType,\n\t\t\t\tbRender = typeof oCol.fnRender === 'function',\n\t\t\t\tbClass = oCol.sClass !== null,\n\t\t\t\tbVisible = oCol.bVisible,\n\t\t\t\tnCell, sThisType, sRendered, sValType;\n\t\t\t\n\t\t\t/* A single loop to rule them all (and be more efficient) */\n\t\t\tif ( bAutoType || bRender || bClass || !bVisible )\n\t\t\t{\n\t\t\t\tfor ( iRow=0, iRows=oSettings.aoData.length ; iRow<iRows ; iRow++ )\n\t\t\t\t{\n\t\t\t\t\toData = oSettings.aoData[iRow];\n\t\t\t\t\tnCell = nTds[ (iRow*iColumns) + iColumn ];\n\t\t\t\t\t\n\t\t\t\t\t/* Type detection */\n\t\t\t\t\tif ( bAutoType && oCol.sType != 'string' )\n\t\t\t\t\t{\n\t\t\t\t\t\tsValType = _fnGetCellData( oSettings, iRow, iColumn, 'type' );\n\t\t\t\t\t\tif ( sValType !== '' )\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tsThisType = _fnDetectType( sValType );\n\t\t\t\t\t\t\tif ( oCol.sType === null )\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\toCol.sType = sThisType;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\telse if ( oCol.sType != sThisType && \n\t\t\t\t\t\t\t          oCol.sType != \"html\" )\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t/* String is always the 'fallback' option */\n\t\t\t\t\t\t\t\toCol.sType = 'string';\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\n\t\t\t\t\tif ( oCol.mRender )\n\t\t\t\t\t{\n\t\t\t\t\t\t// mRender has been defined, so we need to get the value and set it\n\t\t\t\t\t\tnCell.innerHTML = _fnGetCellData( oSettings, iRow, iColumn, 'display' );\n\t\t\t\t\t}\n\t\t\t\t\telse if ( oCol.mData !== iColumn )\n\t\t\t\t\t{\n\t\t\t\t\t\t// If mData is not the same as the column number, then we need to\n\t\t\t\t\t\t// get the dev set value. If it is the column, no point in wasting\n\t\t\t\t\t\t// time setting the value that is already there!\n\t\t\t\t\t\tnCell.innerHTML = _fnGetCellData( oSettings, iRow, iColumn, 'display' );\n\t\t\t\t\t}\n\t\t\t\t\t\n\t\t\t\t\t/* Rendering */\n\t\t\t\t\tif ( bRender )\n\t\t\t\t\t{\n\t\t\t\t\t\tsRendered = _fnRender( oSettings, iRow, iColumn );\n\t\t\t\t\t\tnCell.innerHTML = sRendered;\n\t\t\t\t\t\tif ( oCol.bUseRendered )\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t/* Use the rendered data for filtering / sorting */\n\t\t\t\t\t\t\t_fnSetCellData( oSettings, iRow, iColumn, sRendered );\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\t\n\t\t\t\t\t/* Classes */\n\t\t\t\t\tif ( bClass )\n\t\t\t\t\t{\n\t\t\t\t\t\tnCell.className += ' '+oCol.sClass;\n\t\t\t\t\t}\n\t\t\t\t\t\n\t\t\t\t\t/* Column visibility */\n\t\t\t\t\tif ( !bVisible )\n\t\t\t\t\t{\n\t\t\t\t\t\toData._anHidden[iColumn] = nCell;\n\t\t\t\t\t\tnCell.parentNode.removeChild( nCell );\n\t\t\t\t\t}\n\t\t\t\t\telse\n\t\t\t\t\t{\n\t\t\t\t\t\toData._anHidden[iColumn] = null;\n\t\t\t\t\t}\n\t\n\t\t\t\t\tif ( oCol.fnCreatedCell )\n\t\t\t\t\t{\n\t\t\t\t\t\toCol.fnCreatedCell.call( oSettings.oInstance,\n\t\t\t\t\t\t\tnCell, _fnGetCellData( oSettings, iRow, iColumn, 'display' ), oData._aData, iRow, iColumn\n\t\t\t\t\t\t);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\n\t\t/* Row created callbacks */\n\t\tif ( oSettings.aoRowCreatedCallback.length !== 0 )\n\t\t{\n\t\t\tfor ( i=0, iLen=oSettings.aoData.length ; i<iLen ; i++ )\n\t\t\t{\n\t\t\t\toData = oSettings.aoData[i];\n\t\t\t\t_fnCallbackFire( oSettings, 'aoRowCreatedCallback', null, [oData.nTr, oData._aData, i] );\n\t\t\t}\n\t\t}\n\t}\n\t\n\t\n\t/**\n\t * Take a TR element and convert it to an index in aoData\n\t *  @param {object} oSettings dataTables settings object\n\t *  @param {node} n the TR element to find\n\t *  @returns {int} index if the node is found, null if not\n\t *  @memberof DataTable#oApi\n\t */\n\tfunction _fnNodeToDataIndex( oSettings, n )\n\t{\n\t\treturn (n._DT_RowIndex!==undefined) ? n._DT_RowIndex : null;\n\t}\n\t\n\t\n\t/**\n\t * Take a TD element and convert it into a column data index (not the visible index)\n\t *  @param {object} oSettings dataTables settings object\n\t *  @param {int} iRow The row number the TD/TH can be found in\n\t *  @param {node} n The TD/TH element to find\n\t *  @returns {int} index if the node is found, -1 if not\n\t *  @memberof DataTable#oApi\n\t */\n\tfunction _fnNodeToColumnIndex( oSettings, iRow, n )\n\t{\n\t\tvar anCells = _fnGetTdNodes( oSettings, iRow );\n\t\n\t\tfor ( var i=0, iLen=oSettings.aoColumns.length ; i<iLen ; i++ )\n\t\t{\n\t\t\tif ( anCells[i] === n )\n\t\t\t{\n\t\t\t\treturn i;\n\t\t\t}\n\t\t}\n\t\treturn -1;\n\t}\n\t\n\t\n\t/**\n\t * Get an array of data for a given row from the internal data cache\n\t *  @param {object} oSettings dataTables settings object\n\t *  @param {int} iRow aoData row id\n\t *  @param {string} sSpecific data get type ('type' 'filter' 'sort')\n\t *  @param {array} aiColumns Array of column indexes to get data from\n\t *  @returns {array} Data array\n\t *  @memberof DataTable#oApi\n\t */\n\tfunction _fnGetRowData( oSettings, iRow, sSpecific, aiColumns )\n\t{\n\t\tvar out = [];\n\t\tfor ( var i=0, iLen=aiColumns.length ; i<iLen ; i++ )\n\t\t{\n\t\t\tout.push( _fnGetCellData( oSettings, iRow, aiColumns[i], sSpecific ) );\n\t\t}\n\t\treturn out;\n\t}\n\t\n\t\n\t/**\n\t * Get the data for a given cell from the internal cache, taking into account data mapping\n\t *  @param {object} oSettings dataTables settings object\n\t *  @param {int} iRow aoData row id\n\t *  @param {int} iCol Column index\n\t *  @param {string} sSpecific data get type ('display', 'type' 'filter' 'sort')\n\t *  @returns {*} Cell data\n\t *  @memberof DataTable#oApi\n\t */\n\tfunction _fnGetCellData( oSettings, iRow, iCol, sSpecific )\n\t{\n\t\tvar sData;\n\t\tvar oCol = oSettings.aoColumns[iCol];\n\t\tvar oData = oSettings.aoData[iRow]._aData;\n\t\n\t\tif ( (sData=oCol.fnGetData( oData, sSpecific )) === undefined )\n\t\t{\n\t\t\tif ( oSettings.iDrawError != oSettings.iDraw && oCol.sDefaultContent === null )\n\t\t\t{\n\t\t\t\t_fnLog( oSettings, 0, \"Requested unknown parameter \"+\n\t\t\t\t\t(typeof oCol.mData=='function' ? '{mData function}' : \"'\"+oCol.mData+\"'\")+\n\t\t\t\t\t\" from the data source for row \"+iRow );\n\t\t\t\toSettings.iDrawError = oSettings.iDraw;\n\t\t\t}\n\t\t\treturn oCol.sDefaultContent;\n\t\t}\n\t\n\t\t/* When the data source is null, we can use default column data */\n\t\tif ( sData === null && oCol.sDefaultContent !== null )\n\t\t{\n\t\t\tsData = oCol.sDefaultContent;\n\t\t}\n\t\telse if ( typeof sData === 'function' )\n\t\t{\n\t\t\t/* If the data source is a function, then we run it and use the return */\n\t\t\treturn sData();\n\t\t}\n\t\n\t\tif ( sSpecific == 'display' && sData === null )\n\t\t{\n\t\t\treturn '';\n\t\t}\n\t\treturn sData;\n\t}\n\t\n\t\n\t/**\n\t * Set the value for a specific cell, into the internal data cache\n\t *  @param {object} oSettings dataTables settings object\n\t *  @param {int} iRow aoData row id\n\t *  @param {int} iCol Column index\n\t *  @param {*} val Value to set\n\t *  @memberof DataTable#oApi\n\t */\n\tfunction _fnSetCellData( oSettings, iRow, iCol, val )\n\t{\n\t\tvar oCol = oSettings.aoColumns[iCol];\n\t\tvar oData = oSettings.aoData[iRow]._aData;\n\t\n\t\toCol.fnSetData( oData, val );\n\t}\n\t\n\t\n\t// Private variable that is used to match array syntax in the data property object\n\tvar __reArray = /\\[.*?\\]$/;\n\t\n\t/**\n\t * Return a function that can be used to get data from a source object, taking\n\t * into account the ability to use nested objects as a source\n\t *  @param {string|int|function} mSource The data source for the object\n\t *  @returns {function} Data get function\n\t *  @memberof DataTable#oApi\n\t */\n\tfunction _fnGetObjectDataFn( mSource )\n\t{\n\t\tif ( mSource === null )\n\t\t{\n\t\t\t/* Give an empty string for rendering / sorting etc */\n\t\t\treturn function (data, type) {\n\t\t\t\treturn null;\n\t\t\t};\n\t\t}\n\t\telse if ( typeof mSource === 'function' )\n\t\t{\n\t\t\treturn function (data, type, extra) {\n\t\t\t\treturn mSource( data, type, extra );\n\t\t\t};\n\t\t}\n\t\telse if ( typeof mSource === 'string' && (mSource.indexOf('.') !== -1 || mSource.indexOf('[') !== -1) )\n\t\t{\n\t\t\t/* If there is a . in the source string then the data source is in a \n\t\t\t * nested object so we loop over the data for each level to get the next\n\t\t\t * level down. On each loop we test for undefined, and if found immediately\n\t\t\t * return. This allows entire objects to be missing and sDefaultContent to\n\t\t\t * be used if defined, rather than throwing an error\n\t\t\t */\n\t\t\tvar fetchData = function (data, type, src) {\n\t\t\t\tvar a = src.split('.');\n\t\t\t\tvar arrayNotation, out, innerSrc;\n\t\n\t\t\t\tif ( src !== \"\" )\n\t\t\t\t{\n\t\t\t\t\tfor ( var i=0, iLen=a.length ; i<iLen ; i++ )\n\t\t\t\t\t{\n\t\t\t\t\t\t// Check if we are dealing with an array notation request\n\t\t\t\t\t\tarrayNotation = a[i].match(__reArray);\n\t\n\t\t\t\t\t\tif ( arrayNotation ) {\n\t\t\t\t\t\t\ta[i] = a[i].replace(__reArray, '');\n\t\n\t\t\t\t\t\t\t// Condition allows simply [] to be passed in\n\t\t\t\t\t\t\tif ( a[i] !== \"\" ) {\n\t\t\t\t\t\t\t\tdata = data[ a[i] ];\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tout = [];\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t// Get the remainder of the nested object to get\n\t\t\t\t\t\t\ta.splice( 0, i+1 );\n\t\t\t\t\t\t\tinnerSrc = a.join('.');\n\t\n\t\t\t\t\t\t\t// Traverse each entry in the array getting the properties requested\n\t\t\t\t\t\t\tfor ( var j=0, jLen=data.length ; j<jLen ; j++ ) {\n\t\t\t\t\t\t\t\tout.push( fetchData( data[j], type, innerSrc ) );\n\t\t\t\t\t\t\t}\n\t\n\t\t\t\t\t\t\t// If a string is given in between the array notation indicators, that\n\t\t\t\t\t\t\t// is used to join the strings together, otherwise an array is returned\n\t\t\t\t\t\t\tvar join = arrayNotation[0].substring(1, arrayNotation[0].length-1);\n\t\t\t\t\t\t\tdata = (join===\"\") ? out : out.join(join);\n\t\n\t\t\t\t\t\t\t// The inner call to fetchData has already traversed through the remainder\n\t\t\t\t\t\t\t// of the source requested, so we exit from the loop\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\n\t\t\t\t\t\tif ( data === null || data[ a[i] ] === undefined )\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\treturn undefined;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tdata = data[ a[i] ];\n\t\t\t\t\t}\n\t\t\t\t}\n\t\n\t\t\t\treturn data;\n\t\t\t};\n\t\n\t\t\treturn function (data, type) {\n\t\t\t\treturn fetchData( data, type, mSource );\n\t\t\t};\n\t\t}\n\t\telse\n\t\t{\n\t\t\t/* Array or flat object mapping */\n\t\t\treturn function (data, type) {\n\t\t\t\treturn data[mSource];\t\n\t\t\t};\n\t\t}\n\t}\n\t\n\t\n\t/**\n\t * Return a function that can be used to set data from a source object, taking\n\t * into account the ability to use nested objects as a source\n\t *  @param {string|int|function} mSource The data source for the object\n\t *  @returns {function} Data set function\n\t *  @memberof DataTable#oApi\n\t */\n\tfunction _fnSetObjectDataFn( mSource )\n\t{\n\t\tif ( mSource === null )\n\t\t{\n\t\t\t/* Nothing to do when the data source is null */\n\t\t\treturn function (data, val) {};\n\t\t}\n\t\telse if ( typeof mSource === 'function' )\n\t\t{\n\t\t\treturn function (data, val) {\n\t\t\t\tmSource( data, 'set', val );\n\t\t\t};\n\t\t}\n\t\telse if ( typeof mSource === 'string' && (mSource.indexOf('.') !== -1 || mSource.indexOf('[') !== -1) )\n\t\t{\n\t\t\t/* Like the get, we need to get data from a nested object */\n\t\t\tvar setData = function (data, val, src) {\n\t\t\t\tvar a = src.split('.'), b;\n\t\t\t\tvar arrayNotation, o, innerSrc;\n\t\n\t\t\t\tfor ( var i=0, iLen=a.length-1 ; i<iLen ; i++ )\n\t\t\t\t{\n\t\t\t\t\t// Check if we are dealing with an array notation request\n\t\t\t\t\tarrayNotation = a[i].match(__reArray);\n\t\n\t\t\t\t\tif ( arrayNotation )\n\t\t\t\t\t{\n\t\t\t\t\t\ta[i] = a[i].replace(__reArray, '');\n\t\t\t\t\t\tdata[ a[i] ] = [];\n\t\t\t\t\t\t\n\t\t\t\t\t\t// Get the remainder of the nested object to set so we can recurse\n\t\t\t\t\t\tb = a.slice();\n\t\t\t\t\t\tb.splice( 0, i+1 );\n\t\t\t\t\t\tinnerSrc = b.join('.');\n\t\n\t\t\t\t\t\t// Traverse each entry in the array setting the properties requested\n\t\t\t\t\t\tfor ( var j=0, jLen=val.length ; j<jLen ; j++ )\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\to = {};\n\t\t\t\t\t\t\tsetData( o, val[j], innerSrc );\n\t\t\t\t\t\t\tdata[ a[i] ].push( o );\n\t\t\t\t\t\t}\n\t\n\t\t\t\t\t\t// The inner call to setData has already traversed through the remainder\n\t\t\t\t\t\t// of the source and has set the data, thus we can exit here\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\t\n\t\t\t\t\t// If the nested object doesn't currently exist - since we are\n\t\t\t\t\t// trying to set the value - create it\n\t\t\t\t\tif ( data[ a[i] ] === null || data[ a[i] ] === undefined )\n\t\t\t\t\t{\n\t\t\t\t\t\tdata[ a[i] ] = {};\n\t\t\t\t\t}\n\t\t\t\t\tdata = data[ a[i] ];\n\t\t\t\t}\n\t\n\t\t\t\t// If array notation is used, we just want to strip it and use the property name\n\t\t\t\t// and assign the value. If it isn't used, then we get the result we want anyway\n\t\t\t\tdata[ a[a.length-1].replace(__reArray, '') ] = val;\n\t\t\t};\n\t\n\t\t\treturn function (data, val) {\n\t\t\t\treturn setData( data, val, mSource );\n\t\t\t};\n\t\t}\n\t\telse\n\t\t{\n\t\t\t/* Array or flat object mapping */\n\t\t\treturn function (data, val) {\n\t\t\t\tdata[mSource] = val;\t\n\t\t\t};\n\t\t}\n\t}\n\t\n\t\n\t/**\n\t * Return an array with the full table data\n\t *  @param {object} oSettings dataTables settings object\n\t *  @returns array {array} aData Master data array\n\t *  @memberof DataTable#oApi\n\t */\n\tfunction _fnGetDataMaster ( oSettings )\n\t{\n\t\tvar aData = [];\n\t\tvar iLen = oSettings.aoData.length;\n\t\tfor ( var i=0 ; i<iLen; i++ )\n\t\t{\n\t\t\taData.push( oSettings.aoData[i]._aData );\n\t\t}\n\t\treturn aData;\n\t}\n\t\n\t\n\t/**\n\t * Nuke the table\n\t *  @param {object} oSettings dataTables settings object\n\t *  @memberof DataTable#oApi\n\t */\n\tfunction _fnClearTable( oSettings )\n\t{\n\t\toSettings.aoData.splice( 0, oSettings.aoData.length );\n\t\toSettings.aiDisplayMaster.splice( 0, oSettings.aiDisplayMaster.length );\n\t\toSettings.aiDisplay.splice( 0, oSettings.aiDisplay.length );\n\t\t_fnCalculateEnd( oSettings );\n\t}\n\t\n\t\n\t /**\n\t * Take an array of integers (index array) and remove a target integer (value - not \n\t * the key!)\n\t *  @param {array} a Index array to target\n\t *  @param {int} iTarget value to find\n\t *  @memberof DataTable#oApi\n\t */\n\tfunction _fnDeleteIndex( a, iTarget )\n\t{\n\t\tvar iTargetIndex = -1;\n\t\t\n\t\tfor ( var i=0, iLen=a.length ; i<iLen ; i++ )\n\t\t{\n\t\t\tif ( a[i] == iTarget )\n\t\t\t{\n\t\t\t\tiTargetIndex = i;\n\t\t\t}\n\t\t\telse if ( a[i] > iTarget )\n\t\t\t{\n\t\t\t\ta[i]--;\n\t\t\t}\n\t\t}\n\t\t\n\t\tif ( iTargetIndex != -1 )\n\t\t{\n\t\t\ta.splice( iTargetIndex, 1 );\n\t\t}\n\t}\n\t\n\t\n\t /**\n\t * Call the developer defined fnRender function for a given cell (row/column) with\n\t * the required parameters and return the result.\n\t *  @param {object} oSettings dataTables settings object\n\t *  @param {int} iRow aoData index for the row\n\t *  @param {int} iCol aoColumns index for the column\n\t *  @returns {*} Return of the developer's fnRender function\n\t *  @memberof DataTable#oApi\n\t */\n\tfunction _fnRender( oSettings, iRow, iCol )\n\t{\n\t\tvar oCol = oSettings.aoColumns[iCol];\n\t\n\t\treturn oCol.fnRender( {\n\t\t\t\"iDataRow\":    iRow,\n\t\t\t\"iDataColumn\": iCol,\n\t\t\t\"oSettings\":   oSettings,\n\t\t\t\"aData\":       oSettings.aoData[iRow]._aData,\n\t\t\t\"mDataProp\":   oCol.mData\n\t\t}, _fnGetCellData(oSettings, iRow, iCol, 'display') );\n\t}\n\t/**\n\t * Create a new TR element (and it's TD children) for a row\n\t *  @param {object} oSettings dataTables settings object\n\t *  @param {int} iRow Row to consider\n\t *  @memberof DataTable#oApi\n\t */\n\tfunction _fnCreateTr ( oSettings, iRow )\n\t{\n\t\tvar oData = oSettings.aoData[iRow];\n\t\tvar nTd;\n\t\n\t\tif ( oData.nTr === null )\n\t\t{\n\t\t\toData.nTr = document.createElement('tr');\n\t\n\t\t\t/* Use a private property on the node to allow reserve mapping from the node\n\t\t\t * to the aoData array for fast look up\n\t\t\t */\n\t\t\toData.nTr._DT_RowIndex = iRow;\n\t\n\t\t\t/* Special parameters can be given by the data source to be used on the row */\n\t\t\tif ( oData._aData.DT_RowId )\n\t\t\t{\n\t\t\t\toData.nTr.id = oData._aData.DT_RowId;\n\t\t\t}\n\t\n\t\t\tif ( oData._aData.DT_RowClass )\n\t\t\t{\n\t\t\t\toData.nTr.className = oData._aData.DT_RowClass;\n\t\t\t}\n\t\n\t\t\t/* Process each column */\n\t\t\tfor ( var i=0, iLen=oSettings.aoColumns.length ; i<iLen ; i++ )\n\t\t\t{\n\t\t\t\tvar oCol = oSettings.aoColumns[i];\n\t\t\t\tnTd = document.createElement( oCol.sCellType );\n\t\n\t\t\t\t/* Render if needed - if bUseRendered is true then we already have the rendered\n\t\t\t\t * value in the data source - so can just use that\n\t\t\t\t */\n\t\t\t\tnTd.innerHTML = (typeof oCol.fnRender === 'function' && (!oCol.bUseRendered || oCol.mData === null)) ?\n\t\t\t\t\t_fnRender( oSettings, iRow, i ) :\n\t\t\t\t\t_fnGetCellData( oSettings, iRow, i, 'display' );\n\t\t\t\n\t\t\t\t/* Add user defined class */\n\t\t\t\tif ( oCol.sClass !== null )\n\t\t\t\t{\n\t\t\t\t\tnTd.className = oCol.sClass;\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\tif ( oCol.bVisible )\n\t\t\t\t{\n\t\t\t\t\toData.nTr.appendChild( nTd );\n\t\t\t\t\toData._anHidden[i] = null;\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\toData._anHidden[i] = nTd;\n\t\t\t\t}\n\t\n\t\t\t\tif ( oCol.fnCreatedCell )\n\t\t\t\t{\n\t\t\t\t\toCol.fnCreatedCell.call( oSettings.oInstance,\n\t\t\t\t\t\tnTd, _fnGetCellData( oSettings, iRow, i, 'display' ), oData._aData, iRow, i\n\t\t\t\t\t);\n\t\t\t\t}\n\t\t\t}\n\t\n\t\t\t_fnCallbackFire( oSettings, 'aoRowCreatedCallback', null, [oData.nTr, oData._aData, iRow] );\n\t\t}\n\t}\n\t\n\t\n\t/**\n\t * Create the HTML header for the table\n\t *  @param {object} oSettings dataTables settings object\n\t *  @memberof DataTable#oApi\n\t */\n\tfunction _fnBuildHead( oSettings )\n\t{\n\t\tvar i, nTh, iLen, j, jLen;\n\t\tvar iThs = $('th, td', oSettings.nTHead).length;\n\t\tvar iCorrector = 0;\n\t\tvar jqChildren;\n\t\t\n\t\t/* If there is a header in place - then use it - otherwise it's going to get nuked... */\n\t\tif ( iThs !== 0 )\n\t\t{\n\t\t\t/* We've got a thead from the DOM, so remove hidden columns and apply width to vis cols */\n\t\t\tfor ( i=0, iLen=oSettings.aoColumns.length ; i<iLen ; i++ )\n\t\t\t{\n\t\t\t\tnTh = oSettings.aoColumns[i].nTh;\n\t\t\t\tnTh.setAttribute('role', 'columnheader');\n\t\t\t\tif ( oSettings.aoColumns[i].bSortable )\n\t\t\t\t{\n\t\t\t\t\tnTh.setAttribute('tabindex', oSettings.iTabIndex);\n\t\t\t\t\tnTh.setAttribute('aria-controls', oSettings.sTableId);\n\t\t\t\t}\n\t\n\t\t\t\tif ( oSettings.aoColumns[i].sClass !== null )\n\t\t\t\t{\n\t\t\t\t\t$(nTh).addClass( oSettings.aoColumns[i].sClass );\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\t/* Set the title of the column if it is user defined (not what was auto detected) */\n\t\t\t\tif ( oSettings.aoColumns[i].sTitle != nTh.innerHTML )\n\t\t\t\t{\n\t\t\t\t\tnTh.innerHTML = oSettings.aoColumns[i].sTitle;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\telse\n\t\t{\n\t\t\t/* We don't have a header in the DOM - so we are going to have to create one */\n\t\t\tvar nTr = document.createElement( \"tr\" );\n\t\t\t\n\t\t\tfor ( i=0, iLen=oSettings.aoColumns.length ; i<iLen ; i++ )\n\t\t\t{\n\t\t\t\tnTh = oSettings.aoColumns[i].nTh;\n\t\t\t\tnTh.innerHTML = oSettings.aoColumns[i].sTitle;\n\t\t\t\tnTh.setAttribute('tabindex', '0');\n\t\t\t\t\n\t\t\t\tif ( oSettings.aoColumns[i].sClass !== null )\n\t\t\t\t{\n\t\t\t\t\t$(nTh).addClass( oSettings.aoColumns[i].sClass );\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\tnTr.appendChild( nTh );\n\t\t\t}\n\t\t\t$(oSettings.nTHead).html( '' )[0].appendChild( nTr );\n\t\t\t_fnDetectHeader( oSettings.aoHeader, oSettings.nTHead );\n\t\t}\n\t\t\n\t\t/* ARIA role for the rows */\t\n\t\t$(oSettings.nTHead).children('tr').attr('role', 'row');\n\t\t\n\t\t/* Add the extra markup needed by jQuery UI's themes */\n\t\tif ( oSettings.bJUI )\n\t\t{\n\t\t\tfor ( i=0, iLen=oSettings.aoColumns.length ; i<iLen ; i++ )\n\t\t\t{\n\t\t\t\tnTh = oSettings.aoColumns[i].nTh;\n\t\t\t\t\n\t\t\t\tvar nDiv = document.createElement('div');\n\t\t\t\tnDiv.className = oSettings.oClasses.sSortJUIWrapper;\n\t\t\t\t$(nTh).contents().appendTo(nDiv);\n\t\t\t\t\n\t\t\t\tvar nSpan = document.createElement('span');\n\t\t\t\tnSpan.className = oSettings.oClasses.sSortIcon;\n\t\t\t\tnDiv.appendChild( nSpan );\n\t\t\t\tnTh.appendChild( nDiv );\n\t\t\t}\n\t\t}\n\t\t\n\t\tif ( oSettings.oFeatures.bSort )\n\t\t{\n\t\t\tfor ( i=0 ; i<oSettings.aoColumns.length ; i++ )\n\t\t\t{\n\t\t\t\tif ( oSettings.aoColumns[i].bSortable !== false )\n\t\t\t\t{\n\t\t\t\t\t_fnSortAttachListener( oSettings, oSettings.aoColumns[i].nTh, i );\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\t$(oSettings.aoColumns[i].nTh).addClass( oSettings.oClasses.sSortableNone );\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\t\n\t\t/* Deal with the footer - add classes if required */\n\t\tif ( oSettings.oClasses.sFooterTH !== \"\" )\n\t\t{\n\t\t\t$(oSettings.nTFoot).children('tr').children('th').addClass( oSettings.oClasses.sFooterTH );\n\t\t}\n\t\t\n\t\t/* Cache the footer elements */\n\t\tif ( oSettings.nTFoot !== null )\n\t\t{\n\t\t\tvar anCells = _fnGetUniqueThs( oSettings, null, oSettings.aoFooter );\n\t\t\tfor ( i=0, iLen=oSettings.aoColumns.length ; i<iLen ; i++ )\n\t\t\t{\n\t\t\t\tif ( anCells[i] )\n\t\t\t\t{\n\t\t\t\t\toSettings.aoColumns[i].nTf = anCells[i];\n\t\t\t\t\tif ( oSettings.aoColumns[i].sClass )\n\t\t\t\t\t{\n\t\t\t\t\t\t$(anCells[i]).addClass( oSettings.aoColumns[i].sClass );\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\t\n\t\n\t/**\n\t * Draw the header (or footer) element based on the column visibility states. The\n\t * methodology here is to use the layout array from _fnDetectHeader, modified for\n\t * the instantaneous column visibility, to construct the new layout. The grid is\n\t * traversed over cell at a time in a rows x columns grid fashion, although each \n\t * cell insert can cover multiple elements in the grid - which is tracks using the\n\t * aApplied array. Cell inserts in the grid will only occur where there isn't\n\t * already a cell in that position.\n\t *  @param {object} oSettings dataTables settings object\n\t *  @param array {objects} aoSource Layout array from _fnDetectHeader\n\t *  @param {boolean} [bIncludeHidden=false] If true then include the hidden columns in the calc, \n\t *  @memberof DataTable#oApi\n\t */\n\tfunction _fnDrawHead( oSettings, aoSource, bIncludeHidden )\n\t{\n\t\tvar i, iLen, j, jLen, k, kLen, n, nLocalTr;\n\t\tvar aoLocal = [];\n\t\tvar aApplied = [];\n\t\tvar iColumns = oSettings.aoColumns.length;\n\t\tvar iRowspan, iColspan;\n\t\n\t\tif (  bIncludeHidden === undefined )\n\t\t{\n\t\t\tbIncludeHidden = false;\n\t\t}\n\t\n\t\t/* Make a copy of the master layout array, but without the visible columns in it */\n\t\tfor ( i=0, iLen=aoSource.length ; i<iLen ; i++ )\n\t\t{\n\t\t\taoLocal[i] = aoSource[i].slice();\n\t\t\taoLocal[i].nTr = aoSource[i].nTr;\n\t\n\t\t\t/* Remove any columns which are currently hidden */\n\t\t\tfor ( j=iColumns-1 ; j>=0 ; j-- )\n\t\t\t{\n\t\t\t\tif ( !oSettings.aoColumns[j].bVisible && !bIncludeHidden )\n\t\t\t\t{\n\t\t\t\t\taoLocal[i].splice( j, 1 );\n\t\t\t\t}\n\t\t\t}\n\t\n\t\t\t/* Prep the applied array - it needs an element for each row */\n\t\t\taApplied.push( [] );\n\t\t}\n\t\n\t\tfor ( i=0, iLen=aoLocal.length ; i<iLen ; i++ )\n\t\t{\n\t\t\tnLocalTr = aoLocal[i].nTr;\n\t\t\t\n\t\t\t/* All cells are going to be replaced, so empty out the row */\n\t\t\tif ( nLocalTr )\n\t\t\t{\n\t\t\t\twhile( (n = nLocalTr.firstChild) )\n\t\t\t\t{\n\t\t\t\t\tnLocalTr.removeChild( n );\n\t\t\t\t}\n\t\t\t}\n\t\n\t\t\tfor ( j=0, jLen=aoLocal[i].length ; j<jLen ; j++ )\n\t\t\t{\n\t\t\t\tiRowspan = 1;\n\t\t\t\tiColspan = 1;\n\t\n\t\t\t\t/* Check to see if there is already a cell (row/colspan) covering our target\n\t\t\t\t * insert point. If there is, then there is nothing to do.\n\t\t\t\t */\n\t\t\t\tif ( aApplied[i][j] === undefined )\n\t\t\t\t{\n\t\t\t\t\tnLocalTr.appendChild( aoLocal[i][j].cell );\n\t\t\t\t\taApplied[i][j] = 1;\n\t\n\t\t\t\t\t/* Expand the cell to cover as many rows as needed */\n\t\t\t\t\twhile ( aoLocal[i+iRowspan] !== undefined &&\n\t\t\t\t\t        aoLocal[i][j].cell == aoLocal[i+iRowspan][j].cell )\n\t\t\t\t\t{\n\t\t\t\t\t\taApplied[i+iRowspan][j] = 1;\n\t\t\t\t\t\tiRowspan++;\n\t\t\t\t\t}\n\t\n\t\t\t\t\t/* Expand the cell to cover as many columns as needed */\n\t\t\t\t\twhile ( aoLocal[i][j+iColspan] !== undefined &&\n\t\t\t\t\t        aoLocal[i][j].cell == aoLocal[i][j+iColspan].cell )\n\t\t\t\t\t{\n\t\t\t\t\t\t/* Must update the applied array over the rows for the columns */\n\t\t\t\t\t\tfor ( k=0 ; k<iRowspan ; k++ )\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\taApplied[i+k][j+iColspan] = 1;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tiColspan++;\n\t\t\t\t\t}\n\t\n\t\t\t\t\t/* Do the actual expansion in the DOM */\n\t\t\t\t\taoLocal[i][j].cell.rowSpan = iRowspan;\n\t\t\t\t\taoLocal[i][j].cell.colSpan = iColspan;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\t\n\t\n\t/**\n\t * Insert the required TR nodes into the table for display\n\t *  @param {object} oSettings dataTables settings object\n\t *  @memberof DataTable#oApi\n\t */\n\tfunction _fnDraw( oSettings )\n\t{\n\t\t/* Provide a pre-callback function which can be used to cancel the draw is false is returned */\n\t\tvar aPreDraw = _fnCallbackFire( oSettings, 'aoPreDrawCallback', 'preDraw', [oSettings] );\n\t\tif ( $.inArray( false, aPreDraw ) !== -1 )\n\t\t{\n\t\t\t_fnProcessingDisplay( oSettings, false );\n\t\t\treturn;\n\t\t}\n\t\t\n\t\tvar i, iLen, n;\n\t\tvar anRows = [];\n\t\tvar iRowCount = 0;\n\t\tvar iStripes = oSettings.asStripeClasses.length;\n\t\tvar iOpenRows = oSettings.aoOpenRows.length;\n\t\t\n\t\toSettings.bDrawing = true;\n\t\t\n\t\t/* Check and see if we have an initial draw position from state saving */\n\t\tif ( oSettings.iInitDisplayStart !== undefined && oSettings.iInitDisplayStart != -1 )\n\t\t{\n\t\t\tif ( oSettings.oFeatures.bServerSide )\n\t\t\t{\n\t\t\t\toSettings._iDisplayStart = oSettings.iInitDisplayStart;\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\toSettings._iDisplayStart = (oSettings.iInitDisplayStart >= oSettings.fnRecordsDisplay()) ?\n\t\t\t\t\t0 : oSettings.iInitDisplayStart;\n\t\t\t}\n\t\t\toSettings.iInitDisplayStart = -1;\n\t\t\t_fnCalculateEnd( oSettings );\n\t\t}\n\t\t\n\t\t/* Server-side processing draw intercept */\n\t\tif ( oSettings.bDeferLoading )\n\t\t{\n\t\t\toSettings.bDeferLoading = false;\n\t\t\toSettings.iDraw++;\n\t\t}\n\t\telse if ( !oSettings.oFeatures.bServerSide )\n\t\t{\n\t\t\toSettings.iDraw++;\n\t\t}\n\t\telse if ( !oSettings.bDestroying && !_fnAjaxUpdate( oSettings ) )\n\t\t{\n\t\t\treturn;\n\t\t}\n\t\t\n\t\tif ( oSettings.aiDisplay.length !== 0 )\n\t\t{\n\t\t\tvar iStart = oSettings._iDisplayStart;\n\t\t\tvar iEnd = oSettings._iDisplayEnd;\n\t\t\t\n\t\t\tif ( oSettings.oFeatures.bServerSide )\n\t\t\t{\n\t\t\t\tiStart = 0;\n\t\t\t\tiEnd = oSettings.aoData.length;\n\t\t\t}\n\t\t\t\n\t\t\tfor ( var j=iStart ; j<iEnd ; j++ )\n\t\t\t{\n\t\t\t\tvar aoData = oSettings.aoData[ oSettings.aiDisplay[j] ];\n\t\t\t\tif ( aoData.nTr === null )\n\t\t\t\t{\n\t\t\t\t\t_fnCreateTr( oSettings, oSettings.aiDisplay[j] );\n\t\t\t\t}\n\t\n\t\t\t\tvar nRow = aoData.nTr;\n\t\t\t\t\n\t\t\t\t/* Remove the old striping classes and then add the new one */\n\t\t\t\tif ( iStripes !== 0 )\n\t\t\t\t{\n\t\t\t\t\tvar sStripe = oSettings.asStripeClasses[ iRowCount % iStripes ];\n\t\t\t\t\tif ( aoData._sRowStripe != sStripe )\n\t\t\t\t\t{\n\t\t\t\t\t\t$(nRow).removeClass( aoData._sRowStripe ).addClass( sStripe );\n\t\t\t\t\t\taoData._sRowStripe = sStripe;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\t/* Row callback functions - might want to manipulate the row */\n\t\t\t\t_fnCallbackFire( oSettings, 'aoRowCallback', null, \n\t\t\t\t\t[nRow, oSettings.aoData[ oSettings.aiDisplay[j] ]._aData, iRowCount, j] );\n\t\t\t\t\n\t\t\t\tanRows.push( nRow );\n\t\t\t\tiRowCount++;\n\t\t\t\t\n\t\t\t\t/* If there is an open row - and it is attached to this parent - attach it on redraw */\n\t\t\t\tif ( iOpenRows !== 0 )\n\t\t\t\t{\n\t\t\t\t\tfor ( var k=0 ; k<iOpenRows ; k++ )\n\t\t\t\t\t{\n\t\t\t\t\t\tif ( nRow == oSettings.aoOpenRows[k].nParent )\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tanRows.push( oSettings.aoOpenRows[k].nTr );\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\telse\n\t\t{\n\t\t\t/* Table is empty - create a row with an empty message in it */\n\t\t\tanRows[ 0 ] = document.createElement( 'tr' );\n\t\t\t\n\t\t\tif ( oSettings.asStripeClasses[0] )\n\t\t\t{\n\t\t\t\tanRows[ 0 ].className = oSettings.asStripeClasses[0];\n\t\t\t}\n\t\n\t\t\tvar oLang = oSettings.oLanguage;\n\t\t\tvar sZero = oLang.sZeroRecords;\n\t\t\tif ( oSettings.iDraw == 1 && oSettings.sAjaxSource !== null && !oSettings.oFeatures.bServerSide )\n\t\t\t{\n\t\t\t\tsZero = oLang.sLoadingRecords;\n\t\t\t}\n\t\t\telse if ( oLang.sEmptyTable && oSettings.fnRecordsTotal() === 0 )\n\t\t\t{\n\t\t\t\tsZero = oLang.sEmptyTable;\n\t\t\t}\n\t\n\t\t\tvar nTd = document.createElement( 'td' );\n\t\t\tnTd.setAttribute( 'valign', \"top\" );\n\t\t\tnTd.colSpan = _fnVisbleColumns( oSettings );\n\t\t\tnTd.className = oSettings.oClasses.sRowEmpty;\n\t\t\tnTd.innerHTML = _fnInfoMacros( oSettings, sZero );\n\t\t\t\n\t\t\tanRows[ iRowCount ].appendChild( nTd );\n\t\t}\n\t\t\n\t\t/* Header and footer callbacks */\n\t\t_fnCallbackFire( oSettings, 'aoHeaderCallback', 'header', [ $(oSettings.nTHead).children('tr')[0], \n\t\t\t_fnGetDataMaster( oSettings ), oSettings._iDisplayStart, oSettings.fnDisplayEnd(), oSettings.aiDisplay ] );\n\t\t\n\t\t_fnCallbackFire( oSettings, 'aoFooterCallback', 'footer', [ $(oSettings.nTFoot).children('tr')[0], \n\t\t\t_fnGetDataMaster( oSettings ), oSettings._iDisplayStart, oSettings.fnDisplayEnd(), oSettings.aiDisplay ] );\n\t\t\n\t\t/* \n\t\t * Need to remove any old row from the display - note we can't just empty the tbody using\n\t\t * $().html('') since this will unbind the jQuery event handlers (even although the node \n\t\t * still exists!) - equally we can't use innerHTML, since IE throws an exception.\n\t\t */\n\t\tvar\n\t\t\tnAddFrag = document.createDocumentFragment(),\n\t\t\tnRemoveFrag = document.createDocumentFragment(),\n\t\t\tnBodyPar, nTrs;\n\t\t\n\t\tif ( oSettings.nTBody )\n\t\t{\n\t\t\tnBodyPar = oSettings.nTBody.parentNode;\n\t\t\tnRemoveFrag.appendChild( oSettings.nTBody );\n\t\t\t\n\t\t\t/* When doing infinite scrolling, only remove child rows when sorting, filtering or start\n\t\t\t * up. When not infinite scroll, always do it.\n\t\t\t */\n\t\t\tif ( !oSettings.oScroll.bInfinite || !oSettings._bInitComplete ||\n\t\t\t \toSettings.bSorted || oSettings.bFiltered )\n\t\t\t{\n\t\t\t\twhile( (n = oSettings.nTBody.firstChild) )\n\t\t\t\t{\n\t\t\t\t\toSettings.nTBody.removeChild( n );\n\t\t\t\t}\n\t\t\t}\n\t\t\t\n\t\t\t/* Put the draw table into the dom */\n\t\t\tfor ( i=0, iLen=anRows.length ; i<iLen ; i++ )\n\t\t\t{\n\t\t\t\tnAddFrag.appendChild( anRows[i] );\n\t\t\t}\n\t\t\t\n\t\t\toSettings.nTBody.appendChild( nAddFrag );\n\t\t\tif ( nBodyPar !== null )\n\t\t\t{\n\t\t\t\tnBodyPar.appendChild( oSettings.nTBody );\n\t\t\t}\n\t\t}\n\t\t\n\t\t/* Call all required callback functions for the end of a draw */\n\t\t_fnCallbackFire( oSettings, 'aoDrawCallback', 'draw', [oSettings] );\n\t\t\n\t\t/* Draw is complete, sorting and filtering must be as well */\n\t\toSettings.bSorted = false;\n\t\toSettings.bFiltered = false;\n\t\toSettings.bDrawing = false;\n\t\t\n\t\tif ( oSettings.oFeatures.bServerSide )\n\t\t{\n\t\t\t_fnProcessingDisplay( oSettings, false );\n\t\t\tif ( !oSettings._bInitComplete )\n\t\t\t{\n\t\t\t\t_fnInitComplete( oSettings );\n\t\t\t}\n\t\t}\n\t}\n\t\n\t\n\t/**\n\t * Redraw the table - taking account of the various features which are enabled\n\t *  @param {object} oSettings dataTables settings object\n\t *  @memberof DataTable#oApi\n\t */\n\tfunction _fnReDraw( oSettings )\n\t{\n\t\tif ( oSettings.oFeatures.bSort )\n\t\t{\n\t\t\t/* Sorting will refilter and draw for us */\n\t\t\t_fnSort( oSettings, oSettings.oPreviousSearch );\n\t\t}\n\t\telse if ( oSettings.oFeatures.bFilter )\n\t\t{\n\t\t\t/* Filtering will redraw for us */\n\t\t\t_fnFilterComplete( oSettings, oSettings.oPreviousSearch );\n\t\t}\n\t\telse\n\t\t{\n\t\t\t_fnCalculateEnd( oSettings );\n\t\t\t_fnDraw( oSettings );\n\t\t}\n\t}\n\t\n\t\n\t/**\n\t * Add the options to the page HTML for the table\n\t *  @param {object} oSettings dataTables settings object\n\t *  @memberof DataTable#oApi\n\t */\n\tfunction _fnAddOptionsHtml ( oSettings )\n\t{\n\t\t/*\n\t\t * Create a temporary, empty, div which we can later on replace with what we have generated\n\t\t * we do it this way to rendering the 'options' html offline - speed :-)\n\t\t */\n\t\tvar nHolding = $('<div></div>')[0];\n\t\toSettings.nTable.parentNode.insertBefore( nHolding, oSettings.nTable );\n\t\t\n\t\t/* \n\t\t * All DataTables are wrapped in a div\n\t\t */\n\t\toSettings.nTableWrapper = $('<div id=\"'+oSettings.sTableId+'_wrapper\" class=\"'+oSettings.oClasses.sWrapper+'\" role=\"grid\"></div>')[0];\n\t\toSettings.nTableReinsertBefore = oSettings.nTable.nextSibling;\n\t\n\t\t/* Track where we want to insert the option */\n\t\tvar nInsertNode = oSettings.nTableWrapper;\n\t\t\n\t\t/* Loop over the user set positioning and place the elements as needed */\n\t\tvar aDom = oSettings.sDom.split('');\n\t\tvar nTmp, iPushFeature, cOption, nNewNode, cNext, sAttr, j;\n\t\tfor ( var i=0 ; i<aDom.length ; i++ )\n\t\t{\n\t\t\tiPushFeature = 0;\n\t\t\tcOption = aDom[i];\n\t\t\t\n\t\t\tif ( cOption == '<' )\n\t\t\t{\n\t\t\t\t/* New container div */\n\t\t\t\tnNewNode = $('<div></div>')[0];\n\t\t\t\t\n\t\t\t\t/* Check to see if we should append an id and/or a class name to the container */\n\t\t\t\tcNext = aDom[i+1];\n\t\t\t\tif ( cNext == \"'\" || cNext == '\"' )\n\t\t\t\t{\n\t\t\t\t\tsAttr = \"\";\n\t\t\t\t\tj = 2;\n\t\t\t\t\twhile ( aDom[i+j] != cNext )\n\t\t\t\t\t{\n\t\t\t\t\t\tsAttr += aDom[i+j];\n\t\t\t\t\t\tj++;\n\t\t\t\t\t}\n\t\t\t\t\t\n\t\t\t\t\t/* Replace jQuery UI constants */\n\t\t\t\t\tif ( sAttr == \"H\" )\n\t\t\t\t\t{\n\t\t\t\t\t\tsAttr = oSettings.oClasses.sJUIHeader;\n\t\t\t\t\t}\n\t\t\t\t\telse if ( sAttr == \"F\" )\n\t\t\t\t\t{\n\t\t\t\t\t\tsAttr = oSettings.oClasses.sJUIFooter;\n\t\t\t\t\t}\n\t\t\t\t\t\n\t\t\t\t\t/* The attribute can be in the format of \"#id.class\", \"#id\" or \"class\" This logic\n\t\t\t\t\t * breaks the string into parts and applies them as needed\n\t\t\t\t\t */\n\t\t\t\t\tif ( sAttr.indexOf('.') != -1 )\n\t\t\t\t\t{\n\t\t\t\t\t\tvar aSplit = sAttr.split('.');\n\t\t\t\t\t\tnNewNode.id = aSplit[0].substr(1, aSplit[0].length-1);\n\t\t\t\t\t\tnNewNode.className = aSplit[1];\n\t\t\t\t\t}\n\t\t\t\t\telse if ( sAttr.charAt(0) == \"#\" )\n\t\t\t\t\t{\n\t\t\t\t\t\tnNewNode.id = sAttr.substr(1, sAttr.length-1);\n\t\t\t\t\t}\n\t\t\t\t\telse\n\t\t\t\t\t{\n\t\t\t\t\t\tnNewNode.className = sAttr;\n\t\t\t\t\t}\n\t\t\t\t\t\n\t\t\t\t\ti += j; /* Move along the position array */\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\tnInsertNode.appendChild( nNewNode );\n\t\t\t\tnInsertNode = nNewNode;\n\t\t\t}\n\t\t\telse if ( cOption == '>' )\n\t\t\t{\n\t\t\t\t/* End container div */\n\t\t\t\tnInsertNode = nInsertNode.parentNode;\n\t\t\t}\n\t\t\telse if ( cOption == 'l' && oSettings.oFeatures.bPaginate && oSettings.oFeatures.bLengthChange )\n\t\t\t{\n\t\t\t\t/* Length */\n\t\t\t\tnTmp = _fnFeatureHtmlLength( oSettings );\n\t\t\t\tiPushFeature = 1;\n\t\t\t}\n\t\t\telse if ( cOption == 'f' && oSettings.oFeatures.bFilter )\n\t\t\t{\n\t\t\t\t/* Filter */\n\t\t\t\tnTmp = _fnFeatureHtmlFilter( oSettings );\n\t\t\t\tiPushFeature = 1;\n\t\t\t}\n\t\t\telse if ( cOption == 'r' && oSettings.oFeatures.bProcessing )\n\t\t\t{\n\t\t\t\t/* pRocessing */\n\t\t\t\tnTmp = _fnFeatureHtmlProcessing( oSettings );\n\t\t\t\tiPushFeature = 1;\n\t\t\t}\n\t\t\telse if ( cOption == 't' )\n\t\t\t{\n\t\t\t\t/* Table */\n\t\t\t\tnTmp = _fnFeatureHtmlTable( oSettings );\n\t\t\t\tiPushFeature = 1;\n\t\t\t}\n\t\t\telse if ( cOption ==  'i' && oSettings.oFeatures.bInfo )\n\t\t\t{\n\t\t\t\t/* Info */\n\t\t\t\tnTmp = _fnFeatureHtmlInfo( oSettings );\n\t\t\t\tiPushFeature = 1;\n\t\t\t}\n\t\t\telse if ( cOption == 'p' && oSettings.oFeatures.bPaginate )\n\t\t\t{\n\t\t\t\t/* Pagination */\n\t\t\t\tnTmp = _fnFeatureHtmlPaginate( oSettings );\n\t\t\t\tiPushFeature = 1;\n\t\t\t}\n\t\t\telse if ( DataTable.ext.aoFeatures.length !== 0 )\n\t\t\t{\n\t\t\t\t/* Plug-in features */\n\t\t\t\tvar aoFeatures = DataTable.ext.aoFeatures;\n\t\t\t\tfor ( var k=0, kLen=aoFeatures.length ; k<kLen ; k++ )\n\t\t\t\t{\n\t\t\t\t\tif ( cOption == aoFeatures[k].cFeature )\n\t\t\t\t\t{\n\t\t\t\t\t\tnTmp = aoFeatures[k].fnInit( oSettings );\n\t\t\t\t\t\tif ( nTmp )\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tiPushFeature = 1;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\t\n\t\t\t/* Add to the 2D features array */\n\t\t\tif ( iPushFeature == 1 && nTmp !== null )\n\t\t\t{\n\t\t\t\tif ( typeof oSettings.aanFeatures[cOption] !== 'object' )\n\t\t\t\t{\n\t\t\t\t\toSettings.aanFeatures[cOption] = [];\n\t\t\t\t}\n\t\t\t\toSettings.aanFeatures[cOption].push( nTmp );\n\t\t\t\tnInsertNode.appendChild( nTmp );\n\t\t\t}\n\t\t}\n\t\t\n\t\t/* Built our DOM structure - replace the holding div with what we want */\n\t\tnHolding.parentNode.replaceChild( oSettings.nTableWrapper, nHolding );\n\t}\n\t\n\t\n\t/**\n\t * Use the DOM source to create up an array of header cells. The idea here is to\n\t * create a layout grid (array) of rows x columns, which contains a reference\n\t * to the cell that that point in the grid (regardless of col/rowspan), such that\n\t * any column / row could be removed and the new grid constructed\n\t *  @param array {object} aLayout Array to store the calculated layout in\n\t *  @param {node} nThead The header/footer element for the table\n\t *  @memberof DataTable#oApi\n\t */\n\tfunction _fnDetectHeader ( aLayout, nThead )\n\t{\n\t\tvar nTrs = $(nThead).children('tr');\n\t\tvar nTr, nCell;\n\t\tvar i, k, l, iLen, jLen, iColShifted, iColumn, iColspan, iRowspan;\n\t\tvar bUnique;\n\t\tvar fnShiftCol = function ( a, i, j ) {\n\t\t\tvar k = a[i];\n\t                while ( k[j] ) {\n\t\t\t\tj++;\n\t\t\t}\n\t\t\treturn j;\n\t\t};\n\t\n\t\taLayout.splice( 0, aLayout.length );\n\t\t\n\t\t/* We know how many rows there are in the layout - so prep it */\n\t\tfor ( i=0, iLen=nTrs.length ; i<iLen ; i++ )\n\t\t{\n\t\t\taLayout.push( [] );\n\t\t}\n\t\t\n\t\t/* Calculate a layout array */\n\t\tfor ( i=0, iLen=nTrs.length ; i<iLen ; i++ )\n\t\t{\n\t\t\tnTr = nTrs[i];\n\t\t\tiColumn = 0;\n\t\t\t\n\t\t\t/* For every cell in the row... */\n\t\t\tnCell = nTr.firstChild;\n\t\t\twhile ( nCell ) {\n\t\t\t\tif ( nCell.nodeName.toUpperCase() == \"TD\" ||\n\t\t\t\t     nCell.nodeName.toUpperCase() == \"TH\" )\n\t\t\t\t{\n\t\t\t\t\t/* Get the col and rowspan attributes from the DOM and sanitise them */\n\t\t\t\t\tiColspan = nCell.getAttribute('colspan') * 1;\n\t\t\t\t\tiRowspan = nCell.getAttribute('rowspan') * 1;\n\t\t\t\t\tiColspan = (!iColspan || iColspan===0 || iColspan===1) ? 1 : iColspan;\n\t\t\t\t\tiRowspan = (!iRowspan || iRowspan===0 || iRowspan===1) ? 1 : iRowspan;\n\t\n\t\t\t\t\t/* There might be colspan cells already in this row, so shift our target \n\t\t\t\t\t * accordingly\n\t\t\t\t\t */\n\t\t\t\t\tiColShifted = fnShiftCol( aLayout, i, iColumn );\n\t\t\t\t\t\n\t\t\t\t\t/* Cache calculation for unique columns */\n\t\t\t\t\tbUnique = iColspan === 1 ? true : false;\n\t\t\t\t\t\n\t\t\t\t\t/* If there is col / rowspan, copy the information into the layout grid */\n\t\t\t\t\tfor ( l=0 ; l<iColspan ; l++ )\n\t\t\t\t\t{\n\t\t\t\t\t\tfor ( k=0 ; k<iRowspan ; k++ )\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\taLayout[i+k][iColShifted+l] = {\n\t\t\t\t\t\t\t\t\"cell\": nCell,\n\t\t\t\t\t\t\t\t\"unique\": bUnique\n\t\t\t\t\t\t\t};\n\t\t\t\t\t\t\taLayout[i+k].nTr = nTr;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tnCell = nCell.nextSibling;\n\t\t\t}\n\t\t}\n\t}\n\t\n\t\n\t/**\n\t * Get an array of unique th elements, one for each column\n\t *  @param {object} oSettings dataTables settings object\n\t *  @param {node} nHeader automatically detect the layout from this node - optional\n\t *  @param {array} aLayout thead/tfoot layout from _fnDetectHeader - optional\n\t *  @returns array {node} aReturn list of unique th's\n\t *  @memberof DataTable#oApi\n\t */\n\tfunction _fnGetUniqueThs ( oSettings, nHeader, aLayout )\n\t{\n\t\tvar aReturn = [];\n\t\tif ( !aLayout )\n\t\t{\n\t\t\taLayout = oSettings.aoHeader;\n\t\t\tif ( nHeader )\n\t\t\t{\n\t\t\t\taLayout = [];\n\t\t\t\t_fnDetectHeader( aLayout, nHeader );\n\t\t\t}\n\t\t}\n\t\n\t\tfor ( var i=0, iLen=aLayout.length ; i<iLen ; i++ )\n\t\t{\n\t\t\tfor ( var j=0, jLen=aLayout[i].length ; j<jLen ; j++ )\n\t\t\t{\n\t\t\t\tif ( aLayout[i][j].unique && \n\t\t\t\t\t (!aReturn[j] || !oSettings.bSortCellsTop) )\n\t\t\t\t{\n\t\t\t\t\taReturn[j] = aLayout[i][j].cell;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\t\n\t\treturn aReturn;\n\t}\n\t\n\t\n\t\n\t/**\n\t * Update the table using an Ajax call\n\t *  @param {object} oSettings dataTables settings object\n\t *  @returns {boolean} Block the table drawing or not\n\t *  @memberof DataTable#oApi\n\t */\n\tfunction _fnAjaxUpdate( oSettings )\n\t{\n\t\tif ( oSettings.bAjaxDataGet )\n\t\t{\n\t\t\toSettings.iDraw++;\n\t\t\t_fnProcessingDisplay( oSettings, true );\n\t\t\tvar iColumns = oSettings.aoColumns.length;\n\t\t\tvar aoData = _fnAjaxParameters( oSettings );\n\t\t\t_fnServerParams( oSettings, aoData );\n\t\t\t\n\t\t\toSettings.fnServerData.call( oSettings.oInstance, oSettings.sAjaxSource, aoData,\n\t\t\t\tfunction(json) {\n\t\t\t\t\t_fnAjaxUpdateDraw( oSettings, json );\n\t\t\t\t}, oSettings );\n\t\t\treturn false;\n\t\t}\n\t\telse\n\t\t{\n\t\t\treturn true;\n\t\t}\n\t}\n\t\n\t\n\t/**\n\t * Build up the parameters in an object needed for a server-side processing request\n\t *  @param {object} oSettings dataTables settings object\n\t *  @returns {bool} block the table drawing or not\n\t *  @memberof DataTable#oApi\n\t */\n\tfunction _fnAjaxParameters( oSettings )\n\t{\n\t\tvar iColumns = oSettings.aoColumns.length;\n\t\tvar aoData = [], mDataProp, aaSort, aDataSort;\n\t\tvar i, j;\n\t\t\n\t\taoData.push( { \"name\": \"sEcho\",          \"value\": oSettings.iDraw } );\n\t\taoData.push( { \"name\": \"iColumns\",       \"value\": iColumns } );\n\t\taoData.push( { \"name\": \"sColumns\",       \"value\": _fnColumnOrdering(oSettings) } );\n\t\taoData.push( { \"name\": \"iDisplayStart\",  \"value\": oSettings._iDisplayStart } );\n\t\taoData.push( { \"name\": \"iDisplayLength\", \"value\": oSettings.oFeatures.bPaginate !== false ?\n\t\t\toSettings._iDisplayLength : -1 } );\n\t\t\t\n\t\tfor ( i=0 ; i<iColumns ; i++ )\n\t\t{\n\t\t  mDataProp = oSettings.aoColumns[i].mData;\n\t\t\taoData.push( { \"name\": \"mDataProp_\"+i, \"value\": typeof(mDataProp)===\"function\" ? 'function' : mDataProp } );\n\t\t}\n\t\t\n\t\t/* Filtering */\n\t\tif ( oSettings.oFeatures.bFilter !== false )\n\t\t{\n\t\t\taoData.push( { \"name\": \"sSearch\", \"value\": oSettings.oPreviousSearch.sSearch } );\n\t\t\taoData.push( { \"name\": \"bRegex\",  \"value\": oSettings.oPreviousSearch.bRegex } );\n\t\t\tfor ( i=0 ; i<iColumns ; i++ )\n\t\t\t{\n\t\t\t\taoData.push( { \"name\": \"sSearch_\"+i,     \"value\": oSettings.aoPreSearchCols[i].sSearch } );\n\t\t\t\taoData.push( { \"name\": \"bRegex_\"+i,      \"value\": oSettings.aoPreSearchCols[i].bRegex } );\n\t\t\t\taoData.push( { \"name\": \"bSearchable_\"+i, \"value\": oSettings.aoColumns[i].bSearchable } );\n\t\t\t}\n\t\t}\n\t\t\n\t\t/* Sorting */\n\t\tif ( oSettings.oFeatures.bSort !== false )\n\t\t{\n\t\t\tvar iCounter = 0;\n\t\n\t\t\taaSort = ( oSettings.aaSortingFixed !== null ) ?\n\t\t\t\toSettings.aaSortingFixed.concat( oSettings.aaSorting ) :\n\t\t\t\toSettings.aaSorting.slice();\n\t\t\t\n\t\t\tfor ( i=0 ; i<aaSort.length ; i++ )\n\t\t\t{\n\t\t\t\taDataSort = oSettings.aoColumns[ aaSort[i][0] ].aDataSort;\n\t\t\t\t\n\t\t\t\tfor ( j=0 ; j<aDataSort.length ; j++ )\n\t\t\t\t{\n\t\t\t\t\taoData.push( { \"name\": \"iSortCol_\"+iCounter,  \"value\": aDataSort[j] } );\n\t\t\t\t\taoData.push( { \"name\": \"sSortDir_\"+iCounter,  \"value\": aaSort[i][1] } );\n\t\t\t\t\tiCounter++;\n\t\t\t\t}\n\t\t\t}\n\t\t\taoData.push( { \"name\": \"iSortingCols\",   \"value\": iCounter } );\n\t\t\t\n\t\t\tfor ( i=0 ; i<iColumns ; i++ )\n\t\t\t{\n\t\t\t\taoData.push( { \"name\": \"bSortable_\"+i,  \"value\": oSettings.aoColumns[i].bSortable } );\n\t\t\t}\n\t\t}\n\t\t\n\t\treturn aoData;\n\t}\n\t\n\t\n\t/**\n\t * Add Ajax parameters from plug-ins\n\t *  @param {object} oSettings dataTables settings object\n\t *  @param array {objects} aoData name/value pairs to send to the server\n\t *  @memberof DataTable#oApi\n\t */\n\tfunction _fnServerParams( oSettings, aoData )\n\t{\n\t\t_fnCallbackFire( oSettings, 'aoServerParams', 'serverParams', [aoData] );\n\t}\n\t\n\t\n\t/**\n\t * Data the data from the server (nuking the old) and redraw the table\n\t *  @param {object} oSettings dataTables settings object\n\t *  @param {object} json json data return from the server.\n\t *  @param {string} json.sEcho Tracking flag for DataTables to match requests\n\t *  @param {int} json.iTotalRecords Number of records in the data set, not accounting for filtering\n\t *  @param {int} json.iTotalDisplayRecords Number of records in the data set, accounting for filtering\n\t *  @param {array} json.aaData The data to display on this page\n\t *  @param {string} [json.sColumns] Column ordering (sName, comma separated)\n\t *  @memberof DataTable#oApi\n\t */\n\tfunction _fnAjaxUpdateDraw ( oSettings, json )\n\t{\n\t\tif ( json.sEcho !== undefined )\n\t\t{\n\t\t\t/* Protect against old returns over-writing a new one. Possible when you get\n\t\t\t * very fast interaction, and later queries are completed much faster\n\t\t\t */\n\t\t\tif ( json.sEcho*1 < oSettings.iDraw )\n\t\t\t{\n\t\t\t\treturn;\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\toSettings.iDraw = json.sEcho * 1;\n\t\t\t}\n\t\t}\n\t\t\n\t\tif ( !oSettings.oScroll.bInfinite ||\n\t\t\t   (oSettings.oScroll.bInfinite && (oSettings.bSorted || oSettings.bFiltered)) )\n\t\t{\n\t\t\t_fnClearTable( oSettings );\n\t\t}\n\t\toSettings._iRecordsTotal = parseInt(json.iTotalRecords, 10);\n\t\toSettings._iRecordsDisplay = parseInt(json.iTotalDisplayRecords, 10);\n\t\t\n\t\t/* Determine if reordering is required */\n\t\tvar sOrdering = _fnColumnOrdering(oSettings);\n\t\tvar bReOrder = (json.sColumns !== undefined && sOrdering !== \"\" && json.sColumns != sOrdering );\n\t\tvar aiIndex;\n\t\tif ( bReOrder )\n\t\t{\n\t\t\taiIndex = _fnReOrderIndex( oSettings, json.sColumns );\n\t\t}\n\t\t\n\t\tvar aData = _fnGetObjectDataFn( oSettings.sAjaxDataProp )( json );\n\t\tfor ( var i=0, iLen=aData.length ; i<iLen ; i++ )\n\t\t{\n\t\t\tif ( bReOrder )\n\t\t\t{\n\t\t\t\t/* If we need to re-order, then create a new array with the correct order and add it */\n\t\t\t\tvar aDataSorted = [];\n\t\t\t\tfor ( var j=0, jLen=oSettings.aoColumns.length ; j<jLen ; j++ )\n\t\t\t\t{\n\t\t\t\t\taDataSorted.push( aData[i][ aiIndex[j] ] );\n\t\t\t\t}\n\t\t\t\t_fnAddData( oSettings, aDataSorted );\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\t/* No re-order required, sever got it \"right\" - just straight add */\n\t\t\t\t_fnAddData( oSettings, aData[i] );\n\t\t\t}\n\t\t}\n\t\toSettings.aiDisplay = oSettings.aiDisplayMaster.slice();\n\t\t\n\t\toSettings.bAjaxDataGet = false;\n\t\t_fnDraw( oSettings );\n\t\toSettings.bAjaxDataGet = true;\n\t\t_fnProcessingDisplay( oSettings, false );\n\t}\n\t\n\t\n\t\n\t/**\n\t * Generate the node required for filtering text\n\t *  @returns {node} Filter control element\n\t *  @param {object} oSettings dataTables settings object\n\t *  @memberof DataTable#oApi\n\t */\n\tfunction _fnFeatureHtmlFilter ( oSettings )\n\t{\n\t\tvar oPreviousSearch = oSettings.oPreviousSearch;\n\t\t\n\t\tvar sSearchStr = oSettings.oLanguage.sSearch;\n\t\tsSearchStr = (sSearchStr.indexOf('_INPUT_') !== -1) ?\n\t\t  sSearchStr.replace('_INPUT_', '<input type=\"text\" />') :\n\t\t  sSearchStr===\"\" ? '<input type=\"text\" />' : sSearchStr+' <input type=\"text\" />';\n\t\t\n\t\tvar nFilter = document.createElement( 'div' );\n\t\tnFilter.className = oSettings.oClasses.sFilter;\n\t\tnFilter.innerHTML = '<label>'+sSearchStr+'</label>';\n\t\tif ( !oSettings.aanFeatures.f )\n\t\t{\n\t\t\tnFilter.id = oSettings.sTableId+'_filter';\n\t\t}\n\t\t\n\t\tvar jqFilter = $('input[type=\"text\"]', nFilter);\n\t\n\t\t// Store a reference to the input element, so other input elements could be\n\t\t// added to the filter wrapper if needed (submit button for example)\n\t\tnFilter._DT_Input = jqFilter[0];\n\t\n\t\tjqFilter.val( oPreviousSearch.sSearch.replace('\"','&quot;') );\n\t\tjqFilter.bind( 'keyup.DT', function(e) {\n\t\t\t/* Update all other filter input elements for the new display */\n\t\t\tvar n = oSettings.aanFeatures.f;\n\t\t\tvar val = this.value===\"\" ? \"\" : this.value; // mental IE8 fix :-(\n\t\n\t\t\tfor ( var i=0, iLen=n.length ; i<iLen ; i++ )\n\t\t\t{\n\t\t\t\tif ( n[i] != $(this).parents('div.dataTables_filter')[0] )\n\t\t\t\t{\n\t\t\t\t\t$(n[i]._DT_Input).val( val );\n\t\t\t\t}\n\t\t\t}\n\t\t\t\n\t\t\t/* Now do the filter */\n\t\t\tif ( val != oPreviousSearch.sSearch )\n\t\t\t{\n\t\t\t\t_fnFilterComplete( oSettings, { \n\t\t\t\t\t\"sSearch\": val, \n\t\t\t\t\t\"bRegex\": oPreviousSearch.bRegex,\n\t\t\t\t\t\"bSmart\": oPreviousSearch.bSmart ,\n\t\t\t\t\t\"bCaseInsensitive\": oPreviousSearch.bCaseInsensitive \n\t\t\t\t} );\n\t\t\t}\n\t\t} );\n\t\n\t\tjqFilter\n\t\t\t.attr('aria-controls', oSettings.sTableId)\n\t\t\t.bind( 'keypress.DT', function(e) {\n\t\t\t\t/* Prevent form submission */\n\t\t\t\tif ( e.keyCode == 13 )\n\t\t\t\t{\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\t\t\t}\n\t\t);\n\t\t\n\t\treturn nFilter;\n\t}\n\t\n\t\n\t/**\n\t * Filter the table using both the global filter and column based filtering\n\t *  @param {object} oSettings dataTables settings object\n\t *  @param {object} oSearch search information\n\t *  @param {int} [iForce] force a research of the master array (1) or not (undefined or 0)\n\t *  @memberof DataTable#oApi\n\t */\n\tfunction _fnFilterComplete ( oSettings, oInput, iForce )\n\t{\n\t\tvar oPrevSearch = oSettings.oPreviousSearch;\n\t\tvar aoPrevSearch = oSettings.aoPreSearchCols;\n\t\tvar fnSaveFilter = function ( oFilter ) {\n\t\t\t/* Save the filtering values */\n\t\t\toPrevSearch.sSearch = oFilter.sSearch;\n\t\t\toPrevSearch.bRegex = oFilter.bRegex;\n\t\t\toPrevSearch.bSmart = oFilter.bSmart;\n\t\t\toPrevSearch.bCaseInsensitive = oFilter.bCaseInsensitive;\n\t\t};\n\t\n\t\t/* In server-side processing all filtering is done by the server, so no point hanging around here */\n\t\tif ( !oSettings.oFeatures.bServerSide )\n\t\t{\n\t\t\t/* Global filter */\n\t\t\t_fnFilter( oSettings, oInput.sSearch, iForce, oInput.bRegex, oInput.bSmart, oInput.bCaseInsensitive );\n\t\t\tfnSaveFilter( oInput );\n\t\n\t\t\t/* Now do the individual column filter */\n\t\t\tfor ( var i=0 ; i<oSettings.aoPreSearchCols.length ; i++ )\n\t\t\t{\n\t\t\t\t_fnFilterColumn( oSettings, aoPrevSearch[i].sSearch, i, aoPrevSearch[i].bRegex, \n\t\t\t\t\taoPrevSearch[i].bSmart, aoPrevSearch[i].bCaseInsensitive );\n\t\t\t}\n\t\t\t\n\t\t\t/* Custom filtering */\n\t\t\t_fnFilterCustom( oSettings );\n\t\t}\n\t\telse\n\t\t{\n\t\t\tfnSaveFilter( oInput );\n\t\t}\n\t\t\n\t\t/* Tell the draw function we have been filtering */\n\t\toSettings.bFiltered = true;\n\t\t$(oSettings.oInstance).trigger('filter', oSettings);\n\t\t\n\t\t/* Redraw the table */\n\t\toSettings._iDisplayStart = 0;\n\t\t_fnCalculateEnd( oSettings );\n\t\t_fnDraw( oSettings );\n\t\t\n\t\t/* Rebuild search array 'offline' */\n\t\t_fnBuildSearchArray( oSettings, 0 );\n        //oSettings.oApi.fnFilterCallback(oSettings,oInput);\n\t}\n\t\n\t\n\t/**\n\t * Apply custom filtering functions\n\t *  @param {object} oSettings dataTables settings object\n\t *  @memberof DataTable#oApi\n\t */\n\tfunction _fnFilterCustom( oSettings )\n\t{\n\t\tvar afnFilters = DataTable.ext.afnFiltering;\n\t\tvar aiFilterColumns = _fnGetColumns( oSettings, 'bSearchable' );\n\t\n\t\tfor ( var i=0, iLen=afnFilters.length ; i<iLen ; i++ )\n\t\t{\n\t\t\tvar iCorrector = 0;\n\t\t\tfor ( var j=0, jLen=oSettings.aiDisplay.length ; j<jLen ; j++ )\n\t\t\t{\n\t\t\t\tvar iDisIndex = oSettings.aiDisplay[j-iCorrector];\n\t\t\t\tvar bTest = afnFilters[i](\n\t\t\t\t\toSettings,\n\t\t\t\t\t_fnGetRowData( oSettings, iDisIndex, 'filter', aiFilterColumns ),\n\t\t\t\t\tiDisIndex\n\t\t\t\t);\n\t\t\t\t\n\t\t\t\t/* Check if we should use this row based on the filtering function */\n\t\t\t\tif ( !bTest )\n\t\t\t\t{\n\t\t\t\t\toSettings.aiDisplay.splice( j-iCorrector, 1 );\n\t\t\t\t\tiCorrector++;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\t\n\t\n\t/**\n\t * Filter the table on a per-column basis\n\t *  @param {object} oSettings dataTables settings object\n\t *  @param {string} sInput string to filter on\n\t *  @param {int} iColumn column to filter\n\t *  @param {bool} bRegex treat search string as a regular expression or not\n\t *  @param {bool} bSmart use smart filtering or not\n\t *  @param {bool} bCaseInsensitive Do case insenstive matching or not\n\t *  @memberof DataTable#oApi\n\t */\n\tfunction _fnFilterColumn ( oSettings, sInput, iColumn, bRegex, bSmart, bCaseInsensitive )\n\t{\n\t\tif ( sInput === \"\" )\n\t\t{\n\t\t\treturn;\n\t\t}\n\t\t\n\t\tvar iIndexCorrector = 0;\n\t\tvar rpSearch = _fnFilterCreateSearch( sInput, bRegex, bSmart, bCaseInsensitive );\n\t\t\n\t\tfor ( var i=oSettings.aiDisplay.length-1 ; i>=0 ; i-- )\n\t\t{\n\t\t\tvar sData = _fnDataToSearch( _fnGetCellData( oSettings, oSettings.aiDisplay[i], iColumn, 'filter' ),\n\t\t\t\toSettings.aoColumns[iColumn].sType );\n\t\t\tif ( ! rpSearch.test( sData ) )\n\t\t\t{\n\t\t\t\toSettings.aiDisplay.splice( i, 1 );\n\t\t\t\tiIndexCorrector++;\n\t\t\t}\n\t\t}\n\t}\n\t\n\t\n\t/**\n\t * Filter the data table based on user input and draw the table\n\t *  @param {object} oSettings dataTables settings object\n\t *  @param {string} sInput string to filter on\n\t *  @param {int} iForce optional - force a research of the master array (1) or not (undefined or 0)\n\t *  @param {bool} bRegex treat as a regular expression or not\n\t *  @param {bool} bSmart perform smart filtering or not\n\t *  @param {bool} bCaseInsensitive Do case insenstive matching or not\n\t *  @memberof DataTable#oApi\n\t */\n\tfunction _fnFilter( oSettings, sInput, iForce, bRegex, bSmart, bCaseInsensitive )\n\t{\n\t\tvar i;\n\t\tvar rpSearch = _fnFilterCreateSearch( sInput, bRegex, bSmart, bCaseInsensitive );\n\t\tvar oPrevSearch = oSettings.oPreviousSearch;\n\t\t\n\t\t/* Check if we are forcing or not - optional parameter */\n\t\tif ( !iForce )\n\t\t{\n\t\t\tiForce = 0;\n\t\t}\n\t\t\n\t\t/* Need to take account of custom filtering functions - always filter */\n\t\tif ( DataTable.ext.afnFiltering.length !== 0 )\n\t\t{\n\t\t\tiForce = 1;\n\t\t}\n\t\t\n\t\t/*\n\t\t * If the input is blank - we want the full data set\n\t\t */\n\t\tif ( sInput.length <= 0 )\n\t\t{\n\t\t\toSettings.aiDisplay.splice( 0, oSettings.aiDisplay.length);\n\t\t\toSettings.aiDisplay = oSettings.aiDisplayMaster.slice();\n\t\t}\n\t\telse\n\t\t{\n\t\t\t/*\n\t\t\t * We are starting a new search or the new search string is smaller \n\t\t\t * then the old one (i.e. delete). Search from the master array\n\t\t \t */\n\t\t\tif ( oSettings.aiDisplay.length == oSettings.aiDisplayMaster.length ||\n\t\t\t\t   oPrevSearch.sSearch.length > sInput.length || iForce == 1 ||\n\t\t\t\t   sInput.indexOf(oPrevSearch.sSearch) !== 0 )\n\t\t\t{\n\t\t\t\t/* Nuke the old display array - we are going to rebuild it */\n\t\t\t\toSettings.aiDisplay.splice( 0, oSettings.aiDisplay.length);\n\t\t\t\t\n\t\t\t\t/* Force a rebuild of the search array */\n\t\t\t\t_fnBuildSearchArray( oSettings, 1 );\n\t\t\t\t\n\t\t\t\t/* Search through all records to populate the search array\n\t\t\t\t * The the oSettings.aiDisplayMaster and asDataSearch arrays have 1 to 1 \n\t\t\t\t * mapping\n\t\t\t\t */\n\t\t\t\tfor ( i=0 ; i<oSettings.aiDisplayMaster.length ; i++ )\n\t\t\t\t{\n\t\t\t\t\tif ( rpSearch.test(oSettings.asDataSearch[i]) )\n\t\t\t\t\t{\n\t\t\t\t\t\toSettings.aiDisplay.push( oSettings.aiDisplayMaster[i] );\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t  }\n\t\t  else\n\t\t\t{\n\t\t  \t/* Using old search array - refine it - do it this way for speed\n\t\t  \t * Don't have to search the whole master array again\n\t\t\t\t */\n\t\t  \tvar iIndexCorrector = 0;\n\t\t  \t\n\t\t  \t/* Search the current results */\n\t\t  \tfor ( i=0 ; i<oSettings.asDataSearch.length ; i++ )\n\t\t\t\t{\n\t\t  \t\tif ( ! rpSearch.test(oSettings.asDataSearch[i]) )\n\t\t\t\t\t{\n\t\t  \t\t\toSettings.aiDisplay.splice( i-iIndexCorrector, 1 );\n\t\t  \t\t\tiIndexCorrector++;\n\t\t  \t\t}\n\t\t  \t}\n\t\t  }\n\t\t}\n\t}\n\t\n\t\n\t/**\n\t * Create an array which can be quickly search through\n\t *  @param {object} oSettings dataTables settings object\n\t *  @param {int} iMaster use the master data array - optional\n\t *  @memberof DataTable#oApi\n\t */\n\tfunction _fnBuildSearchArray ( oSettings, iMaster )\n\t{\n\t\tif ( !oSettings.oFeatures.bServerSide )\n\t\t{\n\t\t\t/* Clear out the old data */\n\t\t\toSettings.asDataSearch = [];\n\t\n\t\t\tvar aiFilterColumns = _fnGetColumns( oSettings, 'bSearchable' );\n\t\t\tvar aiIndex = (iMaster===1) ?\n\t\t\t \toSettings.aiDisplayMaster :\n\t\t\t \toSettings.aiDisplay;\n\t\t\t\n\t\t\tfor ( var i=0, iLen=aiIndex.length ; i<iLen ; i++ )\n\t\t\t{\n\t\t\t\toSettings.asDataSearch[i] = _fnBuildSearchRow(\n\t\t\t\t\toSettings,\n\t\t\t\t\t_fnGetRowData( oSettings, aiIndex[i], 'filter', aiFilterColumns )\n\t\t\t\t);\n\t\t\t}\n\t\t}\n\t}\n\t\n\t\n\t/**\n\t * Create a searchable string from a single data row\n\t *  @param {object} oSettings dataTables settings object\n\t *  @param {array} aData Row data array to use for the data to search\n\t *  @memberof DataTable#oApi\n\t */\n\tfunction _fnBuildSearchRow( oSettings, aData )\n\t{\n\t\tvar sSearch = aData.join('  ');\n\t\t\n\t\t/* If it looks like there is an HTML entity in the string, attempt to decode it */\n\t\tif ( sSearch.indexOf('&') !== -1 )\n\t\t{\n\t\t\tsSearch = $('<div>').html(sSearch).text();\n\t\t}\n\t\t\n\t\t// Strip newline characters\n\t\treturn sSearch.replace( /[\\n\\r]/g, \" \" );\n\t}\n\t\n\t/**\n\t * Build a regular expression object suitable for searching a table\n\t *  @param {string} sSearch string to search for\n\t *  @param {bool} bRegex treat as a regular expression or not\n\t *  @param {bool} bSmart perform smart filtering or not\n\t *  @param {bool} bCaseInsensitive Do case insensitive matching or not\n\t *  @returns {RegExp} constructed object\n\t *  @memberof DataTable#oApi\n\t */\n\tfunction _fnFilterCreateSearch( sSearch, bRegex, bSmart, bCaseInsensitive )\n\t{\n\t\tvar asSearch, sRegExpString;\n\t\t\n\t\tif ( bSmart )\n\t\t{\n\t\t\t/* Generate the regular expression to use. Something along the lines of:\n\t\t\t * ^(?=.*?\\bone\\b)(?=.*?\\btwo\\b)(?=.*?\\bthree\\b).*$\n\t\t\t */\n\t\t\tasSearch = bRegex ? sSearch.split( ' ' ) : _fnEscapeRegex( sSearch ).split( ' ' );\n\t\t\tsRegExpString = '^(?=.*?'+asSearch.join( ')(?=.*?' )+').*$';\n\t\t\treturn new RegExp( sRegExpString, bCaseInsensitive ? \"i\" : \"\" );\n\t\t}\n\t\telse\n\t\t{\n\t\t\tsSearch = bRegex ? sSearch : _fnEscapeRegex( sSearch );\n\t\t\treturn new RegExp( sSearch, bCaseInsensitive ? \"i\" : \"\" );\n\t\t}\n\t}\n\t\n\t\n\t/**\n\t * Convert raw data into something that the user can search on\n\t *  @param {string} sData data to be modified\n\t *  @param {string} sType data type\n\t *  @returns {string} search string\n\t *  @memberof DataTable#oApi\n\t */\n\tfunction _fnDataToSearch ( sData, sType )\n\t{\n\t\tif ( typeof DataTable.ext.ofnSearch[sType] === \"function\" )\n\t\t{\n\t\t\treturn DataTable.ext.ofnSearch[sType]( sData );\n\t\t}\n\t\telse if ( sData === null )\n\t\t{\n\t\t\treturn '';\n\t\t}\n\t\telse if ( sType == \"html\" )\n\t\t{\n\t\t\treturn sData.replace(/[\\r\\n]/g,\" \").replace( /<.*?>/g, \"\" );\n\t\t}\n\t\telse if ( typeof sData === \"string\" )\n\t\t{\n\t\t\treturn sData.replace(/[\\r\\n]/g,\" \");\n\t\t}\n\t\treturn sData;\n\t}\n\t\n\t\n\t/**\n\t * scape a string such that it can be used in a regular expression\n\t *  @param {string} sVal string to escape\n\t *  @returns {string} escaped string\n\t *  @memberof DataTable#oApi\n\t */\n\tfunction _fnEscapeRegex ( sVal )\n\t{\n\t\tvar acEscape = [ '/', '.', '*', '+', '?', '|', '(', ')', '[', ']', '{', '}', '\\\\', '$', '^', '-' ];\n\t\tvar reReplace = new RegExp( '(\\\\' + acEscape.join('|\\\\') + ')', 'g' );\n\t\treturn sVal.replace(reReplace, '\\\\$1');\n\t}\n\t\n\t\n\t/**\n\t * Generate the node required for the info display\n\t *  @param {object} oSettings dataTables settings object\n\t *  @returns {node} Information element\n\t *  @memberof DataTable#oApi\n\t */\n\tfunction _fnFeatureHtmlInfo ( oSettings )\n\t{\n\t\tvar nInfo = document.createElement( 'div' );\n\t\tnInfo.className = oSettings.oClasses.sInfo;\n\t\t\n\t\t/* Actions that are to be taken once only for this feature */\n\t\tif ( !oSettings.aanFeatures.i )\n\t\t{\n\t\t\t/* Add draw callback */\n\t\t\toSettings.aoDrawCallback.push( {\n\t\t\t\t\"fn\": _fnUpdateInfo,\n\t\t\t\t\"sName\": \"information\"\n\t\t\t} );\n\t\t\t\n\t\t\t/* Add id */\n\t\t\tnInfo.id = oSettings.sTableId+'_info';\n\t\t}\n\t\toSettings.nTable.setAttribute( 'aria-describedby', oSettings.sTableId+'_info' );\n\t\t\n\t\treturn nInfo;\n\t}\n\t\n\t\n\t/**\n\t * Update the information elements in the display\n\t *  @param {object} oSettings dataTables settings object\n\t *  @memberof DataTable#oApi\n\t */\n\tfunction _fnUpdateInfo ( oSettings )\n\t{\n\t\t/* Show information about the table */\n\t\tif ( !oSettings.oFeatures.bInfo || oSettings.aanFeatures.i.length === 0 )\n\t\t{\n\t\t\treturn;\n\t\t}\n\t\t\n\t\tvar\n\t\t\toLang = oSettings.oLanguage,\n\t\t\tiStart = oSettings._iDisplayStart+1,\n\t\t\tiEnd = oSettings.fnDisplayEnd(),\n\t\t\tiMax = oSettings.fnRecordsTotal(),\n\t\t\tiTotal = oSettings.fnRecordsDisplay(),\n\t\t\tsOut;\n\t\t\n\t\tif ( iTotal === 0 )\n\t\t{\n\t\t\t/* Empty record set */\n\t\t\tsOut = oLang.sInfoEmpty;\n\t\t}\n\t\telse {\n\t\t\t/* Normal record set */\n\t\t\tsOut = oLang.sInfo;\n\t\t}\n\t\n\t\tif ( iTotal != iMax )\n\t\t{\n\t\t\t/* Record set after filtering */\n\t\t\tsOut += ' ' + oLang.sInfoFiltered;\n\t\t}\n\t\n\t\t// Convert the macros\n\t\tsOut += oLang.sInfoPostFix;\n\t\tsOut = _fnInfoMacros( oSettings, sOut );\n\t\t\n\t\tif ( oLang.fnInfoCallback !== null )\n\t\t{\n\t\t\tsOut = oLang.fnInfoCallback.call( oSettings.oInstance, \n\t\t\t\toSettings, iStart, iEnd, iMax, iTotal, sOut );\n\t\t}\n\t\t\n\t\tvar n = oSettings.aanFeatures.i;\n\t\tfor ( var i=0, iLen=n.length ; i<iLen ; i++ )\n\t\t{\n\t\t\t$(n[i]).html( sOut );\n\t\t}\n\t}\n\t\n\t\n\tfunction _fnInfoMacros ( oSettings, str )\n\t{\n\t\tvar\n\t\t\tiStart = oSettings._iDisplayStart+1,\n\t\t\tsStart = oSettings.fnFormatNumber( iStart ),\n\t\t\tiEnd = oSettings.fnDisplayEnd(),\n\t\t\tsEnd = oSettings.fnFormatNumber( iEnd ),\n\t\t\tiTotal = oSettings.fnRecordsDisplay(),\n\t\t\tsTotal = oSettings.fnFormatNumber( iTotal ),\n\t\t\tiMax = oSettings.fnRecordsTotal(),\n\t\t\tsMax = oSettings.fnFormatNumber( iMax );\n\t\n\t\t// When infinite scrolling, we are always starting at 1. _iDisplayStart is used only\n\t\t// internally\n\t\tif ( oSettings.oScroll.bInfinite )\n\t\t{\n\t\t\tsStart = oSettings.fnFormatNumber( 1 );\n\t\t}\n\t\n\t\treturn str.\n\t\t\treplace(/_START_/g, sStart).\n\t\t\treplace(/_END_/g,   sEnd).\n\t\t\treplace(/_TOTAL_/g, sTotal).\n\t\t\treplace(/_MAX_/g,   sMax);\n\t}\n\t\n\t\n\t\n\t/**\n\t * Draw the table for the first time, adding all required features\n\t *  @param {object} oSettings dataTables settings object\n\t *  @memberof DataTable#oApi\n\t */\n\tfunction _fnInitialise ( oSettings )\n\t{\n\t\tvar i, iLen, iAjaxStart=oSettings.iInitDisplayStart;\n\t\t\n\t\t/* Ensure that the table data is fully initialised */\n\t\tif ( oSettings.bInitialised === false )\n\t\t{\n\t\t\tsetTimeout( function(){ _fnInitialise( oSettings ); }, 200 );\n\t\t\treturn;\n\t\t}\n\t\t\n\t\t/* Show the display HTML options */\n\t\t_fnAddOptionsHtml( oSettings );\n\t\t\n\t\t/* Build and draw the header / footer for the table */\n\t\t_fnBuildHead( oSettings );\n\t\t_fnDrawHead( oSettings, oSettings.aoHeader );\n\t\tif ( oSettings.nTFoot )\n\t\t{\n\t\t\t_fnDrawHead( oSettings, oSettings.aoFooter );\n\t\t}\n\t\n\t\t/* Okay to show that something is going on now */\n\t\t_fnProcessingDisplay( oSettings, true );\n\t\t\n\t\t/* Calculate sizes for columns */\n\t\tif ( oSettings.oFeatures.bAutoWidth )\n\t\t{\n\t\t\t_fnCalculateColumnWidths( oSettings );\n\t\t}\n\t\t\n\t\tfor ( i=0, iLen=oSettings.aoColumns.length ; i<iLen ; i++ )\n\t\t{\n\t\t\tif ( oSettings.aoColumns[i].sWidth !== null )\n\t\t\t{\n\t\t\t\toSettings.aoColumns[i].nTh.style.width = _fnStringToCss( oSettings.aoColumns[i].sWidth );\n\t\t\t}\n\t\t}\n\t\t\n\t\t/* If there is default sorting required - let's do it. The sort function will do the\n\t\t * drawing for us. Otherwise we draw the table regardless of the Ajax source - this allows\n\t\t * the table to look initialised for Ajax sourcing data (show 'loading' message possibly)\n\t\t */\n\t\tif ( oSettings.oFeatures.bSort )\n\t\t{\n\t\t\t_fnSort( oSettings );\n\t\t}\n\t\telse if ( oSettings.oFeatures.bFilter )\n\t\t{\n\t\t\t_fnFilterComplete( oSettings, oSettings.oPreviousSearch );\n\t\t}\n\t\telse\n\t\t{\n\t\t\toSettings.aiDisplay = oSettings.aiDisplayMaster.slice();\n\t\t\t_fnCalculateEnd( oSettings );\n\t\t\t_fnDraw( oSettings );\n\t\t}\n\t\t\n\t\t/* if there is an ajax source load the data */\n\t\tif ( oSettings.sAjaxSource !== null && !oSettings.oFeatures.bServerSide )\n\t\t{\n\t\t\tvar aoData = [];\n\t\t\t_fnServerParams( oSettings, aoData );\n\t\t\toSettings.fnServerData.call( oSettings.oInstance, oSettings.sAjaxSource, aoData, function(json) {\n\t\t\t\tvar aData = (oSettings.sAjaxDataProp !== \"\") ?\n\t\t\t\t \t_fnGetObjectDataFn( oSettings.sAjaxDataProp )(json) : json;\n\t\n\t\t\t\t/* Got the data - add it to the table */\n\t\t\t\tfor ( i=0 ; i<aData.length ; i++ )\n\t\t\t\t{\n\t\t\t\t\t_fnAddData( oSettings, aData[i] );\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\t/* Reset the init display for cookie saving. We've already done a filter, and\n\t\t\t\t * therefore cleared it before. So we need to make it appear 'fresh'\n\t\t\t\t */\n\t\t\t\toSettings.iInitDisplayStart = iAjaxStart;\n\t\t\t\t\n\t\t\t\tif ( oSettings.oFeatures.bSort )\n\t\t\t\t{\n\t\t\t\t\t_fnSort( oSettings );\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\toSettings.aiDisplay = oSettings.aiDisplayMaster.slice();\n\t\t\t\t\t_fnCalculateEnd( oSettings );\n\t\t\t\t\t_fnDraw( oSettings );\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\t_fnProcessingDisplay( oSettings, false );\n\t\t\t\t_fnInitComplete( oSettings, json );\n\t\t\t}, oSettings );\n\t\t\treturn;\n\t\t}\n\t\t\n\t\t/* Server-side processing initialisation complete is done at the end of _fnDraw */\n\t\tif ( !oSettings.oFeatures.bServerSide )\n\t\t{\n\t\t\t_fnProcessingDisplay( oSettings, false );\n\t\t\t_fnInitComplete( oSettings );\n\t\t}\n\t}\n\t\n\t\n\t/**\n\t * Draw the table for the first time, adding all required features\n\t *  @param {object} oSettings dataTables settings object\n\t *  @param {object} [json] JSON from the server that completed the table, if using Ajax source\n\t *    with client-side processing (optional)\n\t *  @memberof DataTable#oApi\n\t */\n\tfunction _fnInitComplete ( oSettings, json )\n\t{\n\t\toSettings._bInitComplete = true;\n\t\t_fnCallbackFire( oSettings, 'aoInitComplete', 'init', [oSettings, json] );\n\t}\n\t\n\t\n\t/**\n\t * Language compatibility - when certain options are given, and others aren't, we\n\t * need to duplicate the values over, in order to provide backwards compatibility\n\t * with older language files.\n\t *  @param {object} oSettings dataTables settings object\n\t *  @memberof DataTable#oApi\n\t */\n\tfunction _fnLanguageCompat( oLanguage )\n\t{\n\t\tvar oDefaults = DataTable.defaults.oLanguage;\n\t\n\t\t/* Backwards compatibility - if there is no sEmptyTable given, then use the same as\n\t\t * sZeroRecords - assuming that is given.\n\t\t */\n\t\tif ( !oLanguage.sEmptyTable && oLanguage.sZeroRecords &&\n\t\t\toDefaults.sEmptyTable === \"No data available in table\" )\n\t\t{\n\t\t\t_fnMap( oLanguage, oLanguage, 'sZeroRecords', 'sEmptyTable' );\n\t\t}\n\t\n\t\t/* Likewise with loading records */\n\t\tif ( !oLanguage.sLoadingRecords && oLanguage.sZeroRecords &&\n\t\t\toDefaults.sLoadingRecords === \"Loading...\" )\n\t\t{\n\t\t\t_fnMap( oLanguage, oLanguage, 'sZeroRecords', 'sLoadingRecords' );\n\t\t}\n\t}\n\t\n\t\n\t\n\t/**\n\t * Generate the node required for user display length changing\n\t *  @param {object} oSettings dataTables settings object\n\t *  @returns {node} Display length feature node\n\t *  @memberof DataTable#oApi\n\t */\n\tfunction _fnFeatureHtmlLength ( oSettings )\n\t{\n\t\tif ( oSettings.oScroll.bInfinite )\n\t\t{\n\t\t\treturn null;\n\t\t}\n\t\t\n\t\t/* This can be overruled by not using the _MENU_ var/macro in the language variable */\n\t\tvar sName = 'name=\"'+oSettings.sTableId+'_length\"';\n\t\tvar sStdMenu = '<select size=\"1\" '+sName+'>';\n\t\tvar i, iLen;\n\t\tvar aLengthMenu = oSettings.aLengthMenu;\n\t\t\n\t\tif ( aLengthMenu.length == 2 && typeof aLengthMenu[0] === 'object' && \n\t\t\t\ttypeof aLengthMenu[1] === 'object' )\n\t\t{\n\t\t\tfor ( i=0, iLen=aLengthMenu[0].length ; i<iLen ; i++ )\n\t\t\t{\n\t\t\t\tsStdMenu += '<option value=\"'+aLengthMenu[0][i]+'\">'+aLengthMenu[1][i]+'</option>';\n\t\t\t}\n\t\t}\n\t\telse\n\t\t{\n\t\t\tfor ( i=0, iLen=aLengthMenu.length ; i<iLen ; i++ )\n\t\t\t{\n\t\t\t\tsStdMenu += '<option value=\"'+aLengthMenu[i]+'\">'+aLengthMenu[i]+'</option>';\n\t\t\t}\n\t\t}\n\t\tsStdMenu += '</select>';\n\t\t\n\t\tvar nLength = document.createElement( 'div' );\n\t\tif ( !oSettings.aanFeatures.l )\n\t\t{\n\t\t\tnLength.id = oSettings.sTableId+'_length';\n\t\t}\n\t\tnLength.className = oSettings.oClasses.sLength;\n\t\tnLength.innerHTML = '<label>'+oSettings.oLanguage.sLengthMenu.replace( '_MENU_', sStdMenu )+'</label>';\n\t\t\n\t\t/*\n\t\t * Set the length to the current display length - thanks to Andrea Pavlovic for this fix,\n\t\t * and Stefan Skopnik for fixing the fix!\n\t\t */\n\t\t$('select option[value=\"'+oSettings._iDisplayLength+'\"]', nLength).attr(\"selected\", true);\n\t\t\n\t\t$('select', nLength).bind( 'change.DT', function(e) {\n\t\t\tvar iVal = $(this).val();\n\t\t\t\n\t\t\t/* Update all other length options for the new display */\n\t\t\tvar n = oSettings.aanFeatures.l;\n\t\t\tfor ( i=0, iLen=n.length ; i<iLen ; i++ )\n\t\t\t{\n\t\t\t\tif ( n[i] != this.parentNode )\n\t\t\t\t{\n\t\t\t\t\t$('select', n[i]).val( iVal );\n\t\t\t\t}\n\t\t\t}\n\t\t\t\n\t\t\t/* Redraw the table */\n\t\t\toSettings._iDisplayLength = parseInt(iVal, 10);\n\t\t\t_fnCalculateEnd( oSettings );\n\t\t\t\n\t\t\t/* If we have space to show extra rows (backing up from the end point - then do so */\n\t\t\tif ( oSettings.fnDisplayEnd() == oSettings.fnRecordsDisplay() )\n\t\t\t{\n\t\t\t\toSettings._iDisplayStart = oSettings.fnDisplayEnd() - oSettings._iDisplayLength;\n\t\t\t\tif ( oSettings._iDisplayStart < 0 )\n\t\t\t\t{\n\t\t\t\t\toSettings._iDisplayStart = 0;\n\t\t\t\t}\n\t\t\t}\n\t\t\t\n\t\t\tif ( oSettings._iDisplayLength == -1 )\n\t\t\t{\n\t\t\t\toSettings._iDisplayStart = 0;\n\t\t\t}\n\t\t\t\n\t\t\t_fnDraw( oSettings );\n\t\t} );\n\t\n\t\n\t\t$('select', nLength).attr('aria-controls', oSettings.sTableId);\n\t\t\n\t\treturn nLength;\n\t}\n\t\n\t\n\t/**\n\t * Recalculate the end point based on the start point\n\t *  @param {object} oSettings dataTables settings object\n\t *  @memberof DataTable#oApi\n\t */\n\tfunction _fnCalculateEnd( oSettings )\n\t{\n\t\tif ( oSettings.oFeatures.bPaginate === false )\n\t\t{\n\t\t\toSettings._iDisplayEnd = oSettings.aiDisplay.length;\n\t\t}\n\t\telse\n\t\t{\n\t\t\t/* Set the end point of the display - based on how many elements there are\n\t\t\t * still to display\n\t\t\t */\n\t\t\tif ( oSettings._iDisplayStart + oSettings._iDisplayLength > oSettings.aiDisplay.length ||\n\t\t\t\t   oSettings._iDisplayLength == -1 )\n\t\t\t{\n\t\t\t\toSettings._iDisplayEnd = oSettings.aiDisplay.length;\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\toSettings._iDisplayEnd = oSettings._iDisplayStart + oSettings._iDisplayLength;\n\t\t\t}\n\t\t}\n\t}\n\t\n\t\n\t\n\t/* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *\n\t * Note that most of the paging logic is done in \n\t * DataTable.ext.oPagination\n\t */\n\t\n\t/**\n\t * Generate the node required for default pagination\n\t *  @param {object} oSettings dataTables settings object\n\t *  @returns {node} Pagination feature node\n\t *  @memberof DataTable#oApi\n\t */\n\tfunction _fnFeatureHtmlPaginate ( oSettings )\n\t{\n\t\tif ( oSettings.oScroll.bInfinite )\n\t\t{\n\t\t\treturn null;\n\t\t}\n\t\t\n\t\tvar nPaginate = document.createElement( 'div' );\n\t\tnPaginate.className = oSettings.oClasses.sPaging+oSettings.sPaginationType;\n\t\t\n\t\tDataTable.ext.oPagination[ oSettings.sPaginationType ].fnInit( oSettings, nPaginate, \n\t\t\tfunction( oSettings ) {\n\t\t\t\t_fnCalculateEnd( oSettings );\n\t\t\t\t_fnDraw( oSettings );\n\t\t\t}\n\t\t);\n\t\t\n\t\t/* Add a draw callback for the pagination on first instance, to update the paging display */\n\t\tif ( !oSettings.aanFeatures.p )\n\t\t{\n\t\t\toSettings.aoDrawCallback.push( {\n\t\t\t\t\"fn\": function( oSettings ) {\n\t\t\t\t\tDataTable.ext.oPagination[ oSettings.sPaginationType ].fnUpdate( oSettings, function( oSettings ) {\n\t\t\t\t\t\t_fnCalculateEnd( oSettings );\n\t\t\t\t\t\t_fnDraw( oSettings );\n\t\t\t\t\t} );\n\t\t\t\t},\n\t\t\t\t\"sName\": \"pagination\"\n\t\t\t} );\n\t\t}\n\t\treturn nPaginate;\n\t}\n\t\n\t\n\t/**\n\t * Alter the display settings to change the page\n\t *  @param {object} oSettings dataTables settings object\n\t *  @param {string|int} mAction Paging action to take: \"first\", \"previous\", \"next\" or \"last\"\n\t *    or page number to jump to (integer)\n\t *  @returns {bool} true page has changed, false - no change (no effect) eg 'first' on page 1\n\t *  @memberof DataTable#oApi\n\t */\n\tfunction _fnPageChange ( oSettings, mAction )\n\t{\n\t\tvar iOldStart = oSettings._iDisplayStart;\n\t\t\n\t\tif ( typeof mAction === \"number\" )\n\t\t{\n\t\t\toSettings._iDisplayStart = mAction * oSettings._iDisplayLength;\n\t\t\tif ( oSettings._iDisplayStart > oSettings.fnRecordsDisplay() )\n\t\t\t{\n\t\t\t\toSettings._iDisplayStart = 0;\n\t\t\t}\n\t\t}\n\t\telse if ( mAction == \"first\" )\n\t\t{\n\t\t\toSettings._iDisplayStart = 0;\n\t\t}\n\t\telse if ( mAction == \"previous\" )\n\t\t{\n\t\t\toSettings._iDisplayStart = oSettings._iDisplayLength>=0 ?\n\t\t\t\toSettings._iDisplayStart - oSettings._iDisplayLength :\n\t\t\t\t0;\n\t\t\t\n\t\t\t/* Correct for under-run */\n\t\t\tif ( oSettings._iDisplayStart < 0 )\n\t\t\t{\n\t\t\t  oSettings._iDisplayStart = 0;\n\t\t\t}\n\t\t}\n\t\telse if ( mAction == \"next\" )\n\t\t{\n\t\t\tif ( oSettings._iDisplayLength >= 0 )\n\t\t\t{\n\t\t\t\t/* Make sure we are not over running the display array */\n\t\t\t\tif ( oSettings._iDisplayStart + oSettings._iDisplayLength < oSettings.fnRecordsDisplay() )\n\t\t\t\t{\n\t\t\t\t\toSettings._iDisplayStart += oSettings._iDisplayLength;\n\t\t\t\t}\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\toSettings._iDisplayStart = 0;\n\t\t\t}\n\t\t}\n\t\telse if ( mAction == \"last\" )\n\t\t{\n\t\t\tif ( oSettings._iDisplayLength >= 0 )\n\t\t\t{\n\t\t\t\tvar iPages = parseInt( (oSettings.fnRecordsDisplay()-1) / oSettings._iDisplayLength, 10 ) + 1;\n\t\t\t\toSettings._iDisplayStart = (iPages-1) * oSettings._iDisplayLength;\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\toSettings._iDisplayStart = 0;\n\t\t\t}\n\t\t}\n\t\telse\n\t\t{\n\t\t\t_fnLog( oSettings, 0, \"Unknown paging action: \"+mAction );\n\t\t}\n\t\t$(oSettings.oInstance).trigger('page', oSettings);\n\t\t\n\t\treturn iOldStart != oSettings._iDisplayStart;\n\t}\n\t\n\t\n\t\n\t/**\n\t * Generate the node required for the processing node\n\t *  @param {object} oSettings dataTables settings object\n\t *  @returns {node} Processing element\n\t *  @memberof DataTable#oApi\n\t */\n\tfunction _fnFeatureHtmlProcessing ( oSettings )\n\t{\n\t\tvar nProcessing = document.createElement( 'div' );\n\t\t\n\t\tif ( !oSettings.aanFeatures.r )\n\t\t{\n\t\t\tnProcessing.id = oSettings.sTableId+'_processing';\n\t\t}\n\t\tnProcessing.innerHTML = oSettings.oLanguage.sProcessing;\n\t\tnProcessing.className = oSettings.oClasses.sProcessing;\n\t\toSettings.nTable.parentNode.insertBefore( nProcessing, oSettings.nTable );\n\t\t\n\t\treturn nProcessing;\n\t}\n\t\n\t\n\t/**\n\t * Display or hide the processing indicator\n\t *  @param {object} oSettings dataTables settings object\n\t *  @param {bool} bShow Show the processing indicator (true) or not (false)\n\t *  @memberof DataTable#oApi\n\t */\n\tfunction _fnProcessingDisplay ( oSettings, bShow )\n\t{\n\t\tif ( oSettings.oFeatures.bProcessing )\n\t\t{\n\t\t\tvar an = oSettings.aanFeatures.r;\n\t\t\tfor ( var i=0, iLen=an.length ; i<iLen ; i++ )\n\t\t\t{\n\t\t\t\tan[i].style.visibility = bShow ? \"visible\" : \"hidden\";\n\t\t\t}\n\t\t}\n\t\n\t\t$(oSettings.oInstance).trigger('processing', [oSettings, bShow]);\n\t}\n\t\n\t/**\n\t * Add any control elements for the table - specifically scrolling\n\t *  @param {object} oSettings dataTables settings object\n\t *  @returns {node} Node to add to the DOM\n\t *  @memberof DataTable#oApi\n\t */\n\tfunction _fnFeatureHtmlTable ( oSettings )\n\t{\n\t\t/* Check if scrolling is enabled or not - if not then leave the DOM unaltered */\n\t\tif ( oSettings.oScroll.sX === \"\" && oSettings.oScroll.sY === \"\" )\n\t\t{\n\t\t\treturn oSettings.nTable;\n\t\t}\n\t\t\n\t\t/*\n\t\t * The HTML structure that we want to generate in this function is:\n\t\t *  div - nScroller\n\t\t *    div - nScrollHead\n\t\t *      div - nScrollHeadInner\n\t\t *        table - nScrollHeadTable\n\t\t *          thead - nThead\n\t\t *    div - nScrollBody\n\t\t *      table - oSettings.nTable\n\t\t *        thead - nTheadSize\n\t\t *        tbody - nTbody\n\t\t *    div - nScrollFoot\n\t\t *      div - nScrollFootInner\n\t\t *        table - nScrollFootTable\n\t\t *          tfoot - nTfoot\n\t\t */\n\t\tvar\n\t\t \tnScroller = document.createElement('div'),\n\t\t \tnScrollHead = document.createElement('div'),\n\t\t \tnScrollHeadInner = document.createElement('div'),\n\t\t \tnScrollBody = document.createElement('div'),\n\t\t \tnScrollFoot = document.createElement('div'),\n\t\t \tnScrollFootInner = document.createElement('div'),\n\t\t \tnScrollHeadTable = oSettings.nTable.cloneNode(false),\n\t\t \tnScrollFootTable = oSettings.nTable.cloneNode(false),\n\t\t\tnThead = oSettings.nTable.getElementsByTagName('thead')[0],\n\t\t \tnTfoot = oSettings.nTable.getElementsByTagName('tfoot').length === 0 ? null : \n\t\t\t\toSettings.nTable.getElementsByTagName('tfoot')[0],\n\t\t\toClasses = oSettings.oClasses;\n\t\t\n\t\tnScrollHead.appendChild( nScrollHeadInner );\n\t\tnScrollFoot.appendChild( nScrollFootInner );\n\t\tnScrollBody.appendChild( oSettings.nTable );\n\t\tnScroller.appendChild( nScrollHead );\n\t\tnScroller.appendChild( nScrollBody );\n\t\tnScrollHeadInner.appendChild( nScrollHeadTable );\n\t\tnScrollHeadTable.appendChild( nThead );\n\t\tif ( nTfoot !== null )\n\t\t{\n\t\t\tnScroller.appendChild( nScrollFoot );\n\t\t\tnScrollFootInner.appendChild( nScrollFootTable );\n\t\t\tnScrollFootTable.appendChild( nTfoot );\n\t\t}\n\t\t\n\t\tnScroller.className = oClasses.sScrollWrapper;\n\t\tnScrollHead.className = oClasses.sScrollHead;\n\t\tnScrollHeadInner.className = oClasses.sScrollHeadInner;\n\t\tnScrollBody.className = oClasses.sScrollBody;\n\t\tnScrollFoot.className = oClasses.sScrollFoot;\n\t\tnScrollFootInner.className = oClasses.sScrollFootInner;\n\t\t\n\t\tif ( oSettings.oScroll.bAutoCss )\n\t\t{\n\t\t\tnScrollHead.style.overflow = \"hidden\";\n\t\t\tnScrollHead.style.position = \"relative\";\n\t\t\tnScrollFoot.style.overflow = \"hidden\";\n\t\t\tnScrollBody.style.overflow = \"auto\";\n\t\t}\n\t\t\n\t\tnScrollHead.style.border = \"0\";\n\t\tnScrollHead.style.width = \"100%\";\n\t\tnScrollFoot.style.border = \"0\";\n\t\tnScrollHeadInner.style.width = oSettings.oScroll.sXInner !== \"\" ?\n\t\t\toSettings.oScroll.sXInner : \"100%\"; /* will be overwritten */\n\t\t\n\t\t/* Modify attributes to respect the clones */\n\t\tnScrollHeadTable.removeAttribute('id');\n\t\tnScrollHeadTable.style.marginLeft = \"0\";\n\t\toSettings.nTable.style.marginLeft = \"0\";\n\t\tif ( nTfoot !== null )\n\t\t{\n\t\t\tnScrollFootTable.removeAttribute('id');\n\t\t\tnScrollFootTable.style.marginLeft = \"0\";\n\t\t}\n\t\t\n\t\t/* Move caption elements from the body to the header, footer or leave where it is\n\t\t * depending on the configuration. Note that the DTD says there can be only one caption */\n\t\tvar nCaption = $(oSettings.nTable).children('caption');\n\t\tif ( nCaption.length > 0 )\n\t\t{\n\t\t\tnCaption = nCaption[0];\n\t\t\tif ( nCaption._captionSide === \"top\" )\n\t\t\t{\n\t\t\t\tnScrollHeadTable.appendChild( nCaption );\n\t\t\t}\n\t\t\telse if ( nCaption._captionSide === \"bottom\" && nTfoot )\n\t\t\t{\n\t\t\t\tnScrollFootTable.appendChild( nCaption );\n\t\t\t}\n\t\t}\n\t\t\n\t\t/*\n\t\t * Sizing\n\t\t */\n\t\t/* When x-scrolling add the width and a scroller to move the header with the body */\n\t\tif ( oSettings.oScroll.sX !== \"\" )\n\t\t{\n\t\t\tnScrollHead.style.width = _fnStringToCss( oSettings.oScroll.sX );\n\t\t\tnScrollBody.style.width = _fnStringToCss( oSettings.oScroll.sX );\n\t\t\t\n\t\t\tif ( nTfoot !== null )\n\t\t\t{\n\t\t\t\tnScrollFoot.style.width = _fnStringToCss( oSettings.oScroll.sX );\t\n\t\t\t}\n\t\t\t\n\t\t\t/* When the body is scrolled, then we also want to scroll the headers */\n\t\t\t$(nScrollBody).scroll( function (e) {\n\t\t\t\tnScrollHead.scrollLeft = this.scrollLeft;\n\t\t\t\t\n\t\t\t\tif ( nTfoot !== null )\n\t\t\t\t{\n\t\t\t\t\tnScrollFoot.scrollLeft = this.scrollLeft;\n\t\t\t\t}\n\t\t\t} );\n\t\t}\n\t\t\n\t\t/* When yscrolling, add the height */\n\t\tif ( oSettings.oScroll.sY !== \"\" )\n\t\t{\n\t\t\tnScrollBody.style.height = _fnStringToCss( oSettings.oScroll.sY );\n\t\t}\n\t\t\n\t\t/* Redraw - align columns across the tables */\n\t\toSettings.aoDrawCallback.push( {\n\t\t\t\"fn\": _fnScrollDraw,\n\t\t\t\"sName\": \"scrolling\"\n\t\t} );\n\t\t\n\t\t/* Infinite scrolling event handlers */\n\t\tif ( oSettings.oScroll.bInfinite )\n\t\t{\n\t\t\t$(nScrollBody).scroll( function() {\n\t\t\t\t/* Use a blocker to stop scrolling from loading more data while other data is still loading */\n\t\t\t\tif ( !oSettings.bDrawing && $(this).scrollTop() !== 0 )\n\t\t\t\t{\n\t\t\t\t\t/* Check if we should load the next data set */\n\t\t\t\t\tif ( $(this).scrollTop() + $(this).height() > \n\t\t\t\t\t\t$(oSettings.nTable).height() - oSettings.oScroll.iLoadGap )\n\t\t\t\t\t{\n\t\t\t\t\t\t/* Only do the redraw if we have to - we might be at the end of the data */\n\t\t\t\t\t\tif ( oSettings.fnDisplayEnd() < oSettings.fnRecordsDisplay() )\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t_fnPageChange( oSettings, 'next' );\n\t\t\t\t\t\t\t_fnCalculateEnd( oSettings );\n\t\t\t\t\t\t\t_fnDraw( oSettings );\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} );\n\t\t}\n\t\t\n\t\toSettings.nScrollHead = nScrollHead;\n\t\toSettings.nScrollFoot = nScrollFoot;\n\t\t\n\t\treturn nScroller;\n\t}\n\t\n\t\n\t/**\n\t * Update the various tables for resizing. It's a bit of a pig this function, but\n\t * basically the idea to:\n\t *   1. Re-create the table inside the scrolling div\n\t *   2. Take live measurements from the DOM\n\t *   3. Apply the measurements\n\t *   4. Clean up\n\t *  @param {object} o dataTables settings object\n\t *  @returns {node} Node to add to the DOM\n\t *  @memberof DataTable#oApi\n\t */\n\tfunction _fnScrollDraw ( o )\n\t{\n        //FIX\n        //TODO: all the jquery width and height calculations happen way too often, it just neds to happen on init and on resize.\n\n\n\t\t/* Adjust the position of the header in case we loose the y-scrollbar */\n\t\t//$(nScrollBody).scroll();\n\n\t\t/* If sorting or filtering has occurred, jump the scrolling back to the top */\n\t\t/*if ( o.bSorted || o.bFiltered )\n\t\t{\n\t\t\tnScrollBody.scrollTop = 0;\n\t\t}*/\n\t}\n\t\n\t\n\t/**\n\t * Apply a given function to the display child nodes of an element array (typically\n\t * TD children of TR rows\n\t *  @param {function} fn Method to apply to the objects\n\t *  @param array {nodes} an1 List of elements to look through for display children\n\t *  @param array {nodes} an2 Another list (identical structure to the first) - optional\n\t *  @memberof DataTable#oApi\n\t */\n\tfunction _fnApplyToChildren( fn, an1, an2 )\n\t{\n\t\tvar index=0, i=0, iLen=an1.length;\n\t\tvar nNode1, nNode2;\n\t\n\t\twhile ( i < iLen )\n\t\t{\n\t\t\tnNode1 = an1[i].firstChild;\n\t\t\tnNode2 = an2 ? an2[i].firstChild : null;\n\t\t\twhile ( nNode1 )\n\t\t\t{\n\t\t\t\tif ( nNode1.nodeType === 1 )\n\t\t\t\t{\n\t\t\t\t\tif ( an2 )\n\t\t\t\t\t{\n\t\t\t\t\t\tfn( nNode1, nNode2, index );\n\t\t\t\t\t}\n\t\t\t\t\telse\n\t\t\t\t\t{\n\t\t\t\t\t\tfn( nNode1, index );\n\t\t\t\t\t}\n\t\t\t\t\tindex++;\n\t\t\t\t}\n\t\t\t\tnNode1 = nNode1.nextSibling;\n\t\t\t\tnNode2 = an2 ? nNode2.nextSibling : null;\n\t\t\t}\n\t\t\ti++;\n\t\t}\n\t}\n\t\n\t/**\n\t * Convert a CSS unit width to pixels (e.g. 2em)\n\t *  @param {string} sWidth width to be converted\n\t *  @param {node} nParent parent to get the with for (required for relative widths) - optional\n\t *  @returns {int} iWidth width in pixels\n\t *  @memberof DataTable#oApi\n\t */\n\tfunction _fnConvertToWidth ( sWidth, nParent )\n\t{\n\t\tif ( !sWidth || sWidth === null || sWidth === '' )\n\t\t{\n\t\t\treturn 0;\n\t\t}\n\t\t\n\t\tif ( !nParent )\n\t\t{\n\t\t\tnParent = document.body;\n\t\t}\n\t\t\n\t\tvar iWidth;\n\t\tvar nTmp = document.createElement( \"div\" );\n\t\tnTmp.style.width = _fnStringToCss( sWidth );\n\t\t\n\t\tnParent.appendChild( nTmp );\n\t\tiWidth = nTmp.offsetWidth;\n\t\tnParent.removeChild( nTmp );\n\t\t\n\t\treturn ( iWidth );\n\t}\n\t\n\t\n\t/**\n\t * Calculate the width of columns for the table\n\t *  @param {object} oSettings dataTables settings object\n\t *  @memberof DataTable#oApi\n\t */\n\tfunction _fnCalculateColumnWidths ( oSettings )\n\t{\n\t\tvar iTableWidth = oSettings.nTable.offsetWidth;\n\t\tvar iUserInputs = 0;\n\t\tvar iTmpWidth;\n\t\tvar iVisibleColumns = 0;\n\t\tvar iColums = oSettings.aoColumns.length;\n\t\tvar i, iIndex, iCorrector, iWidth;\n\t\tvar oHeaders = $('th', oSettings.nTHead);\n\t\tvar widthAttr = oSettings.nTable.getAttribute('width');\n\t\tvar nWrapper = oSettings.nTable.parentNode;\n\t\t\n\t\t/* Convert any user input sizes into pixel sizes */\n\t\tfor ( i=0 ; i<iColums ; i++ )\n\t\t{\n\t\t\tif ( oSettings.aoColumns[i].bVisible )\n\t\t\t{\n\t\t\t\tiVisibleColumns++;\n\t\t\t\t\n\t\t\t\tif ( oSettings.aoColumns[i].sWidth !== null )\n\t\t\t\t{\n\t\t\t\t\tiTmpWidth = _fnConvertToWidth( oSettings.aoColumns[i].sWidthOrig, \n\t\t\t\t\t\tnWrapper );\n\t\t\t\t\tif ( iTmpWidth !== null )\n\t\t\t\t\t{\n\t\t\t\t\t\toSettings.aoColumns[i].sWidth = _fnStringToCss( iTmpWidth );\n\t\t\t\t\t}\n\t\t\t\t\t\t\n\t\t\t\t\tiUserInputs++;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\t\n\t\t/* If the number of columns in the DOM equals the number that we have to process in \n\t\t * DataTables, then we can use the offsets that are created by the web-browser. No custom \n\t\t * sizes can be set in order for this to happen, nor scrolling used\n\t\t */\n\t\tif ( iColums == oHeaders.length && iUserInputs === 0 && iVisibleColumns == iColums &&\n\t\t\toSettings.oScroll.sX === \"\" && oSettings.oScroll.sY === \"\" )\n\t\t{\n\t\t\tfor ( i=0 ; i<oSettings.aoColumns.length ; i++ )\n\t\t\t{\n\t\t\t\tiTmpWidth = $(oHeaders[i]).width();\n\t\t\t\tif ( iTmpWidth !== null )\n\t\t\t\t{\n\t\t\t\t\toSettings.aoColumns[i].sWidth = _fnStringToCss( iTmpWidth );\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\telse\n\t\t{\n\t\t\t/* Otherwise we are going to have to do some calculations to get the width of each column.\n\t\t\t * Construct a 1 row table with the widest node in the data, and any user defined widths,\n\t\t\t * then insert it into the DOM and allow the browser to do all the hard work of\n\t\t\t * calculating table widths.\n\t\t\t */\n\t\t\tvar\n\t\t\t\tnCalcTmp = oSettings.nTable.cloneNode( false ),\n\t\t\t\tnTheadClone = oSettings.nTHead.cloneNode(true),\n\t\t\t\tnBody = document.createElement( 'tbody' ),\n\t\t\t\tnTr = document.createElement( 'tr' ),\n\t\t\t\tnDivSizing;\n\t\t\t\n\t\t\tnCalcTmp.removeAttribute( \"id\" );\n\t\t\tnCalcTmp.appendChild( nTheadClone );\n\t\t\tif ( oSettings.nTFoot !== null )\n\t\t\t{\n\t\t\t\tnCalcTmp.appendChild( oSettings.nTFoot.cloneNode(true) );\n\t\t\t\t_fnApplyToChildren( function(n) {\n\t\t\t\t\tn.style.width = \"\";\n\t\t\t\t}, nCalcTmp.getElementsByTagName('tr') );\n\t\t\t}\n\t\t\t\n\t\t\tnCalcTmp.appendChild( nBody );\n\t\t\tnBody.appendChild( nTr );\n\t\t\t\n\t\t\t/* Remove any sizing that was previously applied by the styles */\n\t\t\tvar jqColSizing = $('thead th', nCalcTmp);\n\t\t\tif ( jqColSizing.length === 0 )\n\t\t\t{\n\t\t\t\tjqColSizing = $('tbody tr:eq(0)>td', nCalcTmp);\n\t\t\t}\n\t\n\t\t\t/* Apply custom sizing to the cloned header */\n\t\t\tvar nThs = _fnGetUniqueThs( oSettings, nTheadClone );\n\t\t\tiCorrector = 0;\n\t\t\tfor ( i=0 ; i<iColums ; i++ )\n\t\t\t{\n\t\t\t\tvar oColumn = oSettings.aoColumns[i];\n\t\t\t\tif ( oColumn.bVisible && oColumn.sWidthOrig !== null && oColumn.sWidthOrig !== \"\" )\n\t\t\t\t{\n\t\t\t\t\tnThs[i-iCorrector].style.width = _fnStringToCss( oColumn.sWidthOrig );\n\t\t\t\t}\n\t\t\t\telse if ( oColumn.bVisible )\n\t\t\t\t{\n\t\t\t\t\tnThs[i-iCorrector].style.width = \"\";\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\tiCorrector++;\n\t\t\t\t}\n\t\t\t}\n\t\n\t\t\t/* Find the biggest td for each column and put it into the table */\n\t\t\tfor ( i=0 ; i<iColums ; i++ )\n\t\t\t{\n\t\t\t\tif ( oSettings.aoColumns[i].bVisible )\n\t\t\t\t{\n\t\t\t\t\tvar nTd = _fnGetWidestNode( oSettings, i );\n\t\t\t\t\tif ( nTd !== null )\n\t\t\t\t\t{\n\t\t\t\t\t\tnTd = nTd.cloneNode(true);\n\t\t\t\t\t\tif ( oSettings.aoColumns[i].sContentPadding !== \"\" )\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tnTd.innerHTML += oSettings.aoColumns[i].sContentPadding;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tnTr.appendChild( nTd );\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\t\n\t\t\t/* Build the table and 'display' it */\n\t\t\tnWrapper.appendChild( nCalcTmp );\n\t\t\t\n\t\t\t/* When scrolling (X or Y) we want to set the width of the table as appropriate. However,\n\t\t\t * when not scrolling leave the table width as it is. This results in slightly different,\n\t\t\t * but I think correct behaviour\n\t\t\t */\n\t\t\tif ( oSettings.oScroll.sX !== \"\" && oSettings.oScroll.sXInner !== \"\" )\n\t\t\t{\n\t\t\t\tnCalcTmp.style.width = _fnStringToCss(oSettings.oScroll.sXInner);\n\t\t\t}\n\t\t\telse if ( oSettings.oScroll.sX !== \"\" )\n\t\t\t{\n\t\t\t\tnCalcTmp.style.width = \"\";\n\t\t\t\tif ( $(nCalcTmp).width() < nWrapper.offsetWidth )\n\t\t\t\t{\n\t\t\t\t\tnCalcTmp.style.width = _fnStringToCss( nWrapper.offsetWidth );\n\t\t\t\t}\n\t\t\t}\n\t\t\telse if ( oSettings.oScroll.sY !== \"\" )\n\t\t\t{\n\t\t\t\tnCalcTmp.style.width = _fnStringToCss( nWrapper.offsetWidth );\n\t\t\t}\n\t\t\telse if ( widthAttr )\n\t\t\t{\n\t\t\t\tnCalcTmp.style.width = _fnStringToCss( widthAttr );\n\t\t\t}\n\t\t\tnCalcTmp.style.visibility = \"hidden\";\n\t\t\t\n\t\t\t/* Scrolling considerations */\n\t\t\t_fnScrollingWidthAdjust( oSettings, nCalcTmp );\n\t\t\t\n\t\t\t/* Read the width's calculated by the browser and store them for use by the caller. We\n\t\t\t * first of all try to use the elements in the body, but it is possible that there are\n\t\t\t * no elements there, under which circumstances we use the header elements\n\t\t\t */\n\t\t\tvar oNodes = $(\"tbody tr:eq(0)\", nCalcTmp).children();\n\t\t\tif ( oNodes.length === 0 )\n\t\t\t{\n\t\t\t\toNodes = _fnGetUniqueThs( oSettings, $('thead', nCalcTmp)[0] );\n\t\t\t}\n\t\n\t\t\t/* Browsers need a bit of a hand when a width is assigned to any columns when \n\t\t\t * x-scrolling as they tend to collapse the table to the min-width, even if\n\t\t\t * we sent the column widths. So we need to keep track of what the table width\n\t\t\t * should be by summing the user given values, and the automatic values\n\t\t\t */\n\t\t\tif ( oSettings.oScroll.sX !== \"\" )\n\t\t\t{\n\t\t\t\tvar iTotal = 0;\n\t\t\t\tiCorrector = 0;\n\t\t\t\tfor ( i=0 ; i<oSettings.aoColumns.length ; i++ )\n\t\t\t\t{\n\t\t\t\t\tif ( oSettings.aoColumns[i].bVisible )\n\t\t\t\t\t{\n\t\t\t\t\t\tif ( oSettings.aoColumns[i].sWidthOrig === null )\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tiTotal += $(oNodes[iCorrector]).outerWidth();\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tiTotal += parseInt(oSettings.aoColumns[i].sWidth.replace('px',''), 10) +\n\t\t\t\t\t\t\t\t($(oNodes[iCorrector]).outerWidth() - $(oNodes[iCorrector]).width());\n\t\t\t\t\t\t}\n\t\t\t\t\t\tiCorrector++;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\tnCalcTmp.style.width = _fnStringToCss( iTotal );\n\t\t\t\toSettings.nTable.style.width = _fnStringToCss( iTotal );\n\t\t\t}\n\t\n\t\t\tiCorrector = 0;\n\t\t\tfor ( i=0 ; i<oSettings.aoColumns.length ; i++ )\n\t\t\t{\n\t\t\t\tif ( oSettings.aoColumns[i].bVisible )\n\t\t\t\t{\n\t\t\t\t\tiWidth = $(oNodes[iCorrector]).width();\n\t\t\t\t\tif ( iWidth !== null && iWidth > 0 )\n\t\t\t\t\t{\n\t\t\t\t\t\toSettings.aoColumns[i].sWidth = _fnStringToCss( iWidth );\n\t\t\t\t\t}\n\t\t\t\t\tiCorrector++;\n\t\t\t\t}\n\t\t\t}\n\t\n\t\t\tvar cssWidth = $(nCalcTmp).css('width');\n\t\t\toSettings.nTable.style.width = (cssWidth.indexOf('%') !== -1) ?\n\t\t\t    cssWidth : _fnStringToCss( $(nCalcTmp).outerWidth() );\n\t\t\tnCalcTmp.parentNode.removeChild( nCalcTmp );\n\t\t}\n\t\n\t\tif ( widthAttr )\n\t\t{\n\t\t\toSettings.nTable.style.width = _fnStringToCss( widthAttr );\n\t\t}\n\t}\n\t\n\t\n\t/**\n\t * Adjust a table's width to take account of scrolling\n\t *  @param {object} oSettings dataTables settings object\n\t *  @param {node} n table node\n\t *  @memberof DataTable#oApi\n\t */\n\tfunction _fnScrollingWidthAdjust ( oSettings, n )\n\t{\n\t\tif ( oSettings.oScroll.sX === \"\" && oSettings.oScroll.sY !== \"\" )\n\t\t{\n\t\t\t/* When y-scrolling only, we want to remove the width of the scroll bar so the table\n\t\t\t * + scroll bar will fit into the area avaialble.\n\t\t\t */\n\t\t\tvar iOrigWidth = $(n).width();\n\t\t\tn.style.width = _fnStringToCss( $(n).outerWidth()-oSettings.oScroll.iBarWidth );\n\t\t}\n\t\telse if ( oSettings.oScroll.sX !== \"\" )\n\t\t{\n\t\t\t/* When x-scrolling both ways, fix the table at it's current size, without adjusting */\n\t\t\tn.style.width = _fnStringToCss( $(n).outerWidth() );\n\t\t}\n\t}\n\t\n\t\n\t/**\n\t * Get the widest node\n\t *  @param {object} oSettings dataTables settings object\n\t *  @param {int} iCol column of interest\n\t *  @returns {node} widest table node\n\t *  @memberof DataTable#oApi\n\t */\n\tfunction _fnGetWidestNode( oSettings, iCol )\n\t{\n\t\tvar iMaxIndex = _fnGetMaxLenString( oSettings, iCol );\n\t\tif ( iMaxIndex < 0 )\n\t\t{\n\t\t\treturn null;\n\t\t}\n\t\n\t\tif ( oSettings.aoData[iMaxIndex].nTr === null )\n\t\t{\n\t\t\tvar n = document.createElement('td');\n\t\t\tn.innerHTML = _fnGetCellData( oSettings, iMaxIndex, iCol, '' );\n\t\t\treturn n;\n\t\t}\n\t\treturn _fnGetTdNodes(oSettings, iMaxIndex)[iCol];\n\t}\n\t\n\t\n\t/**\n\t * Get the maximum strlen for each data column\n\t *  @param {object} oSettings dataTables settings object\n\t *  @param {int} iCol column of interest\n\t *  @returns {string} max string length for each column\n\t *  @memberof DataTable#oApi\n\t */\n\tfunction _fnGetMaxLenString( oSettings, iCol )\n\t{\n\t\tvar iMax = -1;\n\t\tvar iMaxIndex = -1;\n\t\t\n\t\tfor ( var i=0 ; i<oSettings.aoData.length ; i++ )\n\t\t{\n\t\t\tvar s = _fnGetCellData( oSettings, i, iCol, 'display' )+\"\";\n\t\t\ts = s.replace( /<.*?>/g, \"\" );\n\t\t\tif ( s.length > iMax )\n\t\t\t{\n\t\t\t\tiMax = s.length;\n\t\t\t\tiMaxIndex = i;\n\t\t\t}\n\t\t}\n\t\t\n\t\treturn iMaxIndex;\n\t}\n\t\n\t\n\t/**\n\t * Append a CSS unit (only if required) to a string\n\t *  @param {array} aArray1 first array\n\t *  @param {array} aArray2 second array\n\t *  @returns {int} 0 if match, 1 if length is different, 2 if no match\n\t *  @memberof DataTable#oApi\n\t */\n\tfunction _fnStringToCss( s )\n\t{\n\t\tif ( s === null )\n\t\t{\n\t\t\treturn \"0px\";\n\t\t}\n\t\t\n\t\tif ( typeof s == 'number' )\n\t\t{\n\t\t\tif ( s < 0 )\n\t\t\t{\n\t\t\t\treturn \"0px\";\n\t\t\t}\n\t\t\treturn s+\"px\";\n\t\t}\n\t\t\n\t\t/* Check if the last character is not 0-9 */\n\t\tvar c = s.charCodeAt( s.length-1 );\n\t\tif (c < 0x30 || c > 0x39)\n\t\t{\n\t\t\treturn s;\n\t\t}\n\t\treturn s+\"px\";\n\t}\n\t\n\t\n\t/**\n\t * Get the width of a scroll bar in this browser being used\n\t *  @returns {int} width in pixels\n\t *  @memberof DataTable#oApi\n\t */\n\tfunction _fnScrollBarWidth ()\n\t{  \n\t\tvar inner = document.createElement('p');\n\t\tvar style = inner.style;\n\t\tstyle.width = \"100%\";\n\t\tstyle.height = \"200px\";\n\t\tstyle.padding = \"0px\";\n\t\t\n\t\tvar outer = document.createElement('div');\n\t\tstyle = outer.style;\n\t\tstyle.position = \"absolute\";\n\t\tstyle.top = \"0px\";\n\t\tstyle.left = \"0px\";\n\t\tstyle.visibility = \"hidden\";\n\t\tstyle.width = \"200px\";\n\t\tstyle.height = \"150px\";\n\t\tstyle.padding = \"0px\";\n\t\tstyle.overflow = \"hidden\";\n\t\touter.appendChild(inner);\n\t\t\n\t\tdocument.body.appendChild(outer);\n\t\tvar w1 = inner.offsetWidth;\n\t\touter.style.overflow = 'scroll';\n\t\tvar w2 = inner.offsetWidth;\n\t\tif ( w1 == w2 )\n\t\t{\n\t\t\tw2 = outer.clientWidth;\n\t\t}\n\t\t\n\t\tdocument.body.removeChild(outer);\n\t\treturn (w1 - w2);  \n\t}\n\t\n\t/**\n\t * Change the order of the table\n\t *  @param {object} oSettings dataTables settings object\n\t *  @param {bool} bApplyClasses optional - should we apply classes or not\n\t *  @memberof DataTable#oApi\n\t */\n\tfunction _fnSort ( oSettings, bApplyClasses )\n\t{\n\t\tvar\n\t\t\ti, iLen, j, jLen, k, kLen,\n\t\t\tsDataType, nTh,\n\t\t\taaSort = [],\n\t\t \taiOrig = [],\n\t\t\toSort = DataTable.ext.oSort,\n\t\t\taoData = oSettings.aoData,\n\t\t\taoColumns = oSettings.aoColumns,\n\t\t\toAria = oSettings.oLanguage.oAria;\n\t\t\n\t\t/* No sorting required if server-side or no sorting array */\n\t\tif ( !oSettings.oFeatures.bServerSide && \n\t\t\t(oSettings.aaSorting.length !== 0 || oSettings.aaSortingFixed !== null) )\n\t\t{\n\t\t\taaSort = ( oSettings.aaSortingFixed !== null ) ?\n\t\t\t\toSettings.aaSortingFixed.concat( oSettings.aaSorting ) :\n\t\t\t\toSettings.aaSorting.slice();\n\t\t\t\n\t\t\t/* If there is a sorting data type, and a function belonging to it, then we need to\n\t\t\t * get the data from the developer's function and apply it for this column\n\t\t\t */\n\t\t\tfor ( i=0 ; i<aaSort.length ; i++ )\n\t\t\t{\n\t\t\t\tvar iColumn = aaSort[i][0];\n\t\t\t\tvar iVisColumn = _fnColumnIndexToVisible( oSettings, iColumn );\n\t\t\t\tsDataType = oSettings.aoColumns[ iColumn ].sSortDataType;\n\t\t\t\tif ( DataTable.ext.afnSortData[sDataType] )\n\t\t\t\t{\n\t\t\t\t\tvar aData = DataTable.ext.afnSortData[sDataType].call( \n\t\t\t\t\t\toSettings.oInstance, oSettings, iColumn, iVisColumn\n\t\t\t\t\t);\n\t\t\t\t\tif ( aData.length === aoData.length )\n\t\t\t\t\t{\n\t\t\t\t\t\tfor ( j=0, jLen=aoData.length ; j<jLen ; j++ )\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t_fnSetCellData( oSettings, j, iColumn, aData[j] );\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\telse\n\t\t\t\t\t{\n\t\t\t\t\t\t_fnLog( oSettings, 0, \"Returned data sort array (col \"+iColumn+\") is the wrong length\" );\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\t\n\t\t\t/* Create a value - key array of the current row positions such that we can use their\n\t\t\t * current position during the sort, if values match, in order to perform stable sorting\n\t\t\t */\n\t\t\tfor ( i=0, iLen=oSettings.aiDisplayMaster.length ; i<iLen ; i++ )\n\t\t\t{\n\t\t\t\taiOrig[ oSettings.aiDisplayMaster[i] ] = i;\n\t\t\t}\n\t\n\t\t\t/* Build an internal data array which is specific to the sort, so we can get and prep\n\t\t\t * the data to be sorted only once, rather than needing to do it every time the sorting\n\t\t\t * function runs. This make the sorting function a very simple comparison\n\t\t\t */\n\t\t\tvar iSortLen = aaSort.length;\n\t\t\tvar fnSortFormat, aDataSort;\n\t\t\tfor ( i=0, iLen=aoData.length ; i<iLen ; i++ )\n\t\t\t{\n\t\t\t\tfor ( j=0 ; j<iSortLen ; j++ )\n\t\t\t\t{\n\t\t\t\t\taDataSort = aoColumns[ aaSort[j][0] ].aDataSort;\n\t\n\t\t\t\t\tfor ( k=0, kLen=aDataSort.length ; k<kLen ; k++ )\n\t\t\t\t\t{\n\t\t\t\t\t\tsDataType = aoColumns[ aDataSort[k] ].sType;\n\t\t\t\t\t\tfnSortFormat = oSort[ (sDataType ? sDataType : 'string')+\"-pre\" ];\n\t\t\t\t\t\t\n\t\t\t\t\t\taoData[i]._aSortData[ aDataSort[k] ] = fnSortFormat ?\n\t\t\t\t\t\t\tfnSortFormat( _fnGetCellData( oSettings, i, aDataSort[k], 'sort' ) ) :\n\t\t\t\t\t\t\t_fnGetCellData( oSettings, i, aDataSort[k], 'sort' );\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\t\n\t\t\t/* Do the sort - here we want multi-column sorting based on a given data source (column)\n\t\t\t * and sorting function (from oSort) in a certain direction. It's reasonably complex to\n\t\t\t * follow on it's own, but this is what we want (example two column sorting):\n\t\t\t *  fnLocalSorting = function(a,b){\n\t\t\t *  \tvar iTest;\n\t\t\t *  \tiTest = oSort['string-asc']('data11', 'data12');\n\t\t\t *  \tif (iTest !== 0)\n\t\t\t *  \t\treturn iTest;\n\t\t\t *    iTest = oSort['numeric-desc']('data21', 'data22');\n\t\t\t *    if (iTest !== 0)\n\t\t\t *  \t\treturn iTest;\n\t\t\t *  \treturn oSort['numeric-asc']( aiOrig[a], aiOrig[b] );\n\t\t\t *  }\n\t\t\t * Basically we have a test for each sorting column, if the data in that column is equal,\n\t\t\t * test the next column. If all columns match, then we use a numeric sort on the row \n\t\t\t * positions in the original data array to provide a stable sort.\n\t\t\t */\n\t\t\toSettings.aiDisplayMaster.sort( function ( a, b ) {\n\t\t\t\tvar k, l, lLen, iTest, aDataSort, sDataType;\n\t\t\t\tfor ( k=0 ; k<iSortLen ; k++ )\n\t\t\t\t{\n\t\t\t\t\taDataSort = aoColumns[ aaSort[k][0] ].aDataSort;\n\t\n\t\t\t\t\tfor ( l=0, lLen=aDataSort.length ; l<lLen ; l++ )\n\t\t\t\t\t{\n\t\t\t\t\t\tsDataType = aoColumns[ aDataSort[l] ].sType;\n\t\t\t\t\t\t\n\t\t\t\t\t\tiTest = oSort[ (sDataType ? sDataType : 'string')+\"-\"+aaSort[k][1] ](\n\t\t\t\t\t\t\taoData[a]._aSortData[ aDataSort[l] ],\n\t\t\t\t\t\t\taoData[b]._aSortData[ aDataSort[l] ]\n\t\t\t\t\t\t);\n\t\t\t\t\t\n\t\t\t\t\t\tif ( iTest !== 0 )\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\treturn iTest;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\treturn oSort['numeric-asc']( aiOrig[a], aiOrig[b] );\n\t\t\t} );\n\t\t}\n\t\t\n\t\t/* Alter the sorting classes to take account of the changes */\n\t\tif ( (bApplyClasses === undefined || bApplyClasses) && !oSettings.oFeatures.bDeferRender )\n\t\t{\n\t\t\t_fnSortingClasses( oSettings );\n\t\t}\n\t\n\t\tfor ( i=0, iLen=oSettings.aoColumns.length ; i<iLen ; i++ )\n\t\t{\n\t\t\tvar sTitle = aoColumns[i].sTitle.replace( /<.*?>/g, \"\" );\n\t\t\tnTh = aoColumns[i].nTh;\n\t\t\tnTh.removeAttribute('aria-sort');\n\t\t\tnTh.removeAttribute('aria-label');\n\t\t\t\n\t\t\t/* In ARIA only the first sorting column can be marked as sorting - no multi-sort option */\n\t\t\tif ( aoColumns[i].bSortable )\n\t\t\t{\n\t\t\t\tif ( aaSort.length > 0 && aaSort[0][0] == i )\n\t\t\t\t{\n\t\t\t\t\tnTh.setAttribute('aria-sort', aaSort[0][1]==\"asc\" ? \"ascending\" : \"descending\" );\n\t\t\t\t\t\n\t\t\t\t\tvar nextSort = (aoColumns[i].asSorting[ aaSort[0][2]+1 ]) ? \n\t\t\t\t\t\taoColumns[i].asSorting[ aaSort[0][2]+1 ] : aoColumns[i].asSorting[0];\n\t\t\t\t\tnTh.setAttribute('aria-label', sTitle+\n\t\t\t\t\t\t(nextSort==\"asc\" ? oAria.sSortAscending : oAria.sSortDescending) );\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\tnTh.setAttribute('aria-label', sTitle+\n\t\t\t\t\t\t(aoColumns[i].asSorting[0]==\"asc\" ? oAria.sSortAscending : oAria.sSortDescending) );\n\t\t\t\t}\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tnTh.setAttribute('aria-label', sTitle);\n\t\t\t}\n\t\t}\n\t\t\n\t\t/* Tell the draw function that we have sorted the data */\n\t\toSettings.bSorted = true;\n\t\t$(oSettings.oInstance).trigger('sort', oSettings);\n\t\t\n\t\t/* Copy the master data into the draw array and re-draw */\n\t\tif ( oSettings.oFeatures.bFilter )\n\t\t{\n\t\t\t/* _fnFilter() will redraw the table for us */\n\t\t\t_fnFilterComplete( oSettings, oSettings.oPreviousSearch, 1 );\n\t\t}\n\t\telse\n\t\t{\n\t\t\toSettings.aiDisplay = oSettings.aiDisplayMaster.slice();\n\t\t\toSettings._iDisplayStart = 0; /* reset display back to page 0 */\n\t\t\t_fnCalculateEnd( oSettings );\n\t\t\t_fnDraw( oSettings );\n\t\t}\n\t}\n\t\n\t\n\t/**\n\t * Attach a sort handler (click) to a node\n\t *  @param {object} oSettings dataTables settings object\n\t *  @param {node} nNode node to attach the handler to\n\t *  @param {int} iDataIndex column sorting index\n\t *  @param {function} [fnCallback] callback function\n\t *  @memberof DataTable#oApi\n\t */\n\tfunction _fnSortAttachListener ( oSettings, nNode, iDataIndex, fnCallback )\n\t{\n\t\t_fnBindAction( nNode, {}, function (e) {\n\t\t\t/* If the column is not sortable - don't to anything */\n\t\t\tif ( oSettings.aoColumns[iDataIndex].bSortable === false )\n\t\t\t{\n\t\t\t\treturn;\n\t\t\t}\n\t\t\t\n\t\t\t/*\n\t\t\t * This is a little bit odd I admit... I declare a temporary function inside the scope of\n\t\t\t * _fnBuildHead and the click handler in order that the code presented here can be used \n\t\t\t * twice - once for when bProcessing is enabled, and another time for when it is \n\t\t\t * disabled, as we need to perform slightly different actions.\n\t\t\t *   Basically the issue here is that the Javascript engine in modern browsers don't \n\t\t\t * appear to allow the rendering engine to update the display while it is still executing\n\t\t\t * it's thread (well - it does but only after long intervals). This means that the \n\t\t\t * 'processing' display doesn't appear for a table sort. To break the js thread up a bit\n\t\t\t * I force an execution break by using setTimeout - but this breaks the expected \n\t\t\t * thread continuation for the end-developer's point of view (their code would execute\n\t\t\t * too early), so we only do it when we absolutely have to.\n\t\t\t */\n\t\t\tvar fnInnerSorting = function () {\n\t\t\t\tvar iColumn, iNextSort;\n\t\t\t\t\n\t\t\t\t/* If the shift key is pressed then we are multiple column sorting */\n\t\t\t\tif ( e.shiftKey )\n\t\t\t\t{\n\t\t\t\t\t/* Are we already doing some kind of sort on this column? */\n\t\t\t\t\tvar bFound = false;\n\t\t\t\t\tfor ( var i=0 ; i<oSettings.aaSorting.length ; i++ )\n\t\t\t\t\t{\n\t\t\t\t\t\tif ( oSettings.aaSorting[i][0] == iDataIndex )\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tbFound = true;\n\t\t\t\t\t\t\tiColumn = oSettings.aaSorting[i][0];\n\t\t\t\t\t\t\tiNextSort = oSettings.aaSorting[i][2]+1;\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\tif ( !oSettings.aoColumns[iColumn].asSorting[iNextSort] )\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t/* Reached the end of the sorting options, remove from multi-col sort */\n\t\t\t\t\t\t\t\toSettings.aaSorting.splice( i, 1 );\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\telse\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t/* Move onto next sorting direction */\n\t\t\t\t\t\t\t\toSettings.aaSorting[i][1] = oSettings.aoColumns[iColumn].asSorting[iNextSort];\n\t\t\t\t\t\t\t\toSettings.aaSorting[i][2] = iNextSort;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\t\n\t\t\t\t\t/* No sort yet - add it in */\n\t\t\t\t\tif ( bFound === false )\n\t\t\t\t\t{\n\t\t\t\t\t\toSettings.aaSorting.push( [ iDataIndex, \n\t\t\t\t\t\t\toSettings.aoColumns[iDataIndex].asSorting[0], 0 ] );\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\t/* If no shift key then single column sort */\n\t\t\t\t\tif ( oSettings.aaSorting.length == 1 && oSettings.aaSorting[0][0] == iDataIndex )\n\t\t\t\t\t{\n\t\t\t\t\t\tiColumn = oSettings.aaSorting[0][0];\n\t\t\t\t\t\tiNextSort = oSettings.aaSorting[0][2]+1;\n\t\t\t\t\t\tif ( !oSettings.aoColumns[iColumn].asSorting[iNextSort] )\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tiNextSort = 0;\n\t\t\t\t\t\t}\n\t\t\t\t\t\toSettings.aaSorting[0][1] = oSettings.aoColumns[iColumn].asSorting[iNextSort];\n\t\t\t\t\t\toSettings.aaSorting[0][2] = iNextSort;\n\t\t\t\t\t}\n\t\t\t\t\telse\n\t\t\t\t\t{\n\t\t\t\t\t\toSettings.aaSorting.splice( 0, oSettings.aaSorting.length );\n\t\t\t\t\t\toSettings.aaSorting.push( [ iDataIndex, \n\t\t\t\t\t\t\toSettings.aoColumns[iDataIndex].asSorting[0], 0 ] );\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\t/* Run the sort */\n\t\t\t\t_fnSort( oSettings );\n\t\t\t}; /* /fnInnerSorting */\n\t\t\t\n\t\t\tif ( !oSettings.oFeatures.bProcessing )\n\t\t\t{\n\t\t\t\tfnInnerSorting();\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\t_fnProcessingDisplay( oSettings, true );\n\t\t\t\tsetTimeout( function() {\n\t\t\t\t\tfnInnerSorting();\n\t\t\t\t\tif ( !oSettings.oFeatures.bServerSide )\n\t\t\t\t\t{\n\t\t\t\t\t\t_fnProcessingDisplay( oSettings, false );\n\t\t\t\t\t}\n\t\t\t\t}, 0 );\n\t\t\t}\n\t\t\t\n\t\t\t/* Call the user specified callback function - used for async user interaction */\n\t\t\tif ( typeof fnCallback == 'function' )\n\t\t\t{\n\t\t\t\tfnCallback( oSettings );\n\t\t\t}\n\t\t} );\n\t}\n\t\n\t\n\t/**\n\t * Set the sorting classes on the header, Note: it is safe to call this function \n\t * when bSort and bSortClasses are false\n\t *  @param {object} oSettings dataTables settings object\n\t *  @memberof DataTable#oApi\n\t */\n\tfunction _fnSortingClasses( oSettings )\n\t{\n\t\tvar i, iLen, j, jLen, iFound;\n\t\tvar aaSort, sClass;\n\t\tvar iColumns = oSettings.aoColumns.length;\n\t\tvar oClasses = oSettings.oClasses;\n\t\t\n\t\tfor ( i=0 ; i<iColumns ; i++ )\n\t\t{\n\t\t\tif ( oSettings.aoColumns[i].bSortable )\n\t\t\t{\n\t\t\t\t$(oSettings.aoColumns[i].nTh).removeClass( oClasses.sSortAsc +\" \"+ oClasses.sSortDesc +\n\t\t\t\t\t\" \"+ oSettings.aoColumns[i].sSortingClass );\n\t\t\t}\n\t\t}\n\t\t\n\t\tif ( oSettings.aaSortingFixed !== null )\n\t\t{\n\t\t\taaSort = oSettings.aaSortingFixed.concat( oSettings.aaSorting );\n\t\t}\n\t\telse\n\t\t{\n\t\t\taaSort = oSettings.aaSorting.slice();\n\t\t}\n\t\t\n\t\t/* Apply the required classes to the header */\n\t\tfor ( i=0 ; i<oSettings.aoColumns.length ; i++ )\n\t\t{\n\t\t\tif ( oSettings.aoColumns[i].bSortable )\n\t\t\t{\n\t\t\t\tsClass = oSettings.aoColumns[i].sSortingClass;\n\t\t\t\tiFound = -1;\n\t\t\t\tfor ( j=0 ; j<aaSort.length ; j++ )\n\t\t\t\t{\n\t\t\t\t\tif ( aaSort[j][0] == i )\n\t\t\t\t\t{\n\t\t\t\t\t\tsClass = ( aaSort[j][1] == \"asc\" ) ?\n\t\t\t\t\t\t\toClasses.sSortAsc : oClasses.sSortDesc;\n\t\t\t\t\t\tiFound = j;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\t$(oSettings.aoColumns[i].nTh).addClass( sClass );\n\t\t\t\t\n\t\t\t\tif ( oSettings.bJUI )\n\t\t\t\t{\n\t\t\t\t\t/* jQuery UI uses extra markup */\n\t\t\t\t\tvar jqSpan = $(\"span.\"+oClasses.sSortIcon,  oSettings.aoColumns[i].nTh);\n\t\t\t\t\tjqSpan.removeClass(oClasses.sSortJUIAsc +\" \"+ oClasses.sSortJUIDesc +\" \"+ \n\t\t\t\t\t\toClasses.sSortJUI +\" \"+ oClasses.sSortJUIAscAllowed +\" \"+ oClasses.sSortJUIDescAllowed );\n\t\t\t\t\t\n\t\t\t\t\tvar sSpanClass;\n\t\t\t\t\tif ( iFound == -1 )\n\t\t\t\t\t{\n\t\t\t\t\t \tsSpanClass = oSettings.aoColumns[i].sSortingClassJUI;\n\t\t\t\t\t}\n\t\t\t\t\telse if ( aaSort[iFound][1] == \"asc\" )\n\t\t\t\t\t{\n\t\t\t\t\t\tsSpanClass = oClasses.sSortJUIAsc;\n\t\t\t\t\t}\n\t\t\t\t\telse\n\t\t\t\t\t{\n\t\t\t\t\t\tsSpanClass = oClasses.sSortJUIDesc;\n\t\t\t\t\t}\n\t\t\t\t\t\n\t\t\t\t\tjqSpan.addClass( sSpanClass );\n\t\t\t\t}\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\t/* No sorting on this column, so add the base class. This will have been assigned by\n\t\t\t\t * _fnAddColumn\n\t\t\t\t */\n\t\t\t\t$(oSettings.aoColumns[i].nTh).addClass( oSettings.aoColumns[i].sSortingClass );\n\t\t\t}\n\t\t}\n\t\t\n\t\t/* \n\t\t * Apply the required classes to the table body\n\t\t * Note that this is given as a feature switch since it can significantly slow down a sort\n\t\t * on large data sets (adding and removing of classes is always slow at the best of times..)\n\t\t * Further to this, note that this code is admittedly fairly ugly. It could be made a lot \n\t\t * simpler using jQuery selectors and add/removeClass, but that is significantly slower\n\t\t * (on the order of 5 times slower) - hence the direct DOM manipulation here.\n\t\t * Note that for deferred drawing we do use jQuery - the reason being that taking the first\n\t\t * row found to see if the whole column needs processed can miss classes since the first\n\t\t * column might be new.\n\t\t */\n\t\tsClass = oClasses.sSortColumn;\n\t\t\n\t\tif ( oSettings.oFeatures.bSort && oSettings.oFeatures.bSortClasses )\n\t\t{\n\t\t\tvar nTds = _fnGetTdNodes( oSettings );\n\t\t\t\n\t\t\t/* Determine what the sorting class for each column should be */\n\t\t\tvar iClass, iTargetCol;\n\t\t\tvar asClasses = [];\n\t\t\tfor (i = 0; i < iColumns; i++)\n\t\t\t{\n\t\t\t\tasClasses.push(\"\");\n\t\t\t}\n\t\t\tfor (i = 0, iClass = 1; i < aaSort.length; i++)\n\t\t\t{\n\t\t\t\tiTargetCol = parseInt( aaSort[i][0], 10 );\n\t\t\t\tasClasses[iTargetCol] = sClass + iClass;\n\t\t\t\t\n\t\t\t\tif ( iClass < 3 )\n\t\t\t\t{\n\t\t\t\t\tiClass++;\n\t\t\t\t}\n\t\t\t}\n\t\t\t\n\t\t\t/* Make changes to the classes for each cell as needed */\n\t\t\tvar reClass = new RegExp(sClass + \"[123]\");\n\t\t\tvar sTmpClass, sCurrentClass, sNewClass;\n\t\t\tfor ( i=0, iLen=nTds.length; i<iLen; i++ )\n\t\t\t{\n\t\t\t\t/* Determine which column we're looking at */\n\t\t\t\tiTargetCol = i % iColumns;\n\t\t\t\t\n\t\t\t\t/* What is the full list of classes now */\n\t\t\t\tsCurrentClass = nTds[i].className;\n\t\t\t\t/* What sorting class should be applied? */\n\t\t\t\tsNewClass = asClasses[iTargetCol];\n\t\t\t\t/* What would the new full list be if we did a replacement? */\n\t\t\t\tsTmpClass = sCurrentClass.replace(reClass, sNewClass);\n\t\t\t\t\n\t\t\t\tif ( sTmpClass != sCurrentClass )\n\t\t\t\t{\n\t\t\t\t\t/* We changed something */\n\t\t\t\t\tnTds[i].className = $.trim( sTmpClass );\n\t\t\t\t}\n\t\t\t\telse if ( sNewClass.length > 0 && sCurrentClass.indexOf(sNewClass) == -1 )\n\t\t\t\t{\n\t\t\t\t\t/* We need to add a class */\n\t\t\t\t\tnTds[i].className = sCurrentClass + \" \" + sNewClass;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\t\n\t\n\t\n\t/**\n\t * Save the state of a table in a cookie such that the page can be reloaded\n\t *  @param {object} oSettings dataTables settings object\n\t *  @memberof DataTable#oApi\n\t */\n\tfunction _fnSaveState ( oSettings )\n\t{\n\t\tif ( !oSettings.oFeatures.bStateSave || oSettings.bDestroying )\n\t\t{\n\t\t\treturn;\n\t\t}\n\t\n\t\t/* Store the interesting variables */\n\t\tvar i, iLen, bInfinite=oSettings.oScroll.bInfinite;\n\t\tvar oState = {\n\t\t\t\"iCreate\":      new Date().getTime(),\n\t\t\t\"iStart\":       (bInfinite ? 0 : oSettings._iDisplayStart),\n\t\t\t\"iEnd\":         (bInfinite ? oSettings._iDisplayLength : oSettings._iDisplayEnd),\n\t\t\t\"iLength\":      oSettings._iDisplayLength,\n\t\t\t\"aaSorting\":    $.extend( true, [], oSettings.aaSorting ),\n\t\t\t\"oSearch\":      $.extend( true, {}, oSettings.oPreviousSearch ),\n\t\t\t\"aoSearchCols\": $.extend( true, [], oSettings.aoPreSearchCols ),\n\t\t\t\"abVisCols\":    []\n\t\t};\n\t\n\t\tfor ( i=0, iLen=oSettings.aoColumns.length ; i<iLen ; i++ )\n\t\t{\n\t\t\toState.abVisCols.push( oSettings.aoColumns[i].bVisible );\n\t\t}\n\t\n\t\t_fnCallbackFire( oSettings, \"aoStateSaveParams\", 'stateSaveParams', [oSettings, oState] );\n\t\t\n\t\toSettings.fnStateSave.call( oSettings.oInstance, oSettings, oState );\n\t}\n\t\n\t\n\t/**\n\t * Attempt to load a saved table state from a cookie\n\t *  @param {object} oSettings dataTables settings object\n\t *  @param {object} oInit DataTables init object so we can override settings\n\t *  @memberof DataTable#oApi\n\t */\n\tfunction _fnLoadState ( oSettings, oInit )\n\t{\n\t\tif ( !oSettings.oFeatures.bStateSave )\n\t\t{\n\t\t\treturn;\n\t\t}\n\t\n\t\tvar oData = oSettings.fnStateLoad.call( oSettings.oInstance, oSettings );\n\t\tif ( !oData )\n\t\t{\n\t\t\treturn;\n\t\t}\n\t\t\n\t\t/* Allow custom and plug-in manipulation functions to alter the saved data set and\n\t\t * cancelling of loading by returning false\n\t\t */\n\t\tvar abStateLoad = _fnCallbackFire( oSettings, 'aoStateLoadParams', 'stateLoadParams', [oSettings, oData] );\n\t\tif ( $.inArray( false, abStateLoad ) !== -1 )\n\t\t{\n\t\t\treturn;\n\t\t}\n\t\t\n\t\t/* Store the saved state so it might be accessed at any time */\n\t\toSettings.oLoadedState = $.extend( true, {}, oData );\n\t\t\n\t\t/* Restore key features */\n\t\toSettings._iDisplayStart    = oData.iStart;\n\t\toSettings.iInitDisplayStart = oData.iStart;\n\t\toSettings._iDisplayEnd      = oData.iEnd;\n\t\toSettings._iDisplayLength   = oData.iLength;\n\t\toSettings.aaSorting         = oData.aaSorting.slice();\n\t\toSettings.saved_aaSorting   = oData.aaSorting.slice();\n\t\t\n\t\t/* Search filtering  */\n\t\t$.extend( oSettings.oPreviousSearch, oData.oSearch );\n\t\t$.extend( true, oSettings.aoPreSearchCols, oData.aoSearchCols );\n\t\t\n\t\t/* Column visibility state\n\t\t * Pass back visibility settings to the init handler, but to do not here override\n\t\t * the init object that the user might have passed in\n\t\t */\n\t\toInit.saved_aoColumns = [];\n\t\tfor ( var i=0 ; i<oData.abVisCols.length ; i++ )\n\t\t{\n\t\t\toInit.saved_aoColumns[i] = {};\n\t\t\toInit.saved_aoColumns[i].bVisible = oData.abVisCols[i];\n\t\t}\n\t\n\t\t_fnCallbackFire( oSettings, 'aoStateLoaded', 'stateLoaded', [oSettings, oData] );\n\t}\n\t\n\t\n\t/**\n\t * Create a new cookie with a value to store the state of a table\n\t *  @param {string} sName name of the cookie to create\n\t *  @param {string} sValue the value the cookie should take\n\t *  @param {int} iSecs duration of the cookie\n\t *  @param {string} sBaseName sName is made up of the base + file name - this is the base\n\t *  @param {function} fnCallback User definable function to modify the cookie\n\t *  @memberof DataTable#oApi\n\t */\n\tfunction _fnCreateCookie ( sName, sValue, iSecs, sBaseName, fnCallback )\n\t{\n\t\tvar date = new Date();\n\t\tdate.setTime( date.getTime()+(iSecs*1000) );\n\t\t\n\t\t/* \n\t\t * Shocking but true - it would appear IE has major issues with having the path not having\n\t\t * a trailing slash on it. We need the cookie to be available based on the path, so we\n\t\t * have to append the file name to the cookie name. Appalling. Thanks to vex for adding the\n\t\t * patch to use at least some of the path\n\t\t */\n\t\tvar aParts = window.location.pathname.split('/');\n\t\tvar sNameFile = sName + '_' + aParts.pop().replace(/[\\/:]/g,\"\").toLowerCase();\n\t\tvar sFullCookie, oData;\n\t\t\n\t\tif ( fnCallback !== null )\n\t\t{\n\t\t\toData = (typeof $.parseJSON === 'function') ? \n\t\t\t\t$.parseJSON( sValue ) : eval( '('+sValue+')' );\n\t\t\tsFullCookie = fnCallback( sNameFile, oData, date.toGMTString(),\n\t\t\t\taParts.join('/')+\"/\" );\n\t\t}\n\t\telse\n\t\t{\n\t\t\tsFullCookie = sNameFile + \"=\" + encodeURIComponent(sValue) +\n\t\t\t\t\"; expires=\" + date.toGMTString() +\"; path=\" + aParts.join('/')+\"/\";\n\t\t}\n\t\t\n\t\t/* Are we going to go over the cookie limit of 4KiB? If so, try to delete a cookies\n\t\t * belonging to DataTables.\n\t\t */\n\t\tvar\n\t\t\taCookies =document.cookie.split(';'),\n\t\t\tiNewCookieLen = sFullCookie.split(';')[0].length,\n\t\t\taOldCookies = [];\n\t\t\n\t\tif ( iNewCookieLen+document.cookie.length+10 > 4096 ) /* Magic 10 for padding */\n\t\t{\n\t\t\tfor ( var i=0, iLen=aCookies.length ; i<iLen ; i++ )\n\t\t\t{\n\t\t\t\tif ( aCookies[i].indexOf( sBaseName ) != -1 )\n\t\t\t\t{\n\t\t\t\t\t/* It's a DataTables cookie, so eval it and check the time stamp */\n\t\t\t\t\tvar aSplitCookie = aCookies[i].split('=');\n\t\t\t\t\ttry {\n\t\t\t\t\t\toData = eval( '('+decodeURIComponent(aSplitCookie[1])+')' );\n\t\n\t\t\t\t\t\tif ( oData && oData.iCreate )\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\taOldCookies.push( {\n\t\t\t\t\t\t\t\t\"name\": aSplitCookie[0],\n\t\t\t\t\t\t\t\t\"time\": oData.iCreate\n\t\t\t\t\t\t\t} );\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch( e ) {}\n\t\t\t\t}\n\t\t\t}\n\t\n\t\t\t// Make sure we delete the oldest ones first\n\t\t\taOldCookies.sort( function (a, b) {\n\t\t\t\treturn b.time - a.time;\n\t\t\t} );\n\t\n\t\t\t// Eliminate as many old DataTables cookies as we need to\n\t\t\twhile ( iNewCookieLen + document.cookie.length + 10 > 4096 ) {\n\t\t\t\tif ( aOldCookies.length === 0 ) {\n\t\t\t\t\t// Deleted all DT cookies and still not enough space. Can't state save\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\tvar old = aOldCookies.pop();\n\t\t\t\tdocument.cookie = old.name+\"=; expires=Thu, 01-Jan-1970 00:00:01 GMT; path=\"+\n\t\t\t\t\taParts.join('/') + \"/\";\n\t\t\t}\n\t\t}\n\t\t\n\t\tdocument.cookie = sFullCookie;\n\t}\n\t\n\t\n\t/**\n\t * Read an old cookie to get a cookie with an old table state\n\t *  @param {string} sName name of the cookie to read\n\t *  @returns {string} contents of the cookie - or null if no cookie with that name found\n\t *  @memberof DataTable#oApi\n\t */\n\tfunction _fnReadCookie ( sName )\n\t{\n\t\tvar\n\t\t\taParts = window.location.pathname.split('/'),\n\t\t\tsNameEQ = sName + '_' + aParts[aParts.length-1].replace(/[\\/:]/g,\"\").toLowerCase() + '=',\n\t\t \tsCookieContents = document.cookie.split(';');\n\t\t\n\t\tfor( var i=0 ; i<sCookieContents.length ; i++ )\n\t\t{\n\t\t\tvar c = sCookieContents[i];\n\t\t\t\n\t\t\twhile (c.charAt(0)==' ')\n\t\t\t{\n\t\t\t\tc = c.substring(1,c.length);\n\t\t\t}\n\t\t\t\n\t\t\tif (c.indexOf(sNameEQ) === 0)\n\t\t\t{\n\t\t\t\treturn decodeURIComponent( c.substring(sNameEQ.length,c.length) );\n\t\t\t}\n\t\t}\n\t\treturn null;\n\t}\n\t\n\t\n\t/**\n\t * Return the settings object for a particular table\n\t *  @param {node} nTable table we are using as a dataTable\n\t *  @returns {object} Settings object - or null if not found\n\t *  @memberof DataTable#oApi\n\t */\n\tfunction _fnSettingsFromNode ( nTable )\n\t{\n\t\tfor ( var i=0 ; i<DataTable.settings.length ; i++ )\n\t\t{\n\t\t\tif ( DataTable.settings[i].nTable === nTable )\n\t\t\t{\n\t\t\t\treturn DataTable.settings[i];\n\t\t\t}\n\t\t}\n\t\t\n\t\treturn null;\n\t}\n\t\n\t\n\t/**\n\t * Return an array with the TR nodes for the table\n\t *  @param {object} oSettings dataTables settings object\n\t *  @returns {array} TR array\n\t *  @memberof DataTable#oApi\n\t */\n\tfunction _fnGetTrNodes ( oSettings )\n\t{\n\t\tvar aNodes = [];\n\t\tvar aoData = oSettings.aoData;\n\t\tfor ( var i=0, iLen=aoData.length ; i<iLen ; i++ )\n\t\t{\n\t\t\tif ( aoData[i].nTr !== null )\n\t\t\t{\n\t\t\t\taNodes.push( aoData[i].nTr );\n\t\t\t}\n\t\t}\n\t\treturn aNodes;\n\t}\n\t\n\t\n\t/**\n\t * Return an flat array with all TD nodes for the table, or row\n\t *  @param {object} oSettings dataTables settings object\n\t *  @param {int} [iIndividualRow] aoData index to get the nodes for - optional \n\t *    if not given then the return array will contain all nodes for the table\n\t *  @returns {array} TD array\n\t *  @memberof DataTable#oApi\n\t */\n\tfunction _fnGetTdNodes ( oSettings, iIndividualRow )\n\t{\n\t\tvar anReturn = [];\n\t\tvar iCorrector;\n\t\tvar anTds, nTd;\n\t\tvar iRow, iRows=oSettings.aoData.length,\n\t\t\tiColumn, iColumns, oData, sNodeName, iStart=0, iEnd=iRows;\n\t\t\n\t\t/* Allow the collection to be limited to just one row */\n\t\tif ( iIndividualRow !== undefined )\n\t\t{\n\t\t\tiStart = iIndividualRow;\n\t\t\tiEnd = iIndividualRow+1;\n\t\t}\n\t\n\t\tfor ( iRow=iStart ; iRow<iEnd ; iRow++ )\n\t\t{\n\t\t\toData = oSettings.aoData[iRow];\n\t\t\tif ( oData.nTr !== null )\n\t\t\t{\n\t\t\t\t/* get the TD child nodes - taking into account text etc nodes */\n\t\t\t\tanTds = [];\n\t\t\t\tnTd = oData.nTr.firstChild;\n\t\t\t\twhile ( nTd )\n\t\t\t\t{\n\t\t\t\t\tsNodeName = nTd.nodeName.toLowerCase();\n\t\t\t\t\tif ( sNodeName == 'td' || sNodeName == 'th' )\n\t\t\t\t\t{\n\t\t\t\t\t\tanTds.push( nTd );\n\t\t\t\t\t}\n\t\t\t\t\tnTd = nTd.nextSibling;\n\t\t\t\t}\n\t\n\t\t\t\tiCorrector = 0;\n\t\t\t\tfor ( iColumn=0, iColumns=oSettings.aoColumns.length ; iColumn<iColumns ; iColumn++ )\n\t\t\t\t{\n\t\t\t\t\tif ( oSettings.aoColumns[iColumn].bVisible )\n\t\t\t\t\t{\n\t\t\t\t\t\tanReturn.push( anTds[iColumn-iCorrector] );\n\t\t\t\t\t}\n\t\t\t\t\telse\n\t\t\t\t\t{\n\t\t\t\t\t\tanReturn.push( oData._anHidden[iColumn] );\n\t\t\t\t\t\tiCorrector++;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\n\t\treturn anReturn;\n\t}\n\t\n\t\n\t/**\n\t * Log an error message\n\t *  @param {object} oSettings dataTables settings object\n\t *  @param {int} iLevel log error messages, or display them to the user\n\t *  @param {string} sMesg error message\n\t *  @memberof DataTable#oApi\n\t */\n\tfunction _fnLog( oSettings, iLevel, sMesg )\n\t{\n\t\tvar sAlert = (oSettings===null) ?\n\t\t\t\"DataTables warning: \"+sMesg :\n\t\t\t\"DataTables warning (table id = '\"+oSettings.sTableId+\"'): \"+sMesg;\n\t\t\n\t\tif ( iLevel === 0 )\n\t\t{\n\t\t\tif ( DataTable.ext.sErrMode == 'alert' )\n\t\t\t{\n\t\t\t\talert( sAlert );\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tthrow new Error(sAlert);\n\t\t\t}\n\t\t\treturn;\n\t\t}\n\t\telse if ( window.console && console.log )\n\t\t{\n\t\t\tconsole.log( sAlert );\n\t\t}\n\t}\n\t\n\t\n\t/**\n\t * See if a property is defined on one object, if so assign it to the other object\n\t *  @param {object} oRet target object\n\t *  @param {object} oSrc source object\n\t *  @param {string} sName property\n\t *  @param {string} [sMappedName] name to map too - optional, sName used if not given\n\t *  @memberof DataTable#oApi\n\t */\n\tfunction _fnMap( oRet, oSrc, sName, sMappedName )\n\t{\n\t\tif ( sMappedName === undefined )\n\t\t{\n\t\t\tsMappedName = sName;\n\t\t}\n\t\tif ( oSrc[sName] !== undefined )\n\t\t{\n\t\t\toRet[sMappedName] = oSrc[sName];\n\t\t}\n\t}\n\t\n\t\n\t/**\n\t * Extend objects - very similar to jQuery.extend, but deep copy objects, and shallow\n\t * copy arrays. The reason we need to do this, is that we don't want to deep copy array\n\t * init values (such as aaSorting) since the dev wouldn't be able to override them, but\n\t * we do want to deep copy arrays.\n\t *  @param {object} oOut Object to extend\n\t *  @param {object} oExtender Object from which the properties will be applied to oOut\n\t *  @returns {object} oOut Reference, just for convenience - oOut === the return.\n\t *  @memberof DataTable#oApi\n\t *  @todo This doesn't take account of arrays inside the deep copied objects.\n\t */\n\tfunction _fnExtend( oOut, oExtender )\n\t{\n\t\tvar val;\n\t\t\n\t\tfor ( var prop in oExtender )\n\t\t{\n\t\t\tif ( oExtender.hasOwnProperty(prop) )\n\t\t\t{\n\t\t\t\tval = oExtender[prop];\n\t\n\t\t\t\tif ( typeof oInit[prop] === 'object' && val !== null && $.isArray(val) === false )\n\t\t\t\t{\n\t\t\t\t\t$.extend( true, oOut[prop], val );\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\toOut[prop] = val;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\n\t\treturn oOut;\n\t}\n\t\n\t\n\t/**\n\t * Bind an event handers to allow a click or return key to activate the callback.\n\t * This is good for accessibility since a return on the keyboard will have the\n\t * same effect as a click, if the element has focus.\n\t *  @param {element} n Element to bind the action to\n\t *  @param {object} oData Data object to pass to the triggered function\n\t *  @param {function} fn Callback function for when the event is triggered\n\t *  @memberof DataTable#oApi\n\t */\n\tfunction _fnBindAction( n, oData, fn )\n\t{\n\t\t$(n)\n\t\t\t.bind( 'click.DT', oData, function (e) {\n\t\t\t\t\tn.blur(); // Remove focus outline for mouse users\n\t\t\t\t\tfn(e);\n\t\t\t\t} )\n\t\t\t.bind( 'keypress.DT', oData, function (e){\n\t\t\t\tif ( e.which === 13 ) {\n\t\t\t\t\tfn(e);\n\t\t\t\t} } )\n\t\t\t.bind( 'selectstart.DT', function () {\n\t\t\t\t/* Take the brutal approach to cancelling text selection */\n\t\t\t\treturn false;\n\t\t\t\t} );\n\t}\n\t\n\t\n\t/**\n\t * Register a callback function. Easily allows a callback function to be added to\n\t * an array store of callback functions that can then all be called together.\n\t *  @param {object} oSettings dataTables settings object\n\t *  @param {string} sStore Name of the array storage for the callbacks in oSettings\n\t *  @param {function} fn Function to be called back\n\t *  @param {string} sName Identifying name for the callback (i.e. a label)\n\t *  @memberof DataTable#oApi\n\t */\n\tfunction _fnCallbackReg( oSettings, sStore, fn, sName )\n\t{\n\t\tif ( fn )\n\t\t{\n\t\t\toSettings[sStore].push( {\n\t\t\t\t\"fn\": fn,\n\t\t\t\t\"sName\": sName\n\t\t\t} );\n\t\t}\n\t}\n\t\n\t\n\t/**\n\t * Fire callback functions and trigger events. Note that the loop over the callback\n\t * array store is done backwards! Further note that you do not want to fire off triggers\n\t * in time sensitive applications (for example cell creation) as its slow.\n\t *  @param {object} oSettings dataTables settings object\n\t *  @param {string} sStore Name of the array storage for the callbacks in oSettings\n\t *  @param {string} sTrigger Name of the jQuery custom event to trigger. If null no trigger\n\t *    is fired\n\t *  @param {array} aArgs Array of arguments to pass to the callback function / trigger\n\t *  @memberof DataTable#oApi\n\t */\n\tfunction _fnCallbackFire( oSettings, sStore, sTrigger, aArgs )\n\t{\n\t\tvar aoStore = oSettings[sStore];\n\t\tvar aRet =[];\n\t\n\t\tfor ( var i=aoStore.length-1 ; i>=0 ; i-- )\n\t\t{\n\t\t\taRet.push( aoStore[i].fn.apply( oSettings.oInstance, aArgs ) );\n\t\t}\n\t\n\t\tif ( sTrigger !== null )\n\t\t{\n\t\t\t$(oSettings.oInstance).trigger(sTrigger, aArgs);\n\t\t}\n\t\n\t\treturn aRet;\n\t}\n\t\n\t\n\t/**\n\t * JSON stringify. If JSON.stringify it provided by the browser, json2.js or any other\n\t * library, then we use that as it is fast, safe and accurate. If the function isn't \n\t * available then we need to built it ourselves - the inspiration for this function comes\n\t * from Craig Buckler ( http://www.sitepoint.com/javascript-json-serialization/ ). It is\n\t * not perfect and absolutely should not be used as a replacement to json2.js - but it does\n\t * do what we need, without requiring a dependency for DataTables.\n\t *  @param {object} o JSON object to be converted\n\t *  @returns {string} JSON string\n\t *  @memberof DataTable#oApi\n\t */\n\tvar _fnJsonString = (window.JSON) ? JSON.stringify : function( o )\n\t{\n\t\t/* Not an object or array */\n\t\tvar sType = typeof o;\n\t\tif (sType !== \"object\" || o === null)\n\t\t{\n\t\t\t// simple data type\n\t\t\tif (sType === \"string\")\n\t\t\t{\n\t\t\t\to = '\"'+o+'\"';\n\t\t\t}\n\t\t\treturn o+\"\";\n\t\t}\n\t\n\t\t/* If object or array, need to recurse over it */\n\t\tvar\n\t\t\tsProp, mValue,\n\t\t\tjson = [],\n\t\t\tbArr = $.isArray(o);\n\t\t\n\t\tfor (sProp in o)\n\t\t{\n\t\t\tmValue = o[sProp];\n\t\t\tsType = typeof mValue;\n\t\n\t\t\tif (sType === \"string\")\n\t\t\t{\n\t\t\t\tmValue = '\"'+mValue+'\"';\n\t\t\t}\n\t\t\telse if (sType === \"object\" && mValue !== null)\n\t\t\t{\n\t\t\t\tmValue = _fnJsonString(mValue);\n\t\t\t}\n\t\n\t\t\tjson.push((bArr ? \"\" : '\"'+sProp+'\":') + mValue);\n\t\t}\n\t\n\t\treturn (bArr ? \"[\" : \"{\") + json + (bArr ? \"]\" : \"}\");\n\t};\n\t\n\t\n\t/**\n\t * From some browsers (specifically IE6/7) we need special handling to work around browser\n\t * bugs - this function is used to detect when these workarounds are needed.\n\t *  @param {object} oSettings dataTables settings object\n\t *  @memberof DataTable#oApi\n\t */\n\tfunction _fnBrowserDetect( oSettings )\n\t{\n\t\t/* IE6/7 will oversize a width 100% element inside a scrolling element, to include the\n\t\t * width of the scrollbar, while other browsers ensure the inner element is contained\n\t\t * without forcing scrolling\n\t\t */\n\t\tvar n = $(\n\t\t\t'<div style=\"position:absolute; top:0; left:0; height:1px; width:1px; overflow:hidden\">'+\n\t\t\t\t'<div style=\"position:absolute; top:1px; left:1px; width:100px; overflow:scroll;\">'+\n\t\t\t\t\t'<div id=\"DT_BrowserTest\" style=\"width:100%; height:10px;\"></div>'+\n\t\t\t\t'</div>'+\n\t\t\t'</div>')[0];\n\t\n\t\tdocument.body.appendChild( n );\n\t\toSettings.oBrowser.bScrollOversize = $('#DT_BrowserTest', n)[0].offsetWidth === 100 ? true : false;\n\t\tdocument.body.removeChild( n );\n\t}\n\t\n\n\t/**\n\t * Perform a jQuery selector action on the table's TR elements (from the tbody) and\n\t * return the resulting jQuery object.\n\t *  @param {string|node|jQuery} sSelector jQuery selector or node collection to act on\n\t *  @param {object} [oOpts] Optional parameters for modifying the rows to be included\n\t *  @param {string} [oOpts.filter=none] Select TR elements that meet the current filter\n\t *    criterion (\"applied\") or all TR elements (i.e. no filter).\n\t *  @param {string} [oOpts.order=current] Order of the TR elements in the processed array.\n\t *    Can be either 'current', whereby the current sorting of the table is used, or\n\t *    'original' whereby the original order the data was read into the table is used.\n\t *  @param {string} [oOpts.page=all] Limit the selection to the currently displayed page\n\t *    (\"current\") or not (\"all\"). If 'current' is given, then order is assumed to be \n\t *    'current' and filter is 'applied', regardless of what they might be given as.\n\t *  @returns {object} jQuery object, filtered by the given selector.\n\t *  @dtopt API\n\t *\n\t *  @example\n\t *    $(document).ready(function() {\n\t *      var oTable = $('#example').dataTable();\n\t *\n\t *      // Highlight every second row\n\t *      oTable.$('tr:odd').css('backgroundColor', 'blue');\n\t *    } );\n\t *\n\t *  @example\n\t *    $(document).ready(function() {\n\t *      var oTable = $('#example').dataTable();\n\t *\n\t *      // Filter to rows with 'Webkit' in them, add a background colour and then\n\t *      // remove the filter, thus highlighting the 'Webkit' rows only.\n\t *      oTable.fnFilter('Webkit');\n\t *      oTable.$('tr', {\"filter\": \"applied\"}).css('backgroundColor', 'blue');\n\t *      oTable.fnFilter('');\n\t *    } );\n\t */\n\tthis.$ = function ( sSelector, oOpts )\n\t{\n\t\tvar i, iLen, a = [], tr;\n\t\tvar oSettings = _fnSettingsFromNode( this[DataTable.ext.iApiIndex] );\n\t\tvar aoData = oSettings.aoData;\n\t\tvar aiDisplay = oSettings.aiDisplay;\n\t\tvar aiDisplayMaster = oSettings.aiDisplayMaster;\n\t\n\t\tif ( !oOpts )\n\t\t{\n\t\t\toOpts = {};\n\t\t}\n\t\n\t\toOpts = $.extend( {}, {\n\t\t\t\"filter\": \"none\", // applied\n\t\t\t\"order\": \"current\", // \"original\"\n\t\t\t\"page\": \"all\" // current\n\t\t}, oOpts );\n\t\n\t\t// Current page implies that order=current and fitler=applied, since it is fairly\n\t\t// senseless otherwise\n\t\tif ( oOpts.page == 'current' )\n\t\t{\n\t\t\tfor ( i=oSettings._iDisplayStart, iLen=oSettings.fnDisplayEnd() ; i<iLen ; i++ )\n\t\t\t{\n\t\t\t\ttr = aoData[ aiDisplay[i] ].nTr;\n\t\t\t\tif ( tr )\n\t\t\t\t{\n\t\t\t\t\ta.push( tr );\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\telse if ( oOpts.order == \"current\" && oOpts.filter == \"none\" )\n\t\t{\n\t\t\tfor ( i=0, iLen=aiDisplayMaster.length ; i<iLen ; i++ )\n\t\t\t{\n\t\t\t\ttr = aoData[ aiDisplayMaster[i] ].nTr;\n\t\t\t\tif ( tr )\n\t\t\t\t{\n\t\t\t\t\ta.push( tr );\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\telse if ( oOpts.order == \"current\" && oOpts.filter == \"applied\" )\n\t\t{\n\t\t\tfor ( i=0, iLen=aiDisplay.length ; i<iLen ; i++ )\n\t\t\t{\n\t\t\t\ttr = aoData[ aiDisplay[i] ].nTr;\n\t\t\t\tif ( tr )\n\t\t\t\t{\n\t\t\t\t\ta.push( tr );\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\telse if ( oOpts.order == \"original\" && oOpts.filter == \"none\" )\n\t\t{\n\t\t\tfor ( i=0, iLen=aoData.length ; i<iLen ; i++ )\n\t\t\t{\n\t\t\t\ttr = aoData[ i ].nTr ;\n\t\t\t\tif ( tr )\n\t\t\t\t{\n\t\t\t\t\ta.push( tr );\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\telse if ( oOpts.order == \"original\" && oOpts.filter == \"applied\" )\n\t\t{\n\t\t\tfor ( i=0, iLen=aoData.length ; i<iLen ; i++ )\n\t\t\t{\n\t\t\t\ttr = aoData[ i ].nTr;\n\t\t\t\tif ( $.inArray( i, aiDisplay ) !== -1 && tr )\n\t\t\t\t{\n\t\t\t\t\ta.push( tr );\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\telse\n\t\t{\n\t\t\t_fnLog( oSettings, 1, \"Unknown selection options\" );\n\t\t}\n\t\n\t\t/* We need to filter on the TR elements and also 'find' in their descendants\n\t\t * to make the selector act like it would in a full table - so we need\n\t\t * to build both results and then combine them together\n\t\t */\n\t\tvar jqA = $(a);\n\t\tvar jqTRs = jqA.filter( sSelector );\n\t\tvar jqDescendants = jqA.find( sSelector );\n\t\n\t\treturn $( [].concat($.makeArray(jqTRs), $.makeArray(jqDescendants)) );\n\t};\n\t\n\t\n\t/**\n\t * Almost identical to $ in operation, but in this case returns the data for the matched\n\t * rows - as such, the jQuery selector used should match TR row nodes or TD/TH cell nodes\n\t * rather than any descendants, so the data can be obtained for the row/cell. If matching\n\t * rows are found, the data returned is the original data array/object that was used to  \n\t * create the row (or a generated array if from a DOM source).\n\t *\n\t * This method is often useful in-combination with $ where both functions are given the\n\t * same parameters and the array indexes will match identically.\n\t *  @param {string|node|jQuery} sSelector jQuery selector or node collection to act on\n\t *  @param {object} [oOpts] Optional parameters for modifying the rows to be included\n\t *  @param {string} [oOpts.filter=none] Select elements that meet the current filter\n\t *    criterion (\"applied\") or all elements (i.e. no filter).\n\t *  @param {string} [oOpts.order=current] Order of the data in the processed array.\n\t *    Can be either 'current', whereby the current sorting of the table is used, or\n\t *    'original' whereby the original order the data was read into the table is used.\n\t *  @param {string} [oOpts.page=all] Limit the selection to the currently displayed page\n\t *    (\"current\") or not (\"all\"). If 'current' is given, then order is assumed to be \n\t *    'current' and filter is 'applied', regardless of what they might be given as.\n\t *  @returns {array} Data for the matched elements. If any elements, as a result of the\n\t *    selector, were not TR, TD or TH elements in the DataTable, they will have a null \n\t *    entry in the array.\n\t *  @dtopt API\n\t *\n\t *  @example\n\t *    $(document).ready(function() {\n\t *      var oTable = $('#example').dataTable();\n\t *\n\t *      // Get the data from the first row in the table\n\t *      var data = oTable._('tr:first');\n\t *\n\t *      // Do something useful with the data\n\t *      alert( \"First cell is: \"+data[0] );\n\t *    } );\n\t *\n\t *  @example\n\t *    $(document).ready(function() {\n\t *      var oTable = $('#example').dataTable();\n\t *\n\t *      // Filter to 'Webkit' and get all data for \n\t *      oTable.fnFilter('Webkit');\n\t *      var data = oTable._('tr', {\"filter\": \"applied\"});\n\t *      \n\t *      // Do something with the data\n\t *      alert( data.length+\" rows matched the filter\" );\n\t *    } );\n\t */\n\tthis._ = function ( sSelector, oOpts )\n\t{\n\t\tvar aOut = [];\n\t\tvar i, iLen, iIndex;\n\t\tvar aTrs = this.$( sSelector, oOpts );\n\t\n\t\tfor ( i=0, iLen=aTrs.length ; i<iLen ; i++ )\n\t\t{\n\t\t\taOut.push( this.fnGetData(aTrs[i]) );\n\t\t}\n\t\n\t\treturn aOut;\n\t};\n\t\n\t\n\t/**\n\t * Add a single new row or multiple rows of data to the table. Please note\n\t * that this is suitable for client-side processing only - if you are using \n\t * server-side processing (i.e. \"bServerSide\": true), then to add data, you\n\t * must add it to the data source, i.e. the server-side, through an Ajax call.\n\t *  @param {array|object} mData The data to be added to the table. This can be:\n\t *    <ul>\n\t *      <li>1D array of data - add a single row with the data provided</li>\n\t *      <li>2D array of arrays - add multiple rows in a single call</li>\n\t *      <li>object - data object when using <i>mData</i></li>\n\t *      <li>array of objects - multiple data objects when using <i>mData</i></li>\n\t *    </ul>\n\t *  @param {bool} [bRedraw=true] redraw the table or not\n\t *  @returns {array} An array of integers, representing the list of indexes in \n\t *    <i>aoData</i> ({@link DataTable.models.oSettings}) that have been added to \n\t *    the table.\n\t *  @dtopt API\n\t *\n\t *  @example\n\t *    // Global var for counter\n\t *    var giCount = 2;\n\t *    \n\t *    $(document).ready(function() {\n\t *      $('#example').dataTable();\n\t *    } );\n\t *    \n\t *    function fnClickAddRow() {\n\t *      $('#example').dataTable().fnAddData( [\n\t *        giCount+\".1\",\n\t *        giCount+\".2\",\n\t *        giCount+\".3\",\n\t *        giCount+\".4\" ]\n\t *      );\n\t *        \n\t *      giCount++;\n\t *    }\n\t */\n\tthis.fnAddData = function( mData, bRedraw )\n\t{\n\t\tif ( mData.length === 0 )\n\t\t{\n\t\t\treturn [];\n\t\t}\n\t\t\n\t\tvar aiReturn = [];\n\t\tvar iTest;\n\t\t\n\t\t/* Find settings from table node */\n\t\tvar oSettings = _fnSettingsFromNode( this[DataTable.ext.iApiIndex] );\n\t\t\n\t\t/* Check if we want to add multiple rows or not */\n\t\tif ( typeof mData[0] === \"object\" && mData[0] !== null )\n\t\t{\n\t\t\tfor ( var i=0 ; i<mData.length ; i++ )\n\t\t\t{\n\t\t\t\tiTest = _fnAddData( oSettings, mData[i] );\n\t\t\t\tif ( iTest == -1 )\n\t\t\t\t{\n\t\t\t\t\treturn aiReturn;\n\t\t\t\t}\n\t\t\t\taiReturn.push( iTest );\n\t\t\t}\n\t\t}\n\t\telse\n\t\t{\n\t\t\tiTest = _fnAddData( oSettings, mData );\n\t\t\tif ( iTest == -1 )\n\t\t\t{\n\t\t\t\treturn aiReturn;\n\t\t\t}\n\t\t\taiReturn.push( iTest );\n\t\t}\n\t\t\n\t\toSettings.aiDisplay = oSettings.aiDisplayMaster.slice();\n\t\t\n\t\tif ( bRedraw === undefined || bRedraw )\n\t\t{\n\t\t\t_fnReDraw( oSettings );\n\t\t}\n\t\treturn aiReturn;\n\t};\n\t\n\t\n\t/**\n\t * This function will make DataTables recalculate the column sizes, based on the data \n\t * contained in the table and the sizes applied to the columns (in the DOM, CSS or \n\t * through the sWidth parameter). This can be useful when the width of the table's \n\t * parent element changes (for example a window resize).\n\t *  @param {boolean} [bRedraw=true] Redraw the table or not, you will typically want to\n\t *  @dtopt API\n\t *\n\t *  @example\n\t *    $(document).ready(function() {\n\t *      var oTable = $('#example').dataTable( {\n\t *        \"sScrollY\": \"200px\",\n\t *        \"bPaginate\": false\n\t *      } );\n\t *      \n\t *      $(window).bind('resize', function () {\n\t *        oTable.fnAdjustColumnSizing();\n\t *      } );\n\t *    } );\n\t */\n\tthis.fnAdjustColumnSizing = function ( bRedraw )\n\t{\n\t\tvar oSettings = _fnSettingsFromNode(this[DataTable.ext.iApiIndex]);\n\t\t_fnAdjustColumnSizing( oSettings );\n\t\t\n\t\tif ( bRedraw === undefined || bRedraw )\n\t\t{\n\t\t\tthis.fnDraw( false );\n\t\t}\n\t\telse if ( oSettings.oScroll.sX !== \"\" || oSettings.oScroll.sY !== \"\" )\n\t\t{\n\t\t\t/* If not redrawing, but scrolling, we want to apply the new column sizes anyway */\n\t\t\tthis.oApi._fnScrollDraw(oSettings);\n\t\t}\n\t};\n\t\n\t\n\t/**\n\t * Quickly and simply clear a table\n\t *  @param {bool} [bRedraw=true] redraw the table or not\n\t *  @dtopt API\n\t *\n\t *  @example\n\t *    $(document).ready(function() {\n\t *      var oTable = $('#example').dataTable();\n\t *      \n\t *      // Immediately 'nuke' the current rows (perhaps waiting for an Ajax callback...)\n\t *      oTable.fnClearTable();\n\t *    } );\n\t */\n\tthis.fnClearTable = function( bRedraw )\n\t{\n\t\t/* Find settings from table node */\n\t\tvar oSettings = _fnSettingsFromNode( this[DataTable.ext.iApiIndex] );\n\t\t_fnClearTable( oSettings );\n\t\t\n\t\tif ( bRedraw === undefined || bRedraw )\n\t\t{\n\t\t\t_fnDraw( oSettings );\n\t\t}\n\t};\n\t\n\t\n\t/**\n\t * The exact opposite of 'opening' a row, this function will close any rows which \n\t * are currently 'open'.\n\t *  @param {node} nTr the table row to 'close'\n\t *  @returns {int} 0 on success, or 1 if failed (can't find the row)\n\t *  @dtopt API\n\t *\n\t *  @example\n\t *    $(document).ready(function() {\n\t *      var oTable;\n\t *      \n\t *      // 'open' an information row when a row is clicked on\n\t *      $('#example tbody tr').click( function () {\n\t *        if ( oTable.fnIsOpen(this) ) {\n\t *          oTable.fnClose( this );\n\t *        } else {\n\t *          oTable.fnOpen( this, \"Temporary row opened\", \"info_row\" );\n\t *        }\n\t *      } );\n\t *      \n\t *      oTable = $('#example').dataTable();\n\t *    } );\n\t */\n\tthis.fnClose = function( nTr )\n\t{\n\t\t/* Find settings from table node */\n\t\tvar oSettings = _fnSettingsFromNode( this[DataTable.ext.iApiIndex] );\n\t\t\n\t\tfor ( var i=0 ; i<oSettings.aoOpenRows.length ; i++ )\n\t\t{\n\t\t\tif ( oSettings.aoOpenRows[i].nParent == nTr )\n\t\t\t{\n\t\t\t\tvar nTrParent = oSettings.aoOpenRows[i].nTr.parentNode;\n\t\t\t\tif ( nTrParent )\n\t\t\t\t{\n\t\t\t\t\t/* Remove it if it is currently on display */\n\t\t\t\t\tnTrParent.removeChild( oSettings.aoOpenRows[i].nTr );\n\t\t\t\t}\n\t\t\t\toSettings.aoOpenRows.splice( i, 1 );\n\t\t\t\treturn 0;\n\t\t\t}\n\t\t}\n\t\treturn 1;\n\t};\n\t\n\t\n\t/**\n\t * Remove a row for the table\n\t *  @param {mixed} mTarget The index of the row from aoData to be deleted, or\n\t *    the TR element you want to delete\n\t *  @param {function|null} [fnCallBack] Callback function\n\t *  @param {bool} [bRedraw=true] Redraw the table or not\n\t *  @returns {array} The row that was deleted\n\t *  @dtopt API\n\t *\n\t *  @example\n\t *    $(document).ready(function() {\n\t *      var oTable = $('#example').dataTable();\n\t *      \n\t *      // Immediately remove the first row\n\t *      oTable.fnDeleteRow( 0 );\n\t *    } );\n\t */\n\tthis.fnDeleteRow = function( mTarget, fnCallBack, bRedraw )\n\t{\n\t\t/* Find settings from table node */\n\t\tvar oSettings = _fnSettingsFromNode( this[DataTable.ext.iApiIndex] );\n\t\tvar i, iLen, iAODataIndex;\n\t\t\n\t\tiAODataIndex = (typeof mTarget === 'object') ? \n\t\t\t_fnNodeToDataIndex(oSettings, mTarget) : mTarget;\n\t\t\n\t\t/* Return the data array from this row */\n\t\tvar oData = oSettings.aoData.splice( iAODataIndex, 1 );\n\t\n\t\t/* Update the _DT_RowIndex parameter */\n\t\tfor ( i=0, iLen=oSettings.aoData.length ; i<iLen ; i++ )\n\t\t{\n\t\t\tif ( oSettings.aoData[i].nTr !== null )\n\t\t\t{\n\t\t\t\toSettings.aoData[i].nTr._DT_RowIndex = i;\n\t\t\t}\n\t\t}\n\t\t\n\t\t/* Remove the target row from the search array */\n\t\tvar iDisplayIndex = $.inArray( iAODataIndex, oSettings.aiDisplay );\n\t\toSettings.asDataSearch.splice( iDisplayIndex, 1 );\n\t\t\n\t\t/* Delete from the display arrays */\n\t\t_fnDeleteIndex( oSettings.aiDisplayMaster, iAODataIndex );\n\t\t_fnDeleteIndex( oSettings.aiDisplay, iAODataIndex );\n\t\t\n\t\t/* If there is a user callback function - call it */\n\t\tif ( typeof fnCallBack === \"function\" )\n\t\t{\n\t\t\tfnCallBack.call( this, oSettings, oData );\n\t\t}\n\t\t\n\t\t/* Check for an 'overflow' they case for displaying the table */\n\t\tif ( oSettings._iDisplayStart >= oSettings.fnRecordsDisplay() )\n\t\t{\n\t\t\toSettings._iDisplayStart -= oSettings._iDisplayLength;\n\t\t\tif ( oSettings._iDisplayStart < 0 )\n\t\t\t{\n\t\t\t\toSettings._iDisplayStart = 0;\n\t\t\t}\n\t\t}\n\t\t\n\t\tif ( bRedraw === undefined || bRedraw )\n\t\t{\n\t\t\t_fnCalculateEnd( oSettings );\n\t\t\t_fnDraw( oSettings );\n\t\t}\n\t\t\n\t\treturn oData;\n\t};\n\t\n\t\n\t/**\n\t * Restore the table to it's original state in the DOM by removing all of DataTables \n\t * enhancements, alterations to the DOM structure of the table and event listeners.\n\t *  @param {boolean} [bRemove=false] Completely remove the table from the DOM\n\t *  @dtopt API\n\t *\n\t *  @example\n\t *    $(document).ready(function() {\n\t *      // This example is fairly pointless in reality, but shows how fnDestroy can be used\n\t *      var oTable = $('#example').dataTable();\n\t *      oTable.fnDestroy();\n\t *    } );\n\t */\n\tthis.fnDestroy = function ( bRemove )\n\t{\n\t\tvar oSettings = _fnSettingsFromNode( this[DataTable.ext.iApiIndex] );\n\t\tvar nOrig = oSettings.nTableWrapper.parentNode;\n\t\tvar nBody = oSettings.nTBody;\n\t\tvar i, iLen;\n\t\n\t\tbRemove = (bRemove===undefined) ? false : bRemove;\n\t\t\n\t\t/* Flag to note that the table is currently being destroyed - no action should be taken */\n\t\toSettings.bDestroying = true;\n\t\t\n\t\t/* Fire off the destroy callbacks for plug-ins etc */\n\t\t_fnCallbackFire( oSettings, \"aoDestroyCallback\", \"destroy\", [oSettings] );\n\t\n\t\t/* If the table is not being removed, restore the hidden columns */\n\t\tif ( !bRemove )\n\t\t{\n\t\t\tfor ( i=0, iLen=oSettings.aoColumns.length ; i<iLen ; i++ )\n\t\t\t{\n\t\t\t\tif ( oSettings.aoColumns[i].bVisible === false )\n\t\t\t\t{\n\t\t\t\t\tthis.fnSetColumnVis( i, true );\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\t\n\t\t/* Blitz all DT events */\n\t\t$(oSettings.nTableWrapper).find('*').andSelf().unbind('.DT');\n\t\t\n\t\t/* If there is an 'empty' indicator row, remove it */\n\t\t$('tbody>tr>td.'+oSettings.oClasses.sRowEmpty, oSettings.nTable).parent().remove();\n\t\t\n\t\t/* When scrolling we had to break the table up - restore it */\n\t\tif ( oSettings.nTable != oSettings.nTHead.parentNode )\n\t\t{\n\t\t\t$(oSettings.nTable).children('thead').remove();\n\t\t\toSettings.nTable.appendChild( oSettings.nTHead );\n\t\t}\n\t\t\n\t\tif ( oSettings.nTFoot && oSettings.nTable != oSettings.nTFoot.parentNode )\n\t\t{\n\t\t\t$(oSettings.nTable).children('tfoot').remove();\n\t\t\toSettings.nTable.appendChild( oSettings.nTFoot );\n\t\t}\n\t\t\n\t\t/* Remove the DataTables generated nodes, events and classes */\n\t\toSettings.nTable.parentNode.removeChild( oSettings.nTable );\n\t\t$(oSettings.nTableWrapper).remove();\n\t\t\n\t\toSettings.aaSorting = [];\n\t\toSettings.aaSortingFixed = [];\n\t\t_fnSortingClasses( oSettings );\n\t\t\n\t\t$(_fnGetTrNodes( oSettings )).removeClass( oSettings.asStripeClasses.join(' ') );\n\t\t\n\t\t$('th, td', oSettings.nTHead).removeClass( [\n\t\t\toSettings.oClasses.sSortable,\n\t\t\toSettings.oClasses.sSortableAsc,\n\t\t\toSettings.oClasses.sSortableDesc,\n\t\t\toSettings.oClasses.sSortableNone ].join(' ')\n\t\t);\n\t\tif ( oSettings.bJUI )\n\t\t{\n\t\t\t$('th span.'+oSettings.oClasses.sSortIcon\n\t\t\t\t+ ', td span.'+oSettings.oClasses.sSortIcon, oSettings.nTHead).remove();\n\t\n\t\t\t$('th, td', oSettings.nTHead).each( function () {\n\t\t\t\tvar jqWrapper = $('div.'+oSettings.oClasses.sSortJUIWrapper, this);\n\t\t\t\tvar kids = jqWrapper.contents();\n\t\t\t\t$(this).append( kids );\n\t\t\t\tjqWrapper.remove();\n\t\t\t} );\n\t\t}\n\t\t\n\t\t/* Add the TR elements back into the table in their original order */\n\t\tif ( !bRemove && oSettings.nTableReinsertBefore )\n\t\t{\n\t\t\tnOrig.insertBefore( oSettings.nTable, oSettings.nTableReinsertBefore );\n\t\t}\n\t\telse if ( !bRemove )\n\t\t{\n\t\t\tnOrig.appendChild( oSettings.nTable );\n\t\t}\n\t\n\t\tfor ( i=0, iLen=oSettings.aoData.length ; i<iLen ; i++ )\n\t\t{\n\t\t\tif ( oSettings.aoData[i].nTr !== null )\n\t\t\t{\n\t\t\t\tnBody.appendChild( oSettings.aoData[i].nTr );\n\t\t\t}\n\t\t}\n\t\t\n\t\t/* Restore the width of the original table */\n\t\tif ( oSettings.oFeatures.bAutoWidth === true )\n\t\t{\n\t\t  oSettings.nTable.style.width = _fnStringToCss(oSettings.sDestroyWidth);\n\t\t}\n\t\t\n\t\t/* If the were originally stripe classes - then we add them back here. Note\n\t\t * this is not fool proof (for example if not all rows had stripe classes - but\n\t\t * it's a good effort without getting carried away\n\t\t */\n\t\tiLen = oSettings.asDestroyStripes.length;\n\t\tif (iLen)\n\t\t{\n\t\t\tvar anRows = $(nBody).children('tr');\n\t\t\tfor ( i=0 ; i<iLen ; i++ )\n\t\t\t{\n\t\t\t\tanRows.filter(':nth-child(' + iLen + 'n + ' + i + ')').addClass( oSettings.asDestroyStripes[i] );\n\t\t\t}\n\t\t}\n\t\t\n\t\t/* Remove the settings object from the settings array */\n\t\tfor ( i=0, iLen=DataTable.settings.length ; i<iLen ; i++ )\n\t\t{\n\t\t\tif ( DataTable.settings[i] == oSettings )\n\t\t\t{\n\t\t\t\tDataTable.settings.splice( i, 1 );\n\t\t\t}\n\t\t}\n\t\t\n\t\t/* End it all */\n\t\toSettings = null;\n\t\toInit = null;\n\t};\n\t\n\t\n\t/**\n\t * Redraw the table\n\t *  @param {bool} [bComplete=true] Re-filter and resort (if enabled) the table before the draw.\n\t *  @dtopt API\n\t *\n\t *  @example\n\t *    $(document).ready(function() {\n\t *      var oTable = $('#example').dataTable();\n\t *      \n\t *      // Re-draw the table - you wouldn't want to do it here, but it's an example :-)\n\t *      oTable.fnDraw();\n\t *    } );\n\t */\n\tthis.fnDraw = function( bComplete )\n\t{\n\t\tvar oSettings = _fnSettingsFromNode( this[DataTable.ext.iApiIndex] );\n\t\tif ( bComplete === false )\n\t\t{\n\t\t\t_fnCalculateEnd( oSettings );\n\t\t\t_fnDraw( oSettings );\n\t\t}\n\t\telse\n\t\t{\n\t\t\t_fnReDraw( oSettings );\n\t\t}\n\t};\n\t\n\t\n\t/**\n\t * Filter the input based on data\n\t *  @param {string} sInput String to filter the table on\n\t *  @param {int|null} [iColumn] Column to limit filtering to\n\t *  @param {bool} [bRegex=false] Treat as regular expression or not\n\t *  @param {bool} [bSmart=true] Perform smart filtering or not\n\t *  @param {bool} [bShowGlobal=true] Show the input global filter in it's input box(es)\n\t *  @param {bool} [bCaseInsensitive=true] Do case-insensitive matching (true) or not (false)\n\t *  @dtopt API\n\t *\n\t *  @example\n\t *    $(document).ready(function() {\n\t *      var oTable = $('#example').dataTable();\n\t *      \n\t *      // Sometime later - filter...\n\t *      oTable.fnFilter( 'test string' );\n\t *    } );\n\t */\n\tthis.fnFilter = function( sInput, iColumn, bRegex, bSmart, bShowGlobal, bCaseInsensitive )\n\t{\n\t\tvar oSettings = _fnSettingsFromNode( this[DataTable.ext.iApiIndex] );\n\t\t\n\t\tif ( !oSettings.oFeatures.bFilter )\n\t\t{\n\t\t\treturn;\n\t\t}\n\t\t\n\t\tif ( bRegex === undefined || bRegex === null )\n\t\t{\n\t\t\tbRegex = false;\n\t\t}\n\t\t\n\t\tif ( bSmart === undefined || bSmart === null )\n\t\t{\n\t\t\tbSmart = true;\n\t\t}\n\t\t\n\t\tif ( bShowGlobal === undefined || bShowGlobal === null )\n\t\t{\n\t\t\tbShowGlobal = true;\n\t\t}\n\t\t\n\t\tif ( bCaseInsensitive === undefined || bCaseInsensitive === null )\n\t\t{\n\t\t\tbCaseInsensitive = true;\n\t\t}\n\t\t\n\t\tif ( iColumn === undefined || iColumn === null )\n\t\t{\n\t\t\t/* Global filter */\n\t\t\t_fnFilterComplete( oSettings, {\n\t\t\t\t\"sSearch\":sInput+\"\",\n\t\t\t\t\"bRegex\": bRegex,\n\t\t\t\t\"bSmart\": bSmart,\n\t\t\t\t\"bCaseInsensitive\": bCaseInsensitive\n\t\t\t}, 1 );\n\t\t\t\n\t\t\tif ( bShowGlobal && oSettings.aanFeatures.f )\n\t\t\t{\n\t\t\t\tvar n = oSettings.aanFeatures.f;\n\t\t\t\tfor ( var i=0, iLen=n.length ; i<iLen ; i++ )\n\t\t\t\t{\n\t\t\t\t\t// IE9 throws an 'unknown error' if document.activeElement is used\n\t\t\t\t\t// inside an iframe or frame...\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif ( n[i]._DT_Input != document.activeElement )\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t$(n[i]._DT_Input).val( sInput );\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch ( e ) {\n\t\t\t\t\t\t$(n[i]._DT_Input).val( sInput );\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\telse\n\t\t{\n\t\t\t/* Single column filter */\n\t\t\t$.extend( oSettings.aoPreSearchCols[ iColumn ], {\n\t\t\t\t\"sSearch\": sInput+\"\",\n\t\t\t\t\"bRegex\": bRegex,\n\t\t\t\t\"bSmart\": bSmart,\n\t\t\t\t\"bCaseInsensitive\": bCaseInsensitive\n\t\t\t} );\n\t\t\t_fnFilterComplete( oSettings, oSettings.oPreviousSearch, 1 );\n\t\t}\n\t};\n\t\n\t\n\t/**\n\t * Get the data for the whole table, an individual row or an individual cell based on the \n\t * provided parameters.\n\t *  @param {int|node} [mRow] A TR row node, TD/TH cell node or an integer. If given as\n\t *    a TR node then the data source for the whole row will be returned. If given as a\n\t *    TD/TH cell node then iCol will be automatically calculated and the data for the\n\t *    cell returned. If given as an integer, then this is treated as the aoData internal\n\t *    data index for the row (see fnGetPosition) and the data for that row used.\n\t *  @param {int} [iCol] Optional column index that you want the data of.\n\t *  @returns {array|object|string} If mRow is undefined, then the data for all rows is\n\t *    returned. If mRow is defined, just data for that row, and is iCol is\n\t *    defined, only data for the designated cell is returned.\n\t *  @dtopt API\n\t *\n\t *  @example\n\t *    // Row data\n\t *    $(document).ready(function() {\n\t *      oTable = $('#example').dataTable();\n\t *\n\t *      oTable.$('tr').click( function () {\n\t *        var data = oTable.fnGetData( this );\n\t *        // ... do something with the array / object of data for the row\n\t *      } );\n\t *    } );\n\t *\n\t *  @example\n\t *    // Individual cell data\n\t *    $(document).ready(function() {\n\t *      oTable = $('#example').dataTable();\n\t *\n\t *      oTable.$('td').click( function () {\n\t *        var sData = oTable.fnGetData( this );\n\t *        alert( 'The cell clicked on had the value of '+sData );\n\t *      } );\n\t *    } );\n\t */\n\tthis.fnGetData = function( mRow, iCol )\n\t{\n\t\tvar oSettings = _fnSettingsFromNode( this[DataTable.ext.iApiIndex] );\n\t\t\n\t\tif ( mRow !== undefined )\n\t\t{\n\t\t\tvar iRow = mRow;\n\t\t\tif ( typeof mRow === 'object' )\n\t\t\t{\n\t\t\t\tvar sNode = mRow.nodeName.toLowerCase();\n\t\t\t\tif (sNode === \"tr\" )\n\t\t\t\t{\n\t\t\t\t\tiRow = _fnNodeToDataIndex(oSettings, mRow);\n\t\t\t\t}\n\t\t\t\telse if ( sNode === \"td\" )\n\t\t\t\t{\n\t\t\t\t\tiRow = _fnNodeToDataIndex(oSettings, mRow.parentNode);\n\t\t\t\t\tiCol = _fnNodeToColumnIndex( oSettings, iRow, mRow );\n\t\t\t\t}\n\t\t\t}\n\t\n\t\t\tif ( iCol !== undefined )\n\t\t\t{\n\t\t\t\treturn _fnGetCellData( oSettings, iRow, iCol, '' );\n\t\t\t}\n\t\t\treturn (oSettings.aoData[iRow]!==undefined) ?\n\t\t\t\toSettings.aoData[iRow]._aData : null;\n\t\t}\n\t\treturn _fnGetDataMaster( oSettings );\n\t};\n\t\n\t\n\t/**\n\t * Get an array of the TR nodes that are used in the table's body. Note that you will \n\t * typically want to use the '$' API method in preference to this as it is more \n\t * flexible.\n\t *  @param {int} [iRow] Optional row index for the TR element you want\n\t *  @returns {array|node} If iRow is undefined, returns an array of all TR elements\n\t *    in the table's body, or iRow is defined, just the TR element requested.\n\t *  @dtopt API\n\t *\n\t *  @example\n\t *    $(document).ready(function() {\n\t *      var oTable = $('#example').dataTable();\n\t *      \n\t *      // Get the nodes from the table\n\t *      var nNodes = oTable.fnGetNodes( );\n\t *    } );\n\t */\n\tthis.fnGetNodes = function( iRow )\n\t{\n\t\tvar oSettings = _fnSettingsFromNode( this[DataTable.ext.iApiIndex] );\n\t\t\n\t\tif ( iRow !== undefined ) {\n\t\t\treturn (oSettings.aoData[iRow]!==undefined) ?\n\t\t\t\toSettings.aoData[iRow].nTr : null;\n\t\t}\n\t\treturn _fnGetTrNodes( oSettings );\n\t};\n\t\n\t\n\t/**\n\t * Get the array indexes of a particular cell from it's DOM element\n\t * and column index including hidden columns\n\t *  @param {node} nNode this can either be a TR, TD or TH in the table's body\n\t *  @returns {int} If nNode is given as a TR, then a single index is returned, or\n\t *    if given as a cell, an array of [row index, column index (visible), \n\t *    column index (all)] is given.\n\t *  @dtopt API\n\t *\n\t *  @example\n\t *    $(document).ready(function() {\n\t *      $('#example tbody td').click( function () {\n\t *        // Get the position of the current data from the node\n\t *        var aPos = oTable.fnGetPosition( this );\n\t *        \n\t *        // Get the data array for this row\n\t *        var aData = oTable.fnGetData( aPos[0] );\n\t *        \n\t *        // Update the data array and return the value\n\t *        aData[ aPos[1] ] = 'clicked';\n\t *        this.innerHTML = 'clicked';\n\t *      } );\n\t *      \n\t *      // Init DataTables\n\t *      oTable = $('#example').dataTable();\n\t *    } );\n\t */\n\tthis.fnGetPosition = function( nNode )\n\t{\n\t\tvar oSettings = _fnSettingsFromNode( this[DataTable.ext.iApiIndex] );\n\t\tvar sNodeName = nNode.nodeName.toUpperCase();\n\t\t\n\t\tif ( sNodeName == \"TR\" )\n\t\t{\n\t\t\treturn _fnNodeToDataIndex(oSettings, nNode);\n\t\t}\n\t\telse if ( sNodeName == \"TD\" || sNodeName == \"TH\" )\n\t\t{\n\t\t\tvar iDataIndex = _fnNodeToDataIndex( oSettings, nNode.parentNode );\n\t\t\tvar iColumnIndex = _fnNodeToColumnIndex( oSettings, iDataIndex, nNode );\n\t\t\treturn [ iDataIndex, _fnColumnIndexToVisible(oSettings, iColumnIndex ), iColumnIndex ];\n\t\t}\n\t\treturn null;\n\t};\n\t\n\t\n\t/**\n\t * Check to see if a row is 'open' or not.\n\t *  @param {node} nTr the table row to check\n\t *  @returns {boolean} true if the row is currently open, false otherwise\n\t *  @dtopt API\n\t *\n\t *  @example\n\t *    $(document).ready(function() {\n\t *      var oTable;\n\t *      \n\t *      // 'open' an information row when a row is clicked on\n\t *      $('#example tbody tr').click( function () {\n\t *        if ( oTable.fnIsOpen(this) ) {\n\t *          oTable.fnClose( this );\n\t *        } else {\n\t *          oTable.fnOpen( this, \"Temporary row opened\", \"info_row\" );\n\t *        }\n\t *      } );\n\t *      \n\t *      oTable = $('#example').dataTable();\n\t *    } );\n\t */\n\tthis.fnIsOpen = function( nTr )\n\t{\n\t\tvar oSettings = _fnSettingsFromNode( this[DataTable.ext.iApiIndex] );\n\t\tvar aoOpenRows = oSettings.aoOpenRows;\n\t\t\n\t\tfor ( var i=0 ; i<oSettings.aoOpenRows.length ; i++ )\n\t\t{\n\t\t\tif ( oSettings.aoOpenRows[i].nParent == nTr )\n\t\t\t{\n\t\t\t\treturn true;\n\t\t\t}\n\t\t}\n\t\treturn false;\n\t};\n\t\n\t\n\t/**\n\t * This function will place a new row directly after a row which is currently \n\t * on display on the page, with the HTML contents that is passed into the \n\t * function. This can be used, for example, to ask for confirmation that a \n\t * particular record should be deleted.\n\t *  @param {node} nTr The table row to 'open'\n\t *  @param {string|node|jQuery} mHtml The HTML to put into the row\n\t *  @param {string} sClass Class to give the new TD cell\n\t *  @returns {node} The row opened. Note that if the table row passed in as the\n\t *    first parameter, is not found in the table, this method will silently\n\t *    return.\n\t *  @dtopt API\n\t *\n\t *  @example\n\t *    $(document).ready(function() {\n\t *      var oTable;\n\t *      \n\t *      // 'open' an information row when a row is clicked on\n\t *      $('#example tbody tr').click( function () {\n\t *        if ( oTable.fnIsOpen(this) ) {\n\t *          oTable.fnClose( this );\n\t *        } else {\n\t *          oTable.fnOpen( this, \"Temporary row opened\", \"info_row\" );\n\t *        }\n\t *      } );\n\t *      \n\t *      oTable = $('#example').dataTable();\n\t *    } );\n\t */\n\tthis.fnOpen = function( nTr, mHtml, sClass )\n\t{\n\t\t/* Find settings from table node */\n\t\tvar oSettings = _fnSettingsFromNode( this[DataTable.ext.iApiIndex] );\n\t\n\t\t/* Check that the row given is in the table */\n\t\tvar nTableRows = _fnGetTrNodes( oSettings );\n\t\tif ( $.inArray(nTr, nTableRows) === -1 )\n\t\t{\n\t\t\treturn;\n\t\t}\n\t\t\n\t\t/* the old open one if there is one */\n\t\tthis.fnClose( nTr );\n\t\t\n\t\tvar nNewRow = document.createElement(\"tr\");\n\t\tvar nNewCell = document.createElement(\"td\");\n\t\tnNewRow.appendChild( nNewCell );\n\t\tnNewCell.className = sClass;\n\t\tnNewCell.colSpan = _fnVisbleColumns( oSettings );\n\t\n\t\tif (typeof mHtml === \"string\")\n\t\t{\n\t\t\tnNewCell.innerHTML = mHtml;\n\t\t}\n\t\telse\n\t\t{\n\t\t\t$(nNewCell).html( mHtml );\n\t\t}\n\t\n\t\t/* If the nTr isn't on the page at the moment - then we don't insert at the moment */\n\t\tvar nTrs = $('tr', oSettings.nTBody);\n\t\tif ( $.inArray(nTr, nTrs) != -1  )\n\t\t{\n\t\t\t$(nNewRow).insertAfter(nTr);\n\t\t}\n\t\t\n\t\toSettings.aoOpenRows.push( {\n\t\t\t\"nTr\": nNewRow,\n\t\t\t\"nParent\": nTr\n\t\t} );\n\t\t\n\t\treturn nNewRow;\n\t};\n\t\n\t\n\t/**\n\t * Change the pagination - provides the internal logic for pagination in a simple API \n\t * function. With this function you can have a DataTables table go to the next, \n\t * previous, first or last pages.\n\t *  @param {string|int} mAction Paging action to take: \"first\", \"previous\", \"next\" or \"last\"\n\t *    or page number to jump to (integer), note that page 0 is the first page.\n\t *  @param {bool} [bRedraw=true] Redraw the table or not\n\t *  @dtopt API\n\t *\n\t *  @example\n\t *    $(document).ready(function() {\n\t *      var oTable = $('#example').dataTable();\n\t *      oTable.fnPageChange( 'next' );\n\t *    } );\n\t */\n\tthis.fnPageChange = function ( mAction, bRedraw )\n\t{\n\t\tvar oSettings = _fnSettingsFromNode( this[DataTable.ext.iApiIndex] );\n\t\t_fnPageChange( oSettings, mAction );\n\t\t_fnCalculateEnd( oSettings );\n\t\t\n\t\tif ( bRedraw === undefined || bRedraw )\n\t\t{\n\t\t\t_fnDraw( oSettings );\n\t\t}\n\t};\n\t\n\t\n\t/**\n\t * Show a particular column\n\t *  @param {int} iCol The column whose display should be changed\n\t *  @param {bool} bShow Show (true) or hide (false) the column\n\t *  @param {bool} [bRedraw=true] Redraw the table or not\n\t *  @dtopt API\n\t *\n\t *  @example\n\t *    $(document).ready(function() {\n\t *      var oTable = $('#example').dataTable();\n\t *      \n\t *      // Hide the second column after initialisation\n\t *      oTable.fnSetColumnVis( 1, false );\n\t *    } );\n\t */\n\tthis.fnSetColumnVis = function ( iCol, bShow, bRedraw )\n\t{\n\t\tvar oSettings = _fnSettingsFromNode( this[DataTable.ext.iApiIndex] );\n\t\tvar i, iLen;\n\t\tvar aoColumns = oSettings.aoColumns;\n\t\tvar aoData = oSettings.aoData;\n\t\tvar nTd, bAppend, iBefore;\n\t\t\n\t\t/* No point in doing anything if we are requesting what is already true */\n\t\tif ( aoColumns[iCol].bVisible == bShow )\n\t\t{\n\t\t\treturn;\n\t\t}\n\t\t\n\t\t/* Show the column */\n\t\tif ( bShow )\n\t\t{\n\t\t\tvar iInsert = 0;\n\t\t\tfor ( i=0 ; i<iCol ; i++ )\n\t\t\t{\n\t\t\t\tif ( aoColumns[i].bVisible )\n\t\t\t\t{\n\t\t\t\t\tiInsert++;\n\t\t\t\t}\n\t\t\t}\n\t\t\t\n\t\t\t/* Need to decide if we should use appendChild or insertBefore */\n\t\t\tbAppend = (iInsert >= _fnVisbleColumns( oSettings ));\n\t\n\t\t\t/* Which coloumn should we be inserting before? */\n\t\t\tif ( !bAppend )\n\t\t\t{\n\t\t\t\tfor ( i=iCol ; i<aoColumns.length ; i++ )\n\t\t\t\t{\n\t\t\t\t\tif ( aoColumns[i].bVisible )\n\t\t\t\t\t{\n\t\t\t\t\t\tiBefore = i;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\n\t\t\tfor ( i=0, iLen=aoData.length ; i<iLen ; i++ )\n\t\t\t{\n\t\t\t\tif ( aoData[i].nTr !== null )\n\t\t\t\t{\n\t\t\t\t\tif ( bAppend )\n\t\t\t\t\t{\n\t\t\t\t\t\taoData[i].nTr.appendChild( \n\t\t\t\t\t\t\taoData[i]._anHidden[iCol]\n\t\t\t\t\t\t);\n\t\t\t\t\t}\n\t\t\t\t\telse\n\t\t\t\t\t{\n\t\t\t\t\t\taoData[i].nTr.insertBefore(\n\t\t\t\t\t\t\taoData[i]._anHidden[iCol], \n\t\t\t\t\t\t\t_fnGetTdNodes( oSettings, i )[iBefore] );\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\telse\n\t\t{\n\t\t\t/* Remove a column from display */\n\t\t\tfor ( i=0, iLen=aoData.length ; i<iLen ; i++ )\n\t\t\t{\n\t\t\t\tif ( aoData[i].nTr !== null )\n\t\t\t\t{\n\t\t\t\t\tnTd = _fnGetTdNodes( oSettings, i )[iCol];\n\t\t\t\t\taoData[i]._anHidden[iCol] = nTd;\n\t\t\t\t\tnTd.parentNode.removeChild( nTd );\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\n\t\t/* Clear to set the visible flag */\n\t\taoColumns[iCol].bVisible = bShow;\n\t\n\t\t/* Redraw the header and footer based on the new column visibility */\n\t\t_fnDrawHead( oSettings, oSettings.aoHeader );\n\t\tif ( oSettings.nTFoot )\n\t\t{\n\t\t\t_fnDrawHead( oSettings, oSettings.aoFooter );\n\t\t}\n\t\t\n\t\t/* If there are any 'open' rows, then we need to alter the colspan for this col change */\n\t\tfor ( i=0, iLen=oSettings.aoOpenRows.length ; i<iLen ; i++ )\n\t\t{\n\t\t\toSettings.aoOpenRows[i].nTr.colSpan = _fnVisbleColumns( oSettings );\n\t\t}\n\t\t\n\t\t/* Do a redraw incase anything depending on the table columns needs it \n\t\t * (built-in: scrolling) \n\t\t */\n\t\tif ( bRedraw === undefined || bRedraw )\n\t\t{\n\t\t\t_fnAdjustColumnSizing( oSettings );\n\t\t\t_fnDraw( oSettings );\n\t\t}\n\t\t\n\t\t_fnSaveState( oSettings );\n\t};\n\t\n\t\n\t/**\n\t * Get the settings for a particular table for external manipulation\n\t *  @returns {object} DataTables settings object. See \n\t *    {@link DataTable.models.oSettings}\n\t *  @dtopt API\n\t *\n\t *  @example\n\t *    $(document).ready(function() {\n\t *      var oTable = $('#example').dataTable();\n\t *      var oSettings = oTable.fnSettings();\n\t *      \n\t *      // Show an example parameter from the settings\n\t *      alert( oSettings._iDisplayStart );\n\t *    } );\n\t */\n\tthis.fnSettings = function()\n\t{\n\t\treturn _fnSettingsFromNode( this[DataTable.ext.iApiIndex] );\n\t};\n\t\n\t\n\t/**\n\t * Sort the table by a particular column\n\t *  @param {int} iCol the data index to sort on. Note that this will not match the \n\t *    'display index' if you have hidden data entries\n\t *  @dtopt API\n\t *\n\t *  @example\n\t *    $(document).ready(function() {\n\t *      var oTable = $('#example').dataTable();\n\t *      \n\t *      // Sort immediately with columns 0 and 1\n\t *      oTable.fnSort( [ [0,'asc'], [1,'asc'] ] );\n\t *    } );\n\t */\n\tthis.fnSort = function( aaSort )\n\t{\n\t\tvar oSettings = _fnSettingsFromNode( this[DataTable.ext.iApiIndex] );\n\t\toSettings.aaSorting = aaSort;\n\t\t_fnSort( oSettings );\n\t};\n\t\n\t\n\t/**\n\t * Attach a sort listener to an element for a given column\n\t *  @param {node} nNode the element to attach the sort listener to\n\t *  @param {int} iColumn the column that a click on this node will sort on\n\t *  @param {function} [fnCallback] callback function when sort is run\n\t *  @dtopt API\n\t *\n\t *  @example\n\t *    $(document).ready(function() {\n\t *      var oTable = $('#example').dataTable();\n\t *      \n\t *      // Sort on column 1, when 'sorter' is clicked on\n\t *      oTable.fnSortListener( document.getElementById('sorter'), 1 );\n\t *    } );\n\t */\n\tthis.fnSortListener = function( nNode, iColumn, fnCallback )\n\t{\n\t\t_fnSortAttachListener( _fnSettingsFromNode( this[DataTable.ext.iApiIndex] ), nNode, iColumn,\n\t\t \tfnCallback );\n\t};\n\t\n\t\n\t/**\n\t * Update a table cell or row - this method will accept either a single value to\n\t * update the cell with, an array of values with one element for each column or\n\t * an object in the same format as the original data source. The function is\n\t * self-referencing in order to make the multi column updates easier.\n\t *  @param {object|array|string} mData Data to update the cell/row with\n\t *  @param {node|int} mRow TR element you want to update or the aoData index\n\t *  @param {int} [iColumn] The column to update (not used of mData is an array or object)\n\t *  @param {bool} [bRedraw=true] Redraw the table or not\n\t *  @param {bool} [bAction=true] Perform pre-draw actions or not\n\t *  @returns {int} 0 on success, 1 on error\n\t *  @dtopt API\n\t *\n\t *  @example\n\t *    $(document).ready(function() {\n\t *      var oTable = $('#example').dataTable();\n\t *      oTable.fnUpdate( 'Example update', 0, 0 ); // Single cell\n\t *      oTable.fnUpdate( ['a', 'b', 'c', 'd', 'e'], 1, 0 ); // Row\n\t *    } );\n\t */\n\tthis.fnUpdate = function( mData, mRow, iColumn, bRedraw, bAction )\n\t{\n\t\tvar oSettings = _fnSettingsFromNode( this[DataTable.ext.iApiIndex] );\n\t\tvar i, iLen, sDisplay;\n\t\tvar iRow = (typeof mRow === 'object') ? \n\t\t\t_fnNodeToDataIndex(oSettings, mRow) : mRow;\n\t\t\n\t\tif ( $.isArray(mData) && iColumn === undefined )\n\t\t{\n\t\t\t/* Array update - update the whole row */\n\t\t\toSettings.aoData[iRow]._aData = mData.slice();\n\t\t\t\n\t\t\t/* Flag to the function that we are recursing */\n\t\t\tfor ( i=0 ; i<oSettings.aoColumns.length ; i++ )\n\t\t\t{\n\t\t\t\tthis.fnUpdate( _fnGetCellData( oSettings, iRow, i ), iRow, i, false, false );\n\t\t\t}\n\t\t}\n\t\telse if ( $.isPlainObject(mData) && iColumn === undefined )\n\t\t{\n\t\t\t/* Object update - update the whole row - assume the developer gets the object right */\n\t\t\toSettings.aoData[iRow]._aData = $.extend( true, {}, mData );\n\t\n\t\t\tfor ( i=0 ; i<oSettings.aoColumns.length ; i++ )\n\t\t\t{\n\t\t\t\tthis.fnUpdate( _fnGetCellData( oSettings, iRow, i ), iRow, i, false, false );\n\t\t\t}\n\t\t}\n\t\telse\n\t\t{\n\t\t\t/* Individual cell update */\n\t\t\t_fnSetCellData( oSettings, iRow, iColumn, mData );\n\t\t\tsDisplay = _fnGetCellData( oSettings, iRow, iColumn, 'display' );\n\t\t\t\n\t\t\tvar oCol = oSettings.aoColumns[iColumn];\n\t\t\tif ( oCol.fnRender !== null )\n\t\t\t{\n\t\t\t\tsDisplay = _fnRender( oSettings, iRow, iColumn );\n\t\t\t\tif ( oCol.bUseRendered )\n\t\t\t\t{\n\t\t\t\t\t_fnSetCellData( oSettings, iRow, iColumn, sDisplay );\n\t\t\t\t}\n\t\t\t}\n\t\t\t\n\t\t\tif ( oSettings.aoData[iRow].nTr !== null )\n\t\t\t{\n\t\t\t\t/* Do the actual HTML update */\n\t\t\t\t_fnGetTdNodes( oSettings, iRow )[iColumn].innerHTML = sDisplay;\n\t\t\t}\n\t\t}\n\t\t\n\t\t/* Modify the search index for this row (strictly this is likely not needed, since fnReDraw\n\t\t * will rebuild the search array - however, the redraw might be disabled by the user)\n\t\t */\n\t\tvar iDisplayIndex = $.inArray( iRow, oSettings.aiDisplay );\n\t\toSettings.asDataSearch[iDisplayIndex] = _fnBuildSearchRow(\n\t\t\toSettings, \n\t\t\t_fnGetRowData( oSettings, iRow, 'filter', _fnGetColumns( oSettings, 'bSearchable' ) )\n\t\t);\n\t\t\n\t\t/* Perform pre-draw actions */\n\t\tif ( bAction === undefined || bAction )\n\t\t{\n\t\t\t_fnAdjustColumnSizing( oSettings );\n\t\t}\n\t\t\n\t\t/* Redraw the table */\n\t\tif ( bRedraw === undefined || bRedraw )\n\t\t{\n\t\t\t_fnReDraw( oSettings );\n\t\t}\n\t\treturn 0;\n\t};\n\t\n\t\n\t/**\n\t * Provide a common method for plug-ins to check the version of DataTables being used, in order\n\t * to ensure compatibility.\n\t *  @param {string} sVersion Version string to check for, in the format \"X.Y.Z\". Note that the\n\t *    formats \"X\" and \"X.Y\" are also acceptable.\n\t *  @returns {boolean} true if this version of DataTables is greater or equal to the required\n\t *    version, or false if this version of DataTales is not suitable\n\t *  @method\n\t *  @dtopt API\n\t *\n\t *  @example\n\t *    $(document).ready(function() {\n\t *      var oTable = $('#example').dataTable();\n\t *      alert( oTable.fnVersionCheck( '1.9.0' ) );\n\t *    } );\n\t */\n\tthis.fnVersionCheck = DataTable.ext.fnVersionCheck;\n\t\n\t\n\t/*\n\t * This is really a good bit rubbish this method of exposing the internal methods\n\t * publicly... - To be fixed in 2.0 using methods on the prototype\n\t */\n\t\n\t\n\t/**\n\t * Create a wrapper function for exporting an internal functions to an external API.\n\t *  @param {string} sFunc API function name\n\t *  @returns {function} wrapped function\n\t *  @memberof DataTable#oApi\n\t */\n\tfunction _fnExternApiFunc (sFunc)\n\t{\n\t\treturn function() {\n\t\t\tvar aArgs = [_fnSettingsFromNode(this[DataTable.ext.iApiIndex])].concat( \n\t\t\t\tArray.prototype.slice.call(arguments) );\n\t\t\treturn DataTable.ext.oApi[sFunc].apply( this, aArgs );\n\t\t};\n\t}\n\t\n\t\n\t/**\n\t * Reference to internal functions for use by plug-in developers. Note that these\n\t * methods are references to internal functions and are considered to be private.\n\t * If you use these methods, be aware that they are liable to change between versions\n\t * (check the upgrade notes).\n\t *  @namespace\n\t */\n\tthis.oApi = {\n\t\t\"_fnExternApiFunc\": _fnExternApiFunc,\n\t\t\"_fnInitialise\": _fnInitialise,\n\t\t\"_fnInitComplete\": _fnInitComplete,\n\t\t\"_fnLanguageCompat\": _fnLanguageCompat,\n\t\t\"_fnAddColumn\": _fnAddColumn,\n\t\t\"_fnColumnOptions\": _fnColumnOptions,\n\t\t\"_fnAddData\": _fnAddData,\n\t\t\"_fnCreateTr\": _fnCreateTr,\n\t\t\"_fnGatherData\": _fnGatherData,\n\t\t\"_fnBuildHead\": _fnBuildHead,\n\t\t\"_fnDrawHead\": _fnDrawHead,\n\t\t\"_fnDraw\": _fnDraw,\n\t\t\"_fnReDraw\": _fnReDraw,\n\t\t\"_fnAjaxUpdate\": _fnAjaxUpdate,\n\t\t\"_fnAjaxParameters\": _fnAjaxParameters,\n\t\t\"_fnAjaxUpdateDraw\": _fnAjaxUpdateDraw,\n\t\t\"_fnServerParams\": _fnServerParams,\n\t\t\"_fnAddOptionsHtml\": _fnAddOptionsHtml,\n\t\t\"_fnFeatureHtmlTable\": _fnFeatureHtmlTable,\n\t\t\"_fnScrollDraw\": _fnScrollDraw,\n\t\t\"_fnAdjustColumnSizing\": _fnAdjustColumnSizing,\n\t\t\"_fnFeatureHtmlFilter\": _fnFeatureHtmlFilter,\n\t\t\"_fnFilterComplete\": _fnFilterComplete,\n\t\t\"_fnFilterCustom\": _fnFilterCustom,\n\t\t\"_fnFilterColumn\": _fnFilterColumn,\n\t\t\"_fnFilter\": _fnFilter,\n\t\t\"_fnBuildSearchArray\": _fnBuildSearchArray,\n\t\t\"_fnBuildSearchRow\": _fnBuildSearchRow,\n\t\t\"_fnFilterCreateSearch\": _fnFilterCreateSearch,\n\t\t\"_fnDataToSearch\": _fnDataToSearch,\n\t\t\"_fnSort\": _fnSort,\n\t\t\"_fnSortAttachListener\": _fnSortAttachListener,\n\t\t\"_fnSortingClasses\": _fnSortingClasses,\n\t\t\"_fnFeatureHtmlPaginate\": _fnFeatureHtmlPaginate,\n\t\t\"_fnPageChange\": _fnPageChange,\n\t\t\"_fnFeatureHtmlInfo\": _fnFeatureHtmlInfo,\n\t\t\"_fnUpdateInfo\": _fnUpdateInfo,\n\t\t\"_fnFeatureHtmlLength\": _fnFeatureHtmlLength,\n\t\t\"_fnFeatureHtmlProcessing\": _fnFeatureHtmlProcessing,\n\t\t\"_fnProcessingDisplay\": _fnProcessingDisplay,\n\t\t\"_fnVisibleToColumnIndex\": _fnVisibleToColumnIndex,\n\t\t\"_fnColumnIndexToVisible\": _fnColumnIndexToVisible,\n\t\t\"_fnNodeToDataIndex\": _fnNodeToDataIndex,\n\t\t\"_fnVisbleColumns\": _fnVisbleColumns,\n\t\t\"_fnCalculateEnd\": _fnCalculateEnd,\n\t\t\"_fnConvertToWidth\": _fnConvertToWidth,\n\t\t\"_fnCalculateColumnWidths\": _fnCalculateColumnWidths,\n\t\t\"_fnScrollingWidthAdjust\": _fnScrollingWidthAdjust,\n\t\t\"_fnGetWidestNode\": _fnGetWidestNode,\n\t\t\"_fnGetMaxLenString\": _fnGetMaxLenString,\n\t\t\"_fnStringToCss\": _fnStringToCss,\n\t\t\"_fnDetectType\": _fnDetectType,\n\t\t\"_fnSettingsFromNode\": _fnSettingsFromNode,\n\t\t\"_fnGetDataMaster\": _fnGetDataMaster,\n\t\t\"_fnGetTrNodes\": _fnGetTrNodes,\n\t\t\"_fnGetTdNodes\": _fnGetTdNodes,\n\t\t\"_fnEscapeRegex\": _fnEscapeRegex,\n\t\t\"_fnDeleteIndex\": _fnDeleteIndex,\n\t\t\"_fnReOrderIndex\": _fnReOrderIndex,\n\t\t\"_fnColumnOrdering\": _fnColumnOrdering,\n\t\t\"_fnLog\": _fnLog,\n\t\t\"_fnClearTable\": _fnClearTable,\n\t\t\"_fnSaveState\": _fnSaveState,\n\t\t\"_fnLoadState\": _fnLoadState,\n\t\t\"_fnCreateCookie\": _fnCreateCookie,\n\t\t\"_fnReadCookie\": _fnReadCookie,\n\t\t\"_fnDetectHeader\": _fnDetectHeader,\n\t\t\"_fnGetUniqueThs\": _fnGetUniqueThs,\n\t\t\"_fnScrollBarWidth\": _fnScrollBarWidth,\n\t\t\"_fnApplyToChildren\": _fnApplyToChildren,\n\t\t\"_fnMap\": _fnMap,\n\t\t\"_fnGetRowData\": _fnGetRowData,\n\t\t\"_fnGetCellData\": _fnGetCellData,\n\t\t\"_fnSetCellData\": _fnSetCellData,\n\t\t\"_fnGetObjectDataFn\": _fnGetObjectDataFn,\n\t\t\"_fnSetObjectDataFn\": _fnSetObjectDataFn,\n\t\t\"_fnApplyColumnDefs\": _fnApplyColumnDefs,\n\t\t\"_fnBindAction\": _fnBindAction,\n\t\t\"_fnExtend\": _fnExtend,\n\t\t\"_fnCallbackReg\": _fnCallbackReg,\n\t\t\"_fnCallbackFire\": _fnCallbackFire,\n\t\t\"_fnJsonString\": _fnJsonString,\n\t\t\"_fnRender\": _fnRender,\n\t\t\"_fnNodeToColumnIndex\": _fnNodeToColumnIndex,\n\t\t\"_fnInfoMacros\": _fnInfoMacros,\n\t\t\"_fnBrowserDetect\": _fnBrowserDetect,\n\t\t\"_fnGetColumns\": _fnGetColumns\n\t};\n\t\n\t$.extend( DataTable.ext.oApi, this.oApi );\n\t\n\tfor ( var sFunc in DataTable.ext.oApi )\n\t{\n\t\tif ( sFunc )\n\t\t{\n\t\t\tthis[sFunc] = _fnExternApiFunc(sFunc);\n\t\t}\n\t}\n\t\n\t\n\tvar _that = this;\n\tthis.each(function() {\n\t\tvar i=0, iLen, j, jLen, k, kLen;\n\t\tvar sId = this.getAttribute( 'id' );\n\t\tvar bInitHandedOff = false;\n\t\tvar bUsePassedData = false;\n\t\t\n\t\t\n\t\t/* Sanity check */\n\t\tif ( this.nodeName.toLowerCase() != 'table' )\n\t\t{\n\t\t\t_fnLog( null, 0, \"Attempted to initialise DataTables on a node which is not a \"+\n\t\t\t\t\"table: \"+this.nodeName );\n\t\t\treturn;\n\t\t}\n\t\t\n\t\t/* Check to see if we are re-initialising a table */\n\t\tfor ( i=0, iLen=DataTable.settings.length ; i<iLen ; i++ )\n\t\t{\n\t\t\t/* Base check on table node */\n\t\t\tif ( DataTable.settings[i].nTable == this )\n\t\t\t{\n\t\t\t\tif ( oInit === undefined || oInit.bRetrieve )\n\t\t\t\t{\n\t\t\t\t\treturn DataTable.settings[i].oInstance;\n\t\t\t\t}\n\t\t\t\telse if ( oInit.bDestroy )\n\t\t\t\t{\n\t\t\t\t\tDataTable.settings[i].oInstance.fnDestroy();\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\t_fnLog( DataTable.settings[i], 0, \"Cannot reinitialise DataTable.\\n\\n\"+\n\t\t\t\t\t\t\"To retrieve the DataTables object for this table, pass no arguments or see \"+\n\t\t\t\t\t\t\"the docs for bRetrieve and bDestroy\" );\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t}\n\t\t\t\n\t\t\t/* If the element we are initialising has the same ID as a table which was previously\n\t\t\t * initialised, but the table nodes don't match (from before) then we destroy the old\n\t\t\t * instance by simply deleting it. This is under the assumption that the table has been\n\t\t\t * destroyed by other methods. Anyone using non-id selectors will need to do this manually\n\t\t\t */\n\t\t\tif ( DataTable.settings[i].sTableId == this.id )\n\t\t\t{\n\t\t\t\tDataTable.settings.splice( i, 1 );\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\t\n\t\t/* Ensure the table has an ID - required for accessibility */\n\t\tif ( sId === null || sId === \"\" )\n\t\t{\n\t\t\tsId = \"DataTables_Table_\"+(DataTable.ext._oExternConfig.iNextUnique++);\n\t\t\tthis.id = sId;\n\t\t}\n\t\t\n\t\t/* Create the settings object for this table and set some of the default parameters */\n\t\tvar oSettings = $.extend( true, {}, DataTable.models.oSettings, {\n\t\t\t\"nTable\":        this,\n\t\t\t\"oApi\":          _that.oApi,\n\t\t\t\"oInit\":         oInit,\n\t\t\t\"sDestroyWidth\": $(this).width(),\n\t\t\t\"sInstance\":     sId,\n\t\t\t\"sTableId\":      sId\n\t\t} );\n\t\tDataTable.settings.push( oSettings );\n\t\t\n\t\t// Need to add the instance after the instance after the settings object has been added\n\t\t// to the settings array, so we can self reference the table instance if more than one\n\t\toSettings.oInstance = (_that.length===1) ? _that : $(this).dataTable();\n\t\t\n\t\t/* Setting up the initialisation object */\n\t\tif ( !oInit )\n\t\t{\n\t\t\toInit = {};\n\t\t}\n\t\t\n\t\t// Backwards compatibility, before we apply all the defaults\n\t\tif ( oInit.oLanguage )\n\t\t{\n\t\t\t_fnLanguageCompat( oInit.oLanguage );\n\t\t}\n\t\t\n\t\toInit = _fnExtend( $.extend(true, {}, DataTable.defaults), oInit );\n\t\t\n\t\t// Map the initialisation options onto the settings object\n\t\t_fnMap( oSettings.oFeatures, oInit, \"bPaginate\" );\n\t\t_fnMap( oSettings.oFeatures, oInit, \"bLengthChange\" );\n\t\t_fnMap( oSettings.oFeatures, oInit, \"bFilter\" );\n\t\t_fnMap( oSettings.oFeatures, oInit, \"bSort\" );\n\t\t_fnMap( oSettings.oFeatures, oInit, \"bInfo\" );\n\t\t_fnMap( oSettings.oFeatures, oInit, \"bProcessing\" );\n\t\t_fnMap( oSettings.oFeatures, oInit, \"bAutoWidth\" );\n\t\t_fnMap( oSettings.oFeatures, oInit, \"bSortClasses\" );\n\t\t_fnMap( oSettings.oFeatures, oInit, \"bServerSide\" );\n\t\t_fnMap( oSettings.oFeatures, oInit, \"bDeferRender\" );\n\t\t_fnMap( oSettings.oScroll, oInit, \"sScrollX\", \"sX\" );\n\t\t_fnMap( oSettings.oScroll, oInit, \"sScrollXInner\", \"sXInner\" );\n\t\t_fnMap( oSettings.oScroll, oInit, \"sScrollY\", \"sY\" );\n\t\t_fnMap( oSettings.oScroll, oInit, \"bScrollCollapse\", \"bCollapse\" );\n\t\t_fnMap( oSettings.oScroll, oInit, \"bScrollInfinite\", \"bInfinite\" );\n\t\t_fnMap( oSettings.oScroll, oInit, \"iScrollLoadGap\", \"iLoadGap\" );\n\t\t_fnMap( oSettings.oScroll, oInit, \"bScrollAutoCss\", \"bAutoCss\" );\n\t\t_fnMap( oSettings, oInit, \"asStripeClasses\" );\n\t\t_fnMap( oSettings, oInit, \"asStripClasses\", \"asStripeClasses\" ); // legacy\n\t\t_fnMap( oSettings, oInit, \"fnServerData\" );\n\t\t_fnMap( oSettings, oInit, \"fnFormatNumber\" );\n\t\t_fnMap( oSettings, oInit, \"sServerMethod\" );\n\t\t_fnMap( oSettings, oInit, \"aaSorting\" );\n\t\t_fnMap( oSettings, oInit, \"aaSortingFixed\" );\n\t\t_fnMap( oSettings, oInit, \"aLengthMenu\" );\n\t\t_fnMap( oSettings, oInit, \"sPaginationType\" );\n\t\t_fnMap( oSettings, oInit, \"sAjaxSource\" );\n\t\t_fnMap( oSettings, oInit, \"sAjaxDataProp\" );\n\t\t_fnMap( oSettings, oInit, \"iCookieDuration\" );\n\t\t_fnMap( oSettings, oInit, \"sCookiePrefix\" );\n\t\t_fnMap( oSettings, oInit, \"sDom\" );\n\t\t_fnMap( oSettings, oInit, \"bSortCellsTop\" );\n\t\t_fnMap( oSettings, oInit, \"iTabIndex\" );\n\t\t_fnMap( oSettings, oInit, \"oSearch\", \"oPreviousSearch\" );\n\t\t_fnMap( oSettings, oInit, \"aoSearchCols\", \"aoPreSearchCols\" );\n\t\t_fnMap( oSettings, oInit, \"iDisplayLength\", \"_iDisplayLength\" );\n\t\t_fnMap( oSettings, oInit, \"bJQueryUI\", \"bJUI\" );\n\t\t_fnMap( oSettings, oInit, \"fnCookieCallback\" );\n\t\t_fnMap( oSettings, oInit, \"fnStateLoad\" );\n\t\t_fnMap( oSettings, oInit, \"fnStateSave\" );\n\t\t_fnMap( oSettings.oLanguage, oInit, \"fnInfoCallback\" );\n\t\t\n\t\t/* Callback functions which are array driven */\n\t\t_fnCallbackReg( oSettings, 'aoDrawCallback',       oInit.fnDrawCallback,      'user' );\n\t\t_fnCallbackReg( oSettings, 'aoServerParams',       oInit.fnServerParams,      'user' );\n\t\t_fnCallbackReg( oSettings, 'aoStateSaveParams',    oInit.fnStateSaveParams,   'user' );\n\t\t_fnCallbackReg( oSettings, 'aoStateLoadParams',    oInit.fnStateLoadParams,   'user' );\n\t\t_fnCallbackReg( oSettings, 'aoStateLoaded',        oInit.fnStateLoaded,       'user' );\n\t\t_fnCallbackReg( oSettings, 'aoRowCallback',        oInit.fnRowCallback,       'user' );\n\t\t_fnCallbackReg( oSettings, 'aoRowCreatedCallback', oInit.fnCreatedRow,        'user' );\n\t\t_fnCallbackReg( oSettings, 'aoHeaderCallback',     oInit.fnHeaderCallback,    'user' );\n\t\t_fnCallbackReg( oSettings, 'aoFooterCallback',     oInit.fnFooterCallback,    'user' );\n\t\t_fnCallbackReg( oSettings, 'aoInitComplete',       oInit.fnInitComplete,      'user' );\n\t\t_fnCallbackReg( oSettings, 'aoPreDrawCallback',    oInit.fnPreDrawCallback,   'user' );\n\t\t\n\t\tif ( oSettings.oFeatures.bServerSide && oSettings.oFeatures.bSort &&\n\t\t\t   oSettings.oFeatures.bSortClasses )\n\t\t{\n\t\t\t/* Enable sort classes for server-side processing. Safe to do it here, since server-side\n\t\t\t * processing must be enabled by the developer\n\t\t\t */\n\t\t\t_fnCallbackReg( oSettings, 'aoDrawCallback', _fnSortingClasses, 'server_side_sort_classes' );\n\t\t}\n\t\telse if ( oSettings.oFeatures.bDeferRender )\n\t\t{\n\t\t\t_fnCallbackReg( oSettings, 'aoDrawCallback', _fnSortingClasses, 'defer_sort_classes' );\n\t\t}\n\t\t\n\t\tif ( oInit.bJQueryUI )\n\t\t{\n\t\t\t/* Use the JUI classes object for display. You could clone the oStdClasses object if \n\t\t\t * you want to have multiple tables with multiple independent classes \n\t\t\t */\n\t\t\t$.extend( oSettings.oClasses, DataTable.ext.oJUIClasses );\n\t\t\t\n\t\t\tif ( oInit.sDom === DataTable.defaults.sDom && DataTable.defaults.sDom === \"lfrtip\" )\n\t\t\t{\n\t\t\t\t/* Set the DOM to use a layout suitable for jQuery UI's theming */\n\t\t\t\toSettings.sDom = '<\"H\"lfr>t<\"F\"ip>';\n\t\t\t}\n\t\t}\n\t\telse\n\t\t{\n\t\t\t$.extend( oSettings.oClasses, DataTable.ext.oStdClasses );\n\t\t}\n\t\t$(this).addClass( oSettings.oClasses.sTable );\n\t\t\n\t\t/* Calculate the scroll bar width and cache it for use later on */\n\t\tif ( oSettings.oScroll.sX !== \"\" || oSettings.oScroll.sY !== \"\" )\n\t\t{\n\t\t\toSettings.oScroll.iBarWidth = _fnScrollBarWidth();\n\t\t}\n\t\t\n\t\tif ( oSettings.iInitDisplayStart === undefined )\n\t\t{\n\t\t\t/* Display start point, taking into account the save saving */\n\t\t\toSettings.iInitDisplayStart = oInit.iDisplayStart;\n\t\t\toSettings._iDisplayStart = oInit.iDisplayStart;\n\t\t}\n\t\t\n\t\t/* Must be done after everything which can be overridden by a cookie! */\n\t\tif ( oInit.bStateSave )\n\t\t{\n\t\t\toSettings.oFeatures.bStateSave = true;\n\t\t\t_fnLoadState( oSettings, oInit );\n\t\t\t_fnCallbackReg( oSettings, 'aoDrawCallback', _fnSaveState, 'state_save' );\n\t\t}\n\t\t\n\t\tif ( oInit.iDeferLoading !== null )\n\t\t{\n\t\t\toSettings.bDeferLoading = true;\n\t\t\tvar tmp = $.isArray( oInit.iDeferLoading );\n\t\t\toSettings._iRecordsDisplay = tmp ? oInit.iDeferLoading[0] : oInit.iDeferLoading;\n\t\t\toSettings._iRecordsTotal = tmp ? oInit.iDeferLoading[1] : oInit.iDeferLoading;\n\t\t}\n\t\t\n\t\tif ( oInit.aaData !== null )\n\t\t{\n\t\t\tbUsePassedData = true;\n\t\t}\n\t\t\n\t\t/* Language definitions */\n\t\tif ( oInit.oLanguage.sUrl !== \"\" )\n\t\t{\n\t\t\t/* Get the language definitions from a file - because this Ajax call makes the language\n\t\t\t * get async to the remainder of this function we use bInitHandedOff to indicate that \n\t\t\t * _fnInitialise will be fired by the returned Ajax handler, rather than the constructor\n\t\t\t */\n\t\t\toSettings.oLanguage.sUrl = oInit.oLanguage.sUrl;\n\t\t\t$.getJSON( oSettings.oLanguage.sUrl, null, function( json ) {\n\t\t\t\t_fnLanguageCompat( json );\n\t\t\t\t$.extend( true, oSettings.oLanguage, oInit.oLanguage, json );\n\t\t\t\t_fnInitialise( oSettings );\n\t\t\t} );\n\t\t\tbInitHandedOff = true;\n\t\t}\n\t\telse\n\t\t{\n\t\t\t$.extend( true, oSettings.oLanguage, oInit.oLanguage );\n\t\t}\n\t\t\n\t\t\n\t\t/*\n\t\t * Stripes\n\t\t */\n\t\tif ( oInit.asStripeClasses === null )\n\t\t{\n\t\t\toSettings.asStripeClasses =[\n\t\t\t\toSettings.oClasses.sStripeOdd,\n\t\t\t\toSettings.oClasses.sStripeEven\n\t\t\t];\n\t\t}\n\t\t\n\t\t/* Remove row stripe classes if they are already on the table row */\n\t\tiLen=oSettings.asStripeClasses.length;\n\t\toSettings.asDestroyStripes = [];\n\t\tif (iLen)\n\t\t{\n\t\t\tvar bStripeRemove = false;\n\t\t\tvar anRows = $(this).children('tbody').children('tr:lt(' + iLen + ')');\n\t\t\tfor ( i=0 ; i<iLen ; i++ )\n\t\t\t{\n\t\t\t\tif ( anRows.hasClass( oSettings.asStripeClasses[i] ) )\n\t\t\t\t{\n\t\t\t\t\tbStripeRemove = true;\n\t\t\t\t\t\n\t\t\t\t\t/* Store the classes which we are about to remove so they can be re-added on destroy */\n\t\t\t\t\toSettings.asDestroyStripes.push( oSettings.asStripeClasses[i] );\n\t\t\t\t}\n\t\t\t}\n\t\t\t\n\t\t\tif ( bStripeRemove )\n\t\t\t{\n\t\t\t\tanRows.removeClass( oSettings.asStripeClasses.join(' ') );\n\t\t\t}\n\t\t}\n\t\t\n\t\t/*\n\t\t * Columns\n\t\t * See if we should load columns automatically or use defined ones\n\t\t */\n\t\tvar anThs = [];\n\t\tvar aoColumnsInit;\n\t\tvar nThead = this.getElementsByTagName('thead');\n\t\tif ( nThead.length !== 0 )\n\t\t{\n\t\t\t_fnDetectHeader( oSettings.aoHeader, nThead[0] );\n\t\t\tanThs = _fnGetUniqueThs( oSettings );\n\t\t}\n\t\t\n\t\t/* If not given a column array, generate one with nulls */\n\t\tif ( oInit.aoColumns === null )\n\t\t{\n\t\t\taoColumnsInit = [];\n\t\t\tfor ( i=0, iLen=anThs.length ; i<iLen ; i++ )\n\t\t\t{\n\t\t\t\taoColumnsInit.push( null );\n\t\t\t}\n\t\t}\n\t\telse\n\t\t{\n\t\t\taoColumnsInit = oInit.aoColumns;\n\t\t}\n\t\t\n\t\t/* Add the columns */\n\t\tfor ( i=0, iLen=aoColumnsInit.length ; i<iLen ; i++ )\n\t\t{\n\t\t\t/* Short cut - use the loop to check if we have column visibility state to restore */\n\t\t\tif ( oInit.saved_aoColumns !== undefined && oInit.saved_aoColumns.length == iLen )\n\t\t\t{\n\t\t\t\tif ( aoColumnsInit[i] === null )\n\t\t\t\t{\n\t\t\t\t\taoColumnsInit[i] = {};\n\t\t\t\t}\n\t\t\t\taoColumnsInit[i].bVisible = oInit.saved_aoColumns[i].bVisible;\n\t\t\t}\n\t\t\t\n\t\t\t_fnAddColumn( oSettings, anThs ? anThs[i] : null );\n\t\t}\n\t\t\n\t\t/* Apply the column definitions */\n\t\t_fnApplyColumnDefs( oSettings, oInit.aoColumnDefs, aoColumnsInit, function (iCol, oDef) {\n\t\t\t_fnColumnOptions( oSettings, iCol, oDef );\n\t\t} );\n\t\t\n\t\t\n\t\t/*\n\t\t * Sorting\n\t\t * Check the aaSorting array\n\t\t */\n\t\tfor ( i=0, iLen=oSettings.aaSorting.length ; i<iLen ; i++ )\n\t\t{\n\t\t\tif ( oSettings.aaSorting[i][0] >= oSettings.aoColumns.length )\n\t\t\t{\n\t\t\t\toSettings.aaSorting[i][0] = 0;\n\t\t\t}\n\t\t\tvar oColumn = oSettings.aoColumns[ oSettings.aaSorting[i][0] ];\n\t\t\t\n\t\t\t/* Add a default sorting index */\n\t\t\tif ( oSettings.aaSorting[i][2] === undefined )\n\t\t\t{\n\t\t\t\toSettings.aaSorting[i][2] = 0;\n\t\t\t}\n\t\t\t\n\t\t\t/* If aaSorting is not defined, then we use the first indicator in asSorting */\n\t\t\tif ( oInit.aaSorting === undefined && oSettings.saved_aaSorting === undefined )\n\t\t\t{\n\t\t\t\toSettings.aaSorting[i][1] = oColumn.asSorting[0];\n\t\t\t}\n\t\t\t\n\t\t\t/* Set the current sorting index based on aoColumns.asSorting */\n\t\t\tfor ( j=0, jLen=oColumn.asSorting.length ; j<jLen ; j++ )\n\t\t\t{\n\t\t\t\tif ( oSettings.aaSorting[i][1] == oColumn.asSorting[j] )\n\t\t\t\t{\n\t\t\t\t\toSettings.aaSorting[i][2] = j;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\t\t\n\t\t/* Do a first pass on the sorting classes (allows any size changes to be taken into\n\t\t * account, and also will apply sorting disabled classes if disabled\n\t\t */\n\t\t_fnSortingClasses( oSettings );\n\t\t\n\t\t\n\t\t/*\n\t\t * Final init\n\t\t * Cache the header, body and footer as required, creating them if needed\n\t\t */\n\t\t\n\t\t/* Browser support detection */\n\t\t_fnBrowserDetect( oSettings );\n\t\t\n\t\t// Work around for Webkit bug 83867 - store the caption-side before removing from doc\n\t\tvar captions = $(this).children('caption').each( function () {\n\t\t\tthis._captionSide = $(this).css('caption-side');\n\t\t} );\n\t\t\n\t\tvar thead = $(this).children('thead');\n\t\tif ( thead.length === 0 )\n\t\t{\n\t\t\tthead = [ document.createElement( 'thead' ) ];\n\t\t\tthis.appendChild( thead[0] );\n\t\t}\n\t\toSettings.nTHead = thead[0];\n\t\t\n\t\tvar tbody = $(this).children('tbody');\n\t\tif ( tbody.length === 0 )\n\t\t{\n\t\t\ttbody = [ document.createElement( 'tbody' ) ];\n\t\t\tthis.appendChild( tbody[0] );\n\t\t}\n\t\toSettings.nTBody = tbody[0];\n\t\toSettings.nTBody.setAttribute( \"role\", \"alert\" );\n\t\toSettings.nTBody.setAttribute( \"aria-live\", \"polite\" );\n\t\toSettings.nTBody.setAttribute( \"aria-relevant\", \"all\" );\n\t\t\n\t\tvar tfoot = $(this).children('tfoot');\n\t\tif ( tfoot.length === 0 && captions.length > 0 && (oSettings.oScroll.sX !== \"\" || oSettings.oScroll.sY !== \"\") )\n\t\t{\n\t\t\t// If we are a scrolling table, and no footer has been given, then we need to create\n\t\t\t// a tfoot element for the caption element to be appended to\n\t\t\ttfoot = [ document.createElement( 'tfoot' ) ];\n\t\t\tthis.appendChild( tfoot[0] );\n\t\t}\n\t\t\n\t\tif ( tfoot.length > 0 )\n\t\t{\n\t\t\toSettings.nTFoot = tfoot[0];\n\t\t\t_fnDetectHeader( oSettings.aoFooter, oSettings.nTFoot );\n\t\t}\n\t\t\n\t\t/* Check if there is data passing into the constructor */\n\t\tif ( bUsePassedData )\n\t\t{\n\t\t\tfor ( i=0 ; i<oInit.aaData.length ; i++ )\n\t\t\t{\n\t\t\t\t_fnAddData( oSettings, oInit.aaData[ i ] );\n\t\t\t}\n\t\t}\n\t\telse\n\t\t{\n\t\t\t/* Grab the data from the page */\n\t\t\t_fnGatherData( oSettings );\n\t\t}\n\t\t\n\t\t/* Copy the data index array */\n\t\toSettings.aiDisplay = oSettings.aiDisplayMaster.slice();\n\t\t\n\t\t/* Initialisation complete - table can be drawn */\n\t\toSettings.bInitialised = true;\n\t\t\n\t\t/* Check if we need to initialise the table (it might not have been handed off to the\n\t\t * language processor)\n\t\t */\n\t\tif ( bInitHandedOff === false )\n\t\t{\n\t\t\t_fnInitialise( oSettings );\n\t\t}\n\t} );\n\t_that = null;\n\treturn this;\n};\n\n\n\n/**\n * Provide a common method for plug-ins to check the version of DataTables being used, in order\n * to ensure compatibility.\n *  @param {string} sVersion Version string to check for, in the format \"X.Y.Z\". Note that the\n *    formats \"X\" and \"X.Y\" are also acceptable.\n *  @returns {boolean} true if this version of DataTables is greater or equal to the required\n *    version, or false if this version of DataTales is not suitable\n *  @static\n *  @dtopt API-Static\n *\n *  @example\n *    alert( $.fn.dataTable.fnVersionCheck( '1.9.0' ) );\n */\nDataTable.fnVersionCheck = function( sVersion )\n{\n\t/* This is cheap, but effective */\n\tvar fnZPad = function (Zpad, count)\n\t{\n\t\twhile(Zpad.length < count) {\n\t\t\tZpad += '0';\n\t\t}\n\t\treturn Zpad;\n\t};\n\tvar aThis = DataTable.ext.sVersion.split('.');\n\tvar aThat = sVersion.split('.');\n\tvar sThis = '', sThat = '';\n\t\n\tfor ( var i=0, iLen=aThat.length ; i<iLen ; i++ )\n\t{\n\t\tsThis += fnZPad( aThis[i], 3 );\n\t\tsThat += fnZPad( aThat[i], 3 );\n\t}\n\t\n\treturn parseInt(sThis, 10) >= parseInt(sThat, 10);\n};\n\n\n/**\n * Check if a TABLE node is a DataTable table already or not.\n *  @param {node} nTable The TABLE node to check if it is a DataTable or not (note that other\n *    node types can be passed in, but will always return false).\n *  @returns {boolean} true the table given is a DataTable, or false otherwise\n *  @static\n *  @dtopt API-Static\n *\n *  @example\n *    var ex = document.getElementById('example');\n *    if ( ! $.fn.DataTable.fnIsDataTable( ex ) ) {\n *      $(ex).dataTable();\n *    }\n */\nDataTable.fnIsDataTable = function ( nTable )\n{\n\tvar o = DataTable.settings;\n\n\tfor ( var i=0 ; i<o.length ; i++ )\n\t{\n\t\tif ( o[i].nTable === nTable || o[i].nScrollHead === nTable || o[i].nScrollFoot === nTable )\n\t\t{\n\t\t\treturn true;\n\t\t}\n\t}\n\n\treturn false;\n};\n\n\n/**\n * Get all DataTable tables that have been initialised - optionally you can select to\n * get only currently visible tables.\n *  @param {boolean} [bVisible=false] Flag to indicate if you want all (default) or \n *    visible tables only.\n *  @returns {array} Array of TABLE nodes (not DataTable instances) which are DataTables\n *  @static\n *  @dtopt API-Static\n *\n *  @example\n *    var table = $.fn.dataTable.fnTables(true);\n *    if ( table.length > 0 ) {\n *      $(table).dataTable().fnAdjustColumnSizing();\n *    }\n */\nDataTable.fnTables = function ( bVisible )\n{\n\tvar out = [];\n\n\tjQuery.each( DataTable.settings, function (i, o) {\n\t\tif ( !bVisible || (bVisible === true && $(o.nTable).is(':visible')) )\n\t\t{\n\t\t\tout.push( o.nTable );\n\t\t}\n\t} );\n\n\treturn out;\n};\n\n\n/**\n * Version string for plug-ins to check compatibility. Allowed format is\n * a.b.c.d.e where: a:int, b:int, c:int, d:string(dev|beta), e:int. d and\n * e are optional\n *  @member\n *  @type string\n *  @default Version number\n */\nDataTable.version = \"1.9.4\";\n\n/**\n * Private data store, containing all of the settings objects that are created for the\n * tables on a given page.\n * \n * Note that the <i>DataTable.settings</i> object is aliased to <i>jQuery.fn.dataTableExt</i> \n * through which it may be accessed and manipulated, or <i>jQuery.fn.dataTable.settings</i>.\n *  @member\n *  @type array\n *  @default []\n *  @private\n */\nDataTable.settings = [];\n\n/**\n * Object models container, for the various models that DataTables has available\n * to it. These models define the objects that are used to hold the active state \n * and configuration of the table.\n *  @namespace\n */\nDataTable.models = {};\n\n\n/**\n * DataTables extension options and plug-ins. This namespace acts as a collection \"area\"\n * for plug-ins that can be used to extend the default DataTables behaviour - indeed many\n * of the build in methods use this method to provide their own capabilities (sorting methods\n * for example).\n * \n * Note that this namespace is aliased to jQuery.fn.dataTableExt so it can be readily accessed\n * and modified by plug-ins.\n *  @namespace\n */\nDataTable.models.ext = {\n\t/**\n\t * Plug-in filtering functions - this method of filtering is complimentary to the default\n\t * type based filtering, and a lot more comprehensive as it allows you complete control\n\t * over the filtering logic. Each element in this array is a function (parameters\n\t * described below) that is called for every row in the table, and your logic decides if\n\t * it should be included in the filtered data set or not.\n\t *   <ul>\n\t *     <li>\n\t *       Function input parameters:\n\t *       <ul>\n\t *         <li>{object} DataTables settings object: see {@link DataTable.models.oSettings}.</li>\n\t *         <li>{array|object} Data for the row to be processed (same as the original format\n\t *           that was passed in as the data source, or an array from a DOM data source</li>\n\t *         <li>{int} Row index in aoData ({@link DataTable.models.oSettings.aoData}), which can\n\t *           be useful to retrieve the TR element if you need DOM interaction.</li>\n\t *       </ul>\n\t *     </li>\n\t *     <li>\n\t *       Function return:\n\t *       <ul>\n\t *         <li>{boolean} Include the row in the filtered result set (true) or not (false)</li>\n\t *       </ul>\n\t *     </il>\n\t *   </ul>\n\t *  @type array\n\t *  @default []\n\t *\n\t *  @example\n\t *    // The following example shows custom filtering being applied to the fourth column (i.e.\n\t *    // the aData[3] index) based on two input values from the end-user, matching the data in \n\t *    // a certain range.\n\t *    $.fn.dataTableExt.afnFiltering.push(\n\t *      function( oSettings, aData, iDataIndex ) {\n\t *        var iMin = document.getElementById('min').value * 1;\n\t *        var iMax = document.getElementById('max').value * 1;\n\t *        var iVersion = aData[3] == \"-\" ? 0 : aData[3]*1;\n\t *        if ( iMin == \"\" && iMax == \"\" ) {\n\t *          return true;\n\t *        }\n\t *        else if ( iMin == \"\" && iVersion < iMax ) {\n\t *          return true;\n\t *        }\n\t *        else if ( iMin < iVersion && \"\" == iMax ) {\n\t *          return true;\n\t *        }\n\t *        else if ( iMin < iVersion && iVersion < iMax ) {\n\t *          return true;\n\t *        }\n\t *        return false;\n\t *      }\n\t *    );\n\t */\n\t\"afnFiltering\": [],\n\n\n\t/**\n\t * Plug-in sorting functions - this method of sorting is complimentary to the default type\n\t * based sorting that DataTables does automatically, allowing much greater control over the\n\t * the data that is being used to sort a column. This is useful if you want to do sorting\n\t * based on live data (for example the contents of an 'input' element) rather than just the\n\t * static string that DataTables knows of. The way these plug-ins work is that you create\n\t * an array of the values you wish to be sorted for the column in question and then return\n\t * that array. Which pre-sorting function is run here depends on the sSortDataType parameter\n\t * that is used for the column (if any). This is the corollary of <i>ofnSearch</i> for sort \n\t * data.\n\t *   <ul>\n     *     <li>\n     *       Function input parameters:\n     *       <ul>\n\t *         <li>{object} DataTables settings object: see {@link DataTable.models.oSettings}.</li>\n     *         <li>{int} Target column index</li>\n     *       </ul>\n     *     </li>\n\t *     <li>\n\t *       Function return:\n\t *       <ul>\n\t *         <li>{array} Data for the column to be sorted upon</li>\n\t *       </ul>\n\t *     </il>\n\t *   </ul>\n\t *  \n\t * Note that as of v1.9, it is typically preferable to use <i>mData</i> to prepare data for\n\t * the different uses that DataTables can put the data to. Specifically <i>mData</i> when\n\t * used as a function will give you a 'type' (sorting, filtering etc) that you can use to \n\t * prepare the data as required for the different types. As such, this method is deprecated.\n\t *  @type array\n\t *  @default []\n\t *  @deprecated\n\t *\n\t *  @example\n\t *    // Updating the cached sorting information with user entered values in HTML input elements\n\t *    jQuery.fn.dataTableExt.afnSortData['dom-text'] = function ( oSettings, iColumn )\n\t *    {\n\t *      var aData = [];\n\t *      $( 'td:eq('+iColumn+') input', oSettings.oApi._fnGetTrNodes(oSettings) ).each( function () {\n\t *        aData.push( this.value );\n\t *      } );\n\t *      return aData;\n\t *    }\n\t */\n\t\"afnSortData\": [],\n\n\n\t/**\n\t * Feature plug-ins - This is an array of objects which describe the feature plug-ins that are\n\t * available to DataTables. These feature plug-ins are accessible through the sDom initialisation\n\t * option. As such, each feature plug-in must describe a function that is used to initialise\n\t * itself (fnInit), a character so the feature can be enabled by sDom (cFeature) and the name\n\t * of the feature (sFeature). Thus the objects attached to this method must provide:\n\t *   <ul>\n\t *     <li>{function} fnInit Initialisation of the plug-in\n\t *       <ul>\n     *         <li>\n     *           Function input parameters:\n     *           <ul>\n\t *             <li>{object} DataTables settings object: see {@link DataTable.models.oSettings}.</li>\n     *           </ul>\n     *         </li>\n\t *         <li>\n\t *           Function return:\n\t *           <ul>\n\t *             <li>{node|null} The element which contains your feature. Note that the return\n\t *                may also be void if your plug-in does not require to inject any DOM elements \n\t *                into DataTables control (sDom) - for example this might be useful when \n\t *                developing a plug-in which allows table control via keyboard entry.</li>\n\t *           </ul>\n\t *         </il>\n\t *       </ul>\n\t *     </li>\n\t *     <li>{character} cFeature Character that will be matched in sDom - case sensitive</li>\n\t *     <li>{string} sFeature Feature name</li>\n\t *   </ul>\n\t *  @type array\n\t *  @default []\n\t * \n\t *  @example\n\t *    // How TableTools initialises itself.\n\t *    $.fn.dataTableExt.aoFeatures.push( {\n\t *      \"fnInit\": function( oSettings ) {\n\t *        return new TableTools( { \"oDTSettings\": oSettings } );\n\t *      },\n\t *      \"cFeature\": \"T\",\n\t *      \"sFeature\": \"TableTools\"\n\t *    } );\n\t */\n\t\"aoFeatures\": [],\n\n\n\t/**\n\t * Type detection plug-in functions - DataTables utilises types to define how sorting and\n\t * filtering behave, and types can be either  be defined by the developer (sType for the\n\t * column) or they can be automatically detected by the methods in this array. The functions\n\t * defined in the array are quite simple, taking a single parameter (the data to analyse) \n\t * and returning the type if it is a known type, or null otherwise.\n\t *   <ul>\n     *     <li>\n     *       Function input parameters:\n     *       <ul>\n\t *         <li>{*} Data from the column cell to be analysed</li>\n     *       </ul>\n     *     </li>\n\t *     <li>\n\t *       Function return:\n\t *       <ul>\n\t *         <li>{string|null} Data type detected, or null if unknown (and thus pass it\n\t *           on to the other type detection functions.</li>\n\t *       </ul>\n\t *     </il>\n\t *   </ul>\n\t *  @type array\n\t *  @default []\n\t *  \n\t *  @example\n\t *    // Currency type detection plug-in:\n\t *    jQuery.fn.dataTableExt.aTypes.push(\n\t *      function ( sData ) {\n\t *        var sValidChars = \"0123456789.-\";\n\t *        var Char;\n\t *        \n\t *        // Check the numeric part\n\t *        for ( i=1 ; i<sData.length ; i++ ) {\n\t *          Char = sData.charAt(i); \n\t *          if (sValidChars.indexOf(Char) == -1) {\n\t *            return null;\n\t *          }\n\t *        }\n\t *        \n\t *        // Check prefixed by currency\n\t *        if ( sData.charAt(0) == '$' || sData.charAt(0) == '&pound;' ) {\n\t *          return 'currency';\n\t *        }\n\t *        return null;\n\t *      }\n\t *    );\n\t */\n\t\"aTypes\": [],\n\n\n\t/**\n\t * Provide a common method for plug-ins to check the version of DataTables being used, \n\t * in order to ensure compatibility.\n\t *  @type function\n\t *  @param {string} sVersion Version string to check for, in the format \"X.Y.Z\". Note \n\t *    that the formats \"X\" and \"X.Y\" are also acceptable.\n\t *  @returns {boolean} true if this version of DataTables is greater or equal to the \n\t *    required version, or false if this version of DataTales is not suitable\n\t *\n\t *  @example\n\t *    $(document).ready(function() {\n\t *      var oTable = $('#example').dataTable();\n\t *      alert( oTable.fnVersionCheck( '1.9.0' ) );\n\t *    } );\n\t */\n\t\"fnVersionCheck\": DataTable.fnVersionCheck,\n\n\n\t/**\n\t * Index for what 'this' index API functions should use\n\t *  @type int\n\t *  @default 0\n\t */\n\t\"iApiIndex\": 0,\n\n\n\t/**\n\t * Pre-processing of filtering data plug-ins - When you assign the sType for a column\n\t * (or have it automatically detected for you by DataTables or a type detection plug-in), \n\t * you will typically be using this for custom sorting, but it can also be used to provide \n\t * custom filtering by allowing you to pre-processing the data and returning the data in\n\t * the format that should be filtered upon. This is done by adding functions this object \n\t * with a parameter name which matches the sType for that target column. This is the\n\t * corollary of <i>afnSortData</i> for filtering data.\n\t *   <ul>\n     *     <li>\n     *       Function input parameters:\n     *       <ul>\n\t *         <li>{*} Data from the column cell to be prepared for filtering</li>\n     *       </ul>\n     *     </li>\n\t *     <li>\n\t *       Function return:\n\t *       <ul>\n\t *         <li>{string|null} Formatted string that will be used for the filtering.</li>\n\t *       </ul>\n\t *     </il>\n\t *   </ul>\n\t * \n\t * Note that as of v1.9, it is typically preferable to use <i>mData</i> to prepare data for\n\t * the different uses that DataTables can put the data to. Specifically <i>mData</i> when\n\t * used as a function will give you a 'type' (sorting, filtering etc) that you can use to \n\t * prepare the data as required for the different types. As such, this method is deprecated.\n\t *  @type object\n\t *  @default {}\n\t *  @deprecated\n\t *\n\t *  @example\n\t *    $.fn.dataTableExt.ofnSearch['title-numeric'] = function ( sData ) {\n\t *      return sData.replace(/\\n/g,\" \").replace( /<.*?>/g, \"\" );\n\t *    }\n\t */\n\t\"ofnSearch\": {},\n\n\n\t/**\n\t * Container for all private functions in DataTables so they can be exposed externally\n\t *  @type object\n\t *  @default {}\n\t */\n\t\"oApi\": {},\n\n\n\t/**\n\t * Storage for the various classes that DataTables uses\n\t *  @type object\n\t *  @default {}\n\t */\n\t\"oStdClasses\": {},\n\t\n\n\t/**\n\t * Storage for the various classes that DataTables uses - jQuery UI suitable\n\t *  @type object\n\t *  @default {}\n\t */\n\t\"oJUIClasses\": {},\n\n\n\t/**\n\t * Pagination plug-in methods - The style and controls of the pagination can significantly \n\t * impact on how the end user interacts with the data in your table, and DataTables allows \n\t * the addition of pagination controls by extending this object, which can then be enabled\n\t * through the <i>sPaginationType</i> initialisation parameter. Each pagination type that\n\t * is added is an object (the property name of which is what <i>sPaginationType</i> refers\n\t * to) that has two properties, both methods that are used by DataTables to update the\n\t * control's state.\n\t *   <ul>\n\t *     <li>\n\t *       fnInit -  Initialisation of the paging controls. Called only during initialisation \n\t *         of the table. It is expected that this function will add the required DOM elements \n\t *         to the page for the paging controls to work. The element pointer \n\t *         'oSettings.aanFeatures.p' array is provided by DataTables to contain the paging \n\t *         controls (note that this is a 2D array to allow for multiple instances of each \n\t *         DataTables DOM element). It is suggested that you add the controls to this element \n\t *         as children\n\t *       <ul>\n     *         <li>\n     *           Function input parameters:\n     *           <ul>\n\t *             <li>{object} DataTables settings object: see {@link DataTable.models.oSettings}.</li>\n\t *             <li>{node} Container into which the pagination controls must be inserted</li>\n\t *             <li>{function} Draw callback function - whenever the controls cause a page\n\t *               change, this method must be called to redraw the table.</li>\n     *           </ul>\n     *         </li>\n\t *         <li>\n\t *           Function return:\n\t *           <ul>\n\t *             <li>No return required</li>\n\t *           </ul>\n\t *         </il>\n\t *       </ul>\n\t *     </il>\n\t *     <li>\n\t *       fnInit -  This function is called whenever the paging status of the table changes and is\n\t *         typically used to update classes and/or text of the paging controls to reflex the new \n\t *         status.\n\t *       <ul>\n     *         <li>\n     *           Function input parameters:\n     *           <ul>\n\t *             <li>{object} DataTables settings object: see {@link DataTable.models.oSettings}.</li>\n\t *             <li>{function} Draw callback function - in case you need to redraw the table again\n\t *               or attach new event listeners</li>\n     *           </ul>\n     *         </li>\n\t *         <li>\n\t *           Function return:\n\t *           <ul>\n\t *             <li>No return required</li>\n\t *           </ul>\n\t *         </il>\n\t *       </ul>\n\t *     </il>\n\t *   </ul>\n\t *  @type object\n\t *  @default {}\n\t *\n\t *  @example\n\t *    $.fn.dataTableExt.oPagination.four_button = {\n\t *      \"fnInit\": function ( oSettings, nPaging, fnCallbackDraw ) {\n\t *        nFirst = document.createElement( 'span' );\n\t *        nPrevious = document.createElement( 'span' );\n\t *        nNext = document.createElement( 'span' );\n\t *        nLast = document.createElement( 'span' );\n\t *        \n\t *        nFirst.appendChild( document.createTextNode( oSettings.oLanguage.oPaginate.sFirst ) );\n\t *        nPrevious.appendChild( document.createTextNode( oSettings.oLanguage.oPaginate.sPrevious ) );\n\t *        nNext.appendChild( document.createTextNode( oSettings.oLanguage.oPaginate.sNext ) );\n\t *        nLast.appendChild( document.createTextNode( oSettings.oLanguage.oPaginate.sLast ) );\n\t *        \n\t *        nFirst.className = \"paginate_button first\";\n\t *        nPrevious.className = \"paginate_button previous\";\n\t *        nNext.className=\"paginate_button next\";\n\t *        nLast.className = \"paginate_button last\";\n\t *        \n\t *        nPaging.appendChild( nFirst );\n\t *        nPaging.appendChild( nPrevious );\n\t *        nPaging.appendChild( nNext );\n\t *        nPaging.appendChild( nLast );\n\t *        \n\t *        $(nFirst).click( function () {\n\t *          oSettings.oApi._fnPageChange( oSettings, \"first\" );\n\t *          fnCallbackDraw( oSettings );\n\t *        } );\n\t *        \n\t *        $(nPrevious).click( function() {\n\t *          oSettings.oApi._fnPageChange( oSettings, \"previous\" );\n\t *          fnCallbackDraw( oSettings );\n\t *        } );\n\t *        \n\t *        $(nNext).click( function() {\n\t *          oSettings.oApi._fnPageChange( oSettings, \"next\" );\n\t *          fnCallbackDraw( oSettings );\n\t *        } );\n\t *        \n\t *        $(nLast).click( function() {\n\t *          oSettings.oApi._fnPageChange( oSettings, \"last\" );\n\t *          fnCallbackDraw( oSettings );\n\t *        } );\n\t *        \n\t *        $(nFirst).bind( 'selectstart', function () { return false; } );\n\t *        $(nPrevious).bind( 'selectstart', function () { return false; } );\n\t *        $(nNext).bind( 'selectstart', function () { return false; } );\n\t *        $(nLast).bind( 'selectstart', function () { return false; } );\n\t *      },\n\t *      \n\t *      \"fnUpdate\": function ( oSettings, fnCallbackDraw ) {\n\t *        if ( !oSettings.aanFeatures.p ) {\n\t *          return;\n\t *        }\n\t *        \n\t *        // Loop over each instance of the pager\n\t *        var an = oSettings.aanFeatures.p;\n\t *        for ( var i=0, iLen=an.length ; i<iLen ; i++ ) {\n\t *          var buttons = an[i].getElementsByTagName('span');\n\t *          if ( oSettings._iDisplayStart === 0 ) {\n\t *            buttons[0].className = \"paginate_disabled_previous\";\n\t *            buttons[1].className = \"paginate_disabled_previous\";\n\t *          }\n\t *          else {\n\t *            buttons[0].className = \"paginate_enabled_previous\";\n\t *            buttons[1].className = \"paginate_enabled_previous\";\n\t *          }\n\t *          \n\t *          if ( oSettings.fnDisplayEnd() == oSettings.fnRecordsDisplay() ) {\n\t *            buttons[2].className = \"paginate_disabled_next\";\n\t *            buttons[3].className = \"paginate_disabled_next\";\n\t *          }\n\t *          else {\n\t *            buttons[2].className = \"paginate_enabled_next\";\n\t *            buttons[3].className = \"paginate_enabled_next\";\n\t *          }\n\t *        }\n\t *      }\n\t *    };\n\t */\n\t\"oPagination\": {},\n\n\n\t/**\n\t * Sorting plug-in methods - Sorting in DataTables is based on the detected type of the\n\t * data column (you can add your own type detection functions, or override automatic \n\t * detection using sType). With this specific type given to the column, DataTables will \n\t * apply the required sort from the functions in the object. Each sort type must provide\n\t * two mandatory methods, one each for ascending and descending sorting, and can optionally\n\t * provide a pre-formatting method that will help speed up sorting by allowing DataTables\n\t * to pre-format the sort data only once (rather than every time the actual sort functions\n\t * are run). The two sorting functions are typical Javascript sort methods:\n\t *   <ul>\n     *     <li>\n     *       Function input parameters:\n     *       <ul>\n\t *         <li>{*} Data to compare to the second parameter</li>\n\t *         <li>{*} Data to compare to the first parameter</li>\n     *       </ul>\n     *     </li>\n\t *     <li>\n\t *       Function return:\n\t *       <ul>\n\t *         <li>{int} Sorting match: <0 if first parameter should be sorted lower than\n\t *           the second parameter, ===0 if the two parameters are equal and >0 if\n\t *           the first parameter should be sorted height than the second parameter.</li>\n\t *       </ul>\n\t *     </il>\n\t *   </ul>\n\t *  @type object\n\t *  @default {}\n\t *\n\t *  @example\n\t *    // Case-sensitive string sorting, with no pre-formatting method\n\t *    $.extend( $.fn.dataTableExt.oSort, {\n\t *      \"string-case-asc\": function(x,y) {\n\t *        return ((x < y) ? -1 : ((x > y) ? 1 : 0));\n\t *      },\n\t *      \"string-case-desc\": function(x,y) {\n\t *        return ((x < y) ? 1 : ((x > y) ? -1 : 0));\n\t *      }\n\t *    } );\n\t *\n\t *  @example\n\t *    // Case-insensitive string sorting, with pre-formatting\n\t *    $.extend( $.fn.dataTableExt.oSort, {\n\t *      \"string-pre\": function(x) {\n\t *        return x.toLowerCase();\n\t *      },\n\t *      \"string-asc\": function(x,y) {\n\t *        return ((x < y) ? -1 : ((x > y) ? 1 : 0));\n\t *      },\n\t *      \"string-desc\": function(x,y) {\n\t *        return ((x < y) ? 1 : ((x > y) ? -1 : 0));\n\t *      }\n\t *    } );\n\t */\n\t\"oSort\": {},\n\n\n\t/**\n\t * Version string for plug-ins to check compatibility. Allowed format is\n\t * a.b.c.d.e where: a:int, b:int, c:int, d:string(dev|beta), e:int. d and\n\t * e are optional\n\t *  @type string\n\t *  @default Version number\n\t */\n\t\"sVersion\": DataTable.version,\n\n\n\t/**\n\t * How should DataTables report an error. Can take the value 'alert' or 'throw'\n\t *  @type string\n\t *  @default alert\n\t */\n\t\"sErrMode\": \"alert\",\n\n\n\t/**\n\t * Store information for DataTables to access globally about other instances\n\t *  @namespace\n\t *  @private\n\t */\n\t\"_oExternConfig\": {\n\t\t/* int:iNextUnique - next unique number for an instance */\n\t\t\"iNextUnique\": 0\n\t}\n};\n\n\n\n\n/**\n * Template object for the way in which DataTables holds information about\n * search information for the global filter and individual column filters.\n *  @namespace\n */\nDataTable.models.oSearch = {\n\t/**\n\t * Flag to indicate if the filtering should be case insensitive or not\n\t *  @type boolean\n\t *  @default true\n\t */\n\t\"bCaseInsensitive\": true,\n\n\t/**\n\t * Applied search term\n\t *  @type string\n\t *  @default <i>Empty string</i>\n\t */\n\t\"sSearch\": \"\",\n\n\t/**\n\t * Flag to indicate if the search term should be interpreted as a\n\t * regular expression (true) or not (false) and therefore and special\n\t * regex characters escaped.\n\t *  @type boolean\n\t *  @default false\n\t */\n\t\"bRegex\": false,\n\n\t/**\n\t * Flag to indicate if DataTables is to use its smart filtering or not.\n\t *  @type boolean\n\t *  @default true\n\t */\n\t\"bSmart\": true\n};\n\n\n\n\n/**\n * Template object for the way in which DataTables holds information about\n * each individual row. This is the object format used for the settings \n * aoData array.\n *  @namespace\n */\nDataTable.models.oRow = {\n\t/**\n\t * TR element for the row\n\t *  @type node\n\t *  @default null\n\t */\n\t\"nTr\": null,\n\n\t/**\n\t * Data object from the original data source for the row. This is either\n\t * an array if using the traditional form of DataTables, or an object if\n\t * using mData options. The exact type will depend on the passed in\n\t * data from the data source, or will be an array if using DOM a data \n\t * source.\n\t *  @type array|object\n\t *  @default []\n\t */\n\t\"_aData\": [],\n\n\t/**\n\t * Sorting data cache - this array is ostensibly the same length as the\n\t * number of columns (although each index is generated only as it is \n\t * needed), and holds the data that is used for sorting each column in the\n\t * row. We do this cache generation at the start of the sort in order that\n\t * the formatting of the sort data need be done only once for each cell\n\t * per sort. This array should not be read from or written to by anything\n\t * other than the master sorting methods.\n\t *  @type array\n\t *  @default []\n\t *  @private\n\t */\n\t\"_aSortData\": [],\n\n\t/**\n\t * Array of TD elements that are cached for hidden rows, so they can be\n\t * reinserted into the table if a column is made visible again (or to act\n\t * as a store if a column is made hidden). Only hidden columns have a \n\t * reference in the array. For non-hidden columns the value is either\n\t * undefined or null.\n\t *  @type array nodes\n\t *  @default []\n\t *  @private\n\t */\n\t\"_anHidden\": [],\n\n\t/**\n\t * Cache of the class name that DataTables has applied to the row, so we\n\t * can quickly look at this variable rather than needing to do a DOM check\n\t * on className for the nTr property.\n\t *  @type string\n\t *  @default <i>Empty string</i>\n\t *  @private\n\t */\n\t\"_sRowStripe\": \"\"\n};\n\n\n\n/**\n * Template object for the column information object in DataTables. This object\n * is held in the settings aoColumns array and contains all the information that\n * DataTables needs about each individual column.\n * \n * Note that this object is related to {@link DataTable.defaults.columns} \n * but this one is the internal data store for DataTables's cache of columns.\n * It should NOT be manipulated outside of DataTables. Any configuration should\n * be done through the initialisation options.\n *  @namespace\n */\nDataTable.models.oColumn = {\n\t/**\n\t * A list of the columns that sorting should occur on when this column\n\t * is sorted. That this property is an array allows multi-column sorting\n\t * to be defined for a column (for example first name / last name columns\n\t * would benefit from this). The values are integers pointing to the\n\t * columns to be sorted on (typically it will be a single integer pointing\n\t * at itself, but that doesn't need to be the case).\n\t *  @type array\n\t */\n\t\"aDataSort\": null,\n\n\t/**\n\t * Define the sorting directions that are applied to the column, in sequence\n\t * as the column is repeatedly sorted upon - i.e. the first value is used\n\t * as the sorting direction when the column if first sorted (clicked on).\n\t * Sort it again (click again) and it will move on to the next index.\n\t * Repeat until loop.\n\t *  @type array\n\t */\n\t\"asSorting\": null,\n\t\n\t/**\n\t * Flag to indicate if the column is searchable, and thus should be included\n\t * in the filtering or not.\n\t *  @type boolean\n\t */\n\t\"bSearchable\": null,\n\t\n\t/**\n\t * Flag to indicate if the column is sortable or not.\n\t *  @type boolean\n\t */\n\t\"bSortable\": null,\n\t\n\t/**\n\t * <code>Deprecated</code> When using fnRender, you have two options for what \n\t * to do with the data, and this property serves as the switch. Firstly, you \n\t * can have the sorting and filtering use the rendered value (true - default), \n\t * or you can have the sorting and filtering us the original value (false).\n\t *\n\t * Please note that this option has now been deprecated and will be removed\n\t * in the next version of DataTables. Please use mRender / mData rather than\n\t * fnRender.\n\t *  @type boolean\n\t *  @deprecated\n\t */\n\t\"bUseRendered\": null,\n\t\n\t/**\n\t * Flag to indicate if the column is currently visible in the table or not\n\t *  @type boolean\n\t */\n\t\"bVisible\": null,\n\t\n\t/**\n\t * Flag to indicate to the type detection method if the automatic type\n\t * detection should be used, or if a column type (sType) has been specified\n\t *  @type boolean\n\t *  @default true\n\t *  @private\n\t */\n\t\"_bAutoType\": true,\n\t\n\t/**\n\t * Developer definable function that is called whenever a cell is created (Ajax source,\n\t * etc) or processed for input (DOM source). This can be used as a compliment to mRender\n\t * allowing you to modify the DOM element (add background colour for example) when the\n\t * element is available.\n\t *  @type function\n\t *  @param {element} nTd The TD node that has been created\n\t *  @param {*} sData The Data for the cell\n\t *  @param {array|object} oData The data for the whole row\n\t *  @param {int} iRow The row index for the aoData data store\n\t *  @default null\n\t */\n\t\"fnCreatedCell\": null,\n\t\n\t/**\n\t * Function to get data from a cell in a column. You should <b>never</b>\n\t * access data directly through _aData internally in DataTables - always use\n\t * the method attached to this property. It allows mData to function as\n\t * required. This function is automatically assigned by the column \n\t * initialisation method\n\t *  @type function\n\t *  @param {array|object} oData The data array/object for the array \n\t *    (i.e. aoData[]._aData)\n\t *  @param {string} sSpecific The specific data type you want to get - \n\t *    'display', 'type' 'filter' 'sort'\n\t *  @returns {*} The data for the cell from the given row's data\n\t *  @default null\n\t */\n\t\"fnGetData\": null,\n\t\n\t/**\n\t * <code>Deprecated</code> Custom display function that will be called for the \n\t * display of each cell in this column.\n\t *\n\t * Please note that this option has now been deprecated and will be removed\n\t * in the next version of DataTables. Please use mRender / mData rather than\n\t * fnRender.\n\t *  @type function\n\t *  @param {object} o Object with the following parameters:\n\t *  @param {int}    o.iDataRow The row in aoData\n\t *  @param {int}    o.iDataColumn The column in question\n\t *  @param {array}  o.aData The data for the row in question\n\t *  @param {object} o.oSettings The settings object for this DataTables instance\n\t *  @returns {string} The string you which to use in the display\n\t *  @default null\n\t *  @deprecated\n\t */\n\t\"fnRender\": null,\n\t\n\t/**\n\t * Function to set data for a cell in the column. You should <b>never</b> \n\t * set the data directly to _aData internally in DataTables - always use\n\t * this method. It allows mData to function as required. This function\n\t * is automatically assigned by the column initialisation method\n\t *  @type function\n\t *  @param {array|object} oData The data array/object for the array \n\t *    (i.e. aoData[]._aData)\n\t *  @param {*} sValue Value to set\n\t *  @default null\n\t */\n\t\"fnSetData\": null,\n\t\n\t/**\n\t * Property to read the value for the cells in the column from the data \n\t * source array / object. If null, then the default content is used, if a\n\t * function is given then the return from the function is used.\n\t *  @type function|int|string|null\n\t *  @default null\n\t */\n\t\"mData\": null,\n\t\n\t/**\n\t * Partner property to mData which is used (only when defined) to get\n\t * the data - i.e. it is basically the same as mData, but without the\n\t * 'set' option, and also the data fed to it is the result from mData.\n\t * This is the rendering method to match the data method of mData.\n\t *  @type function|int|string|null\n\t *  @default null\n\t */\n\t\"mRender\": null,\n\t\n\t/**\n\t * Unique header TH/TD element for this column - this is what the sorting\n\t * listener is attached to (if sorting is enabled.)\n\t *  @type node\n\t *  @default null\n\t */\n\t\"nTh\": null,\n\t\n\t/**\n\t * Unique footer TH/TD element for this column (if there is one). Not used \n\t * in DataTables as such, but can be used for plug-ins to reference the \n\t * footer for each column.\n\t *  @type node\n\t *  @default null\n\t */\n\t\"nTf\": null,\n\t\n\t/**\n\t * The class to apply to all TD elements in the table's TBODY for the column\n\t *  @type string\n\t *  @default null\n\t */\n\t\"sClass\": null,\n\t\n\t/**\n\t * When DataTables calculates the column widths to assign to each column,\n\t * it finds the longest string in each column and then constructs a\n\t * temporary table and reads the widths from that. The problem with this\n\t * is that \"mmm\" is much wider then \"iiii\", but the latter is a longer \n\t * string - thus the calculation can go wrong (doing it properly and putting\n\t * it into an DOM object and measuring that is horribly(!) slow). Thus as\n\t * a \"work around\" we provide this option. It will append its value to the\n\t * text that is found to be the longest string for the column - i.e. padding.\n\t *  @type string\n\t */\n\t\"sContentPadding\": null,\n\t\n\t/**\n\t * Allows a default value to be given for a column's data, and will be used\n\t * whenever a null data source is encountered (this can be because mData\n\t * is set to null, or because the data source itself is null).\n\t *  @type string\n\t *  @default null\n\t */\n\t\"sDefaultContent\": null,\n\t\n\t/**\n\t * Name for the column, allowing reference to the column by name as well as\n\t * by index (needs a lookup to work by name).\n\t *  @type string\n\t */\n\t\"sName\": null,\n\t\n\t/**\n\t * Custom sorting data type - defines which of the available plug-ins in\n\t * afnSortData the custom sorting will use - if any is defined.\n\t *  @type string\n\t *  @default std\n\t */\n\t\"sSortDataType\": 'std',\n\t\n\t/**\n\t * Class to be applied to the header element when sorting on this column\n\t *  @type string\n\t *  @default null\n\t */\n\t\"sSortingClass\": null,\n\t\n\t/**\n\t * Class to be applied to the header element when sorting on this column -\n\t * when jQuery UI theming is used.\n\t *  @type string\n\t *  @default null\n\t */\n\t\"sSortingClassJUI\": null,\n\t\n\t/**\n\t * Title of the column - what is seen in the TH element (nTh).\n\t *  @type string\n\t */\n\t\"sTitle\": null,\n\t\n\t/**\n\t * Column sorting and filtering type\n\t *  @type string\n\t *  @default null\n\t */\n\t\"sType\": null,\n\t\n\t/**\n\t * Width of the column\n\t *  @type string\n\t *  @default null\n\t */\n\t\"sWidth\": null,\n\t\n\t/**\n\t * Width of the column when it was first \"encountered\"\n\t *  @type string\n\t *  @default null\n\t */\n\t\"sWidthOrig\": null\n};\n\n\n\n/**\n * Initialisation options that can be given to DataTables at initialisation \n * time.\n *  @namespace\n */\nDataTable.defaults = {\n\t/**\n\t * An array of data to use for the table, passed in at initialisation which \n\t * will be used in preference to any data which is already in the DOM. This is\n\t * particularly useful for constructing tables purely in Javascript, for\n\t * example with a custom Ajax call.\n\t *  @type array\n\t *  @default null\n\t *  @dtopt Option\n\t * \n\t *  @example\n\t *    // Using a 2D array data source\n\t *    $(document).ready( function () {\n\t *      $('#example').dataTable( {\n\t *        \"aaData\": [\n\t *          ['Trident', 'Internet Explorer 4.0', 'Win 95+', 4, 'X'],\n\t *          ['Trident', 'Internet Explorer 5.0', 'Win 95+', 5, 'C'],\n\t *        ],\n\t *        \"aoColumns\": [\n\t *          { \"sTitle\": \"Engine\" },\n\t *          { \"sTitle\": \"Browser\" },\n\t *          { \"sTitle\": \"Platform\" },\n\t *          { \"sTitle\": \"Version\" },\n\t *          { \"sTitle\": \"Grade\" }\n\t *        ]\n\t *      } );\n\t *    } );\n\t *    \n\t *  @example\n\t *    // Using an array of objects as a data source (mData)\n\t *    $(document).ready( function () {\n\t *      $('#example').dataTable( {\n\t *        \"aaData\": [\n\t *          {\n\t *            \"engine\":   \"Trident\",\n\t *            \"browser\":  \"Internet Explorer 4.0\",\n\t *            \"platform\": \"Win 95+\",\n\t *            \"version\":  4,\n\t *            \"grade\":    \"X\"\n\t *          },\n\t *          {\n\t *            \"engine\":   \"Trident\",\n\t *            \"browser\":  \"Internet Explorer 5.0\",\n\t *            \"platform\": \"Win 95+\",\n\t *            \"version\":  5,\n\t *            \"grade\":    \"C\"\n\t *          }\n\t *        ],\n\t *        \"aoColumns\": [\n\t *          { \"sTitle\": \"Engine\",   \"mData\": \"engine\" },\n\t *          { \"sTitle\": \"Browser\",  \"mData\": \"browser\" },\n\t *          { \"sTitle\": \"Platform\", \"mData\": \"platform\" },\n\t *          { \"sTitle\": \"Version\",  \"mData\": \"version\" },\n\t *          { \"sTitle\": \"Grade\",    \"mData\": \"grade\" }\n\t *        ]\n\t *      } );\n\t *    } );\n\t */\n\t\"aaData\": null,\n\n\n\t/**\n\t * If sorting is enabled, then DataTables will perform a first pass sort on \n\t * initialisation. You can define which column(s) the sort is performed upon, \n\t * and the sorting direction, with this variable. The aaSorting array should \n\t * contain an array for each column to be sorted initially containing the \n\t * column's index and a direction string ('asc' or 'desc').\n\t *  @type array\n\t *  @default [[0,'asc']]\n\t *  @dtopt Option\n\t * \n\t *  @example\n\t *    // Sort by 3rd column first, and then 4th column\n\t *    $(document).ready( function() {\n\t *      $('#example').dataTable( {\n\t *        \"aaSorting\": [[2,'asc'], [3,'desc']]\n\t *      } );\n\t *    } );\n\t *    \n\t *    // No initial sorting\n\t *    $(document).ready( function() {\n\t *      $('#example').dataTable( {\n\t *        \"aaSorting\": []\n\t *      } );\n\t *    } );\n\t */\n\t\"aaSorting\": [[0,'asc']],\n\n\n\t/**\n\t * This parameter is basically identical to the aaSorting parameter, but \n\t * cannot be overridden by user interaction with the table. What this means \n\t * is that you could have a column (visible or hidden) which the sorting will \n\t * always be forced on first - any sorting after that (from the user) will \n\t * then be performed as required. This can be useful for grouping rows \n\t * together.\n\t *  @type array\n\t *  @default null\n\t *  @dtopt Option\n\t * \n\t *  @example\n\t *    $(document).ready( function() {\n\t *      $('#example').dataTable( {\n\t *        \"aaSortingFixed\": [[0,'asc']]\n\t *      } );\n\t *    } )\n\t */\n\t\"aaSortingFixed\": null,\n\n\n\t/**\n\t * This parameter allows you to readily specify the entries in the length drop\n\t * down menu that DataTables shows when pagination is enabled. It can be \n\t * either a 1D array of options which will be used for both the displayed \n\t * option and the value, or a 2D array which will use the array in the first \n\t * position as the value, and the array in the second position as the \n\t * displayed options (useful for language strings such as 'All').\n\t *  @type array\n\t *  @default [ 10, 25, 50, 100 ]\n\t *  @dtopt Option\n\t * \n\t *  @example\n\t *    $(document).ready( function() {\n\t *      $('#example').dataTable( {\n\t *        \"aLengthMenu\": [[10, 25, 50, -1], [10, 25, 50, \"All\"]]\n\t *      } );\n\t *    } );\n\t *  \n\t *  @example\n\t *    // Setting the default display length as well as length menu\n\t *    // This is likely to be wanted if you remove the '10' option which\n\t *    // is the iDisplayLength default.\n\t *    $(document).ready( function() {\n\t *      $('#example').dataTable( {\n\t *        \"iDisplayLength\": 25,\n\t *        \"aLengthMenu\": [[25, 50, 100, -1], [25, 50, 100, \"All\"]]\n\t *      } );\n\t *    } );\n\t */\n\t\"aLengthMenu\": [ 10, 25, 50, 100 ],\n\n\n\t/**\n\t * The aoColumns option in the initialisation parameter allows you to define\n\t * details about the way individual columns behave. For a full list of\n\t * column options that can be set, please see \n\t * {@link DataTable.defaults.columns}. Note that if you use aoColumns to\n\t * define your columns, you must have an entry in the array for every single\n\t * column that you have in your table (these can be null if you don't which\n\t * to specify any options).\n\t *  @member\n\t */\n\t\"aoColumns\": null,\n\n\t/**\n\t * Very similar to aoColumns, aoColumnDefs allows you to target a specific \n\t * column, multiple columns, or all columns, using the aTargets property of \n\t * each object in the array. This allows great flexibility when creating \n\t * tables, as the aoColumnDefs arrays can be of any length, targeting the \n\t * columns you specifically want. aoColumnDefs may use any of the column \n\t * options available: {@link DataTable.defaults.columns}, but it _must_\n\t * have aTargets defined in each object in the array. Values in the aTargets\n\t * array may be:\n\t *   <ul>\n\t *     <li>a string - class name will be matched on the TH for the column</li>\n\t *     <li>0 or a positive integer - column index counting from the left</li>\n\t *     <li>a negative integer - column index counting from the right</li>\n\t *     <li>the string \"_all\" - all columns (i.e. assign a default)</li>\n\t *   </ul>\n\t *  @member\n\t */\n\t\"aoColumnDefs\": null,\n\n\n\t/**\n\t * Basically the same as oSearch, this parameter defines the individual column\n\t * filtering state at initialisation time. The array must be of the same size \n\t * as the number of columns, and each element be an object with the parameters\n\t * \"sSearch\" and \"bEscapeRegex\" (the latter is optional). 'null' is also\n\t * accepted and the default will be used.\n\t *  @type array\n\t *  @default []\n\t *  @dtopt Option\n\t * \n\t *  @example\n\t *    $(document).ready( function() {\n\t *      $('#example').dataTable( {\n\t *        \"aoSearchCols\": [\n\t *          null,\n\t *          { \"sSearch\": \"My filter\" },\n\t *          null,\n\t *          { \"sSearch\": \"^[0-9]\", \"bEscapeRegex\": false }\n\t *        ]\n\t *      } );\n\t *    } )\n\t */\n\t\"aoSearchCols\": [],\n\n\n\t/**\n\t * An array of CSS classes that should be applied to displayed rows. This \n\t * array may be of any length, and DataTables will apply each class \n\t * sequentially, looping when required.\n\t *  @type array\n\t *  @default null <i>Will take the values determined by the oClasses.sStripe*\n\t *    options</i>\n\t *  @dtopt Option\n\t * \n\t *  @example\n\t *    $(document).ready( function() {\n\t *      $('#example').dataTable( {\n\t *        \"asStripeClasses\": [ 'strip1', 'strip2', 'strip3' ]\n\t *      } );\n\t *    } )\n\t */\n\t\"asStripeClasses\": null,\n\n\n\t/**\n\t * Enable or disable automatic column width calculation. This can be disabled\n\t * as an optimisation (it takes some time to calculate the widths) if the\n\t * tables widths are passed in using aoColumns.\n\t *  @type boolean\n\t *  @default true\n\t *  @dtopt Features\n\t * \n\t *  @example\n\t *    $(document).ready( function () {\n\t *      $('#example').dataTable( {\n\t *        \"bAutoWidth\": false\n\t *      } );\n\t *    } );\n\t */\n\t\"bAutoWidth\": true,\n\n\n\t/**\n\t * Deferred rendering can provide DataTables with a huge speed boost when you\n\t * are using an Ajax or JS data source for the table. This option, when set to\n\t * true, will cause DataTables to defer the creation of the table elements for\n\t * each row until they are needed for a draw - saving a significant amount of\n\t * time.\n\t *  @type boolean\n\t *  @default false\n\t *  @dtopt Features\n\t * \n\t *  @example\n\t *    $(document).ready( function() {\n\t *      var oTable = $('#example').dataTable( {\n\t *        \"sAjaxSource\": \"sources/arrays.txt\",\n\t *        \"bDeferRender\": true\n\t *      } );\n\t *    } );\n\t */\n\t\"bDeferRender\": false,\n\n\n\t/**\n\t * Replace a DataTable which matches the given selector and replace it with \n\t * one which has the properties of the new initialisation object passed. If no\n\t * table matches the selector, then the new DataTable will be constructed as\n\t * per normal.\n\t *  @type boolean\n\t *  @default false\n\t *  @dtopt Options\n\t * \n\t *  @example\n\t *    $(document).ready( function() {\n\t *      $('#example').dataTable( {\n\t *        \"sScrollY\": \"200px\",\n\t *        \"bPaginate\": false\n\t *      } );\n\t *      \n\t *      // Some time later....\n\t *      $('#example').dataTable( {\n\t *        \"bFilter\": false,\n\t *        \"bDestroy\": true\n\t *      } );\n\t *    } );\n\t */\n\t\"bDestroy\": false,\n\n\n\t/**\n\t * Enable or disable filtering of data. Filtering in DataTables is \"smart\" in\n\t * that it allows the end user to input multiple words (space separated) and\n\t * will match a row containing those words, even if not in the order that was\n\t * specified (this allow matching across multiple columns). Note that if you\n\t * wish to use filtering in DataTables this must remain 'true' - to remove the\n\t * default filtering input box and retain filtering abilities, please use\n\t * {@link DataTable.defaults.sDom}.\n\t *  @type boolean\n\t *  @default true\n\t *  @dtopt Features\n\t * \n\t *  @example\n\t *    $(document).ready( function () {\n\t *      $('#example').dataTable( {\n\t *        \"bFilter\": false\n\t *      } );\n\t *    } );\n\t */\n\t\"bFilter\": true,\n\n\n\t/**\n\t * Enable or disable the table information display. This shows information \n\t * about the data that is currently visible on the page, including information\n\t * about filtered data if that action is being performed.\n\t *  @type boolean\n\t *  @default true\n\t *  @dtopt Features\n\t * \n\t *  @example\n\t *    $(document).ready( function () {\n\t *      $('#example').dataTable( {\n\t *        \"bInfo\": false\n\t *      } );\n\t *    } );\n\t */\n\t\"bInfo\": true,\n\n\n\t/**\n\t * Enable jQuery UI ThemeRoller support (required as ThemeRoller requires some\n\t * slightly different and additional mark-up from what DataTables has\n\t * traditionally used).\n\t *  @type boolean\n\t *  @default false\n\t *  @dtopt Features\n\t * \n\t *  @example\n\t *    $(document).ready( function() {\n\t *      $('#example').dataTable( {\n\t *        \"bJQueryUI\": true\n\t *      } );\n\t *    } );\n\t */\n\t\"bJQueryUI\": false,\n\n\n\t/**\n\t * Allows the end user to select the size of a formatted page from a select\n\t * menu (sizes are 10, 25, 50 and 100). Requires pagination (bPaginate).\n\t *  @type boolean\n\t *  @default true\n\t *  @dtopt Features\n\t * \n\t *  @example\n\t *    $(document).ready( function () {\n\t *      $('#example').dataTable( {\n\t *        \"bLengthChange\": false\n\t *      } );\n\t *    } );\n\t */\n\t\"bLengthChange\": true,\n\n\n\t/**\n\t * Enable or disable pagination.\n\t *  @type boolean\n\t *  @default true\n\t *  @dtopt Features\n\t * \n\t *  @example\n\t *    $(document).ready( function () {\n\t *      $('#example').dataTable( {\n\t *        \"bPaginate\": false\n\t *      } );\n\t *    } );\n\t */\n\t\"bPaginate\": true,\n\n\n\t/**\n\t * Enable or disable the display of a 'processing' indicator when the table is\n\t * being processed (e.g. a sort). This is particularly useful for tables with\n\t * large amounts of data where it can take a noticeable amount of time to sort\n\t * the entries.\n\t *  @type boolean\n\t *  @default false\n\t *  @dtopt Features\n\t * \n\t *  @example\n\t *    $(document).ready( function () {\n\t *      $('#example').dataTable( {\n\t *        \"bProcessing\": true\n\t *      } );\n\t *    } );\n\t */\n\t\"bProcessing\": false,\n\n\n\t/**\n\t * Retrieve the DataTables object for the given selector. Note that if the\n\t * table has already been initialised, this parameter will cause DataTables\n\t * to simply return the object that has already been set up - it will not take\n\t * account of any changes you might have made to the initialisation object\n\t * passed to DataTables (setting this parameter to true is an acknowledgement\n\t * that you understand this). bDestroy can be used to reinitialise a table if\n\t * you need.\n\t *  @type boolean\n\t *  @default false\n\t *  @dtopt Options\n\t * \n\t *  @example\n\t *    $(document).ready( function() {\n\t *      initTable();\n\t *      tableActions();\n\t *    } );\n\t *    \n\t *    function initTable ()\n\t *    {\n\t *      return $('#example').dataTable( {\n\t *        \"sScrollY\": \"200px\",\n\t *        \"bPaginate\": false,\n\t *        \"bRetrieve\": true\n\t *      } );\n\t *    }\n\t *    \n\t *    function tableActions ()\n\t *    {\n\t *      var oTable = initTable();\n\t *      // perform API operations with oTable \n\t *    }\n\t */\n\t\"bRetrieve\": false,\n\n\n\t/**\n\t * Indicate if DataTables should be allowed to set the padding / margin\n\t * etc for the scrolling header elements or not. Typically you will want\n\t * this.\n\t *  @type boolean\n\t *  @default true\n\t *  @dtopt Options\n\t * \n\t *  @example\n\t *    $(document).ready( function() {\n\t *      $('#example').dataTable( {\n\t *        \"bScrollAutoCss\": false,\n\t *        \"sScrollY\": \"200px\"\n\t *      } );\n\t *    } );\n\t */\n\t\"bScrollAutoCss\": true,\n\n\n\t/**\n\t * When vertical (y) scrolling is enabled, DataTables will force the height of\n\t * the table's viewport to the given height at all times (useful for layout).\n\t * However, this can look odd when filtering data down to a small data set,\n\t * and the footer is left \"floating\" further down. This parameter (when\n\t * enabled) will cause DataTables to collapse the table's viewport down when\n\t * the result set will fit within the given Y height.\n\t *  @type boolean\n\t *  @default false\n\t *  @dtopt Options\n\t * \n\t *  @example\n\t *    $(document).ready( function() {\n\t *      $('#example').dataTable( {\n\t *        \"sScrollY\": \"200\",\n\t *        \"bScrollCollapse\": true\n\t *      } );\n\t *    } );\n\t */\n\t\"bScrollCollapse\": false,\n\n\n\t/**\n\t * Enable infinite scrolling for DataTables (to be used in combination with\n\t * sScrollY). Infinite scrolling means that DataTables will continually load\n\t * data as a user scrolls through a table, which is very useful for large\n\t * dataset. This cannot be used with pagination, which is automatically\n\t * disabled. Note - the Scroller extra for DataTables is recommended in\n\t * in preference to this option.\n\t *  @type boolean\n\t *  @default false\n\t *  @dtopt Features\n\t * \n\t *  @example\n\t *    $(document).ready( function() {\n\t *      $('#example').dataTable( {\n\t *        \"bScrollInfinite\": true,\n\t *        \"bScrollCollapse\": true,\n\t *        \"sScrollY\": \"200px\"\n\t *      } );\n\t *    } );\n\t */\n\t\"bScrollInfinite\": false,\n\n\n\t/**\n\t * Configure DataTables to use server-side processing. Note that the\n\t * sAjaxSource parameter must also be given in order to give DataTables a\n\t * source to obtain the required data for each draw.\n\t *  @type boolean\n\t *  @default false\n\t *  @dtopt Features\n\t *  @dtopt Server-side\n\t * \n\t *  @example\n\t *    $(document).ready( function () {\n\t *      $('#example').dataTable( {\n\t *        \"bServerSide\": true,\n\t *        \"sAjaxSource\": \"xhr.php\"\n\t *      } );\n\t *    } );\n\t */\n\t\"bServerSide\": false,\n\n\n\t/**\n\t * Enable or disable sorting of columns. Sorting of individual columns can be\n\t * disabled by the \"bSortable\" option for each column.\n\t *  @type boolean\n\t *  @default true\n\t *  @dtopt Features\n\t * \n\t *  @example\n\t *    $(document).ready( function () {\n\t *      $('#example').dataTable( {\n\t *        \"bSort\": false\n\t *      } );\n\t *    } );\n\t */\n\t\"bSort\": true,\n\n\n\t/**\n\t * Allows control over whether DataTables should use the top (true) unique\n\t * cell that is found for a single column, or the bottom (false - default).\n\t * This is useful when using complex headers.\n\t *  @type boolean\n\t *  @default false\n\t *  @dtopt Options\n\t * \n\t *  @example\n\t *    $(document).ready( function() {\n\t *      $('#example').dataTable( {\n\t *        \"bSortCellsTop\": true\n\t *      } );\n\t *    } );\n\t */\n\t\"bSortCellsTop\": false,\n\n\n\t/**\n\t * Enable or disable the addition of the classes 'sorting_1', 'sorting_2' and\n\t * 'sorting_3' to the columns which are currently being sorted on. This is\n\t * presented as a feature switch as it can increase processing time (while\n\t * classes are removed and added) so for large data sets you might want to\n\t * turn this off.\n\t *  @type boolean\n\t *  @default true\n\t *  @dtopt Features\n\t * \n\t *  @example\n\t *    $(document).ready( function () {\n\t *      $('#example').dataTable( {\n\t *        \"bSortClasses\": false\n\t *      } );\n\t *    } );\n\t */\n\t\"bSortClasses\": true,\n\n\n\t/**\n\t * Enable or disable state saving. When enabled a cookie will be used to save\n\t * table display information such as pagination information, display length,\n\t * filtering and sorting. As such when the end user reloads the page the\n\t * display display will match what thy had previously set up.\n\t *  @type boolean\n\t *  @default false\n\t *  @dtopt Features\n\t * \n\t *  @example\n\t *    $(document).ready( function () {\n\t *      $('#example').dataTable( {\n\t *        \"bStateSave\": true\n\t *      } );\n\t *    } );\n\t */\n\t\"bStateSave\": false,\n\n\n\t/**\n\t * Customise the cookie and / or the parameters being stored when using\n\t * DataTables with state saving enabled. This function is called whenever\n\t * the cookie is modified, and it expects a fully formed cookie string to be\n\t * returned. Note that the data object passed in is a Javascript object which\n\t * must be converted to a string (JSON.stringify for example).\n\t *  @type function\n\t *  @param {string} sName Name of the cookie defined by DataTables\n\t *  @param {object} oData Data to be stored in the cookie\n\t *  @param {string} sExpires Cookie expires string\n\t *  @param {string} sPath Path of the cookie to set\n\t *  @returns {string} Cookie formatted string (which should be encoded by\n\t *    using encodeURIComponent())\n\t *  @dtopt Callbacks\n\t * \n\t *  @example\n\t *    $(document).ready( function () {\n\t *      $('#example').dataTable( {\n\t *        \"fnCookieCallback\": function (sName, oData, sExpires, sPath) {\n\t *          // Customise oData or sName or whatever else here\n\t *          return sName + \"=\"+JSON.stringify(oData)+\"; expires=\" + sExpires +\"; path=\" + sPath;\n\t *        }\n\t *      } );\n\t *    } );\n\t */\n\t\"fnCookieCallback\": null,\n\n\n\t/**\n\t * This function is called when a TR element is created (and all TD child\n\t * elements have been inserted), or registered if using a DOM source, allowing\n\t * manipulation of the TR element (adding classes etc).\n\t *  @type function\n\t *  @param {node} nRow \"TR\" element for the current row\n\t *  @param {array} aData Raw data array for this row\n\t *  @param {int} iDataIndex The index of this row in aoData\n\t *  @dtopt Callbacks\n\t * \n\t *  @example\n\t *    $(document).ready( function() {\n\t *      $('#example').dataTable( {\n\t *        \"fnCreatedRow\": function( nRow, aData, iDataIndex ) {\n\t *          // Bold the grade for all 'A' grade browsers\n\t *          if ( aData[4] == \"A\" )\n\t *          {\n\t *            $('td:eq(4)', nRow).html( '<b>A</b>' );\n\t *          }\n\t *        }\n\t *      } );\n\t *    } );\n\t */\n\t\"fnCreatedRow\": null,\n\n\n\t/**\n\t * This function is called on every 'draw' event, and allows you to\n\t * dynamically modify any aspect you want about the created DOM.\n\t *  @type function\n\t *  @param {object} oSettings DataTables settings object\n\t *  @dtopt Callbacks\n\t * \n\t *  @example\n\t *    $(document).ready( function() {\n\t *      $('#example').dataTable( {\n\t *        \"fnDrawCallback\": function( oSettings ) {\n\t *          alert( 'DataTables has redrawn the table' );\n\t *        }\n\t *      } );\n\t *    } );\n\t */\n\t\"fnDrawCallback\": null,\n\n\n\t/**\n\t * Identical to fnHeaderCallback() but for the table footer this function\n\t * allows you to modify the table footer on every 'draw' even.\n\t *  @type function\n\t *  @param {node} nFoot \"TR\" element for the footer\n\t *  @param {array} aData Full table data (as derived from the original HTML)\n\t *  @param {int} iStart Index for the current display starting point in the \n\t *    display array\n\t *  @param {int} iEnd Index for the current display ending point in the \n\t *    display array\n\t *  @param {array int} aiDisplay Index array to translate the visual position\n\t *    to the full data array\n\t *  @dtopt Callbacks\n\t * \n\t *  @example\n\t *    $(document).ready( function() {\n\t *      $('#example').dataTable( {\n\t *        \"fnFooterCallback\": function( nFoot, aData, iStart, iEnd, aiDisplay ) {\n\t *          nFoot.getElementsByTagName('th')[0].innerHTML = \"Starting index is \"+iStart;\n\t *        }\n\t *      } );\n\t *    } )\n\t */\n\t\"fnFooterCallback\": null,\n\n\n\t/**\n\t * When rendering large numbers in the information element for the table\n\t * (i.e. \"Showing 1 to 10 of 57 entries\") DataTables will render large numbers\n\t * to have a comma separator for the 'thousands' units (e.g. 1 million is\n\t * rendered as \"1,000,000\") to help readability for the end user. This\n\t * function will override the default method DataTables uses.\n\t *  @type function\n\t *  @member\n\t *  @param {int} iIn number to be formatted\n\t *  @returns {string} formatted string for DataTables to show the number\n\t *  @dtopt Callbacks\n\t * \n\t *  @example\n\t *    $(document).ready( function() {\n\t *      $('#example').dataTable( {\n\t *        \"fnFormatNumber\": function ( iIn ) {\n\t *          if ( iIn &lt; 1000 ) {\n\t *            return iIn;\n\t *          } else {\n\t *            var \n\t *              s=(iIn+\"\"), \n\t *              a=s.split(\"\"), out=\"\", \n\t *              iLen=s.length;\n\t *            \n\t *            for ( var i=0 ; i&lt;iLen ; i++ ) {\n\t *              if ( i%3 === 0 &amp;&amp; i !== 0 ) {\n\t *                out = \"'\"+out;\n\t *              }\n\t *              out = a[iLen-i-1]+out;\n\t *            }\n\t *          }\n\t *          return out;\n\t *        };\n\t *      } );\n\t *    } );\n\t */\n\t\"fnFormatNumber\": function ( iIn ) {\n\t\tif ( iIn < 1000 )\n\t\t{\n\t\t\t// A small optimisation for what is likely to be the majority of use cases\n\t\t\treturn iIn;\n\t\t}\n\n\t\tvar s=(iIn+\"\"), a=s.split(\"\"), out=\"\", iLen=s.length;\n\t\t\n\t\tfor ( var i=0 ; i<iLen ; i++ )\n\t\t{\n\t\t\tif ( i%3 === 0 && i !== 0 )\n\t\t\t{\n\t\t\t\tout = this.oLanguage.sInfoThousands+out;\n\t\t\t}\n\t\t\tout = a[iLen-i-1]+out;\n\t\t}\n\t\treturn out;\n\t},\n\n\n\t/**\n\t * This function is called on every 'draw' event, and allows you to\n\t * dynamically modify the header row. This can be used to calculate and\n\t * display useful information about the table.\n\t *  @type function\n\t *  @param {node} nHead \"TR\" element for the header\n\t *  @param {array} aData Full table data (as derived from the original HTML)\n\t *  @param {int} iStart Index for the current display starting point in the\n\t *    display array\n\t *  @param {int} iEnd Index for the current display ending point in the\n\t *    display array\n\t *  @param {array int} aiDisplay Index array to translate the visual position\n\t *    to the full data array\n\t *  @dtopt Callbacks\n\t * \n\t *  @example\n\t *    $(document).ready( function() {\n\t *      $('#example').dataTable( {\n\t *        \"fnHeaderCallback\": function( nHead, aData, iStart, iEnd, aiDisplay ) {\n\t *          nHead.getElementsByTagName('th')[0].innerHTML = \"Displaying \"+(iEnd-iStart)+\" records\";\n\t *        }\n\t *      } );\n\t *    } )\n\t */\n\t\"fnHeaderCallback\": null,\n\n\n\t/**\n\t * The information element can be used to convey information about the current\n\t * state of the table. Although the internationalisation options presented by\n\t * DataTables are quite capable of dealing with most customisations, there may\n\t * be times where you wish to customise the string further. This callback\n\t * allows you to do exactly that.\n\t *  @type function\n\t *  @param {object} oSettings DataTables settings object\n\t *  @param {int} iStart Starting position in data for the draw\n\t *  @param {int} iEnd End position in data for the draw\n\t *  @param {int} iMax Total number of rows in the table (regardless of\n\t *    filtering)\n\t *  @param {int} iTotal Total number of rows in the data set, after filtering\n\t *  @param {string} sPre The string that DataTables has formatted using it's\n\t *    own rules\n\t *  @returns {string} The string to be displayed in the information element.\n\t *  @dtopt Callbacks\n\t * \n\t *  @example\n\t *    $('#example').dataTable( {\n\t *      \"fnInfoCallback\": function( oSettings, iStart, iEnd, iMax, iTotal, sPre ) {\n\t *        return iStart +\" to \"+ iEnd;\n\t *      }\n\t *    } );\n\t */\n\t\"fnInfoCallback\": null,\n\n\n\t/**\n\t * Called when the table has been initialised. Normally DataTables will\n\t * initialise sequentially and there will be no need for this function,\n\t * however, this does not hold true when using external language information\n\t * since that is obtained using an async XHR call.\n\t *  @type function\n\t *  @param {object} oSettings DataTables settings object\n\t *  @param {object} json The JSON object request from the server - only\n\t *    present if client-side Ajax sourced data is used\n\t *  @dtopt Callbacks\n\t * \n\t *  @example\n\t *    $(document).ready( function() {\n\t *      $('#example').dataTable( {\n\t *        \"fnInitComplete\": function(oSettings, json) {\n\t *          alert( 'DataTables has finished its initialisation.' );\n\t *        }\n\t *      } );\n\t *    } )\n\t */\n\t\"fnInitComplete\": null,\n\n\n\t/**\n\t * Called at the very start of each table draw and can be used to cancel the\n\t * draw by returning false, any other return (including undefined) results in\n\t * the full draw occurring).\n\t *  @type function\n\t *  @param {object} oSettings DataTables settings object\n\t *  @returns {boolean} False will cancel the draw, anything else (including no\n\t *    return) will allow it to complete.\n\t *  @dtopt Callbacks\n\t * \n\t *  @example\n\t *    $(document).ready( function() {\n\t *      $('#example').dataTable( {\n\t *        \"fnPreDrawCallback\": function( oSettings ) {\n\t *          if ( $('#test').val() == 1 ) {\n\t *            return false;\n\t *          }\n\t *        }\n\t *      } );\n\t *    } );\n\t */\n\t\"fnPreDrawCallback\": null,\n\n\n\t/**\n\t * This function allows you to 'post process' each row after it have been\n\t * generated for each table draw, but before it is rendered on screen. This\n\t * function might be used for setting the row class name etc.\n\t *  @type function\n\t *  @param {node} nRow \"TR\" element for the current row\n\t *  @param {array} aData Raw data array for this row\n\t *  @param {int} iDisplayIndex The display index for the current table draw\n\t *  @param {int} iDisplayIndexFull The index of the data in the full list of\n\t *    rows (after filtering)\n\t *  @dtopt Callbacks\n\t * \n\t *  @example\n\t *    $(document).ready( function() {\n\t *      $('#example').dataTable( {\n\t *        \"fnRowCallback\": function( nRow, aData, iDisplayIndex, iDisplayIndexFull ) {\n\t *          // Bold the grade for all 'A' grade browsers\n\t *          if ( aData[4] == \"A\" )\n\t *          {\n\t *            $('td:eq(4)', nRow).html( '<b>A</b>' );\n\t *          }\n\t *        }\n\t *      } );\n\t *    } );\n\t */\n\t\"fnRowCallback\": null,\n\n\n\t/**\n\t * This parameter allows you to override the default function which obtains\n\t * the data from the server ($.getJSON) so something more suitable for your\n\t * application. For example you could use POST data, or pull information from\n\t * a Gears or AIR database.\n\t *  @type function\n\t *  @member\n\t *  @param {string} sSource HTTP source to obtain the data from (sAjaxSource)\n\t *  @param {array} aoData A key/value pair object containing the data to send\n\t *    to the server\n\t *  @param {function} fnCallback to be called on completion of the data get\n\t *    process that will draw the data on the page.\n\t *  @param {object} oSettings DataTables settings object\n\t *  @dtopt Callbacks\n\t *  @dtopt Server-side\n\t * \n\t *  @example\n\t *    // POST data to server\n\t *    $(document).ready( function() {\n\t *      $('#example').dataTable( {\n\t *        \"bProcessing\": true,\n\t *        \"bServerSide\": true,\n\t *        \"sAjaxSource\": \"xhr.php\",\n\t *        \"fnServerData\": function ( sSource, aoData, fnCallback, oSettings ) {\n\t *          oSettings.jqXHR = $.ajax( {\n\t *            \"dataType\": 'json', \n\t *            \"type\": \"POST\", \n\t *            \"url\": sSource, \n\t *            \"data\": aoData, \n\t *            \"success\": fnCallback\n\t *          } );\n\t *        }\n\t *      } );\n\t *    } );\n\t */\n\t\"fnServerData\": function ( sUrl, aoData, fnCallback, oSettings ) {\n\t\toSettings.jqXHR = $.ajax( {\n\t\t\t\"url\":  sUrl,\n\t\t\t\"data\": aoData,\n\t\t\t\"success\": function (json) {\n\t\t\t\tif ( json.sError ) {\n\t\t\t\t\toSettings.oApi._fnLog( oSettings, 0, json.sError );\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\t$(oSettings.oInstance).trigger('xhr', [oSettings, json]);\n\t\t\t\tfnCallback( json );\n\t\t\t},\n\t\t\t\"dataType\": \"json\",\n\t\t\t\"cache\": false,\n\t\t\t\"type\": oSettings.sServerMethod,\n\t\t\t\"error\": function (xhr, error, thrown) {\n\t\t\t\tif ( error == \"parsererror\" ) {\n\t\t\t\t\toSettings.oApi._fnLog( oSettings, 0, \"DataTables warning: JSON data from \"+\n\t\t\t\t\t\t\"server could not be parsed. This is caused by a JSON formatting error.\" );\n\t\t\t\t}\n\t\t\t}\n\t\t} );\n\t},\n\n\n\t/**\n\t * It is often useful to send extra data to the server when making an Ajax\n\t * request - for example custom filtering information, and this callback\n\t * function makes it trivial to send extra information to the server. The\n\t * passed in parameter is the data set that has been constructed by\n\t * DataTables, and you can add to this or modify it as you require.\n\t *  @type function\n\t *  @param {array} aoData Data array (array of objects which are name/value\n\t *    pairs) that has been constructed by DataTables and will be sent to the\n\t *    server. In the case of Ajax sourced data with server-side processing\n\t *    this will be an empty array, for server-side processing there will be a\n\t *    significant number of parameters!\n\t *  @returns {undefined} Ensure that you modify the aoData array passed in,\n\t *    as this is passed by reference.\n\t *  @dtopt Callbacks\n\t *  @dtopt Server-side\n\t * \n\t *  @example\n\t *    $(document).ready( function() {\n\t *      $('#example').dataTable( {\n\t *        \"bProcessing\": true,\n\t *        \"bServerSide\": true,\n\t *        \"sAjaxSource\": \"scripts/server_processing.php\",\n\t *        \"fnServerParams\": function ( aoData ) {\n\t *          aoData.push( { \"name\": \"more_data\", \"value\": \"my_value\" } );\n\t *        }\n\t *      } );\n\t *    } );\n\t */\n\t\"fnServerParams\": null,\n\n\n\t/**\n\t * Load the table state. With this function you can define from where, and how, the\n\t * state of a table is loaded. By default DataTables will load from its state saving\n\t * cookie, but you might wish to use local storage (HTML5) or a server-side database.\n\t *  @type function\n\t *  @member\n\t *  @param {object} oSettings DataTables settings object\n\t *  @return {object} The DataTables state object to be loaded\n\t *  @dtopt Callbacks\n\t * \n\t *  @example\n\t *    $(document).ready( function() {\n\t *      $('#example').dataTable( {\n\t *        \"bStateSave\": true,\n\t *        \"fnStateLoad\": function (oSettings) {\n\t *          var o;\n\t *          \n\t *          // Send an Ajax request to the server to get the data. Note that\n\t *          // this is a synchronous request.\n\t *          $.ajax( {\n\t *            \"url\": \"/state_load\",\n\t *            \"async\": false,\n\t *            \"dataType\": \"json\",\n\t *            \"success\": function (json) {\n\t *              o = json;\n\t *            }\n\t *          } );\n\t *          \n\t *          return o;\n\t *        }\n\t *      } );\n\t *    } );\n\t */\n\t\"fnStateLoad\": function ( oSettings ) {\n\t\tvar sData = this.oApi._fnReadCookie( oSettings.sCookiePrefix+oSettings.sInstance );\n\t\tvar oData;\n\n\t\ttry {\n\t\t\toData = (typeof $.parseJSON === 'function') ? \n\t\t\t\t$.parseJSON(sData) : eval( '('+sData+')' );\n\t\t} catch (e) {\n\t\t\toData = null;\n\t\t}\n\n\t\treturn oData;\n\t},\n\n\n\t/**\n\t * Callback which allows modification of the saved state prior to loading that state.\n\t * This callback is called when the table is loading state from the stored data, but\n\t * prior to the settings object being modified by the saved state. Note that for \n\t * plug-in authors, you should use the 'stateLoadParams' event to load parameters for \n\t * a plug-in.\n\t *  @type function\n\t *  @param {object} oSettings DataTables settings object\n\t *  @param {object} oData The state object that is to be loaded\n\t *  @dtopt Callbacks\n\t * \n\t *  @example\n\t *    // Remove a saved filter, so filtering is never loaded\n\t *    $(document).ready( function() {\n\t *      $('#example').dataTable( {\n\t *        \"bStateSave\": true,\n\t *        \"fnStateLoadParams\": function (oSettings, oData) {\n\t *          oData.oSearch.sSearch = \"\";\n\t *        }\n\t *      } );\n\t *    } );\n\t * \n\t *  @example\n\t *    // Disallow state loading by returning false\n\t *    $(document).ready( function() {\n\t *      $('#example').dataTable( {\n\t *        \"bStateSave\": true,\n\t *        \"fnStateLoadParams\": function (oSettings, oData) {\n\t *          return false;\n\t *        }\n\t *      } );\n\t *    } );\n\t */\n\t\"fnStateLoadParams\": null,\n\n\n\t/**\n\t * Callback that is called when the state has been loaded from the state saving method\n\t * and the DataTables settings object has been modified as a result of the loaded state.\n\t *  @type function\n\t *  @param {object} oSettings DataTables settings object\n\t *  @param {object} oData The state object that was loaded\n\t *  @dtopt Callbacks\n\t * \n\t *  @example\n\t *    // Show an alert with the filtering value that was saved\n\t *    $(document).ready( function() {\n\t *      $('#example').dataTable( {\n\t *        \"bStateSave\": true,\n\t *        \"fnStateLoaded\": function (oSettings, oData) {\n\t *          alert( 'Saved filter was: '+oData.oSearch.sSearch );\n\t *        }\n\t *      } );\n\t *    } );\n\t */\n\t\"fnStateLoaded\": null,\n\n\n\t/**\n\t * Save the table state. This function allows you to define where and how the state\n\t * information for the table is stored - by default it will use a cookie, but you\n\t * might want to use local storage (HTML5) or a server-side database.\n\t *  @type function\n\t *  @member\n\t *  @param {object} oSettings DataTables settings object\n\t *  @param {object} oData The state object to be saved\n\t *  @dtopt Callbacks\n\t * \n\t *  @example\n\t *    $(document).ready( function() {\n\t *      $('#example').dataTable( {\n\t *        \"bStateSave\": true,\n\t *        \"fnStateSave\": function (oSettings, oData) {\n\t *          // Send an Ajax request to the server with the state object\n\t *          $.ajax( {\n\t *            \"url\": \"/state_save\",\n\t *            \"data\": oData,\n\t *            \"dataType\": \"json\",\n\t *            \"method\": \"POST\"\n\t *            \"success\": function () {}\n\t *          } );\n\t *        }\n\t *      } );\n\t *    } );\n\t */\n\t\"fnStateSave\": function ( oSettings, oData ) {\n\t\tthis.oApi._fnCreateCookie( \n\t\t\toSettings.sCookiePrefix+oSettings.sInstance, \n\t\t\tthis.oApi._fnJsonString(oData), \n\t\t\toSettings.iCookieDuration, \n\t\t\toSettings.sCookiePrefix, \n\t\t\toSettings.fnCookieCallback\n\t\t);\n\t},\n\n\n\t/**\n\t * Callback which allows modification of the state to be saved. Called when the table \n\t * has changed state a new state save is required. This method allows modification of\n\t * the state saving object prior to actually doing the save, including addition or \n\t * other state properties or modification. Note that for plug-in authors, you should \n\t * use the 'stateSaveParams' event to save parameters for a plug-in.\n\t *  @type function\n\t *  @param {object} oSettings DataTables settings object\n\t *  @param {object} oData The state object to be saved\n\t *  @dtopt Callbacks\n\t * \n\t *  @example\n\t *    // Remove a saved filter, so filtering is never saved\n\t *    $(document).ready( function() {\n\t *      $('#example').dataTable( {\n\t *        \"bStateSave\": true,\n\t *        \"fnStateSaveParams\": function (oSettings, oData) {\n\t *          oData.oSearch.sSearch = \"\";\n\t *        }\n\t *      } );\n\t *    } );\n\t */\n\t\"fnStateSaveParams\": null,\n\n\n\t/**\n\t * Duration of the cookie which is used for storing session information. This\n\t * value is given in seconds.\n\t *  @type int\n\t *  @default 7200 <i>(2 hours)</i>\n\t *  @dtopt Options\n\t * \n\t *  @example\n\t *    $(document).ready( function() {\n\t *      $('#example').dataTable( {\n\t *        \"iCookieDuration\": 60*60*24; // 1 day\n\t *      } );\n\t *    } )\n\t */\n\t\"iCookieDuration\": 7200,\n\n\n\t/**\n\t * When enabled DataTables will not make a request to the server for the first\n\t * page draw - rather it will use the data already on the page (no sorting etc\n\t * will be applied to it), thus saving on an XHR at load time. iDeferLoading\n\t * is used to indicate that deferred loading is required, but it is also used\n\t * to tell DataTables how many records there are in the full table (allowing\n\t * the information element and pagination to be displayed correctly). In the case\n\t * where a filtering is applied to the table on initial load, this can be\n\t * indicated by giving the parameter as an array, where the first element is\n\t * the number of records available after filtering and the second element is the\n\t * number of records without filtering (allowing the table information element\n\t * to be shown correctly).\n\t *  @type int | array\n\t *  @default null\n\t *  @dtopt Options\n\t * \n\t *  @example\n\t *    // 57 records available in the table, no filtering applied\n\t *    $(document).ready( function() {\n\t *      $('#example').dataTable( {\n\t *        \"bServerSide\": true,\n\t *        \"sAjaxSource\": \"scripts/server_processing.php\",\n\t *        \"iDeferLoading\": 57\n\t *      } );\n\t *    } );\n\t * \n\t *  @example\n\t *    // 57 records after filtering, 100 without filtering (an initial filter applied)\n\t *    $(document).ready( function() {\n\t *      $('#example').dataTable( {\n\t *        \"bServerSide\": true,\n\t *        \"sAjaxSource\": \"scripts/server_processing.php\",\n\t *        \"iDeferLoading\": [ 57, 100 ],\n\t *        \"oSearch\": {\n\t *          \"sSearch\": \"my_filter\"\n\t *        }\n\t *      } );\n\t *    } );\n\t */\n\t\"iDeferLoading\": null,\n\n\n\t/**\n\t * Number of rows to display on a single page when using pagination. If\n\t * feature enabled (bLengthChange) then the end user will be able to override\n\t * this to a custom setting using a pop-up menu.\n\t *  @type int\n\t *  @default 10\n\t *  @dtopt Options\n\t * \n\t *  @example\n\t *    $(document).ready( function() {\n\t *      $('#example').dataTable( {\n\t *        \"iDisplayLength\": 50\n\t *      } );\n\t *    } )\n\t */\n\t\"iDisplayLength\": 10,\n\n\n\t/**\n\t * Define the starting point for data display when using DataTables with\n\t * pagination. Note that this parameter is the number of records, rather than\n\t * the page number, so if you have 10 records per page and want to start on\n\t * the third page, it should be \"20\".\n\t *  @type int\n\t *  @default 0\n\t *  @dtopt Options\n\t * \n\t *  @example\n\t *    $(document).ready( function() {\n\t *      $('#example').dataTable( {\n\t *        \"iDisplayStart\": 20\n\t *      } );\n\t *    } )\n\t */\n\t\"iDisplayStart\": 0,\n\n\n\t/**\n\t * The scroll gap is the amount of scrolling that is left to go before\n\t * DataTables will load the next 'page' of data automatically. You typically\n\t * want a gap which is big enough that the scrolling will be smooth for the\n\t * user, while not so large that it will load more data than need.\n\t *  @type int\n\t *  @default 100\n\t *  @dtopt Options\n\t * \n\t *  @example\n\t *    $(document).ready( function() {\n\t *      $('#example').dataTable( {\n\t *        \"bScrollInfinite\": true,\n\t *        \"bScrollCollapse\": true,\n\t *        \"sScrollY\": \"200px\",\n\t *        \"iScrollLoadGap\": 50\n\t *      } );\n\t *    } );\n\t */\n\t\"iScrollLoadGap\": 100,\n\n\n\t/**\n\t * By default DataTables allows keyboard navigation of the table (sorting, paging,\n\t * and filtering) by adding a tabindex attribute to the required elements. This\n\t * allows you to tab through the controls and press the enter key to activate them.\n\t * The tabindex is default 0, meaning that the tab follows the flow of the document.\n\t * You can overrule this using this parameter if you wish. Use a value of -1 to\n\t * disable built-in keyboard navigation.\n\t *  @type int\n\t *  @default 0\n\t *  @dtopt Options\n\t * \n\t *  @example\n\t *    $(document).ready( function() {\n\t *      $('#example').dataTable( {\n\t *        \"iTabIndex\": 1\n\t *      } );\n\t *    } );\n\t */\n\t\"iTabIndex\": 0,\n\n\n\t/**\n\t * All strings that DataTables uses in the user interface that it creates\n\t * are defined in this object, allowing you to modified them individually or\n\t * completely replace them all as required.\n\t *  @namespace\n\t */\n\t\"oLanguage\": {\n\t\t/**\n\t\t * Strings that are used for WAI-ARIA labels and controls only (these are not\n\t\t * actually visible on the page, but will be read by screenreaders, and thus\n\t\t * must be internationalised as well).\n\t\t *  @namespace\n\t\t */\n\t\t\"oAria\": {\n\t\t\t/**\n\t\t\t * ARIA label that is added to the table headers when the column may be\n\t\t\t * sorted ascending by activing the column (click or return when focused).\n\t\t\t * Note that the column header is prefixed to this string.\n\t\t\t *  @type string\n\t\t\t *  @default : activate to sort column ascending\n\t\t\t *  @dtopt Language\n\t\t\t * \n\t\t\t *  @example\n\t\t\t *    $(document).ready( function() {\n\t\t\t *      $('#example').dataTable( {\n\t\t\t *        \"oLanguage\": {\n\t\t\t *          \"oAria\": {\n\t\t\t *            \"sSortAscending\": \" - click/return to sort ascending\"\n\t\t\t *          }\n\t\t\t *        }\n\t\t\t *      } );\n\t\t\t *    } );\n\t\t\t */\n\t\t\t\"sSortAscending\": \": activate to sort column ascending\",\n\n\t\t\t/**\n\t\t\t * ARIA label that is added to the table headers when the column may be\n\t\t\t * sorted descending by activing the column (click or return when focused).\n\t\t\t * Note that the column header is prefixed to this string.\n\t\t\t *  @type string\n\t\t\t *  @default : activate to sort column ascending\n\t\t\t *  @dtopt Language\n\t\t\t * \n\t\t\t *  @example\n\t\t\t *    $(document).ready( function() {\n\t\t\t *      $('#example').dataTable( {\n\t\t\t *        \"oLanguage\": {\n\t\t\t *          \"oAria\": {\n\t\t\t *            \"sSortDescending\": \" - click/return to sort descending\"\n\t\t\t *          }\n\t\t\t *        }\n\t\t\t *      } );\n\t\t\t *    } );\n\t\t\t */\n\t\t\t\"sSortDescending\": \": activate to sort column descending\"\n\t\t},\n\n\t\t/**\n\t\t * Pagination string used by DataTables for the two built-in pagination\n\t\t * control types (\"two_button\" and \"full_numbers\")\n\t\t *  @namespace\n\t\t */\n\t\t\"oPaginate\": {\n\t\t\t/**\n\t\t\t * Text to use when using the 'full_numbers' type of pagination for the\n\t\t\t * button to take the user to the first page.\n\t\t\t *  @type string\n\t\t\t *  @default First\n\t\t\t *  @dtopt Language\n\t\t\t * \n\t\t\t *  @example\n\t\t\t *    $(document).ready( function() {\n\t\t\t *      $('#example').dataTable( {\n\t\t\t *        \"oLanguage\": {\n\t\t\t *          \"oPaginate\": {\n\t\t\t *            \"sFirst\": \"First page\"\n\t\t\t *          }\n\t\t\t *        }\n\t\t\t *      } );\n\t\t\t *    } );\n\t\t\t */\n\t\t\t\"sFirst\": \"First\",\n\t\t\n\t\t\n\t\t\t/**\n\t\t\t * Text to use when using the 'full_numbers' type of pagination for the\n\t\t\t * button to take the user to the last page.\n\t\t\t *  @type string\n\t\t\t *  @default Last\n\t\t\t *  @dtopt Language\n\t\t\t * \n\t\t\t *  @example\n\t\t\t *    $(document).ready( function() {\n\t\t\t *      $('#example').dataTable( {\n\t\t\t *        \"oLanguage\": {\n\t\t\t *          \"oPaginate\": {\n\t\t\t *            \"sLast\": \"Last page\"\n\t\t\t *          }\n\t\t\t *        }\n\t\t\t *      } );\n\t\t\t *    } );\n\t\t\t */\n\t\t\t\"sLast\": \"Last\",\n\t\t\n\t\t\n\t\t\t/**\n\t\t\t * Text to use for the 'next' pagination button (to take the user to the \n\t\t\t * next page).\n\t\t\t *  @type string\n\t\t\t *  @default Next\n\t\t\t *  @dtopt Language\n\t\t\t * \n\t\t\t *  @example\n\t\t\t *    $(document).ready( function() {\n\t\t\t *      $('#example').dataTable( {\n\t\t\t *        \"oLanguage\": {\n\t\t\t *          \"oPaginate\": {\n\t\t\t *            \"sNext\": \"Next page\"\n\t\t\t *          }\n\t\t\t *        }\n\t\t\t *      } );\n\t\t\t *    } );\n\t\t\t */\n\t\t\t\"sNext\": \"Next\",\n\t\t\n\t\t\n\t\t\t/**\n\t\t\t * Text to use for the 'previous' pagination button (to take the user to  \n\t\t\t * the previous page).\n\t\t\t *  @type string\n\t\t\t *  @default Previous\n\t\t\t *  @dtopt Language\n\t\t\t * \n\t\t\t *  @example\n\t\t\t *    $(document).ready( function() {\n\t\t\t *      $('#example').dataTable( {\n\t\t\t *        \"oLanguage\": {\n\t\t\t *          \"oPaginate\": {\n\t\t\t *            \"sPrevious\": \"Previous page\"\n\t\t\t *          }\n\t\t\t *        }\n\t\t\t *      } );\n\t\t\t *    } );\n\t\t\t */\n\t\t\t\"sPrevious\": \"Previous\"\n\t\t},\n\t\n\t\t/**\n\t\t * This string is shown in preference to sZeroRecords when the table is\n\t\t * empty of data (regardless of filtering). Note that this is an optional\n\t\t * parameter - if it is not given, the value of sZeroRecords will be used\n\t\t * instead (either the default or given value).\n\t\t *  @type string\n\t\t *  @default No data available in table\n\t\t *  @dtopt Language\n\t\t * \n\t\t *  @example\n\t\t *    $(document).ready( function() {\n\t\t *      $('#example').dataTable( {\n\t\t *        \"oLanguage\": {\n\t\t *          \"sEmptyTable\": \"No data available in table\"\n\t\t *        }\n\t\t *      } );\n\t\t *    } );\n\t\t */\n\t\t\"sEmptyTable\": \"No data available in table\",\n\t\n\t\n\t\t/**\n\t\t * This string gives information to the end user about the information that \n\t\t * is current on display on the page. The _START_, _END_ and _TOTAL_ \n\t\t * variables are all dynamically replaced as the table display updates, and \n\t\t * can be freely moved or removed as the language requirements change.\n\t\t *  @type string\n\t\t *  @default Showing _START_ to _END_ of _TOTAL_ entries\n\t\t *  @dtopt Language\n\t\t * \n\t\t *  @example\n\t\t *    $(document).ready( function() {\n\t\t *      $('#example').dataTable( {\n\t\t *        \"oLanguage\": {\n\t\t *          \"sInfo\": \"Got a total of _TOTAL_ entries to show (_START_ to _END_)\"\n\t\t *        }\n\t\t *      } );\n\t\t *    } );\n\t\t */\n\t\t\"sInfo\": \"Showing _START_ to _END_ of _TOTAL_ entries\",\n\t\n\t\n\t\t/**\n\t\t * Display information string for when the table is empty. Typically the \n\t\t * format of this string should match sInfo.\n\t\t *  @type string\n\t\t *  @default Showing 0 to 0 of 0 entries\n\t\t *  @dtopt Language\n\t\t * \n\t\t *  @example\n\t\t *    $(document).ready( function() {\n\t\t *      $('#example').dataTable( {\n\t\t *        \"oLanguage\": {\n\t\t *          \"sInfoEmpty\": \"No entries to show\"\n\t\t *        }\n\t\t *      } );\n\t\t *    } );\n\t\t */\n\t\t\"sInfoEmpty\": \"Showing 0 to 0 of 0 entries\",\n\t\n\t\n\t\t/**\n\t\t * When a user filters the information in a table, this string is appended \n\t\t * to the information (sInfo) to give an idea of how strong the filtering \n\t\t * is. The variable _MAX_ is dynamically updated.\n\t\t *  @type string\n\t\t *  @default (filtered from _MAX_ total entries)\n\t\t *  @dtopt Language\n\t\t * \n\t\t *  @example\n\t\t *    $(document).ready( function() {\n\t\t *      $('#example').dataTable( {\n\t\t *        \"oLanguage\": {\n\t\t *          \"sInfoFiltered\": \" - filtering from _MAX_ records\"\n\t\t *        }\n\t\t *      } );\n\t\t *    } );\n\t\t */\n\t\t\"sInfoFiltered\": \"(filtered from _MAX_ total entries)\",\n\t\n\t\n\t\t/**\n\t\t * If can be useful to append extra information to the info string at times,\n\t\t * and this variable does exactly that. This information will be appended to\n\t\t * the sInfo (sInfoEmpty and sInfoFiltered in whatever combination they are\n\t\t * being used) at all times.\n\t\t *  @type string\n\t\t *  @default <i>Empty string</i>\n\t\t *  @dtopt Language\n\t\t * \n\t\t *  @example\n\t\t *    $(document).ready( function() {\n\t\t *      $('#example').dataTable( {\n\t\t *        \"oLanguage\": {\n\t\t *          \"sInfoPostFix\": \"All records shown are derived from real information.\"\n\t\t *        }\n\t\t *      } );\n\t\t *    } );\n\t\t */\n\t\t\"sInfoPostFix\": \"\",\n\t\n\t\n\t\t/**\n\t\t * DataTables has a build in number formatter (fnFormatNumber) which is used\n\t\t * to format large numbers that are used in the table information. By\n\t\t * default a comma is used, but this can be trivially changed to any\n\t\t * character you wish with this parameter.\n\t\t *  @type string\n\t\t *  @default ,\n\t\t *  @dtopt Language\n\t\t * \n\t\t *  @example\n\t\t *    $(document).ready( function() {\n\t\t *      $('#example').dataTable( {\n\t\t *        \"oLanguage\": {\n\t\t *          \"sInfoThousands\": \"'\"\n\t\t *        }\n\t\t *      } );\n\t\t *    } );\n\t\t */\n\t\t\"sInfoThousands\": \",\",\n\t\n\t\n\t\t/**\n\t\t * Detail the action that will be taken when the drop down menu for the\n\t\t * pagination length option is changed. The '_MENU_' variable is replaced\n\t\t * with a default select list of 10, 25, 50 and 100, and can be replaced\n\t\t * with a custom select box if required.\n\t\t *  @type string\n\t\t *  @default Show _MENU_ entries\n\t\t *  @dtopt Language\n\t\t * \n\t\t *  @example\n\t\t *    // Language change only\n\t\t *    $(document).ready( function() {\n\t\t *      $('#example').dataTable( {\n\t\t *        \"oLanguage\": {\n\t\t *          \"sLengthMenu\": \"Display _MENU_ records\"\n\t\t *        }\n\t\t *      } );\n\t\t *    } );\n\t\t *    \n\t\t *  @example\n\t\t *    // Language and options change\n\t\t *    $(document).ready( function() {\n\t\t *      $('#example').dataTable( {\n\t\t *        \"oLanguage\": {\n\t\t *          \"sLengthMenu\": 'Display <select>'+\n\t\t *            '<option value=\"10\">10</option>'+\n\t\t *            '<option value=\"20\">20</option>'+\n\t\t *            '<option value=\"30\">30</option>'+\n\t\t *            '<option value=\"40\">40</option>'+\n\t\t *            '<option value=\"50\">50</option>'+\n\t\t *            '<option value=\"-1\">All</option>'+\n\t\t *            '</select> records'\n\t\t *        }\n\t\t *      } );\n\t\t *    } );\n\t\t */\n\t\t\"sLengthMenu\": \"Show _MENU_ entries\",\n\t\n\t\n\t\t/**\n\t\t * When using Ajax sourced data and during the first draw when DataTables is\n\t\t * gathering the data, this message is shown in an empty row in the table to\n\t\t * indicate to the end user the the data is being loaded. Note that this\n\t\t * parameter is not used when loading data by server-side processing, just\n\t\t * Ajax sourced data with client-side processing.\n\t\t *  @type string\n\t\t *  @default Loading...\n\t\t *  @dtopt Language\n\t\t * \n\t\t *  @example\n\t\t *    $(document).ready( function() {\n\t\t *      $('#example').dataTable( {\n\t\t *        \"oLanguage\": {\n\t\t *          \"sLoadingRecords\": \"Please wait - loading...\"\n\t\t *        }\n\t\t *      } );\n\t\t *    } );\n\t\t */\n\t\t\"sLoadingRecords\": \"Loading...\",\n\t\n\t\n\t\t/**\n\t\t * Text which is displayed when the table is processing a user action\n\t\t * (usually a sort command or similar).\n\t\t *  @type string\n\t\t *  @default Processing...\n\t\t *  @dtopt Language\n\t\t * \n\t\t *  @example\n\t\t *    $(document).ready( function() {\n\t\t *      $('#example').dataTable( {\n\t\t *        \"oLanguage\": {\n\t\t *          \"sProcessing\": \"DataTables is currently busy\"\n\t\t *        }\n\t\t *      } );\n\t\t *    } );\n\t\t */\n\t\t\"sProcessing\": \"Processing...\",\n\t\n\t\n\t\t/**\n\t\t * Details the actions that will be taken when the user types into the\n\t\t * filtering input text box. The variable \"_INPUT_\", if used in the string,\n\t\t * is replaced with the HTML text box for the filtering input allowing\n\t\t * control over where it appears in the string. If \"_INPUT_\" is not given\n\t\t * then the input box is appended to the string automatically.\n\t\t *  @type string\n\t\t *  @default Search:\n\t\t *  @dtopt Language\n\t\t * \n\t\t *  @example\n\t\t *    // Input text box will be appended at the end automatically\n\t\t *    $(document).ready( function() {\n\t\t *      $('#example').dataTable( {\n\t\t *        \"oLanguage\": {\n\t\t *          \"sSearch\": \"Filter records:\"\n\t\t *        }\n\t\t *      } );\n\t\t *    } );\n\t\t *    \n\t\t *  @example\n\t\t *    // Specify where the filter should appear\n\t\t *    $(document).ready( function() {\n\t\t *      $('#example').dataTable( {\n\t\t *        \"oLanguage\": {\n\t\t *          \"sSearch\": \"Apply filter _INPUT_ to table\"\n\t\t *        }\n\t\t *      } );\n\t\t *    } );\n\t\t */\n\t\t\"sSearch\": \"Search:\",\n\t\n\t\n\t\t/**\n\t\t * All of the language information can be stored in a file on the\n\t\t * server-side, which DataTables will look up if this parameter is passed.\n\t\t * It must store the URL of the language file, which is in a JSON format,\n\t\t * and the object has the same properties as the oLanguage object in the\n\t\t * initialiser object (i.e. the above parameters). Please refer to one of\n\t\t * the example language files to see how this works in action.\n\t\t *  @type string\n\t\t *  @default <i>Empty string - i.e. disabled</i>\n\t\t *  @dtopt Language\n\t\t * \n\t\t *  @example\n\t\t *    $(document).ready( function() {\n\t\t *      $('#example').dataTable( {\n\t\t *        \"oLanguage\": {\n\t\t *          \"sUrl\": \"http://www.sprymedia.co.uk/dataTables/lang.txt\"\n\t\t *        }\n\t\t *      } );\n\t\t *    } );\n\t\t */\n\t\t\"sUrl\": \"\",\n\t\n\t\n\t\t/**\n\t\t * Text shown inside the table records when the is no information to be\n\t\t * displayed after filtering. sEmptyTable is shown when there is simply no\n\t\t * information in the table at all (regardless of filtering).\n\t\t *  @type string\n\t\t *  @default No matching records found\n\t\t *  @dtopt Language\n\t\t * \n\t\t *  @example\n\t\t *    $(document).ready( function() {\n\t\t *      $('#example').dataTable( {\n\t\t *        \"oLanguage\": {\n\t\t *          \"sZeroRecords\": \"No records to display\"\n\t\t *        }\n\t\t *      } );\n\t\t *    } );\n\t\t */\n\t\t\"sZeroRecords\": \"No matching records found\"\n\t},\n\n\n\t/**\n\t * This parameter allows you to have define the global filtering state at\n\t * initialisation time. As an object the \"sSearch\" parameter must be\n\t * defined, but all other parameters are optional. When \"bRegex\" is true,\n\t * the search string will be treated as a regular expression, when false\n\t * (default) it will be treated as a straight string. When \"bSmart\"\n\t * DataTables will use it's smart filtering methods (to word match at\n\t * any point in the data), when false this will not be done.\n\t *  @namespace\n\t *  @extends DataTable.models.oSearch\n\t *  @dtopt Options\n\t * \n\t *  @example\n\t *    $(document).ready( function() {\n\t *      $('#example').dataTable( {\n\t *        \"oSearch\": {\"sSearch\": \"Initial search\"}\n\t *      } );\n\t *    } )\n\t */\n\t\"oSearch\": $.extend( {}, DataTable.models.oSearch ),\n\n\n\t/**\n\t * By default DataTables will look for the property 'aaData' when obtaining\n\t * data from an Ajax source or for server-side processing - this parameter\n\t * allows that property to be changed. You can use Javascript dotted object\n\t * notation to get a data source for multiple levels of nesting.\n\t *  @type string\n\t *  @default aaData\n\t *  @dtopt Options\n\t *  @dtopt Server-side\n\t * \n\t *  @example\n\t *    // Get data from { \"data\": [...] }\n\t *    $(document).ready( function() {\n\t *      var oTable = $('#example').dataTable( {\n\t *        \"sAjaxSource\": \"sources/data.txt\",\n\t *        \"sAjaxDataProp\": \"data\"\n\t *      } );\n\t *    } );\n\t *    \n\t *  @example\n\t *    // Get data from { \"data\": { \"inner\": [...] } }\n\t *    $(document).ready( function() {\n\t *      var oTable = $('#example').dataTable( {\n\t *        \"sAjaxSource\": \"sources/data.txt\",\n\t *        \"sAjaxDataProp\": \"data.inner\"\n\t *      } );\n\t *    } );\n\t */\n\t\"sAjaxDataProp\": \"aaData\",\n\n\n\t/**\n\t * You can instruct DataTables to load data from an external source using this\n\t * parameter (use aData if you want to pass data in you already have). Simply\n\t * provide a url a JSON object can be obtained from. This object must include\n\t * the parameter 'aaData' which is the data source for the table.\n\t *  @type string\n\t *  @default null\n\t *  @dtopt Options\n\t *  @dtopt Server-side\n\t * \n\t *  @example\n\t *    $(document).ready( function() {\n\t *      $('#example').dataTable( {\n\t *        \"sAjaxSource\": \"http://www.sprymedia.co.uk/dataTables/json.php\"\n\t *      } );\n\t *    } )\n\t */\n\t\"sAjaxSource\": null,\n\n\n\t/**\n\t * This parameter can be used to override the default prefix that DataTables\n\t * assigns to a cookie when state saving is enabled.\n\t *  @type string\n\t *  @default SpryMedia_DataTables_\n\t *  @dtopt Options\n\t * \n\t *  @example\n\t *    $(document).ready( function() {\n\t *      $('#example').dataTable( {\n\t *        \"sCookiePrefix\": \"my_datatable_\",\n\t *      } );\n\t *    } );\n\t */\n\t\"sCookiePrefix\": \"SpryMedia_DataTables_\",\n\n\n\t/**\n\t * This initialisation variable allows you to specify exactly where in the\n\t * DOM you want DataTables to inject the various controls it adds to the page\n\t * (for example you might want the pagination controls at the top of the\n\t * table). DIV elements (with or without a custom class) can also be added to\n\t * aid styling. The follow syntax is used:\n\t *   <ul>\n\t *     <li>The following options are allowed:\t\n\t *       <ul>\n\t *         <li>'l' - Length changing</li\n\t *         <li>'f' - Filtering input</li>\n\t *         <li>'t' - The table!</li>\n\t *         <li>'i' - Information</li>\n\t *         <li>'p' - Pagination</li>\n\t *         <li>'r' - pRocessing</li>\n\t *       </ul>\n\t *     </li>\n\t *     <li>The following constants are allowed:\n\t *       <ul>\n\t *         <li>'H' - jQueryUI theme \"header\" classes ('fg-toolbar ui-widget-header ui-corner-tl ui-corner-tr ui-helper-clearfix')</li>\n\t *         <li>'F' - jQueryUI theme \"footer\" classes ('fg-toolbar ui-widget-header ui-corner-bl ui-corner-br ui-helper-clearfix')</li>\n\t *       </ul>\n\t *     </li>\n\t *     <li>The following syntax is expected:\n\t *       <ul>\n\t *         <li>'&lt;' and '&gt;' - div elements</li>\n\t *         <li>'&lt;\"class\" and '&gt;' - div with a class</li>\n\t *         <li>'&lt;\"#id\" and '&gt;' - div with an ID</li>\n\t *       </ul>\n\t *     </li>\n\t *     <li>Examples:\n\t *       <ul>\n\t *         <li>'&lt;\"wrapper\"flipt&gt;'</li>\n\t *         <li>'&lt;lf&lt;t&gt;ip&gt;'</li>\n\t *       </ul>\n\t *     </li>\n\t *   </ul>\n\t *  @type string\n\t *  @default lfrtip <i>(when bJQueryUI is false)</i> <b>or</b> \n\t *    <\"H\"lfr>t<\"F\"ip> <i>(when bJQueryUI is true)</i>\n\t *  @dtopt Options\n\t * \n\t *  @example\n\t *    $(document).ready( function() {\n\t *      $('#example').dataTable( {\n\t *        \"sDom\": '&lt;\"top\"i&gt;rt&lt;\"bottom\"flp&gt;&lt;\"clear\"&gt;'\n\t *      } );\n\t *    } );\n\t */\n\t\"sDom\": \"lfrtip\",\n\n\n\t/**\n\t * DataTables features two different built-in pagination interaction methods\n\t * ('two_button' or 'full_numbers') which present different page controls to\n\t * the end user. Further methods can be added using the API (see below).\n\t *  @type string\n\t *  @default two_button\n\t *  @dtopt Options\n\t * \n\t *  @example\n\t *    $(document).ready( function() {\n\t *      $('#example').dataTable( {\n\t *        \"sPaginationType\": \"full_numbers\"\n\t *      } );\n\t *    } )\n\t */\n\t\"sPaginationType\": \"two_button\",\n\n\n\t/**\n\t * Enable horizontal scrolling. When a table is too wide to fit into a certain\n\t * layout, or you have a large number of columns in the table, you can enable\n\t * x-scrolling to show the table in a viewport, which can be scrolled. This\n\t * property can be any CSS unit, or a number (in which case it will be treated\n\t * as a pixel measurement).\n\t *  @type string\n\t *  @default <i>blank string - i.e. disabled</i>\n\t *  @dtopt Features\n\t * \n\t *  @example\n\t *    $(document).ready( function() {\n\t *      $('#example').dataTable( {\n\t *        \"sScrollX\": \"100%\",\n\t *        \"bScrollCollapse\": true\n\t *      } );\n\t *    } );\n\t */\n\t\"sScrollX\": \"\",\n\n\n\t/**\n\t * This property can be used to force a DataTable to use more width than it\n\t * might otherwise do when x-scrolling is enabled. For example if you have a\n\t * table which requires to be well spaced, this parameter is useful for\n\t * \"over-sizing\" the table, and thus forcing scrolling. This property can by\n\t * any CSS unit, or a number (in which case it will be treated as a pixel\n\t * measurement).\n\t *  @type string\n\t *  @default <i>blank string - i.e. disabled</i>\n\t *  @dtopt Options\n\t * \n\t *  @example\n\t *    $(document).ready( function() {\n\t *      $('#example').dataTable( {\n\t *        \"sScrollX\": \"100%\",\n\t *        \"sScrollXInner\": \"110%\"\n\t *      } );\n\t *    } );\n\t */\n\t\"sScrollXInner\": \"\",\n\n\n\t/**\n\t * Enable vertical scrolling. Vertical scrolling will constrain the DataTable\n\t * to the given height, and enable scrolling for any data which overflows the\n\t * current viewport. This can be used as an alternative to paging to display\n\t * a lot of data in a small area (although paging and scrolling can both be\n\t * enabled at the same time). This property can be any CSS unit, or a number\n\t * (in which case it will be treated as a pixel measurement).\n\t *  @type string\n\t *  @default <i>blank string - i.e. disabled</i>\n\t *  @dtopt Features\n\t * \n\t *  @example\n\t *    $(document).ready( function() {\n\t *      $('#example').dataTable( {\n\t *        \"sScrollY\": \"200px\",\n\t *        \"bPaginate\": false\n\t *      } );\n\t *    } );\n\t */\n\t\"sScrollY\": \"\",\n\n\n\t/**\n\t * Set the HTTP method that is used to make the Ajax call for server-side\n\t * processing or Ajax sourced data.\n\t *  @type string\n\t *  @default GET\n\t *  @dtopt Options\n\t *  @dtopt Server-side\n\t * \n\t *  @example\n\t *    $(document).ready( function() {\n\t *      $('#example').dataTable( {\n\t *        \"bServerSide\": true,\n\t *        \"sAjaxSource\": \"scripts/post.php\",\n\t *        \"sServerMethod\": \"POST\"\n\t *      } );\n\t *    } );\n\t */\n\t\"sServerMethod\": \"GET\"\n};\n\n\n\n/**\n * Column options that can be given to DataTables at initialisation time.\n *  @namespace\n */\nDataTable.defaults.columns = {\n\t/**\n\t * Allows a column's sorting to take multiple columns into account when \n\t * doing a sort. For example first name / last name columns make sense to \n\t * do a multi-column sort over the two columns.\n\t *  @type array\n\t *  @default null <i>Takes the value of the column index automatically</i>\n\t *  @dtopt Columns\n\t * \n\t *  @example\n\t *    // Using aoColumnDefs\n\t *    $(document).ready( function() {\n\t *      $('#example').dataTable( {\n\t *        \"aoColumnDefs\": [\n\t *          { \"aDataSort\": [ 0, 1 ], \"aTargets\": [ 0 ] },\n\t *          { \"aDataSort\": [ 1, 0 ], \"aTargets\": [ 1 ] },\n\t *          { \"aDataSort\": [ 2, 3, 4 ], \"aTargets\": [ 2 ] }\n\t *        ]\n\t *      } );\n\t *    } );\n\t *    \n\t *  @example\n\t *    // Using aoColumns\n\t *    $(document).ready( function() {\n\t *      $('#example').dataTable( {\n\t *        \"aoColumns\": [\n\t *          { \"aDataSort\": [ 0, 1 ] },\n\t *          { \"aDataSort\": [ 1, 0 ] },\n\t *          { \"aDataSort\": [ 2, 3, 4 ] },\n\t *          null,\n\t *          null\n\t *        ]\n\t *      } );\n\t *    } );\n\t */\n\t\"aDataSort\": null,\n\n\n\t/**\n\t * You can control the default sorting direction, and even alter the behaviour\n\t * of the sort handler (i.e. only allow ascending sorting etc) using this\n\t * parameter.\n\t *  @type array\n\t *  @default [ 'asc', 'desc' ]\n\t *  @dtopt Columns\n\t * \n\t *  @example\n\t *    // Using aoColumnDefs\n\t *    $(document).ready( function() {\n\t *      $('#example').dataTable( {\n\t *        \"aoColumnDefs\": [\n\t *          { \"asSorting\": [ \"asc\" ], \"aTargets\": [ 1 ] },\n\t *          { \"asSorting\": [ \"desc\", \"asc\", \"asc\" ], \"aTargets\": [ 2 ] },\n\t *          { \"asSorting\": [ \"desc\" ], \"aTargets\": [ 3 ] }\n\t *        ]\n\t *      } );\n\t *    } );\n\t *    \n\t *  @example\n\t *    // Using aoColumns\n\t *    $(document).ready( function() {\n\t *      $('#example').dataTable( {\n\t *        \"aoColumns\": [\n\t *          null,\n\t *          { \"asSorting\": [ \"asc\" ] },\n\t *          { \"asSorting\": [ \"desc\", \"asc\", \"asc\" ] },\n\t *          { \"asSorting\": [ \"desc\" ] },\n\t *          null\n\t *        ]\n\t *      } );\n\t *    } );\n\t */\n\t\"asSorting\": [ 'asc', 'desc' ],\n\n\n\t/**\n\t * Enable or disable filtering on the data in this column.\n\t *  @type boolean\n\t *  @default true\n\t *  @dtopt Columns\n\t * \n\t *  @example\n\t *    // Using aoColumnDefs\n\t *    $(document).ready( function() {\n\t *      $('#example').dataTable( {\n\t *        \"aoColumnDefs\": [ \n\t *          { \"bSearchable\": false, \"aTargets\": [ 0 ] }\n\t *        ] } );\n\t *    } );\n\t *    \n\t *  @example\n\t *    // Using aoColumns\n\t *    $(document).ready( function() {\n\t *      $('#example').dataTable( {\n\t *        \"aoColumns\": [ \n\t *          { \"bSearchable\": false },\n\t *          null,\n\t *          null,\n\t *          null,\n\t *          null\n\t *        ] } );\n\t *    } );\n\t */\n\t\"bSearchable\": true,\n\n\n\t/**\n\t * Enable or disable sorting on this column.\n\t *  @type boolean\n\t *  @default true\n\t *  @dtopt Columns\n\t * \n\t *  @example\n\t *    // Using aoColumnDefs\n\t *    $(document).ready( function() {\n\t *      $('#example').dataTable( {\n\t *        \"aoColumnDefs\": [ \n\t *          { \"bSortable\": false, \"aTargets\": [ 0 ] }\n\t *        ] } );\n\t *    } );\n\t *    \n\t *  @example\n\t *    // Using aoColumns\n\t *    $(document).ready( function() {\n\t *      $('#example').dataTable( {\n\t *        \"aoColumns\": [ \n\t *          { \"bSortable\": false },\n\t *          null,\n\t *          null,\n\t *          null,\n\t *          null\n\t *        ] } );\n\t *    } );\n\t */\n\t\"bSortable\": true,\n\n\n\t/**\n\t * <code>Deprecated</code> When using fnRender() for a column, you may wish \n\t * to use the original data (before rendering) for sorting and filtering \n\t * (the default is to used the rendered data that the user can see). This \n\t * may be useful for dates etc.\n\t * \n\t * Please note that this option has now been deprecated and will be removed\n\t * in the next version of DataTables. Please use mRender / mData rather than\n\t * fnRender.\n\t *  @type boolean\n\t *  @default true\n\t *  @dtopt Columns\n\t *  @deprecated\n\t */\n\t\"bUseRendered\": true,\n\n\n\t/**\n\t * Enable or disable the display of this column.\n\t *  @type boolean\n\t *  @default true\n\t *  @dtopt Columns\n\t * \n\t *  @example\n\t *    // Using aoColumnDefs\n\t *    $(document).ready( function() {\n\t *      $('#example').dataTable( {\n\t *        \"aoColumnDefs\": [ \n\t *          { \"bVisible\": false, \"aTargets\": [ 0 ] }\n\t *        ] } );\n\t *    } );\n\t *    \n\t *  @example\n\t *    // Using aoColumns\n\t *    $(document).ready( function() {\n\t *      $('#example').dataTable( {\n\t *        \"aoColumns\": [ \n\t *          { \"bVisible\": false },\n\t *          null,\n\t *          null,\n\t *          null,\n\t *          null\n\t *        ] } );\n\t *    } );\n\t */\n\t\"bVisible\": true,\n\t\n\t\n\t/**\n\t * Developer definable function that is called whenever a cell is created (Ajax source,\n\t * etc) or processed for input (DOM source). This can be used as a compliment to mRender\n\t * allowing you to modify the DOM element (add background colour for example) when the\n\t * element is available.\n\t *  @type function\n\t *  @param {element} nTd The TD node that has been created\n\t *  @param {*} sData The Data for the cell\n\t *  @param {array|object} oData The data for the whole row\n\t *  @param {int} iRow The row index for the aoData data store\n\t *  @param {int} iCol The column index for aoColumns\n\t *  @dtopt Columns\n\t * \n\t *  @example\n\t *    $(document).ready( function() {\n\t *      $('#example').dataTable( {\n\t *        \"aoColumnDefs\": [ {\n\t *          \"aTargets\": [3],\n\t *          \"fnCreatedCell\": function (nTd, sData, oData, iRow, iCol) {\n\t *            if ( sData == \"1.7\" ) {\n\t *              $(nTd).css('color', 'blue')\n\t *            }\n\t *          }\n\t *        } ]\n\t *      });\n\t *    } );\n\t */\n\t\"fnCreatedCell\": null,\n\n\n\t/**\n\t * <code>Deprecated</code> Custom display function that will be called for the \n\t * display of each cell in this column.\n\t *\n\t * Please note that this option has now been deprecated and will be removed\n\t * in the next version of DataTables. Please use mRender / mData rather than\n\t * fnRender.\n\t *  @type function\n\t *  @param {object} o Object with the following parameters:\n\t *  @param {int}    o.iDataRow The row in aoData\n\t *  @param {int}    o.iDataColumn The column in question\n\t *  @param {array}  o.aData The data for the row in question\n\t *  @param {object} o.oSettings The settings object for this DataTables instance\n\t *  @param {object} o.mDataProp The data property used for this column\n\t *  @param {*}      val The current cell value\n\t *  @returns {string} The string you which to use in the display\n\t *  @dtopt Columns\n\t *  @deprecated\n\t */\n\t\"fnRender\": null,\n\n\n\t/**\n\t * The column index (starting from 0!) that you wish a sort to be performed\n\t * upon when this column is selected for sorting. This can be used for sorting\n\t * on hidden columns for example.\n\t *  @type int\n\t *  @default -1 <i>Use automatically calculated column index</i>\n\t *  @dtopt Columns\n\t * \n\t *  @example\n\t *    // Using aoColumnDefs\n\t *    $(document).ready( function() {\n\t *      $('#example').dataTable( {\n\t *        \"aoColumnDefs\": [ \n\t *          { \"iDataSort\": 1, \"aTargets\": [ 0 ] }\n\t *        ]\n\t *      } );\n\t *    } );\n\t *    \n\t *  @example\n\t *    // Using aoColumns\n\t *    $(document).ready( function() {\n\t *      $('#example').dataTable( {\n\t *        \"aoColumns\": [ \n\t *          { \"iDataSort\": 1 },\n\t *          null,\n\t *          null,\n\t *          null,\n\t *          null\n\t *        ]\n\t *      } );\n\t *    } );\n\t */\n\t\"iDataSort\": -1,\n\n\n\t/**\n\t * This parameter has been replaced by mData in DataTables to ensure naming\n\t * consistency. mDataProp can still be used, as there is backwards compatibility\n\t * in DataTables for this option, but it is strongly recommended that you use\n\t * mData in preference to mDataProp.\n\t *  @name DataTable.defaults.columns.mDataProp\n\t */\n\n\n\t/**\n\t * This property can be used to read data from any JSON data source property,\n\t * including deeply nested objects / properties. mData can be given in a\n\t * number of different ways which effect its behaviour:\n\t *   <ul>\n\t *     <li>integer - treated as an array index for the data source. This is the\n\t *       default that DataTables uses (incrementally increased for each column).</li>\n\t *     <li>string - read an object property from the data source. Note that you can\n\t *       use Javascript dotted notation to read deep properties / arrays from the\n\t *       data source.</li>\n\t *     <li>null - the sDefaultContent option will be used for the cell (null\n\t *       by default, so you will need to specify the default content you want -\n\t *       typically an empty string). This can be useful on generated columns such \n\t *       as edit / delete action columns.</li>\n\t *     <li>function - the function given will be executed whenever DataTables \n\t *       needs to set or get the data for a cell in the column. The function \n\t *       takes three parameters:\n\t *       <ul>\n\t *         <li>{array|object} The data source for the row</li>\n\t *         <li>{string} The type call data requested - this will be 'set' when\n\t *           setting data or 'filter', 'display', 'type', 'sort' or undefined when \n\t *           gathering data. Note that when <i>undefined</i> is given for the type\n\t *           DataTables expects to get the raw data for the object back</li>\n\t *         <li>{*} Data to set when the second parameter is 'set'.</li>\n\t *       </ul>\n\t *       The return value from the function is not required when 'set' is the type\n\t *       of call, but otherwise the return is what will be used for the data\n\t *       requested.</li>\n\t *    </ul>\n\t *\n\t * Note that prior to DataTables 1.9.2 mData was called mDataProp. The name change\n\t * reflects the flexibility of this property and is consistent with the naming of\n\t * mRender. If 'mDataProp' is given, then it will still be used by DataTables, as\n\t * it automatically maps the old name to the new if required.\n\t *  @type string|int|function|null\n\t *  @default null <i>Use automatically calculated column index</i>\n\t *  @dtopt Columns\n\t * \n\t *  @example\n\t *    // Read table data from objects\n\t *    $(document).ready( function() {\n\t *      var oTable = $('#example').dataTable( {\n\t *        \"sAjaxSource\": \"sources/deep.txt\",\n\t *        \"aoColumns\": [\n\t *          { \"mData\": \"engine\" },\n\t *          { \"mData\": \"browser\" },\n\t *          { \"mData\": \"platform.inner\" },\n\t *          { \"mData\": \"platform.details.0\" },\n\t *          { \"mData\": \"platform.details.1\" }\n\t *        ]\n\t *      } );\n\t *    } );\n\t * \n\t *  @example\n\t *    // Using mData as a function to provide different information for\n\t *    // sorting, filtering and display. In this case, currency (price)\n\t *    $(document).ready( function() {\n\t *      var oTable = $('#example').dataTable( {\n\t *        \"aoColumnDefs\": [ {\n\t *          \"aTargets\": [ 0 ],\n\t *          \"mData\": function ( source, type, val ) {\n\t *            if (type === 'set') {\n\t *              source.price = val;\n\t *              // Store the computed dislay and filter values for efficiency\n\t *              source.price_display = val==\"\" ? \"\" : \"$\"+numberFormat(val);\n\t *              source.price_filter  = val==\"\" ? \"\" : \"$\"+numberFormat(val)+\" \"+val;\n\t *              return;\n\t *            }\n\t *            else if (type === 'display') {\n\t *              return source.price_display;\n\t *            }\n\t *            else if (type === 'filter') {\n\t *              return source.price_filter;\n\t *            }\n\t *            // 'sort', 'type' and undefined all just use the integer\n\t *            return source.price;\n\t *          }\n\t *        } ]\n\t *      } );\n\t *    } );\n\t */\n\t\"mData\": null,\n\n\n\t/**\n\t * This property is the rendering partner to mData and it is suggested that\n\t * when you want to manipulate data for display (including filtering, sorting etc)\n\t * but not altering the underlying data for the table, use this property. mData\n\t * can actually do everything this property can and more, but this parameter is\n\t * easier to use since there is no 'set' option. Like mData is can be given\n\t * in a number of different ways to effect its behaviour, with the addition of \n\t * supporting array syntax for easy outputting of arrays (including arrays of\n\t * objects):\n\t *   <ul>\n\t *     <li>integer - treated as an array index for the data source. This is the\n\t *       default that DataTables uses (incrementally increased for each column).</li>\n\t *     <li>string - read an object property from the data source. Note that you can\n\t *       use Javascript dotted notation to read deep properties / arrays from the\n\t *       data source and also array brackets to indicate that the data reader should\n\t *       loop over the data source array. When characters are given between the array\n\t *       brackets, these characters are used to join the data source array together.\n\t *       For example: \"accounts[, ].name\" would result in a comma separated list with\n\t *       the 'name' value from the 'accounts' array of objects.</li>\n\t *     <li>function - the function given will be executed whenever DataTables \n\t *       needs to set or get the data for a cell in the column. The function \n\t *       takes three parameters:\n\t *       <ul>\n\t *         <li>{array|object} The data source for the row (based on mData)</li>\n\t *         <li>{string} The type call data requested - this will be 'filter', 'display', \n\t *           'type' or 'sort'.</li>\n\t *         <li>{array|object} The full data source for the row (not based on mData)</li>\n\t *       </ul>\n\t *       The return value from the function is what will be used for the data\n\t *       requested.</li>\n\t *    </ul>\n\t *  @type string|int|function|null\n\t *  @default null <i>Use mData</i>\n\t *  @dtopt Columns\n\t * \n\t *  @example\n\t *    // Create a comma separated list from an array of objects\n\t *    $(document).ready( function() {\n\t *      var oTable = $('#example').dataTable( {\n\t *        \"sAjaxSource\": \"sources/deep.txt\",\n\t *        \"aoColumns\": [\n\t *          { \"mData\": \"engine\" },\n\t *          { \"mData\": \"browser\" },\n\t *          {\n\t *            \"mData\": \"platform\",\n\t *            \"mRender\": \"[, ].name\"\n\t *          }\n\t *        ]\n\t *      } );\n\t *    } );\n\t * \n\t *  @example\n\t *    // Use as a function to create a link from the data source\n\t *    $(document).ready( function() {\n\t *      var oTable = $('#example').dataTable( {\n\t *        \"aoColumnDefs\": [\n\t *        {\n\t *          \"aTargets\": [ 0 ],\n\t *          \"mData\": \"download_link\",\n\t *          \"mRender\": function ( data, type, full ) {\n\t *            return '<a href=\"'+data+'\">Download</a>';\n\t *          }\n\t *        ]\n\t *      } );\n\t *    } );\n\t */\n\t\"mRender\": null,\n\n\n\t/**\n\t * Change the cell type created for the column - either TD cells or TH cells. This\n\t * can be useful as TH cells have semantic meaning in the table body, allowing them\n\t * to act as a header for a row (you may wish to add scope='row' to the TH elements).\n\t *  @type string\n\t *  @default td\n\t *  @dtopt Columns\n\t * \n\t *  @example\n\t *    // Make the first column use TH cells\n\t *    $(document).ready( function() {\n\t *      var oTable = $('#example').dataTable( {\n\t *        \"aoColumnDefs\": [ {\n\t *          \"aTargets\": [ 0 ],\n\t *          \"sCellType\": \"th\"\n\t *        } ]\n\t *      } );\n\t *    } );\n\t */\n\t\"sCellType\": \"td\",\n\n\n\t/**\n\t * Class to give to each cell in this column.\n\t *  @type string\n\t *  @default <i>Empty string</i>\n\t *  @dtopt Columns\n\t * \n\t *  @example\n\t *    // Using aoColumnDefs\n\t *    $(document).ready( function() {\n\t *      $('#example').dataTable( {\n\t *        \"aoColumnDefs\": [ \n\t *          { \"sClass\": \"my_class\", \"aTargets\": [ 0 ] }\n\t *        ]\n\t *      } );\n\t *    } );\n\t *    \n\t *  @example\n\t *    // Using aoColumns\n\t *    $(document).ready( function() {\n\t *      $('#example').dataTable( {\n\t *        \"aoColumns\": [ \n\t *          { \"sClass\": \"my_class\" },\n\t *          null,\n\t *          null,\n\t *          null,\n\t *          null\n\t *        ]\n\t *      } );\n\t *    } );\n\t */\n\t\"sClass\": \"\",\n\t\n\t/**\n\t * When DataTables calculates the column widths to assign to each column,\n\t * it finds the longest string in each column and then constructs a\n\t * temporary table and reads the widths from that. The problem with this\n\t * is that \"mmm\" is much wider then \"iiii\", but the latter is a longer \n\t * string - thus the calculation can go wrong (doing it properly and putting\n\t * it into an DOM object and measuring that is horribly(!) slow). Thus as\n\t * a \"work around\" we provide this option. It will append its value to the\n\t * text that is found to be the longest string for the column - i.e. padding.\n\t * Generally you shouldn't need this, and it is not documented on the \n\t * general DataTables.net documentation\n\t *  @type string\n\t *  @default <i>Empty string<i>\n\t *  @dtopt Columns\n\t *    \n\t *  @example\n\t *    // Using aoColumns\n\t *    $(document).ready( function() {\n\t *      $('#example').dataTable( {\n\t *        \"aoColumns\": [ \n\t *          null,\n\t *          null,\n\t *          null,\n\t *          {\n\t *            \"sContentPadding\": \"mmm\"\n\t *          }\n\t *        ]\n\t *      } );\n\t *    } );\n\t */\n\t\"sContentPadding\": \"\",\n\n\n\t/**\n\t * Allows a default value to be given for a column's data, and will be used\n\t * whenever a null data source is encountered (this can be because mData\n\t * is set to null, or because the data source itself is null).\n\t *  @type string\n\t *  @default null\n\t *  @dtopt Columns\n\t * \n\t *  @example\n\t *    // Using aoColumnDefs\n\t *    $(document).ready( function() {\n\t *      $('#example').dataTable( {\n\t *        \"aoColumnDefs\": [ \n\t *          {\n\t *            \"mData\": null,\n\t *            \"sDefaultContent\": \"Edit\",\n\t *            \"aTargets\": [ -1 ]\n\t *          }\n\t *        ]\n\t *      } );\n\t *    } );\n\t *    \n\t *  @example\n\t *    // Using aoColumns\n\t *    $(document).ready( function() {\n\t *      $('#example').dataTable( {\n\t *        \"aoColumns\": [ \n\t *          null,\n\t *          null,\n\t *          null,\n\t *          {\n\t *            \"mData\": null,\n\t *            \"sDefaultContent\": \"Edit\"\n\t *          }\n\t *        ]\n\t *      } );\n\t *    } );\n\t */\n\t\"sDefaultContent\": null,\n\n\n\t/**\n\t * This parameter is only used in DataTables' server-side processing. It can\n\t * be exceptionally useful to know what columns are being displayed on the\n\t * client side, and to map these to database fields. When defined, the names\n\t * also allow DataTables to reorder information from the server if it comes\n\t * back in an unexpected order (i.e. if you switch your columns around on the\n\t * client-side, your server-side code does not also need updating).\n\t *  @type string\n\t *  @default <i>Empty string</i>\n\t *  @dtopt Columns\n\t * \n\t *  @example\n\t *    // Using aoColumnDefs\n\t *    $(document).ready( function() {\n\t *      $('#example').dataTable( {\n\t *        \"aoColumnDefs\": [ \n\t *          { \"sName\": \"engine\", \"aTargets\": [ 0 ] },\n\t *          { \"sName\": \"browser\", \"aTargets\": [ 1 ] },\n\t *          { \"sName\": \"platform\", \"aTargets\": [ 2 ] },\n\t *          { \"sName\": \"version\", \"aTargets\": [ 3 ] },\n\t *          { \"sName\": \"grade\", \"aTargets\": [ 4 ] }\n\t *        ]\n\t *      } );\n\t *    } );\n\t *    \n\t *  @example\n\t *    // Using aoColumns\n\t *    $(document).ready( function() {\n\t *      $('#example').dataTable( {\n\t *        \"aoColumns\": [ \n\t *          { \"sName\": \"engine\" },\n\t *          { \"sName\": \"browser\" },\n\t *          { \"sName\": \"platform\" },\n\t *          { \"sName\": \"version\" },\n\t *          { \"sName\": \"grade\" }\n\t *        ]\n\t *      } );\n\t *    } );\n\t */\n\t\"sName\": \"\",\n\n\n\t/**\n\t * Defines a data source type for the sorting which can be used to read\n\t * real-time information from the table (updating the internally cached\n\t * version) prior to sorting. This allows sorting to occur on user editable\n\t * elements such as form inputs.\n\t *  @type string\n\t *  @default std\n\t *  @dtopt Columns\n\t * \n\t *  @example\n\t *    // Using aoColumnDefs\n\t *    $(document).ready( function() {\n\t *      $('#example').dataTable( {\n\t *        \"aoColumnDefs\": [\n\t *          { \"sSortDataType\": \"dom-text\", \"aTargets\": [ 2, 3 ] },\n\t *          { \"sType\": \"numeric\", \"aTargets\": [ 3 ] },\n\t *          { \"sSortDataType\": \"dom-select\", \"aTargets\": [ 4 ] },\n\t *          { \"sSortDataType\": \"dom-checkbox\", \"aTargets\": [ 5 ] }\n\t *        ]\n\t *      } );\n\t *    } );\n\t *    \n\t *  @example\n\t *    // Using aoColumns\n\t *    $(document).ready( function() {\n\t *      $('#example').dataTable( {\n\t *        \"aoColumns\": [\n\t *          null,\n\t *          null,\n\t *          { \"sSortDataType\": \"dom-text\" },\n\t *          { \"sSortDataType\": \"dom-text\", \"sType\": \"numeric\" },\n\t *          { \"sSortDataType\": \"dom-select\" },\n\t *          { \"sSortDataType\": \"dom-checkbox\" }\n\t *        ]\n\t *      } );\n\t *    } );\n\t */\n\t\"sSortDataType\": \"std\",\n\n\n\t/**\n\t * The title of this column.\n\t *  @type string\n\t *  @default null <i>Derived from the 'TH' value for this column in the \n\t *    original HTML table.</i>\n\t *  @dtopt Columns\n\t * \n\t *  @example\n\t *    // Using aoColumnDefs\n\t *    $(document).ready( function() {\n\t *      $('#example').dataTable( {\n\t *        \"aoColumnDefs\": [ \n\t *          { \"sTitle\": \"My column title\", \"aTargets\": [ 0 ] }\n\t *        ]\n\t *      } );\n\t *    } );\n\t *    \n\t *  @example\n\t *    // Using aoColumns\n\t *    $(document).ready( function() {\n\t *      $('#example').dataTable( {\n\t *        \"aoColumns\": [ \n\t *          { \"sTitle\": \"My column title\" },\n\t *          null,\n\t *          null,\n\t *          null,\n\t *          null\n\t *        ]\n\t *      } );\n\t *    } );\n\t */\n\t\"sTitle\": null,\n\n\n\t/**\n\t * The type allows you to specify how the data for this column will be sorted.\n\t * Four types (string, numeric, date and html (which will strip HTML tags\n\t * before sorting)) are currently available. Note that only date formats\n\t * understood by Javascript's Date() object will be accepted as type date. For\n\t * example: \"Mar 26, 2008 5:03 PM\". May take the values: 'string', 'numeric',\n\t * 'date' or 'html' (by default). Further types can be adding through\n\t * plug-ins.\n\t *  @type string\n\t *  @default null <i>Auto-detected from raw data</i>\n\t *  @dtopt Columns\n\t * \n\t *  @example\n\t *    // Using aoColumnDefs\n\t *    $(document).ready( function() {\n\t *      $('#example').dataTable( {\n\t *        \"aoColumnDefs\": [ \n\t *          { \"sType\": \"html\", \"aTargets\": [ 0 ] }\n\t *        ]\n\t *      } );\n\t *    } );\n\t *    \n\t *  @example\n\t *    // Using aoColumns\n\t *    $(document).ready( function() {\n\t *      $('#example').dataTable( {\n\t *        \"aoColumns\": [ \n\t *          { \"sType\": \"html\" },\n\t *          null,\n\t *          null,\n\t *          null,\n\t *          null\n\t *        ]\n\t *      } );\n\t *    } );\n\t */\n\t\"sType\": null,\n\n\n\t/**\n\t * Defining the width of the column, this parameter may take any CSS value\n\t * (3em, 20px etc). DataTables apples 'smart' widths to columns which have not\n\t * been given a specific width through this interface ensuring that the table\n\t * remains readable.\n\t *  @type string\n\t *  @default null <i>Automatic</i>\n\t *  @dtopt Columns\n\t * \n\t *  @example\n\t *    // Using aoColumnDefs\n\t *    $(document).ready( function() {\n\t *      $('#example').dataTable( {\n\t *        \"aoColumnDefs\": [ \n\t *          { \"sWidth\": \"20%\", \"aTargets\": [ 0 ] }\n\t *        ]\n\t *      } );\n\t *    } );\n\t *    \n\t *  @example\n\t *    // Using aoColumns\n\t *    $(document).ready( function() {\n\t *      $('#example').dataTable( {\n\t *        \"aoColumns\": [ \n\t *          { \"sWidth\": \"20%\" },\n\t *          null,\n\t *          null,\n\t *          null,\n\t *          null\n\t *        ]\n\t *      } );\n\t *    } );\n\t */\n\t\"sWidth\": null\n};\n\n\n\n/**\n * DataTables settings object - this holds all the information needed for a\n * given table, including configuration, data and current application of the\n * table options. DataTables does not have a single instance for each DataTable\n * with the settings attached to that instance, but rather instances of the\n * DataTable \"class\" are created on-the-fly as needed (typically by a \n * $().dataTable() call) and the settings object is then applied to that\n * instance.\n * \n * Note that this object is related to {@link DataTable.defaults} but this \n * one is the internal data store for DataTables's cache of columns. It should\n * NOT be manipulated outside of DataTables. Any configuration should be done\n * through the initialisation options.\n *  @namespace\n *  @todo Really should attach the settings object to individual instances so we\n *    don't need to create new instances on each $().dataTable() call (if the\n *    table already exists). It would also save passing oSettings around and\n *    into every single function. However, this is a very significant \n *    architecture change for DataTables and will almost certainly break\n *    backwards compatibility with older installations. This is something that\n *    will be done in 2.0.\n */\nDataTable.models.oSettings = {\n\t/**\n\t * Primary features of DataTables and their enablement state.\n\t *  @namespace\n\t */\n\t\"oFeatures\": {\n\t\t\n\t\t/**\n\t\t * Flag to say if DataTables should automatically try to calculate the\n\t\t * optimum table and columns widths (true) or not (false).\n\t\t * Note that this parameter will be set by the initialisation routine. To\n\t\t * set a default use {@link DataTable.defaults}.\n\t\t *  @type boolean\n\t\t */\n\t\t\"bAutoWidth\": null,\n\n\t\t/**\n\t\t * Delay the creation of TR and TD elements until they are actually\n\t\t * needed by a driven page draw. This can give a significant speed\n\t\t * increase for Ajax source and Javascript source data, but makes no\n\t\t * difference at all fro DOM and server-side processing tables.\n\t\t * Note that this parameter will be set by the initialisation routine. To\n\t\t * set a default use {@link DataTable.defaults}.\n\t\t *  @type boolean\n\t\t */\n\t\t\"bDeferRender\": null,\n\t\t\n\t\t/**\n\t\t * Enable filtering on the table or not. Note that if this is disabled\n\t\t * then there is no filtering at all on the table, including fnFilter.\n\t\t * To just remove the filtering input use sDom and remove the 'f' option.\n\t\t * Note that this parameter will be set by the initialisation routine. To\n\t\t * set a default use {@link DataTable.defaults}.\n\t\t *  @type boolean\n\t\t */\n\t\t\"bFilter\": null,\n\t\t\n\t\t/**\n\t\t * Table information element (the 'Showing x of y records' div) enable\n\t\t * flag.\n\t\t * Note that this parameter will be set by the initialisation routine. To\n\t\t * set a default use {@link DataTable.defaults}.\n\t\t *  @type boolean\n\t\t */\n\t\t\"bInfo\": null,\n\t\t\n\t\t/**\n\t\t * Present a user control allowing the end user to change the page size\n\t\t * when pagination is enabled.\n\t\t * Note that this parameter will be set by the initialisation routine. To\n\t\t * set a default use {@link DataTable.defaults}.\n\t\t *  @type boolean\n\t\t */\n\t\t\"bLengthChange\": null,\n\n\t\t/**\n\t\t * Pagination enabled or not. Note that if this is disabled then length\n\t\t * changing must also be disabled.\n\t\t * Note that this parameter will be set by the initialisation routine. To\n\t\t * set a default use {@link DataTable.defaults}.\n\t\t *  @type boolean\n\t\t */\n\t\t\"bPaginate\": null,\n\t\t\n\t\t/**\n\t\t * Processing indicator enable flag whenever DataTables is enacting a\n\t\t * user request - typically an Ajax request for server-side processing.\n\t\t * Note that this parameter will be set by the initialisation routine. To\n\t\t * set a default use {@link DataTable.defaults}.\n\t\t *  @type boolean\n\t\t */\n\t\t\"bProcessing\": null,\n\t\t\n\t\t/**\n\t\t * Server-side processing enabled flag - when enabled DataTables will\n\t\t * get all data from the server for every draw - there is no filtering,\n\t\t * sorting or paging done on the client-side.\n\t\t * Note that this parameter will be set by the initialisation routine. To\n\t\t * set a default use {@link DataTable.defaults}.\n\t\t *  @type boolean\n\t\t */\n\t\t\"bServerSide\": null,\n\t\t\n\t\t/**\n\t\t * Sorting enablement flag.\n\t\t * Note that this parameter will be set by the initialisation routine. To\n\t\t * set a default use {@link DataTable.defaults}.\n\t\t *  @type boolean\n\t\t */\n\t\t\"bSort\": null,\n\t\t\n\t\t/**\n\t\t * Apply a class to the columns which are being sorted to provide a\n\t\t * visual highlight or not. This can slow things down when enabled since\n\t\t * there is a lot of DOM interaction.\n\t\t * Note that this parameter will be set by the initialisation routine. To\n\t\t * set a default use {@link DataTable.defaults}.\n\t\t *  @type boolean\n\t\t */\n\t\t\"bSortClasses\": null,\n\t\t\n\t\t/**\n\t\t * State saving enablement flag.\n\t\t * Note that this parameter will be set by the initialisation routine. To\n\t\t * set a default use {@link DataTable.defaults}.\n\t\t *  @type boolean\n\t\t */\n\t\t\"bStateSave\": null\n\t},\n\t\n\n\t/**\n\t * Scrolling settings for a table.\n\t *  @namespace\n\t */\n\t\"oScroll\": {\n\t\t/**\n\t\t * Indicate if DataTables should be allowed to set the padding / margin\n\t\t * etc for the scrolling header elements or not. Typically you will want\n\t\t * this.\n\t\t * Note that this parameter will be set by the initialisation routine. To\n\t\t * set a default use {@link DataTable.defaults}.\n\t\t *  @type boolean\n\t\t */\n\t\t\"bAutoCss\": null,\n\t\t\n\t\t/**\n\t\t * When the table is shorter in height than sScrollY, collapse the\n\t\t * table container down to the height of the table (when true).\n\t\t * Note that this parameter will be set by the initialisation routine. To\n\t\t * set a default use {@link DataTable.defaults}.\n\t\t *  @type boolean\n\t\t */\n\t\t\"bCollapse\": null,\n\t\t\n\t\t/**\n\t\t * Infinite scrolling enablement flag. Now deprecated in favour of\n\t\t * using the Scroller plug-in.\n\t\t * Note that this parameter will be set by the initialisation routine. To\n\t\t * set a default use {@link DataTable.defaults}.\n\t\t *  @type boolean\n\t\t */\n\t\t\"bInfinite\": null,\n\t\t\n\t\t/**\n\t\t * Width of the scrollbar for the web-browser's platform. Calculated\n\t\t * during table initialisation.\n\t\t *  @type int\n\t\t *  @default 0\n\t\t */\n\t\t\"iBarWidth\": 0,\n\t\t\n\t\t/**\n\t\t * Space (in pixels) between the bottom of the scrolling container and \n\t\t * the bottom of the scrolling viewport before the next page is loaded\n\t\t * when using infinite scrolling.\n\t\t * Note that this parameter will be set by the initialisation routine. To\n\t\t * set a default use {@link DataTable.defaults}.\n\t\t *  @type int\n\t\t */\n\t\t\"iLoadGap\": null,\n\t\t\n\t\t/**\n\t\t * Viewport width for horizontal scrolling. Horizontal scrolling is \n\t\t * disabled if an empty string.\n\t\t * Note that this parameter will be set by the initialisation routine. To\n\t\t * set a default use {@link DataTable.defaults}.\n\t\t *  @type string\n\t\t */\n\t\t\"sX\": null,\n\t\t\n\t\t/**\n\t\t * Width to expand the table to when using x-scrolling. Typically you\n\t\t * should not need to use this.\n\t\t * Note that this parameter will be set by the initialisation routine. To\n\t\t * set a default use {@link DataTable.defaults}.\n\t\t *  @type string\n\t\t *  @deprecated\n\t\t */\n\t\t\"sXInner\": null,\n\t\t\n\t\t/**\n\t\t * Viewport height for vertical scrolling. Vertical scrolling is disabled\n\t\t * if an empty string.\n\t\t * Note that this parameter will be set by the initialisation routine. To\n\t\t * set a default use {@link DataTable.defaults}.\n\t\t *  @type string\n\t\t */\n\t\t\"sY\": null\n\t},\n\t\n\t/**\n\t * Language information for the table.\n\t *  @namespace\n\t *  @extends DataTable.defaults.oLanguage\n\t */\n\t\"oLanguage\": {\n\t\t/**\n\t\t * Information callback function. See \n\t\t * {@link DataTable.defaults.fnInfoCallback}\n\t\t *  @type function\n\t\t *  @default null\n\t\t */\n\t\t\"fnInfoCallback\": null\n\t},\n\t\n\t/**\n\t * Browser support parameters\n\t *  @namespace\n\t */\n\t\"oBrowser\": {\n\t\t/**\n\t\t * Indicate if the browser incorrectly calculates width:100% inside a\n\t\t * scrolling element (IE6/7)\n\t\t *  @type boolean\n\t\t *  @default false\n\t\t */\n\t\t\"bScrollOversize\": false\n\t},\n\t\n\t/**\n\t * Array referencing the nodes which are used for the features. The \n\t * parameters of this object match what is allowed by sDom - i.e.\n\t *   <ul>\n\t *     <li>'l' - Length changing</li>\n\t *     <li>'f' - Filtering input</li>\n\t *     <li>'t' - The table!</li>\n\t *     <li>'i' - Information</li>\n\t *     <li>'p' - Pagination</li>\n\t *     <li>'r' - pRocessing</li>\n\t *   </ul>\n\t *  @type array\n\t *  @default []\n\t */\n\t\"aanFeatures\": [],\n\t\n\t/**\n\t * Store data information - see {@link DataTable.models.oRow} for detailed\n\t * information.\n\t *  @type array\n\t *  @default []\n\t */\n\t\"aoData\": [],\n\t\n\t/**\n\t * Array of indexes which are in the current display (after filtering etc)\n\t *  @type array\n\t *  @default []\n\t */\n\t\"aiDisplay\": [],\n\t\n\t/**\n\t * Array of indexes for display - no filtering\n\t *  @type array\n\t *  @default []\n\t */\n\t\"aiDisplayMaster\": [],\n\t\n\t/**\n\t * Store information about each column that is in use\n\t *  @type array\n\t *  @default []\n\t */\n\t\"aoColumns\": [],\n\t\n\t/**\n\t * Store information about the table's header\n\t *  @type array\n\t *  @default []\n\t */\n\t\"aoHeader\": [],\n\t\n\t/**\n\t * Store information about the table's footer\n\t *  @type array\n\t *  @default []\n\t */\n\t\"aoFooter\": [],\n\t\n\t/**\n\t * Search data array for regular expression searching\n\t *  @type array\n\t *  @default []\n\t */\n\t\"asDataSearch\": [],\n\t\n\t/**\n\t * Store the applied global search information in case we want to force a \n\t * research or compare the old search to a new one.\n\t * Note that this parameter will be set by the initialisation routine. To\n\t * set a default use {@link DataTable.defaults}.\n\t *  @namespace\n\t *  @extends DataTable.models.oSearch\n\t */\n\t\"oPreviousSearch\": {},\n\t\n\t/**\n\t * Store the applied search for each column - see \n\t * {@link DataTable.models.oSearch} for the format that is used for the\n\t * filtering information for each column.\n\t *  @type array\n\t *  @default []\n\t */\n\t\"aoPreSearchCols\": [],\n\t\n\t/**\n\t * Sorting that is applied to the table. Note that the inner arrays are\n\t * used in the following manner:\n\t * <ul>\n\t *   <li>Index 0 - column number</li>\n\t *   <li>Index 1 - current sorting direction</li>\n\t *   <li>Index 2 - index of asSorting for this column</li>\n\t * </ul>\n\t * Note that this parameter will be set by the initialisation routine. To\n\t * set a default use {@link DataTable.defaults}.\n\t *  @type array\n\t *  @todo These inner arrays should really be objects\n\t */\n\t\"aaSorting\": null,\n\t\n\t/**\n\t * Sorting that is always applied to the table (i.e. prefixed in front of\n\t * aaSorting).\n\t * Note that this parameter will be set by the initialisation routine. To\n\t * set a default use {@link DataTable.defaults}.\n\t *  @type array|null\n\t *  @default null\n\t */\n\t\"aaSortingFixed\": null,\n\t\n\t/**\n\t * Classes to use for the striping of a table.\n\t * Note that this parameter will be set by the initialisation routine. To\n\t * set a default use {@link DataTable.defaults}.\n\t *  @type array\n\t *  @default []\n\t */\n\t\"asStripeClasses\": null,\n\t\n\t/**\n\t * If restoring a table - we should restore its striping classes as well\n\t *  @type array\n\t *  @default []\n\t */\n\t\"asDestroyStripes\": [],\n\t\n\t/**\n\t * If restoring a table - we should restore its width \n\t *  @type int\n\t *  @default 0\n\t */\n\t\"sDestroyWidth\": 0,\n\t\n\t/**\n\t * Callback functions array for every time a row is inserted (i.e. on a draw).\n\t *  @type array\n\t *  @default []\n\t */\n\t\"aoRowCallback\": [],\n\t\n\t/**\n\t * Callback functions for the header on each draw.\n\t *  @type array\n\t *  @default []\n\t */\n\t\"aoHeaderCallback\": [],\n\t\n\t/**\n\t * Callback function for the footer on each draw.\n\t *  @type array\n\t *  @default []\n\t */\n\t\"aoFooterCallback\": [],\n\t\n\t/**\n\t * Array of callback functions for draw callback functions\n\t *  @type array\n\t *  @default []\n\t */\n\t\"aoDrawCallback\": [],\n\t\n\t/**\n\t * Array of callback functions for row created function\n\t *  @type array\n\t *  @default []\n\t */\n\t\"aoRowCreatedCallback\": [],\n\t\n\t/**\n\t * Callback functions for just before the table is redrawn. A return of \n\t * false will be used to cancel the draw.\n\t *  @type array\n\t *  @default []\n\t */\n\t\"aoPreDrawCallback\": [],\n\t\n\t/**\n\t * Callback functions for when the table has been initialised.\n\t *  @type array\n\t *  @default []\n\t */\n\t\"aoInitComplete\": [],\n\n\t\n\t/**\n\t * Callbacks for modifying the settings to be stored for state saving, prior to\n\t * saving state.\n\t *  @type array\n\t *  @default []\n\t */\n\t\"aoStateSaveParams\": [],\n\t\n\t/**\n\t * Callbacks for modifying the settings that have been stored for state saving\n\t * prior to using the stored values to restore the state.\n\t *  @type array\n\t *  @default []\n\t */\n\t\"aoStateLoadParams\": [],\n\t\n\t/**\n\t * Callbacks for operating on the settings object once the saved state has been\n\t * loaded\n\t *  @type array\n\t *  @default []\n\t */\n\t\"aoStateLoaded\": [],\n\t\n\t/**\n\t * Cache the table ID for quick access\n\t *  @type string\n\t *  @default <i>Empty string</i>\n\t */\n\t\"sTableId\": \"\",\n\t\n\t/**\n\t * The TABLE node for the main table\n\t *  @type node\n\t *  @default null\n\t */\n\t\"nTable\": null,\n\t\n\t/**\n\t * Permanent ref to the thead element\n\t *  @type node\n\t *  @default null\n\t */\n\t\"nTHead\": null,\n\t\n\t/**\n\t * Permanent ref to the tfoot element - if it exists\n\t *  @type node\n\t *  @default null\n\t */\n\t\"nTFoot\": null,\n\t\n\t/**\n\t * Permanent ref to the tbody element\n\t *  @type node\n\t *  @default null\n\t */\n\t\"nTBody\": null,\n\t\n\t/**\n\t * Cache the wrapper node (contains all DataTables controlled elements)\n\t *  @type node\n\t *  @default null\n\t */\n\t\"nTableWrapper\": null,\n\t\n\t/**\n\t * Indicate if when using server-side processing the loading of data \n\t * should be deferred until the second draw.\n\t * Note that this parameter will be set by the initialisation routine. To\n\t * set a default use {@link DataTable.defaults}.\n\t *  @type boolean\n\t *  @default false\n\t */\n\t\"bDeferLoading\": false,\n\t\n\t/**\n\t * Indicate if all required information has been read in\n\t *  @type boolean\n\t *  @default false\n\t */\n\t\"bInitialised\": false,\n\t\n\t/**\n\t * Information about open rows. Each object in the array has the parameters\n\t * 'nTr' and 'nParent'\n\t *  @type array\n\t *  @default []\n\t */\n\t\"aoOpenRows\": [],\n\t\n\t/**\n\t * Dictate the positioning of DataTables' control elements - see\n\t * {@link DataTable.model.oInit.sDom}.\n\t * Note that this parameter will be set by the initialisation routine. To\n\t * set a default use {@link DataTable.defaults}.\n\t *  @type string\n\t *  @default null\n\t */\n\t\"sDom\": null,\n\t\n\t/**\n\t * Which type of pagination should be used.\n\t * Note that this parameter will be set by the initialisation routine. To\n\t * set a default use {@link DataTable.defaults}.\n\t *  @type string \n\t *  @default two_button\n\t */\n\t\"sPaginationType\": \"two_button\",\n\t\n\t/**\n\t * The cookie duration (for bStateSave) in seconds.\n\t * Note that this parameter will be set by the initialisation routine. To\n\t * set a default use {@link DataTable.defaults}.\n\t *  @type int\n\t *  @default 0\n\t */\n\t\"iCookieDuration\": 0,\n\t\n\t/**\n\t * The cookie name prefix.\n\t * Note that this parameter will be set by the initialisation routine. To\n\t * set a default use {@link DataTable.defaults}.\n\t *  @type string\n\t *  @default <i>Empty string</i>\n\t */\n\t\"sCookiePrefix\": \"\",\n\t\n\t/**\n\t * Callback function for cookie creation.\n\t * Note that this parameter will be set by the initialisation routine. To\n\t * set a default use {@link DataTable.defaults}.\n\t *  @type function\n\t *  @default null\n\t */\n\t\"fnCookieCallback\": null,\n\t\n\t/**\n\t * Array of callback functions for state saving. Each array element is an \n\t * object with the following parameters:\n\t *   <ul>\n\t *     <li>function:fn - function to call. Takes two parameters, oSettings\n\t *       and the JSON string to save that has been thus far created. Returns\n\t *       a JSON string to be inserted into a json object \n\t *       (i.e. '\"param\": [ 0, 1, 2]')</li>\n\t *     <li>string:sName - name of callback</li>\n\t *   </ul>\n\t *  @type array\n\t *  @default []\n\t */\n\t\"aoStateSave\": [],\n\t\n\t/**\n\t * Array of callback functions for state loading. Each array element is an \n\t * object with the following parameters:\n\t *   <ul>\n\t *     <li>function:fn - function to call. Takes two parameters, oSettings \n\t *       and the object stored. May return false to cancel state loading</li>\n\t *     <li>string:sName - name of callback</li>\n\t *   </ul>\n\t *  @type array\n\t *  @default []\n\t */\n\t\"aoStateLoad\": [],\n\t\n\t/**\n\t * State that was loaded from the cookie. Useful for back reference\n\t *  @type object\n\t *  @default null\n\t */\n\t\"oLoadedState\": null,\n\t\n\t/**\n\t * Source url for AJAX data for the table.\n\t * Note that this parameter will be set by the initialisation routine. To\n\t * set a default use {@link DataTable.defaults}.\n\t *  @type string\n\t *  @default null\n\t */\n\t\"sAjaxSource\": null,\n\t\n\t/**\n\t * Property from a given object from which to read the table data from. This\n\t * can be an empty string (when not server-side processing), in which case \n\t * it is  assumed an an array is given directly.\n\t * Note that this parameter will be set by the initialisation routine. To\n\t * set a default use {@link DataTable.defaults}.\n\t *  @type string\n\t */\n\t\"sAjaxDataProp\": null,\n\t\n\t/**\n\t * Note if draw should be blocked while getting data\n\t *  @type boolean\n\t *  @default true\n\t */\n\t\"bAjaxDataGet\": true,\n\t\n\t/**\n\t * The last jQuery XHR object that was used for server-side data gathering. \n\t * This can be used for working with the XHR information in one of the \n\t * callbacks\n\t *  @type object\n\t *  @default null\n\t */\n\t\"jqXHR\": null,\n\t\n\t/**\n\t * Function to get the server-side data.\n\t * Note that this parameter will be set by the initialisation routine. To\n\t * set a default use {@link DataTable.defaults}.\n\t *  @type function\n\t */\n\t\"fnServerData\": null,\n\t\n\t/**\n\t * Functions which are called prior to sending an Ajax request so extra \n\t * parameters can easily be sent to the server\n\t *  @type array\n\t *  @default []\n\t */\n\t\"aoServerParams\": [],\n\t\n\t/**\n\t * Send the XHR HTTP method - GET or POST (could be PUT or DELETE if \n\t * required).\n\t * Note that this parameter will be set by the initialisation routine. To\n\t * set a default use {@link DataTable.defaults}.\n\t *  @type string\n\t */\n\t\"sServerMethod\": null,\n\t\n\t/**\n\t * Format numbers for display.\n\t * Note that this parameter will be set by the initialisation routine. To\n\t * set a default use {@link DataTable.defaults}.\n\t *  @type function\n\t */\n\t\"fnFormatNumber\": null,\n\t\n\t/**\n\t * List of options that can be used for the user selectable length menu.\n\t * Note that this parameter will be set by the initialisation routine. To\n\t * set a default use {@link DataTable.defaults}.\n\t *  @type array\n\t *  @default []\n\t */\n\t\"aLengthMenu\": null,\n\t\n\t/**\n\t * Counter for the draws that the table does. Also used as a tracker for\n\t * server-side processing\n\t *  @type int\n\t *  @default 0\n\t */\n\t\"iDraw\": 0,\n\t\n\t/**\n\t * Indicate if a redraw is being done - useful for Ajax\n\t *  @type boolean\n\t *  @default false\n\t */\n\t\"bDrawing\": false,\n\t\n\t/**\n\t * Draw index (iDraw) of the last error when parsing the returned data\n\t *  @type int\n\t *  @default -1\n\t */\n\t\"iDrawError\": -1,\n\t\n\t/**\n\t * Paging display length\n\t *  @type int\n\t *  @default 10\n\t */\n\t\"_iDisplayLength\": 10,\n\n\t/**\n\t * Paging start point - aiDisplay index\n\t *  @type int\n\t *  @default 0\n\t */\n\t\"_iDisplayStart\": 0,\n\n\t/**\n\t * Paging end point - aiDisplay index. Use fnDisplayEnd rather than\n\t * this property to get the end point\n\t *  @type int\n\t *  @default 10\n\t *  @private\n\t */\n\t\"_iDisplayEnd\": 10,\n\t\n\t/**\n\t * Server-side processing - number of records in the result set\n\t * (i.e. before filtering), Use fnRecordsTotal rather than\n\t * this property to get the value of the number of records, regardless of\n\t * the server-side processing setting.\n\t *  @type int\n\t *  @default 0\n\t *  @private\n\t */\n\t\"_iRecordsTotal\": 0,\n\n\t/**\n\t * Server-side processing - number of records in the current display set\n\t * (i.e. after filtering). Use fnRecordsDisplay rather than\n\t * this property to get the value of the number of records, regardless of\n\t * the server-side processing setting.\n\t *  @type boolean\n\t *  @default 0\n\t *  @private\n\t */\n\t\"_iRecordsDisplay\": 0,\n\t\n\t/**\n\t * Flag to indicate if jQuery UI marking and classes should be used.\n\t * Note that this parameter will be set by the initialisation routine. To\n\t * set a default use {@link DataTable.defaults}.\n\t *  @type boolean\n\t */\n\t\"bJUI\": null,\n\t\n\t/**\n\t * The classes to use for the table\n\t *  @type object\n\t *  @default {}\n\t */\n\t\"oClasses\": {},\n\t\n\t/**\n\t * Flag attached to the settings object so you can check in the draw \n\t * callback if filtering has been done in the draw. Deprecated in favour of\n\t * events.\n\t *  @type boolean\n\t *  @default false\n\t *  @deprecated\n\t */\n\t\"bFiltered\": false,\n\t\n\t/**\n\t * Flag attached to the settings object so you can check in the draw \n\t * callback if sorting has been done in the draw. Deprecated in favour of\n\t * events.\n\t *  @type boolean\n\t *  @default false\n\t *  @deprecated\n\t */\n\t\"bSorted\": false,\n\t\n\t/**\n\t * Indicate that if multiple rows are in the header and there is more than \n\t * one unique cell per column, if the top one (true) or bottom one (false) \n\t * should be used for sorting / title by DataTables.\n\t * Note that this parameter will be set by the initialisation routine. To\n\t * set a default use {@link DataTable.defaults}.\n\t *  @type boolean\n\t */\n\t\"bSortCellsTop\": null,\n\t\n\t/**\n\t * Initialisation object that is used for the table\n\t *  @type object\n\t *  @default null\n\t */\n\t\"oInit\": null,\n\t\n\t/**\n\t * Destroy callback functions - for plug-ins to attach themselves to the\n\t * destroy so they can clean up markup and events.\n\t *  @type array\n\t *  @default []\n\t */\n\t\"aoDestroyCallback\": [],\n\n\t\n\t/**\n\t * Get the number of records in the current record set, before filtering\n\t *  @type function\n\t */\n\t\"fnRecordsTotal\": function ()\n\t{\n\t\tif ( this.oFeatures.bServerSide ) {\n\t\t\treturn parseInt(this._iRecordsTotal, 10);\n\t\t} else {\n\t\t\treturn this.aiDisplayMaster.length;\n\t\t}\n\t},\n\t\n\t/**\n\t * Get the number of records in the current record set, after filtering\n\t *  @type function\n\t */\n\t\"fnRecordsDisplay\": function ()\n\t{\n\t\tif ( this.oFeatures.bServerSide ) {\n\t\t\treturn parseInt(this._iRecordsDisplay, 10);\n\t\t} else {\n\t\t\treturn this.aiDisplay.length;\n\t\t}\n\t},\n\t\n\t/**\n\t * Set the display end point - aiDisplay index\n\t *  @type function\n\t *  @todo Should do away with _iDisplayEnd and calculate it on-the-fly here\n\t */\n\t\"fnDisplayEnd\": function ()\n\t{\n\t\tif ( this.oFeatures.bServerSide ) {\n\t\t\tif ( this.oFeatures.bPaginate === false || this._iDisplayLength == -1 ) {\n\t\t\t\treturn this._iDisplayStart+this.aiDisplay.length;\n\t\t\t} else {\n\t\t\t\treturn Math.min( this._iDisplayStart+this._iDisplayLength, \n\t\t\t\t\tthis._iRecordsDisplay );\n\t\t\t}\n\t\t} else {\n\t\t\treturn this._iDisplayEnd;\n\t\t}\n\t},\n\t\n\t/**\n\t * The DataTables object for this table\n\t *  @type object\n\t *  @default null\n\t */\n\t\"oInstance\": null,\n\t\n\t/**\n\t * Unique identifier for each instance of the DataTables object. If there\n\t * is an ID on the table node, then it takes that value, otherwise an\n\t * incrementing internal counter is used.\n\t *  @type string\n\t *  @default null\n\t */\n\t\"sInstance\": null,\n\n\t/**\n\t * tabindex attribute value that is added to DataTables control elements, allowing\n\t * keyboard navigation of the table and its controls.\n\t */\n\t\"iTabIndex\": 0,\n\n\t/**\n\t * DIV container for the footer scrolling table if scrolling\n\t */\n\t\"nScrollHead\": null,\n\n\t/**\n\t * DIV container for the footer scrolling table if scrolling\n\t */\n\t\"nScrollFoot\": null\n};\n\n/**\n * Extension object for DataTables that is used to provide all extension options.\n * \n * Note that the <i>DataTable.ext</i> object is available through\n * <i>jQuery.fn.dataTable.ext</i> where it may be accessed and manipulated. It is\n * also aliased to <i>jQuery.fn.dataTableExt</i> for historic reasons.\n *  @namespace\n *  @extends DataTable.models.ext\n */\nDataTable.ext = $.extend( true, {}, DataTable.models.ext );\n\n$.extend( DataTable.ext.oStdClasses, {\n\t\"sTable\": \"dataTable\",\n\n\t/* Two buttons buttons */\n\t\"sPagePrevEnabled\": \"paginate_enabled_previous\",\n\t\"sPagePrevDisabled\": \"paginate_disabled_previous\",\n\t\"sPageNextEnabled\": \"paginate_enabled_next\",\n\t\"sPageNextDisabled\": \"paginate_disabled_next\",\n\t\"sPageJUINext\": \"\",\n\t\"sPageJUIPrev\": \"\",\n\t\n\t/* Full numbers paging buttons */\n\t\"sPageButton\": \"paginate_button\",\n\t\"sPageButtonActive\": \"paginate_active\",\n\t\"sPageButtonStaticDisabled\": \"paginate_button paginate_button_disabled\",\n\t\"sPageFirst\": \"first\",\n\t\"sPagePrevious\": \"previous\",\n\t\"sPageNext\": \"next\",\n\t\"sPageLast\": \"last\",\n\t\n\t/* Striping classes */\n\t\"sStripeOdd\": \"odd\",\n\t\"sStripeEven\": \"even\",\n\t\n\t/* Empty row */\n\t\"sRowEmpty\": \"dataTables_empty\",\n\t\n\t/* Features */\n\t\"sWrapper\": \"dataTables_wrapper\",\n\t\"sFilter\": \"dataTables_filter\",\n\t\"sInfo\": \"dataTables_info\",\n\t\"sPaging\": \"dataTables_paginate paging_\", /* Note that the type is postfixed */\n\t\"sLength\": \"dataTables_length\",\n\t\"sProcessing\": \"dataTables_processing\",\n\t\n\t/* Sorting */\n\t\"sSortAsc\": \"sorting_asc\",\n\t\"sSortDesc\": \"sorting_desc\",\n\t\"sSortable\": \"sorting\", /* Sortable in both directions */\n\t\"sSortableAsc\": \"sorting_asc_disabled\",\n\t\"sSortableDesc\": \"sorting_desc_disabled\",\n\t\"sSortableNone\": \"sorting_disabled\",\n\t\"sSortColumn\": \"sorting_\", /* Note that an int is postfixed for the sorting order */\n\t\"sSortJUIAsc\": \"\",\n\t\"sSortJUIDesc\": \"\",\n\t\"sSortJUI\": \"\",\n\t\"sSortJUIAscAllowed\": \"\",\n\t\"sSortJUIDescAllowed\": \"\",\n\t\"sSortJUIWrapper\": \"\",\n\t\"sSortIcon\": \"\",\n\t\n\t/* Scrolling */\n\t\"sScrollWrapper\": \"dataTables_scroll\",\n\t\"sScrollHead\": \"dataTables_scrollHead\",\n\t\"sScrollHeadInner\": \"dataTables_scrollHeadInner\",\n\t\"sScrollBody\": \"dataTables_scrollBody\",\n\t\"sScrollFoot\": \"dataTables_scrollFoot\",\n\t\"sScrollFootInner\": \"dataTables_scrollFootInner\",\n\t\n\t/* Misc */\n\t\"sFooterTH\": \"\",\n\t\"sJUIHeader\": \"\",\n\t\"sJUIFooter\": \"\"\n} );\n\n\n$.extend( DataTable.ext.oJUIClasses, DataTable.ext.oStdClasses, {\n\t/* Two buttons buttons */\n\t\"sPagePrevEnabled\": \"fg-button ui-button ui-state-default ui-corner-left\",\n\t\"sPagePrevDisabled\": \"fg-button ui-button ui-state-default ui-corner-left ui-state-disabled\",\n\t\"sPageNextEnabled\": \"fg-button ui-button ui-state-default ui-corner-right\",\n\t\"sPageNextDisabled\": \"fg-button ui-button ui-state-default ui-corner-right ui-state-disabled\",\n\t\"sPageJUINext\": \"ui-icon ui-icon-circle-arrow-e\",\n\t\"sPageJUIPrev\": \"ui-icon ui-icon-circle-arrow-w\",\n\t\n\t/* Full numbers paging buttons */\n\t\"sPageButton\": \"fg-button ui-button ui-state-default\",\n\t\"sPageButtonActive\": \"fg-button ui-button ui-state-default ui-state-disabled\",\n\t\"sPageButtonStaticDisabled\": \"fg-button ui-button ui-state-default ui-state-disabled\",\n\t\"sPageFirst\": \"first ui-corner-tl ui-corner-bl\",\n\t\"sPageLast\": \"last ui-corner-tr ui-corner-br\",\n\t\n\t/* Features */\n\t\"sPaging\": \"dataTables_paginate fg-buttonset ui-buttonset fg-buttonset-multi \"+\n\t\t\"ui-buttonset-multi paging_\", /* Note that the type is postfixed */\n\t\n\t/* Sorting */\n\t\"sSortAsc\": \"ui-state-default\",\n\t\"sSortDesc\": \"ui-state-default\",\n\t\"sSortable\": \"ui-state-default\",\n\t\"sSortableAsc\": \"ui-state-default\",\n\t\"sSortableDesc\": \"ui-state-default\",\n\t\"sSortableNone\": \"ui-state-default\",\n\t\"sSortJUIAsc\": \"css_right ui-icon ui-icon-triangle-1-n\",\n\t\"sSortJUIDesc\": \"css_right ui-icon ui-icon-triangle-1-s\",\n\t\"sSortJUI\": \"css_right ui-icon ui-icon-carat-2-n-s\",\n\t\"sSortJUIAscAllowed\": \"css_right ui-icon ui-icon-carat-1-n\",\n\t\"sSortJUIDescAllowed\": \"css_right ui-icon ui-icon-carat-1-s\",\n\t\"sSortJUIWrapper\": \"DataTables_sort_wrapper\",\n\t\"sSortIcon\": \"DataTables_sort_icon\",\n\t\n\t/* Scrolling */\n\t\"sScrollHead\": \"dataTables_scrollHead ui-state-default\",\n\t\"sScrollFoot\": \"dataTables_scrollFoot ui-state-default\",\n\t\n\t/* Misc */\n\t\"sFooterTH\": \"ui-state-default\",\n\t\"sJUIHeader\": \"fg-toolbar ui-toolbar ui-widget-header ui-corner-tl ui-corner-tr ui-helper-clearfix\",\n\t\"sJUIFooter\": \"fg-toolbar ui-toolbar ui-widget-header ui-corner-bl ui-corner-br ui-helper-clearfix\"\n} );\n\n/*\n * Variable: oPagination\n * Purpose:  \n * Scope:    jQuery.fn.dataTableExt\n */\n$.extend( DataTable.ext.oPagination, {\n\t/*\n\t * Variable: two_button\n\t * Purpose:  Standard two button (forward/back) pagination\n\t * Scope:    jQuery.fn.dataTableExt.oPagination\n\t */\n\t\"two_button\": {\n\t\t/*\n\t\t * Function: oPagination.two_button.fnInit\n\t\t * Purpose:  Initialise dom elements required for pagination with forward/back buttons only\n\t\t * Returns:  -\n\t\t * Inputs:   object:oSettings - dataTables settings object\n\t\t *           node:nPaging - the DIV which contains this pagination control\n\t\t *           function:fnCallbackDraw - draw function which must be called on update\n\t\t */\n\t\t\"fnInit\": function ( oSettings, nPaging, fnCallbackDraw )\n\t\t{\n\t\t\tvar oLang = oSettings.oLanguage.oPaginate;\n\t\t\tvar oClasses = oSettings.oClasses;\n\t\t\tvar fnClickHandler = function ( e ) {\n\t\t\t\tif ( oSettings.oApi._fnPageChange( oSettings, e.data.action ) )\n\t\t\t\t{\n\t\t\t\t\tfnCallbackDraw( oSettings );\n\t\t\t\t}\n\t\t\t};\n\n\t\t\tvar sAppend = (!oSettings.bJUI) ?\n\t\t\t\t'<a class=\"'+oSettings.oClasses.sPagePrevDisabled+'\" tabindex=\"'+oSettings.iTabIndex+'\" role=\"button\">'+oLang.sPrevious+'</a>'+\n\t\t\t\t'<a class=\"'+oSettings.oClasses.sPageNextDisabled+'\" tabindex=\"'+oSettings.iTabIndex+'\" role=\"button\">'+oLang.sNext+'</a>'\n\t\t\t\t:\n\t\t\t\t'<a class=\"'+oSettings.oClasses.sPagePrevDisabled+'\" tabindex=\"'+oSettings.iTabIndex+'\" role=\"button\"><span class=\"'+oSettings.oClasses.sPageJUIPrev+'\"></span></a>'+\n\t\t\t\t'<a class=\"'+oSettings.oClasses.sPageNextDisabled+'\" tabindex=\"'+oSettings.iTabIndex+'\" role=\"button\"><span class=\"'+oSettings.oClasses.sPageJUINext+'\"></span></a>';\n\t\t\t$(nPaging).append( sAppend );\n\t\t\t\n\t\t\tvar els = $('a', nPaging);\n\t\t\tvar nPrevious = els[0],\n\t\t\t\tnNext = els[1];\n\t\t\t\n\t\t\toSettings.oApi._fnBindAction( nPrevious, {action: \"previous\"}, fnClickHandler );\n\t\t\toSettings.oApi._fnBindAction( nNext,     {action: \"next\"},     fnClickHandler );\n\t\t\t\n\t\t\t/* ID the first elements only */\n\t\t\tif ( !oSettings.aanFeatures.p )\n\t\t\t{\n\t\t\t\tnPaging.id = oSettings.sTableId+'_paginate';\n\t\t\t\tnPrevious.id = oSettings.sTableId+'_previous';\n\t\t\t\tnNext.id = oSettings.sTableId+'_next';\n\n\t\t\t\tnPrevious.setAttribute('aria-controls', oSettings.sTableId);\n\t\t\t\tnNext.setAttribute('aria-controls', oSettings.sTableId);\n\t\t\t}\n\t\t},\n\t\t\n\t\t/*\n\t\t * Function: oPagination.two_button.fnUpdate\n\t\t * Purpose:  Update the two button pagination at the end of the draw\n\t\t * Returns:  -\n\t\t * Inputs:   object:oSettings - dataTables settings object\n\t\t *           function:fnCallbackDraw - draw function to call on page change\n\t\t */\n\t\t\"fnUpdate\": function ( oSettings, fnCallbackDraw )\n\t\t{\n\t\t\tif ( !oSettings.aanFeatures.p )\n\t\t\t{\n\t\t\t\treturn;\n\t\t\t}\n\t\t\t\n\t\t\tvar oClasses = oSettings.oClasses;\n\t\t\tvar an = oSettings.aanFeatures.p;\n\t\t\tvar nNode;\n\n\t\t\t/* Loop over each instance of the pager */\n\t\t\tfor ( var i=0, iLen=an.length ; i<iLen ; i++ )\n\t\t\t{\n\t\t\t\tnNode = an[i].firstChild;\n\t\t\t\tif ( nNode )\n\t\t\t\t{\n\t\t\t\t\t/* Previous page */\n\t\t\t\t\tnNode.className = ( oSettings._iDisplayStart === 0 ) ?\n\t\t\t\t\t    oClasses.sPagePrevDisabled : oClasses.sPagePrevEnabled;\n\t\t\t\t\t    \n\t\t\t\t\t/* Next page */\n\t\t\t\t\tnNode = nNode.nextSibling;\n\t\t\t\t\tnNode.className = ( oSettings.fnDisplayEnd() == oSettings.fnRecordsDisplay() ) ?\n\t\t\t\t\t    oClasses.sPageNextDisabled : oClasses.sPageNextEnabled;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t},\n\t\n\t\n\t/*\n\t * Variable: iFullNumbersShowPages\n\t * Purpose:  Change the number of pages which can be seen\n\t * Scope:    jQuery.fn.dataTableExt.oPagination\n\t */\n\t\"iFullNumbersShowPages\": 5,\n\t\n\t/*\n\t * Variable: full_numbers\n\t * Purpose:  Full numbers pagination\n\t * Scope:    jQuery.fn.dataTableExt.oPagination\n\t */\n\t\"full_numbers\": {\n\t\t/*\n\t\t * Function: oPagination.full_numbers.fnInit\n\t\t * Purpose:  Initialise dom elements required for pagination with a list of the pages\n\t\t * Returns:  -\n\t\t * Inputs:   object:oSettings - dataTables settings object\n\t\t *           node:nPaging - the DIV which contains this pagination control\n\t\t *           function:fnCallbackDraw - draw function which must be called on update\n\t\t */\n\t\t\"fnInit\": function ( oSettings, nPaging, fnCallbackDraw )\n\t\t{\n\t\t\tvar oLang = oSettings.oLanguage.oPaginate;\n\t\t\tvar oClasses = oSettings.oClasses;\n\t\t\tvar fnClickHandler = function ( e ) {\n\t\t\t\tif ( oSettings.oApi._fnPageChange( oSettings, e.data.action ) )\n\t\t\t\t{\n\t\t\t\t\tfnCallbackDraw( oSettings );\n\t\t\t\t}\n\t\t\t};\n\n\t\t\t$(nPaging).append(\n\t\t\t\t'<a  tabindex=\"'+oSettings.iTabIndex+'\" class=\"'+oClasses.sPageButton+\" \"+oClasses.sPageFirst+'\">'+oLang.sFirst+'</a>'+\n\t\t\t\t'<a  tabindex=\"'+oSettings.iTabIndex+'\" class=\"'+oClasses.sPageButton+\" \"+oClasses.sPagePrevious+'\">'+oLang.sPrevious+'</a>'+\n\t\t\t\t'<span></span>'+\n\t\t\t\t'<a tabindex=\"'+oSettings.iTabIndex+'\" class=\"'+oClasses.sPageButton+\" \"+oClasses.sPageNext+'\">'+oLang.sNext+'</a>'+\n\t\t\t\t'<a tabindex=\"'+oSettings.iTabIndex+'\" class=\"'+oClasses.sPageButton+\" \"+oClasses.sPageLast+'\">'+oLang.sLast+'</a>'\n\t\t\t);\n\t\t\tvar els = $('a', nPaging);\n\t\t\tvar nFirst = els[0],\n\t\t\t\tnPrev = els[1],\n\t\t\t\tnNext = els[2],\n\t\t\t\tnLast = els[3];\n\t\t\t\n\t\t\toSettings.oApi._fnBindAction( nFirst, {action: \"first\"},    fnClickHandler );\n\t\t\toSettings.oApi._fnBindAction( nPrev,  {action: \"previous\"}, fnClickHandler );\n\t\t\toSettings.oApi._fnBindAction( nNext,  {action: \"next\"},     fnClickHandler );\n\t\t\toSettings.oApi._fnBindAction( nLast,  {action: \"last\"},     fnClickHandler );\n\t\t\t\n\t\t\t/* ID the first elements only */\n\t\t\tif ( !oSettings.aanFeatures.p )\n\t\t\t{\n\t\t\t\tnPaging.id = oSettings.sTableId+'_paginate';\n\t\t\t\tnFirst.id =oSettings.sTableId+'_first';\n\t\t\t\tnPrev.id =oSettings.sTableId+'_previous';\n\t\t\t\tnNext.id =oSettings.sTableId+'_next';\n\t\t\t\tnLast.id =oSettings.sTableId+'_last';\n\t\t\t}\n\t\t},\n\t\t\n\t\t/*\n\t\t * Function: oPagination.full_numbers.fnUpdate\n\t\t * Purpose:  Update the list of page buttons shows\n\t\t * Returns:  -\n\t\t * Inputs:   object:oSettings - dataTables settings object\n\t\t *           function:fnCallbackDraw - draw function to call on page change\n\t\t */\n\t\t\"fnUpdate\": function ( oSettings, fnCallbackDraw )\n\t\t{\n\t\t\tif ( !oSettings.aanFeatures.p )\n\t\t\t{\n\t\t\t\treturn;\n\t\t\t}\n\t\t\t\n\t\t\tvar iPageCount = DataTable.ext.oPagination.iFullNumbersShowPages;\n\t\t\tvar iPageCountHalf = Math.floor(iPageCount / 2);\n\t\t\tvar iPages = Math.ceil((oSettings.fnRecordsDisplay()) / oSettings._iDisplayLength);\n\t\t\tvar iCurrentPage = Math.ceil(oSettings._iDisplayStart / oSettings._iDisplayLength) + 1;\n\t\t\tvar sList = \"\";\n\t\t\tvar iStartButton, iEndButton, i, iLen;\n\t\t\tvar oClasses = oSettings.oClasses;\n\t\t\tvar anButtons, anStatic, nPaginateList, nNode;\n\t\t\tvar an = oSettings.aanFeatures.p;\n\t\t\tvar fnBind = function (j) {\n\t\t\t\toSettings.oApi._fnBindAction( this, {\"page\": j+iStartButton-1}, function(e) {\n\t\t\t\t\t/* Use the information in the element to jump to the required page */\n\t\t\t\t\toSettings.oApi._fnPageChange( oSettings, e.data.page );\n\t\t\t\t\tfnCallbackDraw( oSettings );\n\t\t\t\t\te.preventDefault();\n\t\t\t\t} );\n\t\t\t};\n\t\t\t\n\t\t\t/* Pages calculation */\n\t\t\tif ( oSettings._iDisplayLength === -1 )\n\t\t\t{\n\t\t\t\tiStartButton = 1;\n\t\t\t\tiEndButton = 1;\n\t\t\t\tiCurrentPage = 1;\n\t\t\t}\n\t\t\telse if (iPages < iPageCount)\n\t\t\t{\n\t\t\t\tiStartButton = 1;\n\t\t\t\tiEndButton = iPages;\n\t\t\t}\n\t\t\telse if (iCurrentPage <= iPageCountHalf)\n\t\t\t{\n\t\t\t\tiStartButton = 1;\n\t\t\t\tiEndButton = iPageCount;\n\t\t\t}\n\t\t\telse if (iCurrentPage >= (iPages - iPageCountHalf))\n\t\t\t{\n\t\t\t\tiStartButton = iPages - iPageCount + 1;\n\t\t\t\tiEndButton = iPages;\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tiStartButton = iCurrentPage - Math.ceil(iPageCount / 2) + 1;\n\t\t\t\tiEndButton = iStartButton + iPageCount - 1;\n\t\t\t}\n\n\t\t\t\n\t\t\t/* Build the dynamic list */\n\t\t\tfor ( i=iStartButton ; i<=iEndButton ; i++ )\n\t\t\t{\n\t\t\t\tsList += (iCurrentPage !== i) ?\n\t\t\t\t\t'<a tabindex=\"'+oSettings.iTabIndex+'\" class=\"'+oClasses.sPageButton+'\">'+oSettings.fnFormatNumber(i)+'</a>' :\n\t\t\t\t\t'<a tabindex=\"'+oSettings.iTabIndex+'\" class=\"'+oClasses.sPageButtonActive+'\">'+oSettings.fnFormatNumber(i)+'</a>';\n\t\t\t}\n\t\t\t\n\t\t\t/* Loop over each instance of the pager */\n\t\t\tfor ( i=0, iLen=an.length ; i<iLen ; i++ )\n\t\t\t{\n\t\t\t\tnNode = an[i];\n\t\t\t\tif ( !nNode.hasChildNodes() )\n\t\t\t\t{\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\t/* Build up the dynamic list first - html and listeners */\n\t\t\t\t$('span:eq(0)', nNode)\n\t\t\t\t\t.html( sList )\n\t\t\t\t\t.children('a').each( fnBind );\n\t\t\t\t\n\t\t\t\t/* Update the permanent button's classes */\n\t\t\t\tanButtons = nNode.getElementsByTagName('a');\n\t\t\t\tanStatic = [\n\t\t\t\t\tanButtons[0], anButtons[1], \n\t\t\t\t\tanButtons[anButtons.length-2], anButtons[anButtons.length-1]\n\t\t\t\t];\n\n\t\t\t\t$(anStatic).removeClass( oClasses.sPageButton+\" \"+oClasses.sPageButtonActive+\" \"+oClasses.sPageButtonStaticDisabled );\n\t\t\t\t$([anStatic[0], anStatic[1]]).addClass( \n\t\t\t\t\t(iCurrentPage==1) ?\n\t\t\t\t\t\toClasses.sPageButtonStaticDisabled :\n\t\t\t\t\t\toClasses.sPageButton\n\t\t\t\t);\n\t\t\t\t$([anStatic[2], anStatic[3]]).addClass(\n\t\t\t\t\t(iPages===0 || iCurrentPage===iPages || oSettings._iDisplayLength===-1) ?\n\t\t\t\t\t\toClasses.sPageButtonStaticDisabled :\n\t\t\t\t\t\toClasses.sPageButton\n\t\t\t\t);\n\t\t\t}\n\t\t}\n\t}\n} );\n\n$.extend( DataTable.ext.oSort, {\n\t/*\n\t * text sorting\n\t */\n\t\"string-pre\": function ( a )\n\t{\n\t\tif ( typeof a != 'string' ) {\n\t\t\ta = (a !== null && a.toString) ? a.toString() : '';\n\t\t}\n\t\treturn a.toLowerCase();\n\t},\n\n\t\"string-asc\": function ( x, y )\n\t{\n\t\treturn ((x < y) ? -1 : ((x > y) ? 1 : 0));\n\t},\n\t\n\t\"string-desc\": function ( x, y )\n\t{\n\t\treturn ((x < y) ? 1 : ((x > y) ? -1 : 0));\n\t},\n\t\n\t\n\t/*\n\t * html sorting (ignore html tags)\n\t */\n\t\"html-pre\": function ( a )\n\t{\n\t\treturn a.replace( /<.*?>/g, \"\" ).toLowerCase();\n\t},\n\t\n\t\"html-asc\": function ( x, y )\n\t{\n\t\treturn ((x < y) ? -1 : ((x > y) ? 1 : 0));\n\t},\n\t\n\t\"html-desc\": function ( x, y )\n\t{\n\t\treturn ((x < y) ? 1 : ((x > y) ? -1 : 0));\n\t},\n\t\n\t\n\t/*\n\t * date sorting\n\t */\n\t\"date-pre\": function ( a )\n\t{\n\t\tvar x = Date.parse( a );\n\t\t\n\t\tif ( isNaN(x) || x===\"\" )\n\t\t{\n\t\t\tx = Date.parse( \"01/01/1970 00:00:00\" );\n\t\t}\n\t\treturn x;\n\t},\n\n\t\"date-asc\": function ( x, y )\n\t{\n\t\treturn x - y;\n\t},\n\t\n\t\"date-desc\": function ( x, y )\n\t{\n\t\treturn y - x;\n\t},\n\t\n\t\n\t/*\n\t * numerical sorting\n\t */\n\t\"numeric-pre\": function ( a )\n\t{\n\t\treturn (a==\"-\" || a===\"\") ? 0 : a*1;\n\t},\n\n\t\"numeric-asc\": function ( x, y )\n\t{\n\t\treturn x - y;\n\t},\n\t\n\t\"numeric-desc\": function ( x, y )\n\t{\n\t\treturn y - x;\n\t}\n} );\n\n\n$.extend( DataTable.ext.aTypes, [\n\t/*\n\t * Function: -\n\t * Purpose:  Check to see if a string is numeric\n\t * Returns:  string:'numeric' or null\n\t * Inputs:   mixed:sText - string to check\n\t */\n\tfunction ( sData )\n\t{\n\t\t/* Allow zero length strings as a number */\n\t\tif ( typeof sData === 'number' )\n\t\t{\n\t\t\treturn 'numeric';\n\t\t}\n\t\telse if ( typeof sData !== 'string' )\n\t\t{\n\t\t\treturn null;\n\t\t}\n\t\t\n\t\tvar sValidFirstChars = \"0123456789-\";\n\t\tvar sValidChars = \"0123456789.\";\n\t\tvar Char;\n\t\tvar bDecimal = false;\n\t\t\n\t\t/* Check for a valid first char (no period and allow negatives) */\n\t\tChar = sData.charAt(0); \n\t\tif (sValidFirstChars.indexOf(Char) == -1) \n\t\t{\n\t\t\treturn null;\n\t\t}\n\t\t\n\t\t/* Check all the other characters are valid */\n\t\tfor ( var i=1 ; i<sData.length ; i++ ) \n\t\t{\n\t\t\tChar = sData.charAt(i); \n\t\t\tif (sValidChars.indexOf(Char) == -1) \n\t\t\t{\n\t\t\t\treturn null;\n\t\t\t}\n\t\t\t\n\t\t\t/* Only allowed one decimal place... */\n\t\t\tif ( Char == \".\" )\n\t\t\t{\n\t\t\t\tif ( bDecimal )\n\t\t\t\t{\n\t\t\t\t\treturn null;\n\t\t\t\t}\n\t\t\t\tbDecimal = true;\n\t\t\t}\n\t\t}\n\t\t\n\t\treturn 'numeric';\n\t},\n\t\n\t/*\n\t * Function: -\n\t * Purpose:  Check to see if a string is actually a formatted date\n\t * Returns:  string:'date' or null\n\t * Inputs:   string:sText - string to check\n\t */\n\tfunction ( sData )\n\t{\n\t\t//NOPE\n\t\treturn null;\n\t},\n\t\n\t/*\n\t * Function: -\n\t * Purpose:  Check to see if a string should be treated as an HTML string\n\t * Returns:  string:'html' or null\n\t * Inputs:   string:sText - string to check\n\t */\n\tfunction ( sData )\n\t{\n\t\tif ( typeof sData === 'string' && sData.indexOf('<') != -1 && sData.indexOf('>') != -1 )\n\t\t{\n\t\t\treturn 'html';\n\t\t}\n\t\treturn null;\n\t}\n] );\n\n\n// jQuery aliases\n$.fn.DataTable = DataTable;\n$.fn.dataTable = DataTable;\n$.fn.dataTableSettings = DataTable.settings;\n$.fn.dataTableExt = DataTable.ext;\n\n\n// Information about events fired by DataTables - for documentation.\n/**\n * Draw event, fired whenever the table is redrawn on the page, at the same point as\n * fnDrawCallback. This may be useful for binding events or performing calculations when\n * the table is altered at all.\n *  @name DataTable#draw\n *  @event\n *  @param {event} e jQuery event object\n *  @param {object} o DataTables settings object {@link DataTable.models.oSettings}\n */\n\n/**\n * Filter event, fired when the filtering applied to the table (using the build in global\n * global filter, or column filters) is altered.\n *  @name DataTable#filter\n *  @event\n *  @param {event} e jQuery event object\n *  @param {object} o DataTables settings object {@link DataTable.models.oSettings}\n */\n\n/**\n * Page change event, fired when the paging of the table is altered.\n *  @name DataTable#page\n *  @event\n *  @param {event} e jQuery event object\n *  @param {object} o DataTables settings object {@link DataTable.models.oSettings}\n */\n\n/**\n * Sort event, fired when the sorting applied to the table is altered.\n *  @name DataTable#sort\n *  @event\n *  @param {event} e jQuery event object\n *  @param {object} o DataTables settings object {@link DataTable.models.oSettings}\n */\n\n/**\n * DataTables initialisation complete event, fired when the table is fully drawn,\n * including Ajax data loaded, if Ajax data is required.\n *  @name DataTable#init\n *  @event\n *  @param {event} e jQuery event object\n *  @param {object} oSettings DataTables settings object\n *  @param {object} json The JSON object request from the server - only\n *    present if client-side Ajax sourced data is used</li></ol>\n */\n\n/**\n * State save event, fired when the table has changed state a new state save is required.\n * This method allows modification of the state saving object prior to actually doing the\n * save, including addition or other state properties (for plug-ins) or modification\n * of a DataTables core property.\n *  @name DataTable#stateSaveParams\n *  @event\n *  @param {event} e jQuery event object\n *  @param {object} oSettings DataTables settings object\n *  @param {object} json The state information to be saved\n */\n\n/**\n * State load event, fired when the table is loading state from the stored data, but\n * prior to the settings object being modified by the saved state - allowing modification\n * of the saved state is required or loading of state for a plug-in.\n *  @name DataTable#stateLoadParams\n *  @event\n *  @param {event} e jQuery event object\n *  @param {object} oSettings DataTables settings object\n *  @param {object} json The saved state information\n */\n\n/**\n * State loaded event, fired when state has been loaded from stored data and the settings\n * object has been modified by the loaded data.\n *  @name DataTable#stateLoaded\n *  @event\n *  @param {event} e jQuery event object\n *  @param {object} oSettings DataTables settings object\n *  @param {object} json The saved state information\n */\n\n/**\n * Processing event, fired when DataTables is doing some kind of processing (be it,\n * sort, filter or anything else). Can be used to indicate to the end user that\n * there is something happening, or that something has finished.\n *  @name DataTable#processing\n *  @event\n *  @param {event} e jQuery event object\n *  @param {object} oSettings DataTables settings object\n *  @param {boolean} bShow Flag for if DataTables is doing processing or not\n */\n\n/**\n * Ajax (XHR) event, fired whenever an Ajax request is completed from a request to \n * made to the server for new data (note that this trigger is called in fnServerData,\n * if you override fnServerData and which to use this event, you need to trigger it in\n * you success function).\n *  @name DataTable#xhr\n *  @event\n *  @param {event} e jQuery event object\n *  @param {object} o DataTables settings object {@link DataTable.models.oSettings}\n *  @param {object} json JSON returned from the server\n */\n\n/**\n * Destroy event, fired when the DataTable is destroyed by calling fnDestroy or passing\n * the bDestroy:true parameter in the initialisation object. This can be used to remove\n * bound events, added DOM nodes, etc.\n *  @name DataTable#destroy\n *  @event\n *  @param {event} e jQuery event object\n *  @param {object} o DataTables settings object {@link DataTable.models.oSettings}\n */\n\nmodule.exports = DataTable;\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./src/js/vendor/datatable-1.9.4-modified.js\n");

/***/ }),

/***/ "./src/js/vendor/date.js":
/*!*******************************!*\
  !*** ./src/js/vendor/date.js ***!
  \*******************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("/**\n * Version: 1.0 Alpha-1 \n * Build Date: 13-Nov-2007\n * Copyright (c) 2006-2007, Coolite Inc. (http://www.coolite.com/). All rights reserved.\n * License: Licensed under The MIT License. See license.txt and http://www.datejs.com/license/. \n * Website: http://www.datejs.com/ or http://www.coolite.com/datejs/\n */\nDate.CultureInfo={name:\"en-US\",englishName:\"English (United States)\",nativeName:\"English (United States)\",dayNames:[\"Sunday\",\"Monday\",\"Tuesday\",\"Wednesday\",\"Thursday\",\"Friday\",\"Saturday\"],abbreviatedDayNames:[\"Sun\",\"Mon\",\"Tue\",\"Wed\",\"Thu\",\"Fri\",\"Sat\"],shortestDayNames:[\"Su\",\"Mo\",\"Tu\",\"We\",\"Th\",\"Fr\",\"Sa\"],firstLetterDayNames:[\"S\",\"M\",\"T\",\"W\",\"T\",\"F\",\"S\"],monthNames:[\"January\",\"February\",\"March\",\"April\",\"May\",\"June\",\"July\",\"August\",\"September\",\"October\",\"November\",\"December\"],abbreviatedMonthNames:[\"Jan\",\"Feb\",\"Mar\",\"Apr\",\"May\",\"Jun\",\"Jul\",\"Aug\",\"Sep\",\"Oct\",\"Nov\",\"Dec\"],amDesignator:\"AM\",pmDesignator:\"PM\",firstDayOfWeek:0,twoDigitYearMax:2029,dateElementOrder:\"mdy\",formatPatterns:{shortDate:\"M/d/yyyy\",longDate:\"dddd, MMMM dd, yyyy\",shortTime:\"h:mm tt\",longTime:\"h:mm:ss tt\",fullDateTime:\"dddd, MMMM dd, yyyy h:mm:ss tt\",sortableDateTime:\"yyyy-MM-ddTHH:mm:ss\",universalSortableDateTime:\"yyyy-MM-dd HH:mm:ssZ\",rfc1123:\"ddd, dd MMM yyyy HH:mm:ss GMT\",monthDay:\"MMMM dd\",yearMonth:\"MMMM, yyyy\"},regexPatterns:{jan:/^jan(uary)?/i,feb:/^feb(ruary)?/i,mar:/^mar(ch)?/i,apr:/^apr(il)?/i,may:/^may/i,jun:/^jun(e)?/i,jul:/^jul(y)?/i,aug:/^aug(ust)?/i,sep:/^sep(t(ember)?)?/i,oct:/^oct(ober)?/i,nov:/^nov(ember)?/i,dec:/^dec(ember)?/i,sun:/^su(n(day)?)?/i,mon:/^mo(n(day)?)?/i,tue:/^tu(e(s(day)?)?)?/i,wed:/^we(d(nesday)?)?/i,thu:/^th(u(r(s(day)?)?)?)?/i,fri:/^fr(i(day)?)?/i,sat:/^sa(t(urday)?)?/i,future:/^next/i,past:/^last|past|prev(ious)?/i,add:/^(\\+|after|from)/i,subtract:/^(\\-|before|ago)/i,yesterday:/^yesterday/i,today:/^t(oday)?/i,tomorrow:/^tomorrow/i,now:/^n(ow)?/i,millisecond:/^ms|milli(second)?s?/i,second:/^sec(ond)?s?/i,minute:/^min(ute)?s?/i,hour:/^h(ou)?rs?/i,week:/^w(ee)?k/i,month:/^m(o(nth)?s?)?/i,day:/^d(ays?)?/i,year:/^y((ea)?rs?)?/i,shortMeridian:/^(a|p)/i,longMeridian:/^(a\\.?m?\\.?|p\\.?m?\\.?)/i,timezone:/^((e(s|d)t|c(s|d)t|m(s|d)t|p(s|d)t)|((gmt)?\\s*(\\+|\\-)\\s*\\d\\d\\d\\d?)|gmt)/i,ordinalSuffix:/^\\s*(st|nd|rd|th)/i,timeContext:/^\\s*(\\:|a|p)/i},abbreviatedTimeZoneStandard:{GMT:\"-000\",EST:\"-0400\",CST:\"-0500\",MST:\"-0600\",PST:\"-0700\"},abbreviatedTimeZoneDST:{GMT:\"-000\",EDT:\"-0500\",CDT:\"-0600\",MDT:\"-0700\",PDT:\"-0800\"}};\nDate.getMonthNumberFromName=function(name){var n=Date.CultureInfo.monthNames,m=Date.CultureInfo.abbreviatedMonthNames,s=name.toLowerCase();for(var i=0;i<n.length;i++){if(n[i].toLowerCase()==s||m[i].toLowerCase()==s){return i;}}\nreturn-1;};Date.getDayNumberFromName=function(name){var n=Date.CultureInfo.dayNames,m=Date.CultureInfo.abbreviatedDayNames,o=Date.CultureInfo.shortestDayNames,s=name.toLowerCase();for(var i=0;i<n.length;i++){if(n[i].toLowerCase()==s||m[i].toLowerCase()==s){return i;}}\nreturn-1;};Date.isLeapYear=function(year){return(((year%4===0)&&(year%100!==0))||(year%400===0));};Date.getDaysInMonth=function(year,month){return[31,(Date.isLeapYear(year)?29:28),31,30,31,30,31,31,30,31,30,31][month];};Date.getTimezoneOffset=function(s,dst){return(dst||false)?Date.CultureInfo.abbreviatedTimeZoneDST[s.toUpperCase()]:Date.CultureInfo.abbreviatedTimeZoneStandard[s.toUpperCase()];};Date.getTimezoneAbbreviation=function(offset,dst){var n=(dst||false)?Date.CultureInfo.abbreviatedTimeZoneDST:Date.CultureInfo.abbreviatedTimeZoneStandard,p;for(p in n){if(n[p]===offset){return p;}}\nreturn null;};Date.prototype.clone=function(){return new Date(this.getTime());};Date.prototype.compareTo=function(date){if(isNaN(this)){throw new Error(this);}\nif(date instanceof Date&&!isNaN(date)){return(this>date)?1:(this<date)?-1:0;}else{throw new TypeError(date);}};Date.prototype.equals=function(date){return(this.compareTo(date)===0);};Date.prototype.between=function(start,end){var t=this.getTime();return t>=start.getTime()&&t<=end.getTime();};Date.prototype.addMilliseconds=function(value){this.setMilliseconds(this.getMilliseconds()+value);return this;};Date.prototype.addSeconds=function(value){return this.addMilliseconds(value*1000);};Date.prototype.addMinutes=function(value){return this.addMilliseconds(value*60000);};Date.prototype.addHours=function(value){return this.addMilliseconds(value*3600000);};Date.prototype.addDays=function(value){return this.addMilliseconds(value*86400000);};Date.prototype.addWeeks=function(value){return this.addMilliseconds(value*604800000);};Date.prototype.addMonths=function(value){var n=this.getDate();this.setDate(1);this.setMonth(this.getMonth()+value);this.setDate(Math.min(n,this.getDaysInMonth()));return this;};Date.prototype.addYears=function(value){return this.addMonths(value*12);};Date.prototype.add=function(config){if(typeof config==\"number\"){this._orient=config;return this;}\nvar x=config;if(x.millisecond||x.milliseconds){this.addMilliseconds(x.millisecond||x.milliseconds);}\nif(x.second||x.seconds){this.addSeconds(x.second||x.seconds);}\nif(x.minute||x.minutes){this.addMinutes(x.minute||x.minutes);}\nif(x.hour||x.hours){this.addHours(x.hour||x.hours);}\nif(x.month||x.months){this.addMonths(x.month||x.months);}\nif(x.year||x.years){this.addYears(x.year||x.years);}\nif(x.day||x.days){this.addDays(x.day||x.days);}\nreturn this;};Date._validate=function(value,min,max,name){if(typeof value!=\"number\"){throw new TypeError(value+\" is not a Number.\");}else if(value<min||value>max){throw new RangeError(value+\" is not a valid value for \"+name+\".\");}\nreturn true;};Date.validateMillisecond=function(n){return Date._validate(n,0,999,\"milliseconds\");};Date.validateSecond=function(n){return Date._validate(n,0,59,\"seconds\");};Date.validateMinute=function(n){return Date._validate(n,0,59,\"minutes\");};Date.validateHour=function(n){return Date._validate(n,0,23,\"hours\");};Date.validateDay=function(n,year,month){return Date._validate(n,1,Date.getDaysInMonth(year,month),\"days\");};Date.validateMonth=function(n){return Date._validate(n,0,11,\"months\");};Date.validateYear=function(n){return Date._validate(n,1,9999,\"seconds\");};Date.prototype.set=function(config){var x=config;if(!x.millisecond&&x.millisecond!==0){x.millisecond=-1;}\nif(!x.second&&x.second!==0){x.second=-1;}\nif(!x.minute&&x.minute!==0){x.minute=-1;}\nif(!x.hour&&x.hour!==0){x.hour=-1;}\nif(!x.day&&x.day!==0){x.day=-1;}\nif(!x.month&&x.month!==0){x.month=-1;}\nif(!x.year&&x.year!==0){x.year=-1;}\nif(x.millisecond!=-1&&Date.validateMillisecond(x.millisecond)){this.addMilliseconds(x.millisecond-this.getMilliseconds());}\nif(x.second!=-1&&Date.validateSecond(x.second)){this.addSeconds(x.second-this.getSeconds());}\nif(x.minute!=-1&&Date.validateMinute(x.minute)){this.addMinutes(x.minute-this.getMinutes());}\nif(x.hour!=-1&&Date.validateHour(x.hour)){this.addHours(x.hour-this.getHours());}\nif(x.month!==-1&&Date.validateMonth(x.month)){this.addMonths(x.month-this.getMonth());}\nif(x.year!=-1&&Date.validateYear(x.year)){this.addYears(x.year-this.getFullYear());}\nif(x.day!=-1&&Date.validateDay(x.day,this.getFullYear(),this.getMonth())){this.addDays(x.day-this.getDate());}\nif(x.timezone){this.setTimezone(x.timezone);}\nif(x.timezoneOffset){this.setTimezoneOffset(x.timezoneOffset);}\nreturn this;};Date.prototype.clearTime=function(){this.setHours(0);this.setMinutes(0);this.setSeconds(0);this.setMilliseconds(0);return this;};Date.prototype.isLeapYear=function(){var y=this.getFullYear();return(((y%4===0)&&(y%100!==0))||(y%400===0));};Date.prototype.isWeekday=function(){return!(this.is().sat()||this.is().sun());};Date.prototype.getDaysInMonth=function(){return Date.getDaysInMonth(this.getFullYear(),this.getMonth());};Date.prototype.moveToFirstDayOfMonth=function(){return this.set({day:1});};Date.prototype.moveToLastDayOfMonth=function(){return this.set({day:this.getDaysInMonth()});};Date.prototype.moveToDayOfWeek=function(day,orient){var diff=(day-this.getDay()+7*(orient||+1))%7;return this.addDays((diff===0)?diff+=7*(orient||+1):diff);};Date.prototype.moveToMonth=function(month,orient){var diff=(month-this.getMonth()+12*(orient||+1))%12;return this.addMonths((diff===0)?diff+=12*(orient||+1):diff);};Date.prototype.getDayOfYear=function(){return Math.floor((this-new Date(this.getFullYear(),0,1))/86400000);};Date.prototype.getWeekOfYear=function(firstDayOfWeek){var y=this.getFullYear(),m=this.getMonth(),d=this.getDate();var dow=firstDayOfWeek||Date.CultureInfo.firstDayOfWeek;var offset=7+1-new Date(y,0,1).getDay();if(offset==8){offset=1;}\nvar daynum=((Date.UTC(y,m,d,0,0,0)-Date.UTC(y,0,1,0,0,0))/86400000)+1;var w=Math.floor((daynum-offset+7)/7);if(w===dow){y--;var prevOffset=7+1-new Date(y,0,1).getDay();if(prevOffset==2||prevOffset==8){w=53;}else{w=52;}}\nreturn w;};Date.prototype.isDST=function(){console.log('isDST');return this.toString().match(/(E|C|M|P)(S|D)T/)[2]==\"D\";};Date.prototype.getTimezone=function(){return Date.getTimezoneAbbreviation(this.getUTCOffset,this.isDST());};Date.prototype.setTimezoneOffset=function(s){var here=this.getTimezoneOffset(),there=Number(s)*-6/10;this.addMinutes(there-here);return this;};Date.prototype.setTimezone=function(s){return this.setTimezoneOffset(Date.getTimezoneOffset(s));};Date.prototype.getUTCOffset=function(){var n=this.getTimezoneOffset()*-10/6,r;if(n<0){r=(n-10000).toString();return r[0]+r.substr(2);}else{r=(n+10000).toString();return\"+\"+r.substr(1);}};Date.prototype.getDayName=function(abbrev){return abbrev?Date.CultureInfo.abbreviatedDayNames[this.getDay()]:Date.CultureInfo.dayNames[this.getDay()];};Date.prototype.getMonthName=function(abbrev){return abbrev?Date.CultureInfo.abbreviatedMonthNames[this.getMonth()]:Date.CultureInfo.monthNames[this.getMonth()];};Date.prototype._toString=Date.prototype.toString;Date.prototype.toString=function(format){var self=this;var p=function p(s){return(s.toString().length==1)?\"0\"+s:s;};return format?format.replace(/dd?d?d?|MM?M?M?|yy?y?y?|hh?|HH?|mm?|ss?|tt?|zz?z?/g,function(format){switch(format){case\"hh\":return p(self.getHours()<13?self.getHours():(self.getHours()-12));case\"h\":return self.getHours()<13?self.getHours():(self.getHours()-12);case\"HH\":return p(self.getHours());case\"H\":return self.getHours();case\"mm\":return p(self.getMinutes());case\"m\":return self.getMinutes();case\"ss\":return p(self.getSeconds());case\"s\":return self.getSeconds();case\"yyyy\":return self.getFullYear();case\"yy\":return self.getFullYear().toString().substring(2,4);case\"dddd\":return self.getDayName();case\"ddd\":return self.getDayName(true);case\"dd\":return p(self.getDate());case\"d\":return self.getDate().toString();case\"MMMM\":return self.getMonthName();case\"MMM\":return self.getMonthName(true);case\"MM\":return p((self.getMonth()+1));case\"M\":return self.getMonth()+1;case\"t\":return self.getHours()<12?Date.CultureInfo.amDesignator.substring(0,1):Date.CultureInfo.pmDesignator.substring(0,1);case\"tt\":return self.getHours()<12?Date.CultureInfo.amDesignator:Date.CultureInfo.pmDesignator;case\"zzz\":case\"zz\":case\"z\":return\"\";}}):this._toString();};\nDate.now=function(){return new Date();};Date.today=function(){return Date.now().clearTime();};Date.prototype._orient=+1;Date.prototype.next=function(){this._orient=+1;return this;};Date.prototype.last=Date.prototype.prev=Date.prototype.previous=function(){this._orient=-1;return this;};Date.prototype._is=false;Date.prototype.is=function(){this._is=true;return this;};Number.prototype._dateElement=\"day\";Number.prototype.fromNow=function(){var c={};c[this._dateElement]=this;return Date.now().add(c);};Number.prototype.ago=function(){var c={};c[this._dateElement]=this*-1;return Date.now().add(c);};(function(){var $D=Date.prototype,$N=Number.prototype;var dx=(\"sunday monday tuesday wednesday thursday friday saturday\").split(/\\s/),mx=(\"january february march april may june july august september october november december\").split(/\\s/),px=(\"Millisecond Second Minute Hour Day Week Month Year\").split(/\\s/),de;var df=function(n){return function(){if(this._is){this._is=false;return this.getDay()==n;}\nreturn this.moveToDayOfWeek(n,this._orient);};};for(var i=0;i<dx.length;i++){$D[dx[i]]=$D[dx[i].substring(0,3)]=df(i);}\nvar mf=function(n){return function(){if(this._is){this._is=false;return this.getMonth()===n;}\nreturn this.moveToMonth(n,this._orient);};};for(var j=0;j<mx.length;j++){$D[mx[j]]=$D[mx[j].substring(0,3)]=mf(j);}\nvar ef=function(j){return function(){if(j.substring(j.length-1)!=\"s\"){j+=\"s\";}\nreturn this[\"add\"+j](this._orient);};};var nf=function(n){return function(){this._dateElement=n;return this;};};for(var k=0;k<px.length;k++){de=px[k].toLowerCase();$D[de]=$D[de+\"s\"]=ef(px[k]);$N[de]=$N[de+\"s\"]=nf(de);}}());Date.prototype.toJSONString=function(){return this.toString(\"yyyy-MM-ddThh:mm:ssZ\");};Date.prototype.toShortDateString=function(){return this.toString(Date.CultureInfo.formatPatterns.shortDatePattern);};Date.prototype.toLongDateString=function(){return this.toString(Date.CultureInfo.formatPatterns.longDatePattern);};Date.prototype.toShortTimeString=function(){return this.toString(Date.CultureInfo.formatPatterns.shortTimePattern);};Date.prototype.toLongTimeString=function(){return this.toString(Date.CultureInfo.formatPatterns.longTimePattern);};Date.prototype.getOrdinal=function(){switch(this.getDate()){case 1:case 21:case 31:return\"st\";case 2:case 22:return\"nd\";case 3:case 23:return\"rd\";default:return\"th\";}};\n(function(){Date.Parsing={Exception:function(s){this.message=\"Parse error at '\"+s.substring(0,10)+\" ...'\";}};var $P=Date.Parsing;var _=$P.Operators={rtoken:function(r){return function(s){var mx=s.match(r);if(mx){return([mx[0],s.substring(mx[0].length)]);}else{throw new $P.Exception(s);}};},token:function(s){return function(s){return _.rtoken(new RegExp(\"^\\s*\"+s+\"\\s*\"))(s);};},stoken:function(s){return _.rtoken(new RegExp(\"^\"+s));},until:function(p){return function(s){var qx=[],rx=null;while(s.length){try{rx=p.call(this,s);}catch(e){qx.push(rx[0]);s=rx[1];continue;}\nbreak;}\nreturn[qx,s];};},many:function(p){return function(s){var rx=[],r=null;while(s.length){try{r=p.call(this,s);}catch(e){return[rx,s];}\nrx.push(r[0]);s=r[1];}\nreturn[rx,s];};},optional:function(p){return function(s){var r=null;try{r=p.call(this,s);}catch(e){return[null,s];}\nreturn[r[0],r[1]];};},not:function(p){return function(s){try{p.call(this,s);}catch(e){return[null,s];}\nthrow new $P.Exception(s);};},ignore:function(p){return p?function(s){var r=null;r=p.call(this,s);return[null,r[1]];}:null;},product:function(){var px=arguments[0],qx=Array.prototype.slice.call(arguments,1),rx=[];for(var i=0;i<px.length;i++){rx.push(_.each(px[i],qx));}\nreturn rx;},cache:function(rule){var cache={},r=null;return function(s){try{r=cache[s]=(cache[s]||rule.call(this,s));}catch(e){r=cache[s]=e;}\nif(r instanceof $P.Exception){throw r;}else{return r;}};},any:function(){var px=arguments;return function(s){var r=null;for(var i=0;i<px.length;i++){if(px[i]==null){continue;}\ntry{r=(px[i].call(this,s));}catch(e){r=null;}\nif(r){return r;}}\nthrow new $P.Exception(s);};},each:function(){var px=arguments;return function(s){var rx=[],r=null;for(var i=0;i<px.length;i++){if(px[i]==null){continue;}\ntry{r=(px[i].call(this,s));}catch(e){throw new $P.Exception(s);}\nrx.push(r[0]);s=r[1];}\nreturn[rx,s];};},all:function(){var px=arguments,_=_;return _.each(_.optional(px));},sequence:function(px,d,c){d=d||_.rtoken(/^\\s*/);c=c||null;if(px.length==1){return px[0];}\nreturn function(s){var r=null,q=null;var rx=[];for(var i=0;i<px.length;i++){try{r=px[i].call(this,s);}catch(e){break;}\nrx.push(r[0]);try{q=d.call(this,r[1]);}catch(ex){q=null;break;}\ns=q[1];}\nif(!r){throw new $P.Exception(s);}\nif(q){throw new $P.Exception(q[1]);}\nif(c){try{r=c.call(this,r[1]);}catch(ey){throw new $P.Exception(r[1]);}}\nreturn[rx,(r?r[1]:s)];};},between:function(d1,p,d2){d2=d2||d1;var _fn=_.each(_.ignore(d1),p,_.ignore(d2));return function(s){var rx=_fn.call(this,s);return[[rx[0][0],r[0][2]],rx[1]];};},list:function(p,d,c){d=d||_.rtoken(/^\\s*/);c=c||null;return(p instanceof Array?_.each(_.product(p.slice(0,-1),_.ignore(d)),p.slice(-1),_.ignore(c)):_.each(_.many(_.each(p,_.ignore(d))),px,_.ignore(c)));},set:function(px,d,c){d=d||_.rtoken(/^\\s*/);c=c||null;return function(s){var r=null,p=null,q=null,rx=null,best=[[],s],last=false;for(var i=0;i<px.length;i++){q=null;p=null;r=null;last=(px.length==1);try{r=px[i].call(this,s);}catch(e){continue;}\nrx=[[r[0]],r[1]];if(r[1].length>0&&!last){try{q=d.call(this,r[1]);}catch(ex){last=true;}}else{last=true;}\nif(!last&&q[1].length===0){last=true;}\nif(!last){var qx=[];for(var j=0;j<px.length;j++){if(i!=j){qx.push(px[j]);}}\np=_.set(qx,d).call(this,q[1]);if(p[0].length>0){rx[0]=rx[0].concat(p[0]);rx[1]=p[1];}}\nif(rx[1].length<best[1].length){best=rx;}\nif(best[1].length===0){break;}}\nif(best[0].length===0){return best;}\nif(c){try{q=c.call(this,best[1]);}catch(ey){throw new $P.Exception(best[1]);}\nbest[1]=q[1];}\nreturn best;};},forward:function(gr,fname){return function(s){return gr[fname].call(this,s);};},replace:function(rule,repl){return function(s){var r=rule.call(this,s);return[repl,r[1]];};},process:function(rule,fn){return function(s){var r=rule.call(this,s);return[fn.call(this,r[0]),r[1]];};},min:function(min,rule){return function(s){var rx=rule.call(this,s);if(rx[0].length<min){throw new $P.Exception(s);}\nreturn rx;};}};var _generator=function(op){return function(){var args=null,rx=[];if(arguments.length>1){args=Array.prototype.slice.call(arguments);}else if(arguments[0]instanceof Array){args=arguments[0];}\nif(args){for(var i=0,px=args.shift();i<px.length;i++){args.unshift(px[i]);rx.push(op.apply(null,args));args.shift();return rx;}}else{return op.apply(null,arguments);}};};var gx=\"optional not ignore cache\".split(/\\s/);for(var i=0;i<gx.length;i++){_[gx[i]]=_generator(_[gx[i]]);}\nvar _vector=function(op){return function(){if(arguments[0]instanceof Array){return op.apply(null,arguments[0]);}else{return op.apply(null,arguments);}};};var vx=\"each any all\".split(/\\s/);for(var j=0;j<vx.length;j++){_[vx[j]]=_vector(_[vx[j]]);}}());(function(){var flattenAndCompact=function(ax){var rx=[];for(var i=0;i<ax.length;i++){if(ax[i]instanceof Array){rx=rx.concat(flattenAndCompact(ax[i]));}else{if(ax[i]){rx.push(ax[i]);}}}\nreturn rx;};Date.Grammar={};Date.Translator={hour:function(s){return function(){this.hour=Number(s);};},minute:function(s){return function(){this.minute=Number(s);};},second:function(s){return function(){this.second=Number(s);};},meridian:function(s){return function(){this.meridian=s.slice(0,1).toLowerCase();};},timezone:function(s){return function(){var n=s.replace(/[^\\d\\+\\-]/g,\"\");if(n.length){this.timezoneOffset=Number(n);}else{this.timezone=s.toLowerCase();}};},day:function(x){var s=x[0];return function(){this.day=Number(s.match(/\\d+/)[0]);};},month:function(s){return function(){this.month=((s.length==3)?Date.getMonthNumberFromName(s):(Number(s)-1));};},year:function(s){return function(){var n=Number(s);this.year=((s.length>2)?n:(n+(((n+2000)<Date.CultureInfo.twoDigitYearMax)?2000:1900)));};},rday:function(s){return function(){switch(s){case\"yesterday\":this.days=-1;break;case\"tomorrow\":this.days=1;break;case\"today\":this.days=0;break;case\"now\":this.days=0;this.now=true;break;}};},finishExact:function(x){x=(x instanceof Array)?x:[x];var now=new Date();this.year=now.getFullYear();this.month=now.getMonth();this.day=1;this.hour=0;this.minute=0;this.second=0;for(var i=0;i<x.length;i++){if(x[i]){x[i].call(this);}}\nthis.hour=(this.meridian==\"p\"&&this.hour<13)?this.hour+12:this.hour;if(this.day>Date.getDaysInMonth(this.year,this.month)){throw new RangeError(this.day+\" is not a valid value for days.\");}\nvar r=new Date(this.year,this.month,this.day,this.hour,this.minute,this.second);if(this.timezone){r.set({timezone:this.timezone});}else if(this.timezoneOffset){r.set({timezoneOffset:this.timezoneOffset});}\nreturn r;},finish:function(x){x=(x instanceof Array)?flattenAndCompact(x):[x];if(x.length===0){return null;}\nfor(var i=0;i<x.length;i++){if(typeof x[i]==\"function\"){x[i].call(this);}}\nif(this.now){return new Date();}\nvar today=Date.today();var method=null;var expression=!!(this.days!=null||this.orient||this.operator);if(expression){var gap,mod,orient;orient=((this.orient==\"past\"||this.operator==\"subtract\")?-1:1);if(this.weekday){this.unit=\"day\";gap=(Date.getDayNumberFromName(this.weekday)-today.getDay());mod=7;this.days=gap?((gap+(orient*mod))%mod):(orient*mod);}\nif(this.month){this.unit=\"month\";gap=(this.month-today.getMonth());mod=12;this.months=gap?((gap+(orient*mod))%mod):(orient*mod);this.month=null;}\nif(!this.unit){this.unit=\"day\";}\nif(this[this.unit+\"s\"]==null||this.operator!=null){if(!this.value){this.value=1;}\nif(this.unit==\"week\"){this.unit=\"day\";this.value=this.value*7;}\nthis[this.unit+\"s\"]=this.value*orient;}\nreturn today.add(this);}else{if(this.meridian&&this.hour){this.hour=(this.hour<13&&this.meridian==\"p\")?this.hour+12:this.hour;}\nif(this.weekday&&!this.day){this.day=(today.addDays((Date.getDayNumberFromName(this.weekday)-today.getDay()))).getDate();}\nif(this.month&&!this.day){this.day=1;}\nreturn today.set(this);}}};var _=Date.Parsing.Operators,g=Date.Grammar,t=Date.Translator,_fn;g.datePartDelimiter=_.rtoken(/^([\\s\\-\\.\\,\\/\\x27]+)/);g.timePartDelimiter=_.stoken(\":\");g.whiteSpace=_.rtoken(/^\\s*/);g.generalDelimiter=_.rtoken(/^(([\\s\\,]|at|on)+)/);var _C={};g.ctoken=function(keys){var fn=_C[keys];if(!fn){var c=Date.CultureInfo.regexPatterns;var kx=keys.split(/\\s+/),px=[];for(var i=0;i<kx.length;i++){px.push(_.replace(_.rtoken(c[kx[i]]),kx[i]));}\nfn=_C[keys]=_.any.apply(null,px);}\nreturn fn;};g.ctoken2=function(key){return _.rtoken(Date.CultureInfo.regexPatterns[key]);};g.h=_.cache(_.process(_.rtoken(/^(0[0-9]|1[0-2]|[1-9])/),t.hour));g.hh=_.cache(_.process(_.rtoken(/^(0[0-9]|1[0-2])/),t.hour));g.H=_.cache(_.process(_.rtoken(/^([0-1][0-9]|2[0-3]|[0-9])/),t.hour));g.HH=_.cache(_.process(_.rtoken(/^([0-1][0-9]|2[0-3])/),t.hour));g.m=_.cache(_.process(_.rtoken(/^([0-5][0-9]|[0-9])/),t.minute));g.mm=_.cache(_.process(_.rtoken(/^[0-5][0-9]/),t.minute));g.s=_.cache(_.process(_.rtoken(/^([0-5][0-9]|[0-9])/),t.second));g.ss=_.cache(_.process(_.rtoken(/^[0-5][0-9]/),t.second));g.hms=_.cache(_.sequence([g.H,g.mm,g.ss],g.timePartDelimiter));g.t=_.cache(_.process(g.ctoken2(\"shortMeridian\"),t.meridian));g.tt=_.cache(_.process(g.ctoken2(\"longMeridian\"),t.meridian));g.z=_.cache(_.process(_.rtoken(/^(\\+|\\-)?\\s*\\d\\d\\d\\d?/),t.timezone));g.zz=_.cache(_.process(_.rtoken(/^(\\+|\\-)\\s*\\d\\d\\d\\d/),t.timezone));g.zzz=_.cache(_.process(g.ctoken2(\"timezone\"),t.timezone));g.timeSuffix=_.each(_.ignore(g.whiteSpace),_.set([g.tt,g.zzz]));g.time=_.each(_.optional(_.ignore(_.stoken(\"T\"))),g.hms,g.timeSuffix);g.d=_.cache(_.process(_.each(_.rtoken(/^([0-2]\\d|3[0-1]|\\d)/),_.optional(g.ctoken2(\"ordinalSuffix\"))),t.day));g.dd=_.cache(_.process(_.each(_.rtoken(/^([0-2]\\d|3[0-1])/),_.optional(g.ctoken2(\"ordinalSuffix\"))),t.day));g.ddd=g.dddd=_.cache(_.process(g.ctoken(\"sun mon tue wed thu fri sat\"),function(s){return function(){this.weekday=s;};}));g.M=_.cache(_.process(_.rtoken(/^(1[0-2]|0\\d|\\d)/),t.month));g.MM=_.cache(_.process(_.rtoken(/^(1[0-2]|0\\d)/),t.month));g.MMM=g.MMMM=_.cache(_.process(g.ctoken(\"jan feb mar apr may jun jul aug sep oct nov dec\"),t.month));g.y=_.cache(_.process(_.rtoken(/^(\\d\\d?)/),t.year));g.yy=_.cache(_.process(_.rtoken(/^(\\d\\d)/),t.year));g.yyy=_.cache(_.process(_.rtoken(/^(\\d\\d?\\d?\\d?)/),t.year));g.yyyy=_.cache(_.process(_.rtoken(/^(\\d\\d\\d\\d)/),t.year));_fn=function(){return _.each(_.any.apply(null,arguments),_.not(g.ctoken2(\"timeContext\")));};g.day=_fn(g.d,g.dd);g.month=_fn(g.M,g.MMM);g.year=_fn(g.yyyy,g.yy);g.orientation=_.process(g.ctoken(\"past future\"),function(s){return function(){this.orient=s;};});g.operator=_.process(g.ctoken(\"add subtract\"),function(s){return function(){this.operator=s;};});g.rday=_.process(g.ctoken(\"yesterday tomorrow today now\"),t.rday);g.unit=_.process(g.ctoken(\"minute hour day week month year\"),function(s){return function(){this.unit=s;};});g.value=_.process(_.rtoken(/^\\d\\d?(st|nd|rd|th)?/),function(s){return function(){this.value=s.replace(/\\D/g,\"\");};});g.expression=_.set([g.rday,g.operator,g.value,g.unit,g.orientation,g.ddd,g.MMM]);_fn=function(){return _.set(arguments,g.datePartDelimiter);};g.mdy=_fn(g.ddd,g.month,g.day,g.year);g.ymd=_fn(g.ddd,g.year,g.month,g.day);g.dmy=_fn(g.ddd,g.day,g.month,g.year);g.date=function(s){return((g[Date.CultureInfo.dateElementOrder]||g.mdy).call(this,s));};g.format=_.process(_.many(_.any(_.process(_.rtoken(/^(dd?d?d?|MM?M?M?|yy?y?y?|hh?|HH?|mm?|ss?|tt?|zz?z?)/),function(fmt){if(g[fmt]){return g[fmt];}else{throw Date.Parsing.Exception(fmt);}}),_.process(_.rtoken(/^[^dMyhHmstz]+/),function(s){return _.ignore(_.stoken(s));}))),function(rules){return _.process(_.each.apply(null,rules),t.finishExact);});var _F={};var _get=function(f){return _F[f]=(_F[f]||g.format(f)[0]);};g.formats=function(fx){if(fx instanceof Array){var rx=[];for(var i=0;i<fx.length;i++){rx.push(_get(fx[i]));}\nreturn _.any.apply(null,rx);}else{return _get(fx);}};g._formats=g.formats([\"yyyy-MM-ddTHH:mm:ss\",\"ddd, MMM dd, yyyy H:mm:ss tt\",\"ddd MMM d yyyy HH:mm:ss zzz\",\"d\"]);g._start=_.process(_.set([g.date,g.time,g.expression],g.generalDelimiter,g.whiteSpace),t.finish);g.start=function(s){try{var r=g._formats.call({},s);if(r[1].length===0){return r;}}catch(e){}\nreturn g._start.call({},s);};}());Date._parse=Date.parse;Date.parse=function(s){var r=null;if(!s){return null;}\ntry{r=Date.Grammar.start.call({},s);}catch(e){return null;}\nreturn((r[1].length===0)?r[0]:null);};Date.getParseFunction=function(fx){var fn=Date.Grammar.formats(fx);return function(s){var r=null;try{r=fn.call({},s);}catch(e){return null;}\nreturn((r[1].length===0)?r[0]:null);};};Date.parseExact=function(s,fx){return Date.getParseFunction(fx)(s);};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9zcmMvanMvdmVuZG9yL2RhdGUuanMuanMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9zcmMvanMvdmVuZG9yL2RhdGUuanM/NTk2YSJdLCJzb3VyY2VzQ29udGVudCI6WyIvKipcbiAqIFZlcnNpb246IDEuMCBBbHBoYS0xIFxuICogQnVpbGQgRGF0ZTogMTMtTm92LTIwMDdcbiAqIENvcHlyaWdodCAoYykgMjAwNi0yMDA3LCBDb29saXRlIEluYy4gKGh0dHA6Ly93d3cuY29vbGl0ZS5jb20vKS4gQWxsIHJpZ2h0cyByZXNlcnZlZC5cbiAqIExpY2Vuc2U6IExpY2Vuc2VkIHVuZGVyIFRoZSBNSVQgTGljZW5zZS4gU2VlIGxpY2Vuc2UudHh0IGFuZCBodHRwOi8vd3d3LmRhdGVqcy5jb20vbGljZW5zZS8uIFxuICogV2Vic2l0ZTogaHR0cDovL3d3dy5kYXRlanMuY29tLyBvciBodHRwOi8vd3d3LmNvb2xpdGUuY29tL2RhdGVqcy9cbiAqL1xuRGF0ZS5DdWx0dXJlSW5mbz17bmFtZTpcImVuLVVTXCIsZW5nbGlzaE5hbWU6XCJFbmdsaXNoIChVbml0ZWQgU3RhdGVzKVwiLG5hdGl2ZU5hbWU6XCJFbmdsaXNoIChVbml0ZWQgU3RhdGVzKVwiLGRheU5hbWVzOltcIlN1bmRheVwiLFwiTW9uZGF5XCIsXCJUdWVzZGF5XCIsXCJXZWRuZXNkYXlcIixcIlRodXJzZGF5XCIsXCJGcmlkYXlcIixcIlNhdHVyZGF5XCJdLGFiYnJldmlhdGVkRGF5TmFtZXM6W1wiU3VuXCIsXCJNb25cIixcIlR1ZVwiLFwiV2VkXCIsXCJUaHVcIixcIkZyaVwiLFwiU2F0XCJdLHNob3J0ZXN0RGF5TmFtZXM6W1wiU3VcIixcIk1vXCIsXCJUdVwiLFwiV2VcIixcIlRoXCIsXCJGclwiLFwiU2FcIl0sZmlyc3RMZXR0ZXJEYXlOYW1lczpbXCJTXCIsXCJNXCIsXCJUXCIsXCJXXCIsXCJUXCIsXCJGXCIsXCJTXCJdLG1vbnRoTmFtZXM6W1wiSmFudWFyeVwiLFwiRmVicnVhcnlcIixcIk1hcmNoXCIsXCJBcHJpbFwiLFwiTWF5XCIsXCJKdW5lXCIsXCJKdWx5XCIsXCJBdWd1c3RcIixcIlNlcHRlbWJlclwiLFwiT2N0b2JlclwiLFwiTm92ZW1iZXJcIixcIkRlY2VtYmVyXCJdLGFiYnJldmlhdGVkTW9udGhOYW1lczpbXCJKYW5cIixcIkZlYlwiLFwiTWFyXCIsXCJBcHJcIixcIk1heVwiLFwiSnVuXCIsXCJKdWxcIixcIkF1Z1wiLFwiU2VwXCIsXCJPY3RcIixcIk5vdlwiLFwiRGVjXCJdLGFtRGVzaWduYXRvcjpcIkFNXCIscG1EZXNpZ25hdG9yOlwiUE1cIixmaXJzdERheU9mV2VlazowLHR3b0RpZ2l0WWVhck1heDoyMDI5LGRhdGVFbGVtZW50T3JkZXI6XCJtZHlcIixmb3JtYXRQYXR0ZXJuczp7c2hvcnREYXRlOlwiTS9kL3l5eXlcIixsb25nRGF0ZTpcImRkZGQsIE1NTU0gZGQsIHl5eXlcIixzaG9ydFRpbWU6XCJoOm1tIHR0XCIsbG9uZ1RpbWU6XCJoOm1tOnNzIHR0XCIsZnVsbERhdGVUaW1lOlwiZGRkZCwgTU1NTSBkZCwgeXl5eSBoOm1tOnNzIHR0XCIsc29ydGFibGVEYXRlVGltZTpcInl5eXktTU0tZGRUSEg6bW06c3NcIix1bml2ZXJzYWxTb3J0YWJsZURhdGVUaW1lOlwieXl5eS1NTS1kZCBISDptbTpzc1pcIixyZmMxMTIzOlwiZGRkLCBkZCBNTU0geXl5eSBISDptbTpzcyBHTVRcIixtb250aERheTpcIk1NTU0gZGRcIix5ZWFyTW9udGg6XCJNTU1NLCB5eXl5XCJ9LHJlZ2V4UGF0dGVybnM6e2phbjovXmphbih1YXJ5KT8vaSxmZWI6L15mZWIocnVhcnkpPy9pLG1hcjovXm1hcihjaCk/L2ksYXByOi9eYXByKGlsKT8vaSxtYXk6L15tYXkvaSxqdW46L15qdW4oZSk/L2ksanVsOi9eanVsKHkpPy9pLGF1ZzovXmF1Zyh1c3QpPy9pLHNlcDovXnNlcCh0KGVtYmVyKT8pPy9pLG9jdDovXm9jdChvYmVyKT8vaSxub3Y6L15ub3YoZW1iZXIpPy9pLGRlYzovXmRlYyhlbWJlcik/L2ksc3VuOi9ec3UobihkYXkpPyk/L2ksbW9uOi9ebW8obihkYXkpPyk/L2ksdHVlOi9edHUoZShzKGRheSk/KT8pPy9pLHdlZDovXndlKGQobmVzZGF5KT8pPy9pLHRodTovXnRoKHUocihzKGRheSk/KT8pPyk/L2ksZnJpOi9eZnIoaShkYXkpPyk/L2ksc2F0Oi9ec2EodCh1cmRheSk/KT8vaSxmdXR1cmU6L15uZXh0L2kscGFzdDovXmxhc3R8cGFzdHxwcmV2KGlvdXMpPy9pLGFkZDovXihcXCt8YWZ0ZXJ8ZnJvbSkvaSxzdWJ0cmFjdDovXihcXC18YmVmb3JlfGFnbykvaSx5ZXN0ZXJkYXk6L155ZXN0ZXJkYXkvaSx0b2RheTovXnQob2RheSk/L2ksdG9tb3Jyb3c6L150b21vcnJvdy9pLG5vdzovXm4ob3cpPy9pLG1pbGxpc2Vjb25kOi9ebXN8bWlsbGkoc2Vjb25kKT9zPy9pLHNlY29uZDovXnNlYyhvbmQpP3M/L2ksbWludXRlOi9ebWluKHV0ZSk/cz8vaSxob3VyOi9eaChvdSk/cnM/L2ksd2VlazovXncoZWUpP2svaSxtb250aDovXm0obyhudGgpP3M/KT8vaSxkYXk6L15kKGF5cz8pPy9pLHllYXI6L155KChlYSk/cnM/KT8vaSxzaG9ydE1lcmlkaWFuOi9eKGF8cCkvaSxsb25nTWVyaWRpYW46L14oYVxcLj9tP1xcLj98cFxcLj9tP1xcLj8pL2ksdGltZXpvbmU6L14oKGUoc3xkKXR8YyhzfGQpdHxtKHN8ZCl0fHAoc3xkKXQpfCgoZ210KT9cXHMqKFxcK3xcXC0pXFxzKlxcZFxcZFxcZFxcZD8pfGdtdCkvaSxvcmRpbmFsU3VmZml4Oi9eXFxzKihzdHxuZHxyZHx0aCkvaSx0aW1lQ29udGV4dDovXlxccyooXFw6fGF8cCkvaX0sYWJicmV2aWF0ZWRUaW1lWm9uZVN0YW5kYXJkOntHTVQ6XCItMDAwXCIsRVNUOlwiLTA0MDBcIixDU1Q6XCItMDUwMFwiLE1TVDpcIi0wNjAwXCIsUFNUOlwiLTA3MDBcIn0sYWJicmV2aWF0ZWRUaW1lWm9uZURTVDp7R01UOlwiLTAwMFwiLEVEVDpcIi0wNTAwXCIsQ0RUOlwiLTA2MDBcIixNRFQ6XCItMDcwMFwiLFBEVDpcIi0wODAwXCJ9fTtcbkRhdGUuZ2V0TW9udGhOdW1iZXJGcm9tTmFtZT1mdW5jdGlvbihuYW1lKXt2YXIgbj1EYXRlLkN1bHR1cmVJbmZvLm1vbnRoTmFtZXMsbT1EYXRlLkN1bHR1cmVJbmZvLmFiYnJldmlhdGVkTW9udGhOYW1lcyxzPW5hbWUudG9Mb3dlckNhc2UoKTtmb3IodmFyIGk9MDtpPG4ubGVuZ3RoO2krKyl7aWYobltpXS50b0xvd2VyQ2FzZSgpPT1zfHxtW2ldLnRvTG93ZXJDYXNlKCk9PXMpe3JldHVybiBpO319XG5yZXR1cm4tMTt9O0RhdGUuZ2V0RGF5TnVtYmVyRnJvbU5hbWU9ZnVuY3Rpb24obmFtZSl7dmFyIG49RGF0ZS5DdWx0dXJlSW5mby5kYXlOYW1lcyxtPURhdGUuQ3VsdHVyZUluZm8uYWJicmV2aWF0ZWREYXlOYW1lcyxvPURhdGUuQ3VsdHVyZUluZm8uc2hvcnRlc3REYXlOYW1lcyxzPW5hbWUudG9Mb3dlckNhc2UoKTtmb3IodmFyIGk9MDtpPG4ubGVuZ3RoO2krKyl7aWYobltpXS50b0xvd2VyQ2FzZSgpPT1zfHxtW2ldLnRvTG93ZXJDYXNlKCk9PXMpe3JldHVybiBpO319XG5yZXR1cm4tMTt9O0RhdGUuaXNMZWFwWWVhcj1mdW5jdGlvbih5ZWFyKXtyZXR1cm4oKCh5ZWFyJTQ9PT0wKSYmKHllYXIlMTAwIT09MCkpfHwoeWVhciU0MDA9PT0wKSk7fTtEYXRlLmdldERheXNJbk1vbnRoPWZ1bmN0aW9uKHllYXIsbW9udGgpe3JldHVyblszMSwoRGF0ZS5pc0xlYXBZZWFyKHllYXIpPzI5OjI4KSwzMSwzMCwzMSwzMCwzMSwzMSwzMCwzMSwzMCwzMV1bbW9udGhdO307RGF0ZS5nZXRUaW1lem9uZU9mZnNldD1mdW5jdGlvbihzLGRzdCl7cmV0dXJuKGRzdHx8ZmFsc2UpP0RhdGUuQ3VsdHVyZUluZm8uYWJicmV2aWF0ZWRUaW1lWm9uZURTVFtzLnRvVXBwZXJDYXNlKCldOkRhdGUuQ3VsdHVyZUluZm8uYWJicmV2aWF0ZWRUaW1lWm9uZVN0YW5kYXJkW3MudG9VcHBlckNhc2UoKV07fTtEYXRlLmdldFRpbWV6b25lQWJicmV2aWF0aW9uPWZ1bmN0aW9uKG9mZnNldCxkc3Qpe3ZhciBuPShkc3R8fGZhbHNlKT9EYXRlLkN1bHR1cmVJbmZvLmFiYnJldmlhdGVkVGltZVpvbmVEU1Q6RGF0ZS5DdWx0dXJlSW5mby5hYmJyZXZpYXRlZFRpbWVab25lU3RhbmRhcmQscDtmb3IocCBpbiBuKXtpZihuW3BdPT09b2Zmc2V0KXtyZXR1cm4gcDt9fVxucmV0dXJuIG51bGw7fTtEYXRlLnByb3RvdHlwZS5jbG9uZT1mdW5jdGlvbigpe3JldHVybiBuZXcgRGF0ZSh0aGlzLmdldFRpbWUoKSk7fTtEYXRlLnByb3RvdHlwZS5jb21wYXJlVG89ZnVuY3Rpb24oZGF0ZSl7aWYoaXNOYU4odGhpcykpe3Rocm93IG5ldyBFcnJvcih0aGlzKTt9XG5pZihkYXRlIGluc3RhbmNlb2YgRGF0ZSYmIWlzTmFOKGRhdGUpKXtyZXR1cm4odGhpcz5kYXRlKT8xOih0aGlzPGRhdGUpPy0xOjA7fWVsc2V7dGhyb3cgbmV3IFR5cGVFcnJvcihkYXRlKTt9fTtEYXRlLnByb3RvdHlwZS5lcXVhbHM9ZnVuY3Rpb24oZGF0ZSl7cmV0dXJuKHRoaXMuY29tcGFyZVRvKGRhdGUpPT09MCk7fTtEYXRlLnByb3RvdHlwZS5iZXR3ZWVuPWZ1bmN0aW9uKHN0YXJ0LGVuZCl7dmFyIHQ9dGhpcy5nZXRUaW1lKCk7cmV0dXJuIHQ+PXN0YXJ0LmdldFRpbWUoKSYmdDw9ZW5kLmdldFRpbWUoKTt9O0RhdGUucHJvdG90eXBlLmFkZE1pbGxpc2Vjb25kcz1mdW5jdGlvbih2YWx1ZSl7dGhpcy5zZXRNaWxsaXNlY29uZHModGhpcy5nZXRNaWxsaXNlY29uZHMoKSt2YWx1ZSk7cmV0dXJuIHRoaXM7fTtEYXRlLnByb3RvdHlwZS5hZGRTZWNvbmRzPWZ1bmN0aW9uKHZhbHVlKXtyZXR1cm4gdGhpcy5hZGRNaWxsaXNlY29uZHModmFsdWUqMTAwMCk7fTtEYXRlLnByb3RvdHlwZS5hZGRNaW51dGVzPWZ1bmN0aW9uKHZhbHVlKXtyZXR1cm4gdGhpcy5hZGRNaWxsaXNlY29uZHModmFsdWUqNjAwMDApO307RGF0ZS5wcm90b3R5cGUuYWRkSG91cnM9ZnVuY3Rpb24odmFsdWUpe3JldHVybiB0aGlzLmFkZE1pbGxpc2Vjb25kcyh2YWx1ZSozNjAwMDAwKTt9O0RhdGUucHJvdG90eXBlLmFkZERheXM9ZnVuY3Rpb24odmFsdWUpe3JldHVybiB0aGlzLmFkZE1pbGxpc2Vjb25kcyh2YWx1ZSo4NjQwMDAwMCk7fTtEYXRlLnByb3RvdHlwZS5hZGRXZWVrcz1mdW5jdGlvbih2YWx1ZSl7cmV0dXJuIHRoaXMuYWRkTWlsbGlzZWNvbmRzKHZhbHVlKjYwNDgwMDAwMCk7fTtEYXRlLnByb3RvdHlwZS5hZGRNb250aHM9ZnVuY3Rpb24odmFsdWUpe3ZhciBuPXRoaXMuZ2V0RGF0ZSgpO3RoaXMuc2V0RGF0ZSgxKTt0aGlzLnNldE1vbnRoKHRoaXMuZ2V0TW9udGgoKSt2YWx1ZSk7dGhpcy5zZXREYXRlKE1hdGgubWluKG4sdGhpcy5nZXREYXlzSW5Nb250aCgpKSk7cmV0dXJuIHRoaXM7fTtEYXRlLnByb3RvdHlwZS5hZGRZZWFycz1mdW5jdGlvbih2YWx1ZSl7cmV0dXJuIHRoaXMuYWRkTW9udGhzKHZhbHVlKjEyKTt9O0RhdGUucHJvdG90eXBlLmFkZD1mdW5jdGlvbihjb25maWcpe2lmKHR5cGVvZiBjb25maWc9PVwibnVtYmVyXCIpe3RoaXMuX29yaWVudD1jb25maWc7cmV0dXJuIHRoaXM7fVxudmFyIHg9Y29uZmlnO2lmKHgubWlsbGlzZWNvbmR8fHgubWlsbGlzZWNvbmRzKXt0aGlzLmFkZE1pbGxpc2Vjb25kcyh4Lm1pbGxpc2Vjb25kfHx4Lm1pbGxpc2Vjb25kcyk7fVxuaWYoeC5zZWNvbmR8fHguc2Vjb25kcyl7dGhpcy5hZGRTZWNvbmRzKHguc2Vjb25kfHx4LnNlY29uZHMpO31cbmlmKHgubWludXRlfHx4Lm1pbnV0ZXMpe3RoaXMuYWRkTWludXRlcyh4Lm1pbnV0ZXx8eC5taW51dGVzKTt9XG5pZih4LmhvdXJ8fHguaG91cnMpe3RoaXMuYWRkSG91cnMoeC5ob3VyfHx4LmhvdXJzKTt9XG5pZih4Lm1vbnRofHx4Lm1vbnRocyl7dGhpcy5hZGRNb250aHMoeC5tb250aHx8eC5tb250aHMpO31cbmlmKHgueWVhcnx8eC55ZWFycyl7dGhpcy5hZGRZZWFycyh4LnllYXJ8fHgueWVhcnMpO31cbmlmKHguZGF5fHx4LmRheXMpe3RoaXMuYWRkRGF5cyh4LmRheXx8eC5kYXlzKTt9XG5yZXR1cm4gdGhpczt9O0RhdGUuX3ZhbGlkYXRlPWZ1bmN0aW9uKHZhbHVlLG1pbixtYXgsbmFtZSl7aWYodHlwZW9mIHZhbHVlIT1cIm51bWJlclwiKXt0aHJvdyBuZXcgVHlwZUVycm9yKHZhbHVlK1wiIGlzIG5vdCBhIE51bWJlci5cIik7fWVsc2UgaWYodmFsdWU8bWlufHx2YWx1ZT5tYXgpe3Rocm93IG5ldyBSYW5nZUVycm9yKHZhbHVlK1wiIGlzIG5vdCBhIHZhbGlkIHZhbHVlIGZvciBcIituYW1lK1wiLlwiKTt9XG5yZXR1cm4gdHJ1ZTt9O0RhdGUudmFsaWRhdGVNaWxsaXNlY29uZD1mdW5jdGlvbihuKXtyZXR1cm4gRGF0ZS5fdmFsaWRhdGUobiwwLDk5OSxcIm1pbGxpc2Vjb25kc1wiKTt9O0RhdGUudmFsaWRhdGVTZWNvbmQ9ZnVuY3Rpb24obil7cmV0dXJuIERhdGUuX3ZhbGlkYXRlKG4sMCw1OSxcInNlY29uZHNcIik7fTtEYXRlLnZhbGlkYXRlTWludXRlPWZ1bmN0aW9uKG4pe3JldHVybiBEYXRlLl92YWxpZGF0ZShuLDAsNTksXCJtaW51dGVzXCIpO307RGF0ZS52YWxpZGF0ZUhvdXI9ZnVuY3Rpb24obil7cmV0dXJuIERhdGUuX3ZhbGlkYXRlKG4sMCwyMyxcImhvdXJzXCIpO307RGF0ZS52YWxpZGF0ZURheT1mdW5jdGlvbihuLHllYXIsbW9udGgpe3JldHVybiBEYXRlLl92YWxpZGF0ZShuLDEsRGF0ZS5nZXREYXlzSW5Nb250aCh5ZWFyLG1vbnRoKSxcImRheXNcIik7fTtEYXRlLnZhbGlkYXRlTW9udGg9ZnVuY3Rpb24obil7cmV0dXJuIERhdGUuX3ZhbGlkYXRlKG4sMCwxMSxcIm1vbnRoc1wiKTt9O0RhdGUudmFsaWRhdGVZZWFyPWZ1bmN0aW9uKG4pe3JldHVybiBEYXRlLl92YWxpZGF0ZShuLDEsOTk5OSxcInNlY29uZHNcIik7fTtEYXRlLnByb3RvdHlwZS5zZXQ9ZnVuY3Rpb24oY29uZmlnKXt2YXIgeD1jb25maWc7aWYoIXgubWlsbGlzZWNvbmQmJngubWlsbGlzZWNvbmQhPT0wKXt4Lm1pbGxpc2Vjb25kPS0xO31cbmlmKCF4LnNlY29uZCYmeC5zZWNvbmQhPT0wKXt4LnNlY29uZD0tMTt9XG5pZigheC5taW51dGUmJngubWludXRlIT09MCl7eC5taW51dGU9LTE7fVxuaWYoIXguaG91ciYmeC5ob3VyIT09MCl7eC5ob3VyPS0xO31cbmlmKCF4LmRheSYmeC5kYXkhPT0wKXt4LmRheT0tMTt9XG5pZigheC5tb250aCYmeC5tb250aCE9PTApe3gubW9udGg9LTE7fVxuaWYoIXgueWVhciYmeC55ZWFyIT09MCl7eC55ZWFyPS0xO31cbmlmKHgubWlsbGlzZWNvbmQhPS0xJiZEYXRlLnZhbGlkYXRlTWlsbGlzZWNvbmQoeC5taWxsaXNlY29uZCkpe3RoaXMuYWRkTWlsbGlzZWNvbmRzKHgubWlsbGlzZWNvbmQtdGhpcy5nZXRNaWxsaXNlY29uZHMoKSk7fVxuaWYoeC5zZWNvbmQhPS0xJiZEYXRlLnZhbGlkYXRlU2Vjb25kKHguc2Vjb25kKSl7dGhpcy5hZGRTZWNvbmRzKHguc2Vjb25kLXRoaXMuZ2V0U2Vjb25kcygpKTt9XG5pZih4Lm1pbnV0ZSE9LTEmJkRhdGUudmFsaWRhdGVNaW51dGUoeC5taW51dGUpKXt0aGlzLmFkZE1pbnV0ZXMoeC5taW51dGUtdGhpcy5nZXRNaW51dGVzKCkpO31cbmlmKHguaG91ciE9LTEmJkRhdGUudmFsaWRhdGVIb3VyKHguaG91cikpe3RoaXMuYWRkSG91cnMoeC5ob3VyLXRoaXMuZ2V0SG91cnMoKSk7fVxuaWYoeC5tb250aCE9PS0xJiZEYXRlLnZhbGlkYXRlTW9udGgoeC5tb250aCkpe3RoaXMuYWRkTW9udGhzKHgubW9udGgtdGhpcy5nZXRNb250aCgpKTt9XG5pZih4LnllYXIhPS0xJiZEYXRlLnZhbGlkYXRlWWVhcih4LnllYXIpKXt0aGlzLmFkZFllYXJzKHgueWVhci10aGlzLmdldEZ1bGxZZWFyKCkpO31cbmlmKHguZGF5IT0tMSYmRGF0ZS52YWxpZGF0ZURheSh4LmRheSx0aGlzLmdldEZ1bGxZZWFyKCksdGhpcy5nZXRNb250aCgpKSl7dGhpcy5hZGREYXlzKHguZGF5LXRoaXMuZ2V0RGF0ZSgpKTt9XG5pZih4LnRpbWV6b25lKXt0aGlzLnNldFRpbWV6b25lKHgudGltZXpvbmUpO31cbmlmKHgudGltZXpvbmVPZmZzZXQpe3RoaXMuc2V0VGltZXpvbmVPZmZzZXQoeC50aW1lem9uZU9mZnNldCk7fVxucmV0dXJuIHRoaXM7fTtEYXRlLnByb3RvdHlwZS5jbGVhclRpbWU9ZnVuY3Rpb24oKXt0aGlzLnNldEhvdXJzKDApO3RoaXMuc2V0TWludXRlcygwKTt0aGlzLnNldFNlY29uZHMoMCk7dGhpcy5zZXRNaWxsaXNlY29uZHMoMCk7cmV0dXJuIHRoaXM7fTtEYXRlLnByb3RvdHlwZS5pc0xlYXBZZWFyPWZ1bmN0aW9uKCl7dmFyIHk9dGhpcy5nZXRGdWxsWWVhcigpO3JldHVybigoKHklND09PTApJiYoeSUxMDAhPT0wKSl8fCh5JTQwMD09PTApKTt9O0RhdGUucHJvdG90eXBlLmlzV2Vla2RheT1mdW5jdGlvbigpe3JldHVybiEodGhpcy5pcygpLnNhdCgpfHx0aGlzLmlzKCkuc3VuKCkpO307RGF0ZS5wcm90b3R5cGUuZ2V0RGF5c0luTW9udGg9ZnVuY3Rpb24oKXtyZXR1cm4gRGF0ZS5nZXREYXlzSW5Nb250aCh0aGlzLmdldEZ1bGxZZWFyKCksdGhpcy5nZXRNb250aCgpKTt9O0RhdGUucHJvdG90eXBlLm1vdmVUb0ZpcnN0RGF5T2ZNb250aD1mdW5jdGlvbigpe3JldHVybiB0aGlzLnNldCh7ZGF5OjF9KTt9O0RhdGUucHJvdG90eXBlLm1vdmVUb0xhc3REYXlPZk1vbnRoPWZ1bmN0aW9uKCl7cmV0dXJuIHRoaXMuc2V0KHtkYXk6dGhpcy5nZXREYXlzSW5Nb250aCgpfSk7fTtEYXRlLnByb3RvdHlwZS5tb3ZlVG9EYXlPZldlZWs9ZnVuY3Rpb24oZGF5LG9yaWVudCl7dmFyIGRpZmY9KGRheS10aGlzLmdldERheSgpKzcqKG9yaWVudHx8KzEpKSU3O3JldHVybiB0aGlzLmFkZERheXMoKGRpZmY9PT0wKT9kaWZmKz03KihvcmllbnR8fCsxKTpkaWZmKTt9O0RhdGUucHJvdG90eXBlLm1vdmVUb01vbnRoPWZ1bmN0aW9uKG1vbnRoLG9yaWVudCl7dmFyIGRpZmY9KG1vbnRoLXRoaXMuZ2V0TW9udGgoKSsxMioob3JpZW50fHwrMSkpJTEyO3JldHVybiB0aGlzLmFkZE1vbnRocygoZGlmZj09PTApP2RpZmYrPTEyKihvcmllbnR8fCsxKTpkaWZmKTt9O0RhdGUucHJvdG90eXBlLmdldERheU9mWWVhcj1mdW5jdGlvbigpe3JldHVybiBNYXRoLmZsb29yKCh0aGlzLW5ldyBEYXRlKHRoaXMuZ2V0RnVsbFllYXIoKSwwLDEpKS84NjQwMDAwMCk7fTtEYXRlLnByb3RvdHlwZS5nZXRXZWVrT2ZZZWFyPWZ1bmN0aW9uKGZpcnN0RGF5T2ZXZWVrKXt2YXIgeT10aGlzLmdldEZ1bGxZZWFyKCksbT10aGlzLmdldE1vbnRoKCksZD10aGlzLmdldERhdGUoKTt2YXIgZG93PWZpcnN0RGF5T2ZXZWVrfHxEYXRlLkN1bHR1cmVJbmZvLmZpcnN0RGF5T2ZXZWVrO3ZhciBvZmZzZXQ9NysxLW5ldyBEYXRlKHksMCwxKS5nZXREYXkoKTtpZihvZmZzZXQ9PTgpe29mZnNldD0xO31cbnZhciBkYXludW09KChEYXRlLlVUQyh5LG0sZCwwLDAsMCktRGF0ZS5VVEMoeSwwLDEsMCwwLDApKS84NjQwMDAwMCkrMTt2YXIgdz1NYXRoLmZsb29yKChkYXludW0tb2Zmc2V0KzcpLzcpO2lmKHc9PT1kb3cpe3ktLTt2YXIgcHJldk9mZnNldD03KzEtbmV3IERhdGUoeSwwLDEpLmdldERheSgpO2lmKHByZXZPZmZzZXQ9PTJ8fHByZXZPZmZzZXQ9PTgpe3c9NTM7fWVsc2V7dz01Mjt9fVxucmV0dXJuIHc7fTtEYXRlLnByb3RvdHlwZS5pc0RTVD1mdW5jdGlvbigpe2NvbnNvbGUubG9nKCdpc0RTVCcpO3JldHVybiB0aGlzLnRvU3RyaW5nKCkubWF0Y2goLyhFfEN8TXxQKShTfEQpVC8pWzJdPT1cIkRcIjt9O0RhdGUucHJvdG90eXBlLmdldFRpbWV6b25lPWZ1bmN0aW9uKCl7cmV0dXJuIERhdGUuZ2V0VGltZXpvbmVBYmJyZXZpYXRpb24odGhpcy5nZXRVVENPZmZzZXQsdGhpcy5pc0RTVCgpKTt9O0RhdGUucHJvdG90eXBlLnNldFRpbWV6b25lT2Zmc2V0PWZ1bmN0aW9uKHMpe3ZhciBoZXJlPXRoaXMuZ2V0VGltZXpvbmVPZmZzZXQoKSx0aGVyZT1OdW1iZXIocykqLTYvMTA7dGhpcy5hZGRNaW51dGVzKHRoZXJlLWhlcmUpO3JldHVybiB0aGlzO307RGF0ZS5wcm90b3R5cGUuc2V0VGltZXpvbmU9ZnVuY3Rpb24ocyl7cmV0dXJuIHRoaXMuc2V0VGltZXpvbmVPZmZzZXQoRGF0ZS5nZXRUaW1lem9uZU9mZnNldChzKSk7fTtEYXRlLnByb3RvdHlwZS5nZXRVVENPZmZzZXQ9ZnVuY3Rpb24oKXt2YXIgbj10aGlzLmdldFRpbWV6b25lT2Zmc2V0KCkqLTEwLzYscjtpZihuPDApe3I9KG4tMTAwMDApLnRvU3RyaW5nKCk7cmV0dXJuIHJbMF0rci5zdWJzdHIoMik7fWVsc2V7cj0obisxMDAwMCkudG9TdHJpbmcoKTtyZXR1cm5cIitcIityLnN1YnN0cigxKTt9fTtEYXRlLnByb3RvdHlwZS5nZXREYXlOYW1lPWZ1bmN0aW9uKGFiYnJldil7cmV0dXJuIGFiYnJldj9EYXRlLkN1bHR1cmVJbmZvLmFiYnJldmlhdGVkRGF5TmFtZXNbdGhpcy5nZXREYXkoKV06RGF0ZS5DdWx0dXJlSW5mby5kYXlOYW1lc1t0aGlzLmdldERheSgpXTt9O0RhdGUucHJvdG90eXBlLmdldE1vbnRoTmFtZT1mdW5jdGlvbihhYmJyZXYpe3JldHVybiBhYmJyZXY/RGF0ZS5DdWx0dXJlSW5mby5hYmJyZXZpYXRlZE1vbnRoTmFtZXNbdGhpcy5nZXRNb250aCgpXTpEYXRlLkN1bHR1cmVJbmZvLm1vbnRoTmFtZXNbdGhpcy5nZXRNb250aCgpXTt9O0RhdGUucHJvdG90eXBlLl90b1N0cmluZz1EYXRlLnByb3RvdHlwZS50b1N0cmluZztEYXRlLnByb3RvdHlwZS50b1N0cmluZz1mdW5jdGlvbihmb3JtYXQpe3ZhciBzZWxmPXRoaXM7dmFyIHA9ZnVuY3Rpb24gcChzKXtyZXR1cm4ocy50b1N0cmluZygpLmxlbmd0aD09MSk/XCIwXCIrczpzO307cmV0dXJuIGZvcm1hdD9mb3JtYXQucmVwbGFjZSgvZGQ/ZD9kP3xNTT9NP00/fHl5P3k/eT98aGg/fEhIP3xtbT98c3M/fHR0P3x6ej96Py9nLGZ1bmN0aW9uKGZvcm1hdCl7c3dpdGNoKGZvcm1hdCl7Y2FzZVwiaGhcIjpyZXR1cm4gcChzZWxmLmdldEhvdXJzKCk8MTM/c2VsZi5nZXRIb3VycygpOihzZWxmLmdldEhvdXJzKCktMTIpKTtjYXNlXCJoXCI6cmV0dXJuIHNlbGYuZ2V0SG91cnMoKTwxMz9zZWxmLmdldEhvdXJzKCk6KHNlbGYuZ2V0SG91cnMoKS0xMik7Y2FzZVwiSEhcIjpyZXR1cm4gcChzZWxmLmdldEhvdXJzKCkpO2Nhc2VcIkhcIjpyZXR1cm4gc2VsZi5nZXRIb3VycygpO2Nhc2VcIm1tXCI6cmV0dXJuIHAoc2VsZi5nZXRNaW51dGVzKCkpO2Nhc2VcIm1cIjpyZXR1cm4gc2VsZi5nZXRNaW51dGVzKCk7Y2FzZVwic3NcIjpyZXR1cm4gcChzZWxmLmdldFNlY29uZHMoKSk7Y2FzZVwic1wiOnJldHVybiBzZWxmLmdldFNlY29uZHMoKTtjYXNlXCJ5eXl5XCI6cmV0dXJuIHNlbGYuZ2V0RnVsbFllYXIoKTtjYXNlXCJ5eVwiOnJldHVybiBzZWxmLmdldEZ1bGxZZWFyKCkudG9TdHJpbmcoKS5zdWJzdHJpbmcoMiw0KTtjYXNlXCJkZGRkXCI6cmV0dXJuIHNlbGYuZ2V0RGF5TmFtZSgpO2Nhc2VcImRkZFwiOnJldHVybiBzZWxmLmdldERheU5hbWUodHJ1ZSk7Y2FzZVwiZGRcIjpyZXR1cm4gcChzZWxmLmdldERhdGUoKSk7Y2FzZVwiZFwiOnJldHVybiBzZWxmLmdldERhdGUoKS50b1N0cmluZygpO2Nhc2VcIk1NTU1cIjpyZXR1cm4gc2VsZi5nZXRNb250aE5hbWUoKTtjYXNlXCJNTU1cIjpyZXR1cm4gc2VsZi5nZXRNb250aE5hbWUodHJ1ZSk7Y2FzZVwiTU1cIjpyZXR1cm4gcCgoc2VsZi5nZXRNb250aCgpKzEpKTtjYXNlXCJNXCI6cmV0dXJuIHNlbGYuZ2V0TW9udGgoKSsxO2Nhc2VcInRcIjpyZXR1cm4gc2VsZi5nZXRIb3VycygpPDEyP0RhdGUuQ3VsdHVyZUluZm8uYW1EZXNpZ25hdG9yLnN1YnN0cmluZygwLDEpOkRhdGUuQ3VsdHVyZUluZm8ucG1EZXNpZ25hdG9yLnN1YnN0cmluZygwLDEpO2Nhc2VcInR0XCI6cmV0dXJuIHNlbGYuZ2V0SG91cnMoKTwxMj9EYXRlLkN1bHR1cmVJbmZvLmFtRGVzaWduYXRvcjpEYXRlLkN1bHR1cmVJbmZvLnBtRGVzaWduYXRvcjtjYXNlXCJ6enpcIjpjYXNlXCJ6elwiOmNhc2VcInpcIjpyZXR1cm5cIlwiO319KTp0aGlzLl90b1N0cmluZygpO307XG5EYXRlLm5vdz1mdW5jdGlvbigpe3JldHVybiBuZXcgRGF0ZSgpO307RGF0ZS50b2RheT1mdW5jdGlvbigpe3JldHVybiBEYXRlLm5vdygpLmNsZWFyVGltZSgpO307RGF0ZS5wcm90b3R5cGUuX29yaWVudD0rMTtEYXRlLnByb3RvdHlwZS5uZXh0PWZ1bmN0aW9uKCl7dGhpcy5fb3JpZW50PSsxO3JldHVybiB0aGlzO307RGF0ZS5wcm90b3R5cGUubGFzdD1EYXRlLnByb3RvdHlwZS5wcmV2PURhdGUucHJvdG90eXBlLnByZXZpb3VzPWZ1bmN0aW9uKCl7dGhpcy5fb3JpZW50PS0xO3JldHVybiB0aGlzO307RGF0ZS5wcm90b3R5cGUuX2lzPWZhbHNlO0RhdGUucHJvdG90eXBlLmlzPWZ1bmN0aW9uKCl7dGhpcy5faXM9dHJ1ZTtyZXR1cm4gdGhpczt9O051bWJlci5wcm90b3R5cGUuX2RhdGVFbGVtZW50PVwiZGF5XCI7TnVtYmVyLnByb3RvdHlwZS5mcm9tTm93PWZ1bmN0aW9uKCl7dmFyIGM9e307Y1t0aGlzLl9kYXRlRWxlbWVudF09dGhpcztyZXR1cm4gRGF0ZS5ub3coKS5hZGQoYyk7fTtOdW1iZXIucHJvdG90eXBlLmFnbz1mdW5jdGlvbigpe3ZhciBjPXt9O2NbdGhpcy5fZGF0ZUVsZW1lbnRdPXRoaXMqLTE7cmV0dXJuIERhdGUubm93KCkuYWRkKGMpO307KGZ1bmN0aW9uKCl7dmFyICREPURhdGUucHJvdG90eXBlLCROPU51bWJlci5wcm90b3R5cGU7dmFyIGR4PShcInN1bmRheSBtb25kYXkgdHVlc2RheSB3ZWRuZXNkYXkgdGh1cnNkYXkgZnJpZGF5IHNhdHVyZGF5XCIpLnNwbGl0KC9cXHMvKSxteD0oXCJqYW51YXJ5IGZlYnJ1YXJ5IG1hcmNoIGFwcmlsIG1heSBqdW5lIGp1bHkgYXVndXN0IHNlcHRlbWJlciBvY3RvYmVyIG5vdmVtYmVyIGRlY2VtYmVyXCIpLnNwbGl0KC9cXHMvKSxweD0oXCJNaWxsaXNlY29uZCBTZWNvbmQgTWludXRlIEhvdXIgRGF5IFdlZWsgTW9udGggWWVhclwiKS5zcGxpdCgvXFxzLyksZGU7dmFyIGRmPWZ1bmN0aW9uKG4pe3JldHVybiBmdW5jdGlvbigpe2lmKHRoaXMuX2lzKXt0aGlzLl9pcz1mYWxzZTtyZXR1cm4gdGhpcy5nZXREYXkoKT09bjt9XG5yZXR1cm4gdGhpcy5tb3ZlVG9EYXlPZldlZWsobix0aGlzLl9vcmllbnQpO307fTtmb3IodmFyIGk9MDtpPGR4Lmxlbmd0aDtpKyspeyREW2R4W2ldXT0kRFtkeFtpXS5zdWJzdHJpbmcoMCwzKV09ZGYoaSk7fVxudmFyIG1mPWZ1bmN0aW9uKG4pe3JldHVybiBmdW5jdGlvbigpe2lmKHRoaXMuX2lzKXt0aGlzLl9pcz1mYWxzZTtyZXR1cm4gdGhpcy5nZXRNb250aCgpPT09bjt9XG5yZXR1cm4gdGhpcy5tb3ZlVG9Nb250aChuLHRoaXMuX29yaWVudCk7fTt9O2Zvcih2YXIgaj0wO2o8bXgubGVuZ3RoO2orKyl7JERbbXhbal1dPSREW214W2pdLnN1YnN0cmluZygwLDMpXT1tZihqKTt9XG52YXIgZWY9ZnVuY3Rpb24oail7cmV0dXJuIGZ1bmN0aW9uKCl7aWYoai5zdWJzdHJpbmcoai5sZW5ndGgtMSkhPVwic1wiKXtqKz1cInNcIjt9XG5yZXR1cm4gdGhpc1tcImFkZFwiK2pdKHRoaXMuX29yaWVudCk7fTt9O3ZhciBuZj1mdW5jdGlvbihuKXtyZXR1cm4gZnVuY3Rpb24oKXt0aGlzLl9kYXRlRWxlbWVudD1uO3JldHVybiB0aGlzO307fTtmb3IodmFyIGs9MDtrPHB4Lmxlbmd0aDtrKyspe2RlPXB4W2tdLnRvTG93ZXJDYXNlKCk7JERbZGVdPSREW2RlK1wic1wiXT1lZihweFtrXSk7JE5bZGVdPSROW2RlK1wic1wiXT1uZihkZSk7fX0oKSk7RGF0ZS5wcm90b3R5cGUudG9KU09OU3RyaW5nPWZ1bmN0aW9uKCl7cmV0dXJuIHRoaXMudG9TdHJpbmcoXCJ5eXl5LU1NLWRkVGhoOm1tOnNzWlwiKTt9O0RhdGUucHJvdG90eXBlLnRvU2hvcnREYXRlU3RyaW5nPWZ1bmN0aW9uKCl7cmV0dXJuIHRoaXMudG9TdHJpbmcoRGF0ZS5DdWx0dXJlSW5mby5mb3JtYXRQYXR0ZXJucy5zaG9ydERhdGVQYXR0ZXJuKTt9O0RhdGUucHJvdG90eXBlLnRvTG9uZ0RhdGVTdHJpbmc9ZnVuY3Rpb24oKXtyZXR1cm4gdGhpcy50b1N0cmluZyhEYXRlLkN1bHR1cmVJbmZvLmZvcm1hdFBhdHRlcm5zLmxvbmdEYXRlUGF0dGVybik7fTtEYXRlLnByb3RvdHlwZS50b1Nob3J0VGltZVN0cmluZz1mdW5jdGlvbigpe3JldHVybiB0aGlzLnRvU3RyaW5nKERhdGUuQ3VsdHVyZUluZm8uZm9ybWF0UGF0dGVybnMuc2hvcnRUaW1lUGF0dGVybik7fTtEYXRlLnByb3RvdHlwZS50b0xvbmdUaW1lU3RyaW5nPWZ1bmN0aW9uKCl7cmV0dXJuIHRoaXMudG9TdHJpbmcoRGF0ZS5DdWx0dXJlSW5mby5mb3JtYXRQYXR0ZXJucy5sb25nVGltZVBhdHRlcm4pO307RGF0ZS5wcm90b3R5cGUuZ2V0T3JkaW5hbD1mdW5jdGlvbigpe3N3aXRjaCh0aGlzLmdldERhdGUoKSl7Y2FzZSAxOmNhc2UgMjE6Y2FzZSAzMTpyZXR1cm5cInN0XCI7Y2FzZSAyOmNhc2UgMjI6cmV0dXJuXCJuZFwiO2Nhc2UgMzpjYXNlIDIzOnJldHVyblwicmRcIjtkZWZhdWx0OnJldHVyblwidGhcIjt9fTtcbihmdW5jdGlvbigpe0RhdGUuUGFyc2luZz17RXhjZXB0aW9uOmZ1bmN0aW9uKHMpe3RoaXMubWVzc2FnZT1cIlBhcnNlIGVycm9yIGF0ICdcIitzLnN1YnN0cmluZygwLDEwKStcIiAuLi4nXCI7fX07dmFyICRQPURhdGUuUGFyc2luZzt2YXIgXz0kUC5PcGVyYXRvcnM9e3J0b2tlbjpmdW5jdGlvbihyKXtyZXR1cm4gZnVuY3Rpb24ocyl7dmFyIG14PXMubWF0Y2gocik7aWYobXgpe3JldHVybihbbXhbMF0scy5zdWJzdHJpbmcobXhbMF0ubGVuZ3RoKV0pO31lbHNle3Rocm93IG5ldyAkUC5FeGNlcHRpb24ocyk7fX07fSx0b2tlbjpmdW5jdGlvbihzKXtyZXR1cm4gZnVuY3Rpb24ocyl7cmV0dXJuIF8ucnRva2VuKG5ldyBSZWdFeHAoXCJeXFxzKlwiK3MrXCJcXHMqXCIpKShzKTt9O30sc3Rva2VuOmZ1bmN0aW9uKHMpe3JldHVybiBfLnJ0b2tlbihuZXcgUmVnRXhwKFwiXlwiK3MpKTt9LHVudGlsOmZ1bmN0aW9uKHApe3JldHVybiBmdW5jdGlvbihzKXt2YXIgcXg9W10scng9bnVsbDt3aGlsZShzLmxlbmd0aCl7dHJ5e3J4PXAuY2FsbCh0aGlzLHMpO31jYXRjaChlKXtxeC5wdXNoKHJ4WzBdKTtzPXJ4WzFdO2NvbnRpbnVlO31cbmJyZWFrO31cbnJldHVybltxeCxzXTt9O30sbWFueTpmdW5jdGlvbihwKXtyZXR1cm4gZnVuY3Rpb24ocyl7dmFyIHJ4PVtdLHI9bnVsbDt3aGlsZShzLmxlbmd0aCl7dHJ5e3I9cC5jYWxsKHRoaXMscyk7fWNhdGNoKGUpe3JldHVybltyeCxzXTt9XG5yeC5wdXNoKHJbMF0pO3M9clsxXTt9XG5yZXR1cm5bcngsc107fTt9LG9wdGlvbmFsOmZ1bmN0aW9uKHApe3JldHVybiBmdW5jdGlvbihzKXt2YXIgcj1udWxsO3RyeXtyPXAuY2FsbCh0aGlzLHMpO31jYXRjaChlKXtyZXR1cm5bbnVsbCxzXTt9XG5yZXR1cm5bclswXSxyWzFdXTt9O30sbm90OmZ1bmN0aW9uKHApe3JldHVybiBmdW5jdGlvbihzKXt0cnl7cC5jYWxsKHRoaXMscyk7fWNhdGNoKGUpe3JldHVybltudWxsLHNdO31cbnRocm93IG5ldyAkUC5FeGNlcHRpb24ocyk7fTt9LGlnbm9yZTpmdW5jdGlvbihwKXtyZXR1cm4gcD9mdW5jdGlvbihzKXt2YXIgcj1udWxsO3I9cC5jYWxsKHRoaXMscyk7cmV0dXJuW251bGwsclsxXV07fTpudWxsO30scHJvZHVjdDpmdW5jdGlvbigpe3ZhciBweD1hcmd1bWVudHNbMF0scXg9QXJyYXkucHJvdG90eXBlLnNsaWNlLmNhbGwoYXJndW1lbnRzLDEpLHJ4PVtdO2Zvcih2YXIgaT0wO2k8cHgubGVuZ3RoO2krKyl7cngucHVzaChfLmVhY2gocHhbaV0scXgpKTt9XG5yZXR1cm4gcng7fSxjYWNoZTpmdW5jdGlvbihydWxlKXt2YXIgY2FjaGU9e30scj1udWxsO3JldHVybiBmdW5jdGlvbihzKXt0cnl7cj1jYWNoZVtzXT0oY2FjaGVbc118fHJ1bGUuY2FsbCh0aGlzLHMpKTt9Y2F0Y2goZSl7cj1jYWNoZVtzXT1lO31cbmlmKHIgaW5zdGFuY2VvZiAkUC5FeGNlcHRpb24pe3Rocm93IHI7fWVsc2V7cmV0dXJuIHI7fX07fSxhbnk6ZnVuY3Rpb24oKXt2YXIgcHg9YXJndW1lbnRzO3JldHVybiBmdW5jdGlvbihzKXt2YXIgcj1udWxsO2Zvcih2YXIgaT0wO2k8cHgubGVuZ3RoO2krKyl7aWYocHhbaV09PW51bGwpe2NvbnRpbnVlO31cbnRyeXtyPShweFtpXS5jYWxsKHRoaXMscykpO31jYXRjaChlKXtyPW51bGw7fVxuaWYocil7cmV0dXJuIHI7fX1cbnRocm93IG5ldyAkUC5FeGNlcHRpb24ocyk7fTt9LGVhY2g6ZnVuY3Rpb24oKXt2YXIgcHg9YXJndW1lbnRzO3JldHVybiBmdW5jdGlvbihzKXt2YXIgcng9W10scj1udWxsO2Zvcih2YXIgaT0wO2k8cHgubGVuZ3RoO2krKyl7aWYocHhbaV09PW51bGwpe2NvbnRpbnVlO31cbnRyeXtyPShweFtpXS5jYWxsKHRoaXMscykpO31jYXRjaChlKXt0aHJvdyBuZXcgJFAuRXhjZXB0aW9uKHMpO31cbnJ4LnB1c2goclswXSk7cz1yWzFdO31cbnJldHVybltyeCxzXTt9O30sYWxsOmZ1bmN0aW9uKCl7dmFyIHB4PWFyZ3VtZW50cyxfPV87cmV0dXJuIF8uZWFjaChfLm9wdGlvbmFsKHB4KSk7fSxzZXF1ZW5jZTpmdW5jdGlvbihweCxkLGMpe2Q9ZHx8Xy5ydG9rZW4oL15cXHMqLyk7Yz1jfHxudWxsO2lmKHB4Lmxlbmd0aD09MSl7cmV0dXJuIHB4WzBdO31cbnJldHVybiBmdW5jdGlvbihzKXt2YXIgcj1udWxsLHE9bnVsbDt2YXIgcng9W107Zm9yKHZhciBpPTA7aTxweC5sZW5ndGg7aSsrKXt0cnl7cj1weFtpXS5jYWxsKHRoaXMscyk7fWNhdGNoKGUpe2JyZWFrO31cbnJ4LnB1c2goclswXSk7dHJ5e3E9ZC5jYWxsKHRoaXMsclsxXSk7fWNhdGNoKGV4KXtxPW51bGw7YnJlYWs7fVxucz1xWzFdO31cbmlmKCFyKXt0aHJvdyBuZXcgJFAuRXhjZXB0aW9uKHMpO31cbmlmKHEpe3Rocm93IG5ldyAkUC5FeGNlcHRpb24ocVsxXSk7fVxuaWYoYyl7dHJ5e3I9Yy5jYWxsKHRoaXMsclsxXSk7fWNhdGNoKGV5KXt0aHJvdyBuZXcgJFAuRXhjZXB0aW9uKHJbMV0pO319XG5yZXR1cm5bcngsKHI/clsxXTpzKV07fTt9LGJldHdlZW46ZnVuY3Rpb24oZDEscCxkMil7ZDI9ZDJ8fGQxO3ZhciBfZm49Xy5lYWNoKF8uaWdub3JlKGQxKSxwLF8uaWdub3JlKGQyKSk7cmV0dXJuIGZ1bmN0aW9uKHMpe3ZhciByeD1fZm4uY2FsbCh0aGlzLHMpO3JldHVybltbcnhbMF1bMF0sclswXVsyXV0scnhbMV1dO307fSxsaXN0OmZ1bmN0aW9uKHAsZCxjKXtkPWR8fF8ucnRva2VuKC9eXFxzKi8pO2M9Y3x8bnVsbDtyZXR1cm4ocCBpbnN0YW5jZW9mIEFycmF5P18uZWFjaChfLnByb2R1Y3QocC5zbGljZSgwLC0xKSxfLmlnbm9yZShkKSkscC5zbGljZSgtMSksXy5pZ25vcmUoYykpOl8uZWFjaChfLm1hbnkoXy5lYWNoKHAsXy5pZ25vcmUoZCkpKSxweCxfLmlnbm9yZShjKSkpO30sc2V0OmZ1bmN0aW9uKHB4LGQsYyl7ZD1kfHxfLnJ0b2tlbigvXlxccyovKTtjPWN8fG51bGw7cmV0dXJuIGZ1bmN0aW9uKHMpe3ZhciByPW51bGwscD1udWxsLHE9bnVsbCxyeD1udWxsLGJlc3Q9W1tdLHNdLGxhc3Q9ZmFsc2U7Zm9yKHZhciBpPTA7aTxweC5sZW5ndGg7aSsrKXtxPW51bGw7cD1udWxsO3I9bnVsbDtsYXN0PShweC5sZW5ndGg9PTEpO3RyeXtyPXB4W2ldLmNhbGwodGhpcyxzKTt9Y2F0Y2goZSl7Y29udGludWU7fVxucng9W1tyWzBdXSxyWzFdXTtpZihyWzFdLmxlbmd0aD4wJiYhbGFzdCl7dHJ5e3E9ZC5jYWxsKHRoaXMsclsxXSk7fWNhdGNoKGV4KXtsYXN0PXRydWU7fX1lbHNle2xhc3Q9dHJ1ZTt9XG5pZighbGFzdCYmcVsxXS5sZW5ndGg9PT0wKXtsYXN0PXRydWU7fVxuaWYoIWxhc3Qpe3ZhciBxeD1bXTtmb3IodmFyIGo9MDtqPHB4Lmxlbmd0aDtqKyspe2lmKGkhPWope3F4LnB1c2gocHhbal0pO319XG5wPV8uc2V0KHF4LGQpLmNhbGwodGhpcyxxWzFdKTtpZihwWzBdLmxlbmd0aD4wKXtyeFswXT1yeFswXS5jb25jYXQocFswXSk7cnhbMV09cFsxXTt9fVxuaWYocnhbMV0ubGVuZ3RoPGJlc3RbMV0ubGVuZ3RoKXtiZXN0PXJ4O31cbmlmKGJlc3RbMV0ubGVuZ3RoPT09MCl7YnJlYWs7fX1cbmlmKGJlc3RbMF0ubGVuZ3RoPT09MCl7cmV0dXJuIGJlc3Q7fVxuaWYoYyl7dHJ5e3E9Yy5jYWxsKHRoaXMsYmVzdFsxXSk7fWNhdGNoKGV5KXt0aHJvdyBuZXcgJFAuRXhjZXB0aW9uKGJlc3RbMV0pO31cbmJlc3RbMV09cVsxXTt9XG5yZXR1cm4gYmVzdDt9O30sZm9yd2FyZDpmdW5jdGlvbihncixmbmFtZSl7cmV0dXJuIGZ1bmN0aW9uKHMpe3JldHVybiBncltmbmFtZV0uY2FsbCh0aGlzLHMpO307fSxyZXBsYWNlOmZ1bmN0aW9uKHJ1bGUscmVwbCl7cmV0dXJuIGZ1bmN0aW9uKHMpe3ZhciByPXJ1bGUuY2FsbCh0aGlzLHMpO3JldHVybltyZXBsLHJbMV1dO307fSxwcm9jZXNzOmZ1bmN0aW9uKHJ1bGUsZm4pe3JldHVybiBmdW5jdGlvbihzKXt2YXIgcj1ydWxlLmNhbGwodGhpcyxzKTtyZXR1cm5bZm4uY2FsbCh0aGlzLHJbMF0pLHJbMV1dO307fSxtaW46ZnVuY3Rpb24obWluLHJ1bGUpe3JldHVybiBmdW5jdGlvbihzKXt2YXIgcng9cnVsZS5jYWxsKHRoaXMscyk7aWYocnhbMF0ubGVuZ3RoPG1pbil7dGhyb3cgbmV3ICRQLkV4Y2VwdGlvbihzKTt9XG5yZXR1cm4gcng7fTt9fTt2YXIgX2dlbmVyYXRvcj1mdW5jdGlvbihvcCl7cmV0dXJuIGZ1bmN0aW9uKCl7dmFyIGFyZ3M9bnVsbCxyeD1bXTtpZihhcmd1bWVudHMubGVuZ3RoPjEpe2FyZ3M9QXJyYXkucHJvdG90eXBlLnNsaWNlLmNhbGwoYXJndW1lbnRzKTt9ZWxzZSBpZihhcmd1bWVudHNbMF1pbnN0YW5jZW9mIEFycmF5KXthcmdzPWFyZ3VtZW50c1swXTt9XG5pZihhcmdzKXtmb3IodmFyIGk9MCxweD1hcmdzLnNoaWZ0KCk7aTxweC5sZW5ndGg7aSsrKXthcmdzLnVuc2hpZnQocHhbaV0pO3J4LnB1c2gob3AuYXBwbHkobnVsbCxhcmdzKSk7YXJncy5zaGlmdCgpO3JldHVybiByeDt9fWVsc2V7cmV0dXJuIG9wLmFwcGx5KG51bGwsYXJndW1lbnRzKTt9fTt9O3ZhciBneD1cIm9wdGlvbmFsIG5vdCBpZ25vcmUgY2FjaGVcIi5zcGxpdCgvXFxzLyk7Zm9yKHZhciBpPTA7aTxneC5sZW5ndGg7aSsrKXtfW2d4W2ldXT1fZ2VuZXJhdG9yKF9bZ3hbaV1dKTt9XG52YXIgX3ZlY3Rvcj1mdW5jdGlvbihvcCl7cmV0dXJuIGZ1bmN0aW9uKCl7aWYoYXJndW1lbnRzWzBdaW5zdGFuY2VvZiBBcnJheSl7cmV0dXJuIG9wLmFwcGx5KG51bGwsYXJndW1lbnRzWzBdKTt9ZWxzZXtyZXR1cm4gb3AuYXBwbHkobnVsbCxhcmd1bWVudHMpO319O307dmFyIHZ4PVwiZWFjaCBhbnkgYWxsXCIuc3BsaXQoL1xccy8pO2Zvcih2YXIgaj0wO2o8dngubGVuZ3RoO2orKyl7X1t2eFtqXV09X3ZlY3RvcihfW3Z4W2pdXSk7fX0oKSk7KGZ1bmN0aW9uKCl7dmFyIGZsYXR0ZW5BbmRDb21wYWN0PWZ1bmN0aW9uKGF4KXt2YXIgcng9W107Zm9yKHZhciBpPTA7aTxheC5sZW5ndGg7aSsrKXtpZihheFtpXWluc3RhbmNlb2YgQXJyYXkpe3J4PXJ4LmNvbmNhdChmbGF0dGVuQW5kQ29tcGFjdChheFtpXSkpO31lbHNle2lmKGF4W2ldKXtyeC5wdXNoKGF4W2ldKTt9fX1cbnJldHVybiByeDt9O0RhdGUuR3JhbW1hcj17fTtEYXRlLlRyYW5zbGF0b3I9e2hvdXI6ZnVuY3Rpb24ocyl7cmV0dXJuIGZ1bmN0aW9uKCl7dGhpcy5ob3VyPU51bWJlcihzKTt9O30sbWludXRlOmZ1bmN0aW9uKHMpe3JldHVybiBmdW5jdGlvbigpe3RoaXMubWludXRlPU51bWJlcihzKTt9O30sc2Vjb25kOmZ1bmN0aW9uKHMpe3JldHVybiBmdW5jdGlvbigpe3RoaXMuc2Vjb25kPU51bWJlcihzKTt9O30sbWVyaWRpYW46ZnVuY3Rpb24ocyl7cmV0dXJuIGZ1bmN0aW9uKCl7dGhpcy5tZXJpZGlhbj1zLnNsaWNlKDAsMSkudG9Mb3dlckNhc2UoKTt9O30sdGltZXpvbmU6ZnVuY3Rpb24ocyl7cmV0dXJuIGZ1bmN0aW9uKCl7dmFyIG49cy5yZXBsYWNlKC9bXlxcZFxcK1xcLV0vZyxcIlwiKTtpZihuLmxlbmd0aCl7dGhpcy50aW1lem9uZU9mZnNldD1OdW1iZXIobik7fWVsc2V7dGhpcy50aW1lem9uZT1zLnRvTG93ZXJDYXNlKCk7fX07fSxkYXk6ZnVuY3Rpb24oeCl7dmFyIHM9eFswXTtyZXR1cm4gZnVuY3Rpb24oKXt0aGlzLmRheT1OdW1iZXIocy5tYXRjaCgvXFxkKy8pWzBdKTt9O30sbW9udGg6ZnVuY3Rpb24ocyl7cmV0dXJuIGZ1bmN0aW9uKCl7dGhpcy5tb250aD0oKHMubGVuZ3RoPT0zKT9EYXRlLmdldE1vbnRoTnVtYmVyRnJvbU5hbWUocyk6KE51bWJlcihzKS0xKSk7fTt9LHllYXI6ZnVuY3Rpb24ocyl7cmV0dXJuIGZ1bmN0aW9uKCl7dmFyIG49TnVtYmVyKHMpO3RoaXMueWVhcj0oKHMubGVuZ3RoPjIpP246KG4rKCgobisyMDAwKTxEYXRlLkN1bHR1cmVJbmZvLnR3b0RpZ2l0WWVhck1heCk/MjAwMDoxOTAwKSkpO307fSxyZGF5OmZ1bmN0aW9uKHMpe3JldHVybiBmdW5jdGlvbigpe3N3aXRjaChzKXtjYXNlXCJ5ZXN0ZXJkYXlcIjp0aGlzLmRheXM9LTE7YnJlYWs7Y2FzZVwidG9tb3Jyb3dcIjp0aGlzLmRheXM9MTticmVhaztjYXNlXCJ0b2RheVwiOnRoaXMuZGF5cz0wO2JyZWFrO2Nhc2VcIm5vd1wiOnRoaXMuZGF5cz0wO3RoaXMubm93PXRydWU7YnJlYWs7fX07fSxmaW5pc2hFeGFjdDpmdW5jdGlvbih4KXt4PSh4IGluc3RhbmNlb2YgQXJyYXkpP3g6W3hdO3ZhciBub3c9bmV3IERhdGUoKTt0aGlzLnllYXI9bm93LmdldEZ1bGxZZWFyKCk7dGhpcy5tb250aD1ub3cuZ2V0TW9udGgoKTt0aGlzLmRheT0xO3RoaXMuaG91cj0wO3RoaXMubWludXRlPTA7dGhpcy5zZWNvbmQ9MDtmb3IodmFyIGk9MDtpPHgubGVuZ3RoO2krKyl7aWYoeFtpXSl7eFtpXS5jYWxsKHRoaXMpO319XG50aGlzLmhvdXI9KHRoaXMubWVyaWRpYW49PVwicFwiJiZ0aGlzLmhvdXI8MTMpP3RoaXMuaG91cisxMjp0aGlzLmhvdXI7aWYodGhpcy5kYXk+RGF0ZS5nZXREYXlzSW5Nb250aCh0aGlzLnllYXIsdGhpcy5tb250aCkpe3Rocm93IG5ldyBSYW5nZUVycm9yKHRoaXMuZGF5K1wiIGlzIG5vdCBhIHZhbGlkIHZhbHVlIGZvciBkYXlzLlwiKTt9XG52YXIgcj1uZXcgRGF0ZSh0aGlzLnllYXIsdGhpcy5tb250aCx0aGlzLmRheSx0aGlzLmhvdXIsdGhpcy5taW51dGUsdGhpcy5zZWNvbmQpO2lmKHRoaXMudGltZXpvbmUpe3Iuc2V0KHt0aW1lem9uZTp0aGlzLnRpbWV6b25lfSk7fWVsc2UgaWYodGhpcy50aW1lem9uZU9mZnNldCl7ci5zZXQoe3RpbWV6b25lT2Zmc2V0OnRoaXMudGltZXpvbmVPZmZzZXR9KTt9XG5yZXR1cm4gcjt9LGZpbmlzaDpmdW5jdGlvbih4KXt4PSh4IGluc3RhbmNlb2YgQXJyYXkpP2ZsYXR0ZW5BbmRDb21wYWN0KHgpOlt4XTtpZih4Lmxlbmd0aD09PTApe3JldHVybiBudWxsO31cbmZvcih2YXIgaT0wO2k8eC5sZW5ndGg7aSsrKXtpZih0eXBlb2YgeFtpXT09XCJmdW5jdGlvblwiKXt4W2ldLmNhbGwodGhpcyk7fX1cbmlmKHRoaXMubm93KXtyZXR1cm4gbmV3IERhdGUoKTt9XG52YXIgdG9kYXk9RGF0ZS50b2RheSgpO3ZhciBtZXRob2Q9bnVsbDt2YXIgZXhwcmVzc2lvbj0hISh0aGlzLmRheXMhPW51bGx8fHRoaXMub3JpZW50fHx0aGlzLm9wZXJhdG9yKTtpZihleHByZXNzaW9uKXt2YXIgZ2FwLG1vZCxvcmllbnQ7b3JpZW50PSgodGhpcy5vcmllbnQ9PVwicGFzdFwifHx0aGlzLm9wZXJhdG9yPT1cInN1YnRyYWN0XCIpPy0xOjEpO2lmKHRoaXMud2Vla2RheSl7dGhpcy51bml0PVwiZGF5XCI7Z2FwPShEYXRlLmdldERheU51bWJlckZyb21OYW1lKHRoaXMud2Vla2RheSktdG9kYXkuZ2V0RGF5KCkpO21vZD03O3RoaXMuZGF5cz1nYXA/KChnYXArKG9yaWVudCptb2QpKSVtb2QpOihvcmllbnQqbW9kKTt9XG5pZih0aGlzLm1vbnRoKXt0aGlzLnVuaXQ9XCJtb250aFwiO2dhcD0odGhpcy5tb250aC10b2RheS5nZXRNb250aCgpKTttb2Q9MTI7dGhpcy5tb250aHM9Z2FwPygoZ2FwKyhvcmllbnQqbW9kKSklbW9kKToob3JpZW50Km1vZCk7dGhpcy5tb250aD1udWxsO31cbmlmKCF0aGlzLnVuaXQpe3RoaXMudW5pdD1cImRheVwiO31cbmlmKHRoaXNbdGhpcy51bml0K1wic1wiXT09bnVsbHx8dGhpcy5vcGVyYXRvciE9bnVsbCl7aWYoIXRoaXMudmFsdWUpe3RoaXMudmFsdWU9MTt9XG5pZih0aGlzLnVuaXQ9PVwid2Vla1wiKXt0aGlzLnVuaXQ9XCJkYXlcIjt0aGlzLnZhbHVlPXRoaXMudmFsdWUqNzt9XG50aGlzW3RoaXMudW5pdCtcInNcIl09dGhpcy52YWx1ZSpvcmllbnQ7fVxucmV0dXJuIHRvZGF5LmFkZCh0aGlzKTt9ZWxzZXtpZih0aGlzLm1lcmlkaWFuJiZ0aGlzLmhvdXIpe3RoaXMuaG91cj0odGhpcy5ob3VyPDEzJiZ0aGlzLm1lcmlkaWFuPT1cInBcIik/dGhpcy5ob3VyKzEyOnRoaXMuaG91cjt9XG5pZih0aGlzLndlZWtkYXkmJiF0aGlzLmRheSl7dGhpcy5kYXk9KHRvZGF5LmFkZERheXMoKERhdGUuZ2V0RGF5TnVtYmVyRnJvbU5hbWUodGhpcy53ZWVrZGF5KS10b2RheS5nZXREYXkoKSkpKS5nZXREYXRlKCk7fVxuaWYodGhpcy5tb250aCYmIXRoaXMuZGF5KXt0aGlzLmRheT0xO31cbnJldHVybiB0b2RheS5zZXQodGhpcyk7fX19O3ZhciBfPURhdGUuUGFyc2luZy5PcGVyYXRvcnMsZz1EYXRlLkdyYW1tYXIsdD1EYXRlLlRyYW5zbGF0b3IsX2ZuO2cuZGF0ZVBhcnREZWxpbWl0ZXI9Xy5ydG9rZW4oL14oW1xcc1xcLVxcLlxcLFxcL1xceDI3XSspLyk7Zy50aW1lUGFydERlbGltaXRlcj1fLnN0b2tlbihcIjpcIik7Zy53aGl0ZVNwYWNlPV8ucnRva2VuKC9eXFxzKi8pO2cuZ2VuZXJhbERlbGltaXRlcj1fLnJ0b2tlbigvXigoW1xcc1xcLF18YXR8b24pKykvKTt2YXIgX0M9e307Zy5jdG9rZW49ZnVuY3Rpb24oa2V5cyl7dmFyIGZuPV9DW2tleXNdO2lmKCFmbil7dmFyIGM9RGF0ZS5DdWx0dXJlSW5mby5yZWdleFBhdHRlcm5zO3ZhciBreD1rZXlzLnNwbGl0KC9cXHMrLykscHg9W107Zm9yKHZhciBpPTA7aTxreC5sZW5ndGg7aSsrKXtweC5wdXNoKF8ucmVwbGFjZShfLnJ0b2tlbihjW2t4W2ldXSksa3hbaV0pKTt9XG5mbj1fQ1trZXlzXT1fLmFueS5hcHBseShudWxsLHB4KTt9XG5yZXR1cm4gZm47fTtnLmN0b2tlbjI9ZnVuY3Rpb24oa2V5KXtyZXR1cm4gXy5ydG9rZW4oRGF0ZS5DdWx0dXJlSW5mby5yZWdleFBhdHRlcm5zW2tleV0pO307Zy5oPV8uY2FjaGUoXy5wcm9jZXNzKF8ucnRva2VuKC9eKDBbMC05XXwxWzAtMl18WzEtOV0pLyksdC5ob3VyKSk7Zy5oaD1fLmNhY2hlKF8ucHJvY2VzcyhfLnJ0b2tlbigvXigwWzAtOV18MVswLTJdKS8pLHQuaG91cikpO2cuSD1fLmNhY2hlKF8ucHJvY2VzcyhfLnJ0b2tlbigvXihbMC0xXVswLTldfDJbMC0zXXxbMC05XSkvKSx0LmhvdXIpKTtnLkhIPV8uY2FjaGUoXy5wcm9jZXNzKF8ucnRva2VuKC9eKFswLTFdWzAtOV18MlswLTNdKS8pLHQuaG91cikpO2cubT1fLmNhY2hlKF8ucHJvY2VzcyhfLnJ0b2tlbigvXihbMC01XVswLTldfFswLTldKS8pLHQubWludXRlKSk7Zy5tbT1fLmNhY2hlKF8ucHJvY2VzcyhfLnJ0b2tlbigvXlswLTVdWzAtOV0vKSx0Lm1pbnV0ZSkpO2cucz1fLmNhY2hlKF8ucHJvY2VzcyhfLnJ0b2tlbigvXihbMC01XVswLTldfFswLTldKS8pLHQuc2Vjb25kKSk7Zy5zcz1fLmNhY2hlKF8ucHJvY2VzcyhfLnJ0b2tlbigvXlswLTVdWzAtOV0vKSx0LnNlY29uZCkpO2cuaG1zPV8uY2FjaGUoXy5zZXF1ZW5jZShbZy5ILGcubW0sZy5zc10sZy50aW1lUGFydERlbGltaXRlcikpO2cudD1fLmNhY2hlKF8ucHJvY2VzcyhnLmN0b2tlbjIoXCJzaG9ydE1lcmlkaWFuXCIpLHQubWVyaWRpYW4pKTtnLnR0PV8uY2FjaGUoXy5wcm9jZXNzKGcuY3Rva2VuMihcImxvbmdNZXJpZGlhblwiKSx0Lm1lcmlkaWFuKSk7Zy56PV8uY2FjaGUoXy5wcm9jZXNzKF8ucnRva2VuKC9eKFxcK3xcXC0pP1xccypcXGRcXGRcXGRcXGQ/LyksdC50aW1lem9uZSkpO2cueno9Xy5jYWNoZShfLnByb2Nlc3MoXy5ydG9rZW4oL14oXFwrfFxcLSlcXHMqXFxkXFxkXFxkXFxkLyksdC50aW1lem9uZSkpO2cuenp6PV8uY2FjaGUoXy5wcm9jZXNzKGcuY3Rva2VuMihcInRpbWV6b25lXCIpLHQudGltZXpvbmUpKTtnLnRpbWVTdWZmaXg9Xy5lYWNoKF8uaWdub3JlKGcud2hpdGVTcGFjZSksXy5zZXQoW2cudHQsZy56enpdKSk7Zy50aW1lPV8uZWFjaChfLm9wdGlvbmFsKF8uaWdub3JlKF8uc3Rva2VuKFwiVFwiKSkpLGcuaG1zLGcudGltZVN1ZmZpeCk7Zy5kPV8uY2FjaGUoXy5wcm9jZXNzKF8uZWFjaChfLnJ0b2tlbigvXihbMC0yXVxcZHwzWzAtMV18XFxkKS8pLF8ub3B0aW9uYWwoZy5jdG9rZW4yKFwib3JkaW5hbFN1ZmZpeFwiKSkpLHQuZGF5KSk7Zy5kZD1fLmNhY2hlKF8ucHJvY2VzcyhfLmVhY2goXy5ydG9rZW4oL14oWzAtMl1cXGR8M1swLTFdKS8pLF8ub3B0aW9uYWwoZy5jdG9rZW4yKFwib3JkaW5hbFN1ZmZpeFwiKSkpLHQuZGF5KSk7Zy5kZGQ9Zy5kZGRkPV8uY2FjaGUoXy5wcm9jZXNzKGcuY3Rva2VuKFwic3VuIG1vbiB0dWUgd2VkIHRodSBmcmkgc2F0XCIpLGZ1bmN0aW9uKHMpe3JldHVybiBmdW5jdGlvbigpe3RoaXMud2Vla2RheT1zO307fSkpO2cuTT1fLmNhY2hlKF8ucHJvY2VzcyhfLnJ0b2tlbigvXigxWzAtMl18MFxcZHxcXGQpLyksdC5tb250aCkpO2cuTU09Xy5jYWNoZShfLnByb2Nlc3MoXy5ydG9rZW4oL14oMVswLTJdfDBcXGQpLyksdC5tb250aCkpO2cuTU1NPWcuTU1NTT1fLmNhY2hlKF8ucHJvY2VzcyhnLmN0b2tlbihcImphbiBmZWIgbWFyIGFwciBtYXkganVuIGp1bCBhdWcgc2VwIG9jdCBub3YgZGVjXCIpLHQubW9udGgpKTtnLnk9Xy5jYWNoZShfLnByb2Nlc3MoXy5ydG9rZW4oL14oXFxkXFxkPykvKSx0LnllYXIpKTtnLnl5PV8uY2FjaGUoXy5wcm9jZXNzKF8ucnRva2VuKC9eKFxcZFxcZCkvKSx0LnllYXIpKTtnLnl5eT1fLmNhY2hlKF8ucHJvY2VzcyhfLnJ0b2tlbigvXihcXGRcXGQ/XFxkP1xcZD8pLyksdC55ZWFyKSk7Zy55eXl5PV8uY2FjaGUoXy5wcm9jZXNzKF8ucnRva2VuKC9eKFxcZFxcZFxcZFxcZCkvKSx0LnllYXIpKTtfZm49ZnVuY3Rpb24oKXtyZXR1cm4gXy5lYWNoKF8uYW55LmFwcGx5KG51bGwsYXJndW1lbnRzKSxfLm5vdChnLmN0b2tlbjIoXCJ0aW1lQ29udGV4dFwiKSkpO307Zy5kYXk9X2ZuKGcuZCxnLmRkKTtnLm1vbnRoPV9mbihnLk0sZy5NTU0pO2cueWVhcj1fZm4oZy55eXl5LGcueXkpO2cub3JpZW50YXRpb249Xy5wcm9jZXNzKGcuY3Rva2VuKFwicGFzdCBmdXR1cmVcIiksZnVuY3Rpb24ocyl7cmV0dXJuIGZ1bmN0aW9uKCl7dGhpcy5vcmllbnQ9czt9O30pO2cub3BlcmF0b3I9Xy5wcm9jZXNzKGcuY3Rva2VuKFwiYWRkIHN1YnRyYWN0XCIpLGZ1bmN0aW9uKHMpe3JldHVybiBmdW5jdGlvbigpe3RoaXMub3BlcmF0b3I9czt9O30pO2cucmRheT1fLnByb2Nlc3MoZy5jdG9rZW4oXCJ5ZXN0ZXJkYXkgdG9tb3Jyb3cgdG9kYXkgbm93XCIpLHQucmRheSk7Zy51bml0PV8ucHJvY2VzcyhnLmN0b2tlbihcIm1pbnV0ZSBob3VyIGRheSB3ZWVrIG1vbnRoIHllYXJcIiksZnVuY3Rpb24ocyl7cmV0dXJuIGZ1bmN0aW9uKCl7dGhpcy51bml0PXM7fTt9KTtnLnZhbHVlPV8ucHJvY2VzcyhfLnJ0b2tlbigvXlxcZFxcZD8oc3R8bmR8cmR8dGgpPy8pLGZ1bmN0aW9uKHMpe3JldHVybiBmdW5jdGlvbigpe3RoaXMudmFsdWU9cy5yZXBsYWNlKC9cXEQvZyxcIlwiKTt9O30pO2cuZXhwcmVzc2lvbj1fLnNldChbZy5yZGF5LGcub3BlcmF0b3IsZy52YWx1ZSxnLnVuaXQsZy5vcmllbnRhdGlvbixnLmRkZCxnLk1NTV0pO19mbj1mdW5jdGlvbigpe3JldHVybiBfLnNldChhcmd1bWVudHMsZy5kYXRlUGFydERlbGltaXRlcik7fTtnLm1keT1fZm4oZy5kZGQsZy5tb250aCxnLmRheSxnLnllYXIpO2cueW1kPV9mbihnLmRkZCxnLnllYXIsZy5tb250aCxnLmRheSk7Zy5kbXk9X2ZuKGcuZGRkLGcuZGF5LGcubW9udGgsZy55ZWFyKTtnLmRhdGU9ZnVuY3Rpb24ocyl7cmV0dXJuKChnW0RhdGUuQ3VsdHVyZUluZm8uZGF0ZUVsZW1lbnRPcmRlcl18fGcubWR5KS5jYWxsKHRoaXMscykpO307Zy5mb3JtYXQ9Xy5wcm9jZXNzKF8ubWFueShfLmFueShfLnByb2Nlc3MoXy5ydG9rZW4oL14oZGQ/ZD9kP3xNTT9NP00/fHl5P3k/eT98aGg/fEhIP3xtbT98c3M/fHR0P3x6ej96PykvKSxmdW5jdGlvbihmbXQpe2lmKGdbZm10XSl7cmV0dXJuIGdbZm10XTt9ZWxzZXt0aHJvdyBEYXRlLlBhcnNpbmcuRXhjZXB0aW9uKGZtdCk7fX0pLF8ucHJvY2VzcyhfLnJ0b2tlbigvXlteZE15aEhtc3R6XSsvKSxmdW5jdGlvbihzKXtyZXR1cm4gXy5pZ25vcmUoXy5zdG9rZW4ocykpO30pKSksZnVuY3Rpb24ocnVsZXMpe3JldHVybiBfLnByb2Nlc3MoXy5lYWNoLmFwcGx5KG51bGwscnVsZXMpLHQuZmluaXNoRXhhY3QpO30pO3ZhciBfRj17fTt2YXIgX2dldD1mdW5jdGlvbihmKXtyZXR1cm4gX0ZbZl09KF9GW2ZdfHxnLmZvcm1hdChmKVswXSk7fTtnLmZvcm1hdHM9ZnVuY3Rpb24oZngpe2lmKGZ4IGluc3RhbmNlb2YgQXJyYXkpe3ZhciByeD1bXTtmb3IodmFyIGk9MDtpPGZ4Lmxlbmd0aDtpKyspe3J4LnB1c2goX2dldChmeFtpXSkpO31cbnJldHVybiBfLmFueS5hcHBseShudWxsLHJ4KTt9ZWxzZXtyZXR1cm4gX2dldChmeCk7fX07Zy5fZm9ybWF0cz1nLmZvcm1hdHMoW1wieXl5eS1NTS1kZFRISDptbTpzc1wiLFwiZGRkLCBNTU0gZGQsIHl5eXkgSDptbTpzcyB0dFwiLFwiZGRkIE1NTSBkIHl5eXkgSEg6bW06c3Mgenp6XCIsXCJkXCJdKTtnLl9zdGFydD1fLnByb2Nlc3MoXy5zZXQoW2cuZGF0ZSxnLnRpbWUsZy5leHByZXNzaW9uXSxnLmdlbmVyYWxEZWxpbWl0ZXIsZy53aGl0ZVNwYWNlKSx0LmZpbmlzaCk7Zy5zdGFydD1mdW5jdGlvbihzKXt0cnl7dmFyIHI9Zy5fZm9ybWF0cy5jYWxsKHt9LHMpO2lmKHJbMV0ubGVuZ3RoPT09MCl7cmV0dXJuIHI7fX1jYXRjaChlKXt9XG5yZXR1cm4gZy5fc3RhcnQuY2FsbCh7fSxzKTt9O30oKSk7RGF0ZS5fcGFyc2U9RGF0ZS5wYXJzZTtEYXRlLnBhcnNlPWZ1bmN0aW9uKHMpe3ZhciByPW51bGw7aWYoIXMpe3JldHVybiBudWxsO31cbnRyeXtyPURhdGUuR3JhbW1hci5zdGFydC5jYWxsKHt9LHMpO31jYXRjaChlKXtyZXR1cm4gbnVsbDt9XG5yZXR1cm4oKHJbMV0ubGVuZ3RoPT09MCk/clswXTpudWxsKTt9O0RhdGUuZ2V0UGFyc2VGdW5jdGlvbj1mdW5jdGlvbihmeCl7dmFyIGZuPURhdGUuR3JhbW1hci5mb3JtYXRzKGZ4KTtyZXR1cm4gZnVuY3Rpb24ocyl7dmFyIHI9bnVsbDt0cnl7cj1mbi5jYWxsKHt9LHMpO31jYXRjaChlKXtyZXR1cm4gbnVsbDt9XG5yZXR1cm4oKHJbMV0ubGVuZ3RoPT09MCk/clswXTpudWxsKTt9O307RGF0ZS5wYXJzZUV4YWN0PWZ1bmN0aW9uKHMsZngpe3JldHVybiBEYXRlLmdldFBhcnNlRnVuY3Rpb24oZngpKHMpO307XG4iXSwibWFwcGluZ3MiOiJBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7Iiwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./src/js/vendor/date.js\n");

/***/ })

}]);